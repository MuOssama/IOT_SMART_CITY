
SmartCityNightmode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006ba4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011e  00800060  00006ba4  00006c38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080017e  0080017e  00006d56  2**0
                  ALLOC
  3 .stab         00002b44  00000000  00000000  00006d58  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ff4  00000000  00000000  0000989c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  0000a890  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000250  00000000  00000000  0000aa90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003400  00000000  00000000  0000ace0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001776  00000000  00000000  0000e0e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000016b7  00000000  00000000  0000f856  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  00010f10  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000396  00000000  00000000  00011130  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023ec  00000000  00000000  000114c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  000138b2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 f0 2d 	jmp	0x5be0	; 0x5be0 <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__udivdi3+0x3b8>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <__udivdi3+0xea>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__ashldi3+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 ea       	ldi	r30, 0xA4	; 164
     162:	fb e6       	ldi	r31, 0x6B	; 107
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	ae 37       	cpi	r26, 0x7E	; 126
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
     170:	11 e0       	ldi	r17, 0x01	; 1
     172:	ae e7       	ldi	r26, 0x7E	; 126
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a2 38       	cpi	r26, 0x82	; 130
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 0d 2e 	call	0x5c1a	; 0x5c1a <main>
     184:	0c 94 d0 35 	jmp	0x6ba0	; 0x6ba0 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__ashldi3>:
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	df 93       	push	r29
     194:	cf 93       	push	r28
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	60 97       	sbiw	r28, 0x10	; 16
     19c:	0f b6       	in	r0, 0x3f	; 63
     19e:	f8 94       	cli
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	0f be       	out	0x3f, r0	; 63
     1a4:	cd bf       	out	0x3d, r28	; 61
     1a6:	a8 2f       	mov	r26, r24
     1a8:	00 23       	and	r16, r16
     1aa:	09 f4       	brne	.+2      	; 0x1ae <__ashldi3+0x22>
     1ac:	61 c0       	rjmp	.+194    	; 0x270 <__ashldi3+0xe4>
     1ae:	7e 01       	movw	r14, r28
     1b0:	08 94       	sec
     1b2:	e1 1c       	adc	r14, r1
     1b4:	f1 1c       	adc	r15, r1
     1b6:	88 e0       	ldi	r24, 0x08	; 8
     1b8:	f7 01       	movw	r30, r14
     1ba:	11 92       	st	Z+, r1
     1bc:	8a 95       	dec	r24
     1be:	e9 f7       	brne	.-6      	; 0x1ba <__ashldi3+0x2e>
     1c0:	29 83       	std	Y+1, r18	; 0x01
     1c2:	3a 83       	std	Y+2, r19	; 0x02
     1c4:	4b 83       	std	Y+3, r20	; 0x03
     1c6:	5c 83       	std	Y+4, r21	; 0x04
     1c8:	6d 83       	std	Y+5, r22	; 0x05
     1ca:	7e 83       	std	Y+6, r23	; 0x06
     1cc:	af 83       	std	Y+7, r26	; 0x07
     1ce:	98 87       	std	Y+8, r25	; 0x08
     1d0:	80 e2       	ldi	r24, 0x20	; 32
     1d2:	80 1b       	sub	r24, r16
     1d4:	e8 2f       	mov	r30, r24
     1d6:	ff 27       	eor	r31, r31
     1d8:	e7 fd       	sbrc	r30, 7
     1da:	f0 95       	com	r31
     1dc:	49 81       	ldd	r20, Y+1	; 0x01
     1de:	5a 81       	ldd	r21, Y+2	; 0x02
     1e0:	6b 81       	ldd	r22, Y+3	; 0x03
     1e2:	7c 81       	ldd	r23, Y+4	; 0x04
     1e4:	18 16       	cp	r1, r24
     1e6:	84 f0       	brlt	.+32     	; 0x208 <__ashldi3+0x7c>
     1e8:	19 86       	std	Y+9, r1	; 0x09
     1ea:	1a 86       	std	Y+10, r1	; 0x0a
     1ec:	1b 86       	std	Y+11, r1	; 0x0b
     1ee:	1c 86       	std	Y+12, r1	; 0x0c
     1f0:	88 27       	eor	r24, r24
     1f2:	99 27       	eor	r25, r25
     1f4:	8e 1b       	sub	r24, r30
     1f6:	9f 0b       	sbc	r25, r31
     1f8:	04 c0       	rjmp	.+8      	; 0x202 <__ashldi3+0x76>
     1fa:	44 0f       	add	r20, r20
     1fc:	55 1f       	adc	r21, r21
     1fe:	66 1f       	adc	r22, r22
     200:	77 1f       	adc	r23, r23
     202:	8a 95       	dec	r24
     204:	d2 f7       	brpl	.-12     	; 0x1fa <__ashldi3+0x6e>
     206:	28 c0       	rjmp	.+80     	; 0x258 <__ashldi3+0xcc>
     208:	20 2f       	mov	r18, r16
     20a:	33 27       	eor	r19, r19
     20c:	27 fd       	sbrc	r18, 7
     20e:	30 95       	com	r19
     210:	db 01       	movw	r26, r22
     212:	ca 01       	movw	r24, r20
     214:	02 2e       	mov	r0, r18
     216:	04 c0       	rjmp	.+8      	; 0x220 <__ashldi3+0x94>
     218:	88 0f       	add	r24, r24
     21a:	99 1f       	adc	r25, r25
     21c:	aa 1f       	adc	r26, r26
     21e:	bb 1f       	adc	r27, r27
     220:	0a 94       	dec	r0
     222:	d2 f7       	brpl	.-12     	; 0x218 <__ashldi3+0x8c>
     224:	89 87       	std	Y+9, r24	; 0x09
     226:	9a 87       	std	Y+10, r25	; 0x0a
     228:	ab 87       	std	Y+11, r26	; 0x0b
     22a:	bc 87       	std	Y+12, r27	; 0x0c
     22c:	04 c0       	rjmp	.+8      	; 0x236 <__ashldi3+0xaa>
     22e:	76 95       	lsr	r23
     230:	67 95       	ror	r22
     232:	57 95       	ror	r21
     234:	47 95       	ror	r20
     236:	ea 95       	dec	r30
     238:	d2 f7       	brpl	.-12     	; 0x22e <__ashldi3+0xa2>
     23a:	8d 81       	ldd	r24, Y+5	; 0x05
     23c:	9e 81       	ldd	r25, Y+6	; 0x06
     23e:	af 81       	ldd	r26, Y+7	; 0x07
     240:	b8 85       	ldd	r27, Y+8	; 0x08
     242:	04 c0       	rjmp	.+8      	; 0x24c <__ashldi3+0xc0>
     244:	88 0f       	add	r24, r24
     246:	99 1f       	adc	r25, r25
     248:	aa 1f       	adc	r26, r26
     24a:	bb 1f       	adc	r27, r27
     24c:	2a 95       	dec	r18
     24e:	d2 f7       	brpl	.-12     	; 0x244 <__ashldi3+0xb8>
     250:	48 2b       	or	r20, r24
     252:	59 2b       	or	r21, r25
     254:	6a 2b       	or	r22, r26
     256:	7b 2b       	or	r23, r27
     258:	4d 87       	std	Y+13, r20	; 0x0d
     25a:	5e 87       	std	Y+14, r21	; 0x0e
     25c:	6f 87       	std	Y+15, r22	; 0x0f
     25e:	78 8b       	std	Y+16, r23	; 0x10
     260:	29 85       	ldd	r18, Y+9	; 0x09
     262:	3a 85       	ldd	r19, Y+10	; 0x0a
     264:	4b 85       	ldd	r20, Y+11	; 0x0b
     266:	5c 85       	ldd	r21, Y+12	; 0x0c
     268:	6d 85       	ldd	r22, Y+13	; 0x0d
     26a:	7e 85       	ldd	r23, Y+14	; 0x0e
     26c:	af 85       	ldd	r26, Y+15	; 0x0f
     26e:	98 89       	ldd	r25, Y+16	; 0x10
     270:	8a 2f       	mov	r24, r26
     272:	60 96       	adiw	r28, 0x10	; 16
     274:	0f b6       	in	r0, 0x3f	; 63
     276:	f8 94       	cli
     278:	de bf       	out	0x3e, r29	; 62
     27a:	0f be       	out	0x3f, r0	; 63
     27c:	cd bf       	out	0x3d, r28	; 61
     27e:	cf 91       	pop	r28
     280:	df 91       	pop	r29
     282:	0f 91       	pop	r16
     284:	ff 90       	pop	r15
     286:	ef 90       	pop	r14
     288:	08 95       	ret

0000028a <__fixunssfsi>:
     28a:	ef 92       	push	r14
     28c:	ff 92       	push	r15
     28e:	0f 93       	push	r16
     290:	1f 93       	push	r17
     292:	7b 01       	movw	r14, r22
     294:	8c 01       	movw	r16, r24
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e0       	ldi	r20, 0x00	; 0
     29c:	5f e4       	ldi	r21, 0x4F	; 79
     29e:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__gesf2>
     2a2:	88 23       	and	r24, r24
     2a4:	8c f0       	brlt	.+34     	; 0x2c8 <__fixunssfsi+0x3e>
     2a6:	c8 01       	movw	r24, r16
     2a8:	b7 01       	movw	r22, r14
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	5f e4       	ldi	r21, 0x4F	; 79
     2b2:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <__subsf3>
     2b6:	0e 94 94 12 	call	0x2528	; 0x2528 <__fixsfsi>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	20 50       	subi	r18, 0x00	; 0
     2c0:	30 40       	sbci	r19, 0x00	; 0
     2c2:	40 40       	sbci	r20, 0x00	; 0
     2c4:	50 48       	sbci	r21, 0x80	; 128
     2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <__fixunssfsi+0x4a>
     2c8:	c8 01       	movw	r24, r16
     2ca:	b7 01       	movw	r22, r14
     2cc:	0e 94 94 12 	call	0x2528	; 0x2528 <__fixsfsi>
     2d0:	9b 01       	movw	r18, r22
     2d2:	ac 01       	movw	r20, r24
     2d4:	b9 01       	movw	r22, r18
     2d6:	ca 01       	movw	r24, r20
     2d8:	1f 91       	pop	r17
     2da:	0f 91       	pop	r16
     2dc:	ff 90       	pop	r15
     2de:	ef 90       	pop	r14
     2e0:	08 95       	ret

000002e2 <__udivdi3>:
     2e2:	ae e5       	ldi	r26, 0x5E	; 94
     2e4:	b0 e0       	ldi	r27, 0x00	; 0
     2e6:	e7 e7       	ldi	r30, 0x77	; 119
     2e8:	f1 e0       	ldi	r31, 0x01	; 1
     2ea:	0c 94 9d 30 	jmp	0x613a	; 0x613a <__prologue_saves__>
     2ee:	a8 e0       	ldi	r26, 0x08	; 8
     2f0:	4e 01       	movw	r8, r28
     2f2:	08 94       	sec
     2f4:	81 1c       	adc	r8, r1
     2f6:	91 1c       	adc	r9, r1
     2f8:	f4 01       	movw	r30, r8
     2fa:	6a 2e       	mov	r6, r26
     2fc:	11 92       	st	Z+, r1
     2fe:	6a 94       	dec	r6
     300:	e9 f7       	brne	.-6      	; 0x2fc <__udivdi3+0x1a>
     302:	29 83       	std	Y+1, r18	; 0x01
     304:	3a 83       	std	Y+2, r19	; 0x02
     306:	4b 83       	std	Y+3, r20	; 0x03
     308:	5c 83       	std	Y+4, r21	; 0x04
     30a:	6d 83       	std	Y+5, r22	; 0x05
     30c:	7e 83       	std	Y+6, r23	; 0x06
     30e:	8f 83       	std	Y+7, r24	; 0x07
     310:	98 87       	std	Y+8, r25	; 0x08
     312:	ce 01       	movw	r24, r28
     314:	09 96       	adiw	r24, 0x09	; 9
     316:	fc 01       	movw	r30, r24
     318:	11 92       	st	Z+, r1
     31a:	aa 95       	dec	r26
     31c:	e9 f7       	brne	.-6      	; 0x318 <__udivdi3+0x36>
     31e:	a9 86       	std	Y+9, r10	; 0x09
     320:	ba 86       	std	Y+10, r11	; 0x0a
     322:	cb 86       	std	Y+11, r12	; 0x0b
     324:	dc 86       	std	Y+12, r13	; 0x0c
     326:	ed 86       	std	Y+13, r14	; 0x0d
     328:	fe 86       	std	Y+14, r15	; 0x0e
     32a:	0f 87       	std	Y+15, r16	; 0x0f
     32c:	18 8b       	std	Y+16, r17	; 0x10
     32e:	29 84       	ldd	r2, Y+9	; 0x09
     330:	3a 84       	ldd	r3, Y+10	; 0x0a
     332:	4b 84       	ldd	r4, Y+11	; 0x0b
     334:	5c 84       	ldd	r5, Y+12	; 0x0c
     336:	ed 84       	ldd	r14, Y+13	; 0x0d
     338:	fe 84       	ldd	r15, Y+14	; 0x0e
     33a:	0f 85       	ldd	r16, Y+15	; 0x0f
     33c:	18 89       	ldd	r17, Y+16	; 0x10
     33e:	69 80       	ldd	r6, Y+1	; 0x01
     340:	7a 80       	ldd	r7, Y+2	; 0x02
     342:	8b 80       	ldd	r8, Y+3	; 0x03
     344:	9c 80       	ldd	r9, Y+4	; 0x04
     346:	6d a6       	std	Y+45, r6	; 0x2d
     348:	7e a6       	std	Y+46, r7	; 0x2e
     34a:	8f a6       	std	Y+47, r8	; 0x2f
     34c:	98 aa       	std	Y+48, r9	; 0x30
     34e:	6d 80       	ldd	r6, Y+5	; 0x05
     350:	7e 80       	ldd	r7, Y+6	; 0x06
     352:	8f 80       	ldd	r8, Y+7	; 0x07
     354:	98 84       	ldd	r9, Y+8	; 0x08
     356:	e1 14       	cp	r14, r1
     358:	f1 04       	cpc	r15, r1
     35a:	01 05       	cpc	r16, r1
     35c:	11 05       	cpc	r17, r1
     35e:	09 f0       	breq	.+2      	; 0x362 <__udivdi3+0x80>
     360:	b3 c3       	rjmp	.+1894   	; 0xac8 <__stack+0x269>
     362:	62 14       	cp	r6, r2
     364:	73 04       	cpc	r7, r3
     366:	84 04       	cpc	r8, r4
     368:	95 04       	cpc	r9, r5
     36a:	08 f0       	brcs	.+2      	; 0x36e <__udivdi3+0x8c>
     36c:	3d c1       	rjmp	.+634    	; 0x5e8 <__udivdi3+0x306>
     36e:	00 e0       	ldi	r16, 0x00	; 0
     370:	20 16       	cp	r2, r16
     372:	00 e0       	ldi	r16, 0x00	; 0
     374:	30 06       	cpc	r3, r16
     376:	01 e0       	ldi	r16, 0x01	; 1
     378:	40 06       	cpc	r4, r16
     37a:	00 e0       	ldi	r16, 0x00	; 0
     37c:	50 06       	cpc	r5, r16
     37e:	88 f4       	brcc	.+34     	; 0x3a2 <__udivdi3+0xc0>
     380:	1f ef       	ldi	r17, 0xFF	; 255
     382:	21 16       	cp	r2, r17
     384:	31 04       	cpc	r3, r1
     386:	41 04       	cpc	r4, r1
     388:	51 04       	cpc	r5, r1
     38a:	39 f0       	breq	.+14     	; 0x39a <__udivdi3+0xb8>
     38c:	30 f0       	brcs	.+12     	; 0x39a <__udivdi3+0xb8>
     38e:	48 e0       	ldi	r20, 0x08	; 8
     390:	e4 2e       	mov	r14, r20
     392:	f1 2c       	mov	r15, r1
     394:	01 2d       	mov	r16, r1
     396:	11 2d       	mov	r17, r1
     398:	18 c0       	rjmp	.+48     	; 0x3ca <__udivdi3+0xe8>
     39a:	ee 24       	eor	r14, r14
     39c:	ff 24       	eor	r15, r15
     39e:	87 01       	movw	r16, r14
     3a0:	14 c0       	rjmp	.+40     	; 0x3ca <__udivdi3+0xe8>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	22 16       	cp	r2, r18
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	32 06       	cpc	r3, r18
     3aa:	20 e0       	ldi	r18, 0x00	; 0
     3ac:	42 06       	cpc	r4, r18
     3ae:	21 e0       	ldi	r18, 0x01	; 1
     3b0:	52 06       	cpc	r5, r18
     3b2:	30 f0       	brcs	.+12     	; 0x3c0 <__udivdi3+0xde>
     3b4:	38 e1       	ldi	r19, 0x18	; 24
     3b6:	e3 2e       	mov	r14, r19
     3b8:	f1 2c       	mov	r15, r1
     3ba:	01 2d       	mov	r16, r1
     3bc:	11 2d       	mov	r17, r1
     3be:	05 c0       	rjmp	.+10     	; 0x3ca <__udivdi3+0xe8>
     3c0:	20 e1       	ldi	r18, 0x10	; 16
     3c2:	e2 2e       	mov	r14, r18
     3c4:	f1 2c       	mov	r15, r1
     3c6:	01 2d       	mov	r16, r1
     3c8:	11 2d       	mov	r17, r1
     3ca:	d2 01       	movw	r26, r4
     3cc:	c1 01       	movw	r24, r2
     3ce:	0e 2c       	mov	r0, r14
     3d0:	04 c0       	rjmp	.+8      	; 0x3da <__udivdi3+0xf8>
     3d2:	b6 95       	lsr	r27
     3d4:	a7 95       	ror	r26
     3d6:	97 95       	ror	r25
     3d8:	87 95       	ror	r24
     3da:	0a 94       	dec	r0
     3dc:	d2 f7       	brpl	.-12     	; 0x3d2 <__udivdi3+0xf0>
     3de:	83 59       	subi	r24, 0x93	; 147
     3e0:	9f 4f       	sbci	r25, 0xFF	; 255
     3e2:	dc 01       	movw	r26, r24
     3e4:	2c 91       	ld	r18, X
     3e6:	80 e2       	ldi	r24, 0x20	; 32
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	a0 e0       	ldi	r26, 0x00	; 0
     3ec:	b0 e0       	ldi	r27, 0x00	; 0
     3ee:	8e 19       	sub	r24, r14
     3f0:	9f 09       	sbc	r25, r15
     3f2:	a0 0b       	sbc	r26, r16
     3f4:	b1 0b       	sbc	r27, r17
     3f6:	7c 01       	movw	r14, r24
     3f8:	8d 01       	movw	r16, r26
     3fa:	e2 1a       	sub	r14, r18
     3fc:	f1 08       	sbc	r15, r1
     3fe:	01 09       	sbc	r16, r1
     400:	11 09       	sbc	r17, r1
     402:	e1 14       	cp	r14, r1
     404:	f1 04       	cpc	r15, r1
     406:	01 05       	cpc	r16, r1
     408:	11 05       	cpc	r17, r1
     40a:	a1 f1       	breq	.+104    	; 0x474 <__udivdi3+0x192>
     40c:	0e 2c       	mov	r0, r14
     40e:	04 c0       	rjmp	.+8      	; 0x418 <__udivdi3+0x136>
     410:	22 0c       	add	r2, r2
     412:	33 1c       	adc	r3, r3
     414:	44 1c       	adc	r4, r4
     416:	55 1c       	adc	r5, r5
     418:	0a 94       	dec	r0
     41a:	d2 f7       	brpl	.-12     	; 0x410 <__udivdi3+0x12e>
     41c:	a4 01       	movw	r20, r8
     41e:	93 01       	movw	r18, r6
     420:	0e 2c       	mov	r0, r14
     422:	04 c0       	rjmp	.+8      	; 0x42c <__udivdi3+0x14a>
     424:	22 0f       	add	r18, r18
     426:	33 1f       	adc	r19, r19
     428:	44 1f       	adc	r20, r20
     42a:	55 1f       	adc	r21, r21
     42c:	0a 94       	dec	r0
     42e:	d2 f7       	brpl	.-12     	; 0x424 <__udivdi3+0x142>
     430:	80 e2       	ldi	r24, 0x20	; 32
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	8e 19       	sub	r24, r14
     436:	9f 09       	sbc	r25, r15
     438:	6d a4       	ldd	r6, Y+45	; 0x2d
     43a:	7e a4       	ldd	r7, Y+46	; 0x2e
     43c:	8f a4       	ldd	r8, Y+47	; 0x2f
     43e:	98 a8       	ldd	r9, Y+48	; 0x30
     440:	04 c0       	rjmp	.+8      	; 0x44a <__udivdi3+0x168>
     442:	96 94       	lsr	r9
     444:	87 94       	ror	r8
     446:	77 94       	ror	r7
     448:	67 94       	ror	r6
     44a:	8a 95       	dec	r24
     44c:	d2 f7       	brpl	.-12     	; 0x442 <__udivdi3+0x160>
     44e:	62 2a       	or	r6, r18
     450:	73 2a       	or	r7, r19
     452:	84 2a       	or	r8, r20
     454:	95 2a       	or	r9, r21
     456:	ad a4       	ldd	r10, Y+45	; 0x2d
     458:	be a4       	ldd	r11, Y+46	; 0x2e
     45a:	cf a4       	ldd	r12, Y+47	; 0x2f
     45c:	d8 a8       	ldd	r13, Y+48	; 0x30
     45e:	04 c0       	rjmp	.+8      	; 0x468 <__udivdi3+0x186>
     460:	aa 0c       	add	r10, r10
     462:	bb 1c       	adc	r11, r11
     464:	cc 1c       	adc	r12, r12
     466:	dd 1c       	adc	r13, r13
     468:	ea 94       	dec	r14
     46a:	d2 f7       	brpl	.-12     	; 0x460 <__udivdi3+0x17e>
     46c:	ad a6       	std	Y+45, r10	; 0x2d
     46e:	be a6       	std	Y+46, r11	; 0x2e
     470:	cf a6       	std	Y+47, r12	; 0x2f
     472:	d8 aa       	std	Y+48, r13	; 0x30
     474:	62 01       	movw	r12, r4
     476:	ee 24       	eor	r14, r14
     478:	ff 24       	eor	r15, r15
     47a:	cd aa       	std	Y+53, r12	; 0x35
     47c:	de aa       	std	Y+54, r13	; 0x36
     47e:	ef aa       	std	Y+55, r14	; 0x37
     480:	f8 ae       	std	Y+56, r15	; 0x38
     482:	92 01       	movw	r18, r4
     484:	81 01       	movw	r16, r2
     486:	20 70       	andi	r18, 0x00	; 0
     488:	30 70       	andi	r19, 0x00	; 0
     48a:	09 af       	std	Y+57, r16	; 0x39
     48c:	1a af       	std	Y+58, r17	; 0x3a
     48e:	2b af       	std	Y+59, r18	; 0x3b
     490:	3c af       	std	Y+60, r19	; 0x3c
     492:	c4 01       	movw	r24, r8
     494:	b3 01       	movw	r22, r6
     496:	a7 01       	movw	r20, r14
     498:	96 01       	movw	r18, r12
     49a:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     49e:	7b 01       	movw	r14, r22
     4a0:	8c 01       	movw	r16, r24
     4a2:	c4 01       	movw	r24, r8
     4a4:	b3 01       	movw	r22, r6
     4a6:	2d a9       	ldd	r18, Y+53	; 0x35
     4a8:	3e a9       	ldd	r19, Y+54	; 0x36
     4aa:	4f a9       	ldd	r20, Y+55	; 0x37
     4ac:	58 ad       	ldd	r21, Y+56	; 0x38
     4ae:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     4b2:	c9 01       	movw	r24, r18
     4b4:	da 01       	movw	r26, r20
     4b6:	3c 01       	movw	r6, r24
     4b8:	4d 01       	movw	r8, r26
     4ba:	c4 01       	movw	r24, r8
     4bc:	b3 01       	movw	r22, r6
     4be:	29 ad       	ldd	r18, Y+57	; 0x39
     4c0:	3a ad       	ldd	r19, Y+58	; 0x3a
     4c2:	4b ad       	ldd	r20, Y+59	; 0x3b
     4c4:	5c ad       	ldd	r21, Y+60	; 0x3c
     4c6:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     4ca:	9b 01       	movw	r18, r22
     4cc:	ac 01       	movw	r20, r24
     4ce:	87 01       	movw	r16, r14
     4d0:	ff 24       	eor	r15, r15
     4d2:	ee 24       	eor	r14, r14
     4d4:	ad a4       	ldd	r10, Y+45	; 0x2d
     4d6:	be a4       	ldd	r11, Y+46	; 0x2e
     4d8:	cf a4       	ldd	r12, Y+47	; 0x2f
     4da:	d8 a8       	ldd	r13, Y+48	; 0x30
     4dc:	c6 01       	movw	r24, r12
     4de:	aa 27       	eor	r26, r26
     4e0:	bb 27       	eor	r27, r27
     4e2:	57 01       	movw	r10, r14
     4e4:	68 01       	movw	r12, r16
     4e6:	a8 2a       	or	r10, r24
     4e8:	b9 2a       	or	r11, r25
     4ea:	ca 2a       	or	r12, r26
     4ec:	db 2a       	or	r13, r27
     4ee:	a2 16       	cp	r10, r18
     4f0:	b3 06       	cpc	r11, r19
     4f2:	c4 06       	cpc	r12, r20
     4f4:	d5 06       	cpc	r13, r21
     4f6:	e0 f4       	brcc	.+56     	; 0x530 <__udivdi3+0x24e>
     4f8:	08 94       	sec
     4fa:	61 08       	sbc	r6, r1
     4fc:	71 08       	sbc	r7, r1
     4fe:	81 08       	sbc	r8, r1
     500:	91 08       	sbc	r9, r1
     502:	a2 0c       	add	r10, r2
     504:	b3 1c       	adc	r11, r3
     506:	c4 1c       	adc	r12, r4
     508:	d5 1c       	adc	r13, r5
     50a:	a2 14       	cp	r10, r2
     50c:	b3 04       	cpc	r11, r3
     50e:	c4 04       	cpc	r12, r4
     510:	d5 04       	cpc	r13, r5
     512:	70 f0       	brcs	.+28     	; 0x530 <__udivdi3+0x24e>
     514:	a2 16       	cp	r10, r18
     516:	b3 06       	cpc	r11, r19
     518:	c4 06       	cpc	r12, r20
     51a:	d5 06       	cpc	r13, r21
     51c:	48 f4       	brcc	.+18     	; 0x530 <__udivdi3+0x24e>
     51e:	08 94       	sec
     520:	61 08       	sbc	r6, r1
     522:	71 08       	sbc	r7, r1
     524:	81 08       	sbc	r8, r1
     526:	91 08       	sbc	r9, r1
     528:	a2 0c       	add	r10, r2
     52a:	b3 1c       	adc	r11, r3
     52c:	c4 1c       	adc	r12, r4
     52e:	d5 1c       	adc	r13, r5
     530:	a2 1a       	sub	r10, r18
     532:	b3 0a       	sbc	r11, r19
     534:	c4 0a       	sbc	r12, r20
     536:	d5 0a       	sbc	r13, r21
     538:	c6 01       	movw	r24, r12
     53a:	b5 01       	movw	r22, r10
     53c:	2d a9       	ldd	r18, Y+53	; 0x35
     53e:	3e a9       	ldd	r19, Y+54	; 0x36
     540:	4f a9       	ldd	r20, Y+55	; 0x37
     542:	58 ad       	ldd	r21, Y+56	; 0x38
     544:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     548:	7b 01       	movw	r14, r22
     54a:	8c 01       	movw	r16, r24
     54c:	c6 01       	movw	r24, r12
     54e:	b5 01       	movw	r22, r10
     550:	2d a9       	ldd	r18, Y+53	; 0x35
     552:	3e a9       	ldd	r19, Y+54	; 0x36
     554:	4f a9       	ldd	r20, Y+55	; 0x37
     556:	58 ad       	ldd	r21, Y+56	; 0x38
     558:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     55c:	c9 01       	movw	r24, r18
     55e:	da 01       	movw	r26, r20
     560:	5c 01       	movw	r10, r24
     562:	6d 01       	movw	r12, r26
     564:	c6 01       	movw	r24, r12
     566:	b5 01       	movw	r22, r10
     568:	29 ad       	ldd	r18, Y+57	; 0x39
     56a:	3a ad       	ldd	r19, Y+58	; 0x3a
     56c:	4b ad       	ldd	r20, Y+59	; 0x3b
     56e:	5c ad       	ldd	r21, Y+60	; 0x3c
     570:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     574:	9b 01       	movw	r18, r22
     576:	ac 01       	movw	r20, r24
     578:	87 01       	movw	r16, r14
     57a:	ff 24       	eor	r15, r15
     57c:	ee 24       	eor	r14, r14
     57e:	8d a5       	ldd	r24, Y+45	; 0x2d
     580:	9e a5       	ldd	r25, Y+46	; 0x2e
     582:	af a5       	ldd	r26, Y+47	; 0x2f
     584:	b8 a9       	ldd	r27, Y+48	; 0x30
     586:	a0 70       	andi	r26, 0x00	; 0
     588:	b0 70       	andi	r27, 0x00	; 0
     58a:	e8 2a       	or	r14, r24
     58c:	f9 2a       	or	r15, r25
     58e:	0a 2b       	or	r16, r26
     590:	1b 2b       	or	r17, r27
     592:	e2 16       	cp	r14, r18
     594:	f3 06       	cpc	r15, r19
     596:	04 07       	cpc	r16, r20
     598:	15 07       	cpc	r17, r21
     59a:	c0 f4       	brcc	.+48     	; 0x5cc <__udivdi3+0x2ea>
     59c:	08 94       	sec
     59e:	a1 08       	sbc	r10, r1
     5a0:	b1 08       	sbc	r11, r1
     5a2:	c1 08       	sbc	r12, r1
     5a4:	d1 08       	sbc	r13, r1
     5a6:	e2 0c       	add	r14, r2
     5a8:	f3 1c       	adc	r15, r3
     5aa:	04 1d       	adc	r16, r4
     5ac:	15 1d       	adc	r17, r5
     5ae:	e2 14       	cp	r14, r2
     5b0:	f3 04       	cpc	r15, r3
     5b2:	04 05       	cpc	r16, r4
     5b4:	15 05       	cpc	r17, r5
     5b6:	50 f0       	brcs	.+20     	; 0x5cc <__udivdi3+0x2ea>
     5b8:	e2 16       	cp	r14, r18
     5ba:	f3 06       	cpc	r15, r19
     5bc:	04 07       	cpc	r16, r20
     5be:	15 07       	cpc	r17, r21
     5c0:	28 f4       	brcc	.+10     	; 0x5cc <__udivdi3+0x2ea>
     5c2:	08 94       	sec
     5c4:	a1 08       	sbc	r10, r1
     5c6:	b1 08       	sbc	r11, r1
     5c8:	c1 08       	sbc	r12, r1
     5ca:	d1 08       	sbc	r13, r1
     5cc:	d3 01       	movw	r26, r6
     5ce:	99 27       	eor	r25, r25
     5d0:	88 27       	eor	r24, r24
     5d2:	86 01       	movw	r16, r12
     5d4:	75 01       	movw	r14, r10
     5d6:	e8 2a       	or	r14, r24
     5d8:	f9 2a       	or	r15, r25
     5da:	0a 2b       	or	r16, r26
     5dc:	1b 2b       	or	r17, r27
     5de:	e9 aa       	std	Y+49, r14	; 0x31
     5e0:	fa aa       	std	Y+50, r15	; 0x32
     5e2:	0b ab       	std	Y+51, r16	; 0x33
     5e4:	1c ab       	std	Y+52, r17	; 0x34
     5e6:	cf c4       	rjmp	.+2462   	; 0xf86 <__stack+0x727>
     5e8:	21 14       	cp	r2, r1
     5ea:	31 04       	cpc	r3, r1
     5ec:	41 04       	cpc	r4, r1
     5ee:	51 04       	cpc	r5, r1
     5f0:	71 f4       	brne	.+28     	; 0x60e <__udivdi3+0x32c>
     5f2:	61 e0       	ldi	r22, 0x01	; 1
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	40 e0       	ldi	r20, 0x00	; 0
     600:	50 e0       	ldi	r21, 0x00	; 0
     602:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     606:	c9 01       	movw	r24, r18
     608:	da 01       	movw	r26, r20
     60a:	1c 01       	movw	r2, r24
     60c:	2d 01       	movw	r4, r26
     60e:	00 e0       	ldi	r16, 0x00	; 0
     610:	20 16       	cp	r2, r16
     612:	00 e0       	ldi	r16, 0x00	; 0
     614:	30 06       	cpc	r3, r16
     616:	01 e0       	ldi	r16, 0x01	; 1
     618:	40 06       	cpc	r4, r16
     61a:	00 e0       	ldi	r16, 0x00	; 0
     61c:	50 06       	cpc	r5, r16
     61e:	88 f4       	brcc	.+34     	; 0x642 <__udivdi3+0x360>
     620:	1f ef       	ldi	r17, 0xFF	; 255
     622:	21 16       	cp	r2, r17
     624:	31 04       	cpc	r3, r1
     626:	41 04       	cpc	r4, r1
     628:	51 04       	cpc	r5, r1
     62a:	31 f0       	breq	.+12     	; 0x638 <__udivdi3+0x356>
     62c:	28 f0       	brcs	.+10     	; 0x638 <__udivdi3+0x356>
     62e:	48 e0       	ldi	r20, 0x08	; 8
     630:	50 e0       	ldi	r21, 0x00	; 0
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	70 e0       	ldi	r23, 0x00	; 0
     636:	17 c0       	rjmp	.+46     	; 0x666 <__udivdi3+0x384>
     638:	40 e0       	ldi	r20, 0x00	; 0
     63a:	50 e0       	ldi	r21, 0x00	; 0
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	12 c0       	rjmp	.+36     	; 0x666 <__udivdi3+0x384>
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	22 16       	cp	r2, r18
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	32 06       	cpc	r3, r18
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	42 06       	cpc	r4, r18
     64e:	21 e0       	ldi	r18, 0x01	; 1
     650:	52 06       	cpc	r5, r18
     652:	28 f0       	brcs	.+10     	; 0x65e <__udivdi3+0x37c>
     654:	48 e1       	ldi	r20, 0x18	; 24
     656:	50 e0       	ldi	r21, 0x00	; 0
     658:	60 e0       	ldi	r22, 0x00	; 0
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	04 c0       	rjmp	.+8      	; 0x666 <__udivdi3+0x384>
     65e:	40 e1       	ldi	r20, 0x10	; 16
     660:	50 e0       	ldi	r21, 0x00	; 0
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	70 e0       	ldi	r23, 0x00	; 0
     666:	d2 01       	movw	r26, r4
     668:	c1 01       	movw	r24, r2
     66a:	04 2e       	mov	r0, r20
     66c:	04 c0       	rjmp	.+8      	; 0x676 <__udivdi3+0x394>
     66e:	b6 95       	lsr	r27
     670:	a7 95       	ror	r26
     672:	97 95       	ror	r25
     674:	87 95       	ror	r24
     676:	0a 94       	dec	r0
     678:	d2 f7       	brpl	.-12     	; 0x66e <__udivdi3+0x38c>
     67a:	83 59       	subi	r24, 0x93	; 147
     67c:	9f 4f       	sbci	r25, 0xFF	; 255
     67e:	dc 01       	movw	r26, r24
     680:	2c 91       	ld	r18, X
     682:	e0 e2       	ldi	r30, 0x20	; 32
     684:	ee 2e       	mov	r14, r30
     686:	f1 2c       	mov	r15, r1
     688:	01 2d       	mov	r16, r1
     68a:	11 2d       	mov	r17, r1
     68c:	d8 01       	movw	r26, r16
     68e:	c7 01       	movw	r24, r14
     690:	84 1b       	sub	r24, r20
     692:	95 0b       	sbc	r25, r21
     694:	a6 0b       	sbc	r26, r22
     696:	b7 0b       	sbc	r27, r23
     698:	82 1b       	sub	r24, r18
     69a:	91 09       	sbc	r25, r1
     69c:	a1 09       	sbc	r26, r1
     69e:	b1 09       	sbc	r27, r1
     6a0:	00 97       	sbiw	r24, 0x00	; 0
     6a2:	a1 05       	cpc	r26, r1
     6a4:	b1 05       	cpc	r27, r1
     6a6:	61 f4       	brne	.+24     	; 0x6c0 <__udivdi3+0x3de>
     6a8:	64 01       	movw	r12, r8
     6aa:	53 01       	movw	r10, r6
     6ac:	a2 18       	sub	r10, r2
     6ae:	b3 08       	sbc	r11, r3
     6b0:	c4 08       	sbc	r12, r4
     6b2:	d5 08       	sbc	r13, r5
     6b4:	31 e0       	ldi	r19, 0x01	; 1
     6b6:	63 2e       	mov	r6, r19
     6b8:	71 2c       	mov	r7, r1
     6ba:	81 2c       	mov	r8, r1
     6bc:	91 2c       	mov	r9, r1
     6be:	1e c1       	rjmp	.+572    	; 0x8fc <__stack+0x9d>
     6c0:	6f 96       	adiw	r28, 0x1f	; 31
     6c2:	8f af       	std	Y+63, r24	; 0x3f
     6c4:	6f 97       	sbiw	r28, 0x1f	; 31
     6c6:	08 2e       	mov	r0, r24
     6c8:	04 c0       	rjmp	.+8      	; 0x6d2 <__udivdi3+0x3f0>
     6ca:	22 0c       	add	r2, r2
     6cc:	33 1c       	adc	r3, r3
     6ce:	44 1c       	adc	r4, r4
     6d0:	55 1c       	adc	r5, r5
     6d2:	0a 94       	dec	r0
     6d4:	d2 f7       	brpl	.-12     	; 0x6ca <__udivdi3+0x3e8>
     6d6:	ee 2d       	mov	r30, r14
     6d8:	e8 1b       	sub	r30, r24
     6da:	64 01       	movw	r12, r8
     6dc:	53 01       	movw	r10, r6
     6de:	0e 2e       	mov	r0, r30
     6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__udivdi3+0x408>
     6e2:	d6 94       	lsr	r13
     6e4:	c7 94       	ror	r12
     6e6:	b7 94       	ror	r11
     6e8:	a7 94       	ror	r10
     6ea:	0a 94       	dec	r0
     6ec:	d2 f7       	brpl	.-12     	; 0x6e2 <__udivdi3+0x400>
     6ee:	a4 01       	movw	r20, r8
     6f0:	93 01       	movw	r18, r6
     6f2:	6f 96       	adiw	r28, 0x1f	; 31
     6f4:	0f ac       	ldd	r0, Y+63	; 0x3f
     6f6:	6f 97       	sbiw	r28, 0x1f	; 31
     6f8:	04 c0       	rjmp	.+8      	; 0x702 <__udivdi3+0x420>
     6fa:	22 0f       	add	r18, r18
     6fc:	33 1f       	adc	r19, r19
     6fe:	44 1f       	adc	r20, r20
     700:	55 1f       	adc	r21, r21
     702:	0a 94       	dec	r0
     704:	d2 f7       	brpl	.-12     	; 0x6fa <__udivdi3+0x418>
     706:	6d a4       	ldd	r6, Y+45	; 0x2d
     708:	7e a4       	ldd	r7, Y+46	; 0x2e
     70a:	8f a4       	ldd	r8, Y+47	; 0x2f
     70c:	98 a8       	ldd	r9, Y+48	; 0x30
     70e:	0e 2e       	mov	r0, r30
     710:	04 c0       	rjmp	.+8      	; 0x71a <__udivdi3+0x438>
     712:	96 94       	lsr	r9
     714:	87 94       	ror	r8
     716:	77 94       	ror	r7
     718:	67 94       	ror	r6
     71a:	0a 94       	dec	r0
     71c:	d2 f7       	brpl	.-12     	; 0x712 <__udivdi3+0x430>
     71e:	84 01       	movw	r16, r8
     720:	73 01       	movw	r14, r6
     722:	e2 2a       	or	r14, r18
     724:	f3 2a       	or	r15, r19
     726:	04 2b       	or	r16, r20
     728:	15 2b       	or	r17, r21
     72a:	e9 a6       	std	Y+41, r14	; 0x29
     72c:	fa a6       	std	Y+42, r15	; 0x2a
     72e:	0b a7       	std	Y+43, r16	; 0x2b
     730:	1c a7       	std	Y+44, r17	; 0x2c
     732:	32 01       	movw	r6, r4
     734:	88 24       	eor	r8, r8
     736:	99 24       	eor	r9, r9
     738:	92 01       	movw	r18, r4
     73a:	81 01       	movw	r16, r2
     73c:	20 70       	andi	r18, 0x00	; 0
     73e:	30 70       	andi	r19, 0x00	; 0
     740:	21 96       	adiw	r28, 0x01	; 1
     742:	0c af       	std	Y+60, r16	; 0x3c
     744:	1d af       	std	Y+61, r17	; 0x3d
     746:	2e af       	std	Y+62, r18	; 0x3e
     748:	3f af       	std	Y+63, r19	; 0x3f
     74a:	21 97       	sbiw	r28, 0x01	; 1
     74c:	c6 01       	movw	r24, r12
     74e:	b5 01       	movw	r22, r10
     750:	a4 01       	movw	r20, r8
     752:	93 01       	movw	r18, r6
     754:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     758:	7b 01       	movw	r14, r22
     75a:	8c 01       	movw	r16, r24
     75c:	c6 01       	movw	r24, r12
     75e:	b5 01       	movw	r22, r10
     760:	a4 01       	movw	r20, r8
     762:	93 01       	movw	r18, r6
     764:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     768:	c9 01       	movw	r24, r18
     76a:	da 01       	movw	r26, r20
     76c:	25 96       	adiw	r28, 0x05	; 5
     76e:	8c af       	std	Y+60, r24	; 0x3c
     770:	9d af       	std	Y+61, r25	; 0x3d
     772:	ae af       	std	Y+62, r26	; 0x3e
     774:	bf af       	std	Y+63, r27	; 0x3f
     776:	25 97       	sbiw	r28, 0x05	; 5
     778:	bc 01       	movw	r22, r24
     77a:	cd 01       	movw	r24, r26
     77c:	21 96       	adiw	r28, 0x01	; 1
     77e:	2c ad       	ldd	r18, Y+60	; 0x3c
     780:	3d ad       	ldd	r19, Y+61	; 0x3d
     782:	4e ad       	ldd	r20, Y+62	; 0x3e
     784:	5f ad       	ldd	r21, Y+63	; 0x3f
     786:	21 97       	sbiw	r28, 0x01	; 1
     788:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     78c:	9b 01       	movw	r18, r22
     78e:	ac 01       	movw	r20, r24
     790:	87 01       	movw	r16, r14
     792:	ff 24       	eor	r15, r15
     794:	ee 24       	eor	r14, r14
     796:	a9 a4       	ldd	r10, Y+41	; 0x29
     798:	ba a4       	ldd	r11, Y+42	; 0x2a
     79a:	cb a4       	ldd	r12, Y+43	; 0x2b
     79c:	dc a4       	ldd	r13, Y+44	; 0x2c
     79e:	c6 01       	movw	r24, r12
     7a0:	aa 27       	eor	r26, r26
     7a2:	bb 27       	eor	r27, r27
     7a4:	5c 01       	movw	r10, r24
     7a6:	6d 01       	movw	r12, r26
     7a8:	ae 28       	or	r10, r14
     7aa:	bf 28       	or	r11, r15
     7ac:	c0 2a       	or	r12, r16
     7ae:	d1 2a       	or	r13, r17
     7b0:	a2 16       	cp	r10, r18
     7b2:	b3 06       	cpc	r11, r19
     7b4:	c4 06       	cpc	r12, r20
     7b6:	d5 06       	cpc	r13, r21
     7b8:	60 f5       	brcc	.+88     	; 0x812 <__udivdi3+0x530>
     7ba:	25 96       	adiw	r28, 0x05	; 5
     7bc:	6c ad       	ldd	r22, Y+60	; 0x3c
     7be:	7d ad       	ldd	r23, Y+61	; 0x3d
     7c0:	8e ad       	ldd	r24, Y+62	; 0x3e
     7c2:	9f ad       	ldd	r25, Y+63	; 0x3f
     7c4:	25 97       	sbiw	r28, 0x05	; 5
     7c6:	61 50       	subi	r22, 0x01	; 1
     7c8:	70 40       	sbci	r23, 0x00	; 0
     7ca:	80 40       	sbci	r24, 0x00	; 0
     7cc:	90 40       	sbci	r25, 0x00	; 0
     7ce:	25 96       	adiw	r28, 0x05	; 5
     7d0:	6c af       	std	Y+60, r22	; 0x3c
     7d2:	7d af       	std	Y+61, r23	; 0x3d
     7d4:	8e af       	std	Y+62, r24	; 0x3e
     7d6:	9f af       	std	Y+63, r25	; 0x3f
     7d8:	25 97       	sbiw	r28, 0x05	; 5
     7da:	a2 0c       	add	r10, r2
     7dc:	b3 1c       	adc	r11, r3
     7de:	c4 1c       	adc	r12, r4
     7e0:	d5 1c       	adc	r13, r5
     7e2:	a2 14       	cp	r10, r2
     7e4:	b3 04       	cpc	r11, r3
     7e6:	c4 04       	cpc	r12, r4
     7e8:	d5 04       	cpc	r13, r5
     7ea:	98 f0       	brcs	.+38     	; 0x812 <__udivdi3+0x530>
     7ec:	a2 16       	cp	r10, r18
     7ee:	b3 06       	cpc	r11, r19
     7f0:	c4 06       	cpc	r12, r20
     7f2:	d5 06       	cpc	r13, r21
     7f4:	70 f4       	brcc	.+28     	; 0x812 <__udivdi3+0x530>
     7f6:	61 50       	subi	r22, 0x01	; 1
     7f8:	70 40       	sbci	r23, 0x00	; 0
     7fa:	80 40       	sbci	r24, 0x00	; 0
     7fc:	90 40       	sbci	r25, 0x00	; 0
     7fe:	25 96       	adiw	r28, 0x05	; 5
     800:	6c af       	std	Y+60, r22	; 0x3c
     802:	7d af       	std	Y+61, r23	; 0x3d
     804:	8e af       	std	Y+62, r24	; 0x3e
     806:	9f af       	std	Y+63, r25	; 0x3f
     808:	25 97       	sbiw	r28, 0x05	; 5
     80a:	a2 0c       	add	r10, r2
     80c:	b3 1c       	adc	r11, r3
     80e:	c4 1c       	adc	r12, r4
     810:	d5 1c       	adc	r13, r5
     812:	a2 1a       	sub	r10, r18
     814:	b3 0a       	sbc	r11, r19
     816:	c4 0a       	sbc	r12, r20
     818:	d5 0a       	sbc	r13, r21
     81a:	c6 01       	movw	r24, r12
     81c:	b5 01       	movw	r22, r10
     81e:	a4 01       	movw	r20, r8
     820:	93 01       	movw	r18, r6
     822:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     826:	7b 01       	movw	r14, r22
     828:	8c 01       	movw	r16, r24
     82a:	c6 01       	movw	r24, r12
     82c:	b5 01       	movw	r22, r10
     82e:	a4 01       	movw	r20, r8
     830:	93 01       	movw	r18, r6
     832:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     836:	c9 01       	movw	r24, r18
     838:	da 01       	movw	r26, r20
     83a:	3c 01       	movw	r6, r24
     83c:	4d 01       	movw	r8, r26
     83e:	c4 01       	movw	r24, r8
     840:	b3 01       	movw	r22, r6
     842:	21 96       	adiw	r28, 0x01	; 1
     844:	2c ad       	ldd	r18, Y+60	; 0x3c
     846:	3d ad       	ldd	r19, Y+61	; 0x3d
     848:	4e ad       	ldd	r20, Y+62	; 0x3e
     84a:	5f ad       	ldd	r21, Y+63	; 0x3f
     84c:	21 97       	sbiw	r28, 0x01	; 1
     84e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     852:	9b 01       	movw	r18, r22
     854:	ac 01       	movw	r20, r24
     856:	87 01       	movw	r16, r14
     858:	ff 24       	eor	r15, r15
     85a:	ee 24       	eor	r14, r14
     85c:	89 a5       	ldd	r24, Y+41	; 0x29
     85e:	9a a5       	ldd	r25, Y+42	; 0x2a
     860:	ab a5       	ldd	r26, Y+43	; 0x2b
     862:	bc a5       	ldd	r27, Y+44	; 0x2c
     864:	a0 70       	andi	r26, 0x00	; 0
     866:	b0 70       	andi	r27, 0x00	; 0
     868:	57 01       	movw	r10, r14
     86a:	68 01       	movw	r12, r16
     86c:	a8 2a       	or	r10, r24
     86e:	b9 2a       	or	r11, r25
     870:	ca 2a       	or	r12, r26
     872:	db 2a       	or	r13, r27
     874:	a2 16       	cp	r10, r18
     876:	b3 06       	cpc	r11, r19
     878:	c4 06       	cpc	r12, r20
     87a:	d5 06       	cpc	r13, r21
     87c:	e0 f4       	brcc	.+56     	; 0x8b6 <__stack+0x57>
     87e:	08 94       	sec
     880:	61 08       	sbc	r6, r1
     882:	71 08       	sbc	r7, r1
     884:	81 08       	sbc	r8, r1
     886:	91 08       	sbc	r9, r1
     888:	a2 0c       	add	r10, r2
     88a:	b3 1c       	adc	r11, r3
     88c:	c4 1c       	adc	r12, r4
     88e:	d5 1c       	adc	r13, r5
     890:	a2 14       	cp	r10, r2
     892:	b3 04       	cpc	r11, r3
     894:	c4 04       	cpc	r12, r4
     896:	d5 04       	cpc	r13, r5
     898:	70 f0       	brcs	.+28     	; 0x8b6 <__stack+0x57>
     89a:	a2 16       	cp	r10, r18
     89c:	b3 06       	cpc	r11, r19
     89e:	c4 06       	cpc	r12, r20
     8a0:	d5 06       	cpc	r13, r21
     8a2:	48 f4       	brcc	.+18     	; 0x8b6 <__stack+0x57>
     8a4:	08 94       	sec
     8a6:	61 08       	sbc	r6, r1
     8a8:	71 08       	sbc	r7, r1
     8aa:	81 08       	sbc	r8, r1
     8ac:	91 08       	sbc	r9, r1
     8ae:	a2 0c       	add	r10, r2
     8b0:	b3 1c       	adc	r11, r3
     8b2:	c4 1c       	adc	r12, r4
     8b4:	d5 1c       	adc	r13, r5
     8b6:	8d a5       	ldd	r24, Y+45	; 0x2d
     8b8:	9e a5       	ldd	r25, Y+46	; 0x2e
     8ba:	af a5       	ldd	r26, Y+47	; 0x2f
     8bc:	b8 a9       	ldd	r27, Y+48	; 0x30
     8be:	6f 96       	adiw	r28, 0x1f	; 31
     8c0:	0f ac       	ldd	r0, Y+63	; 0x3f
     8c2:	6f 97       	sbiw	r28, 0x1f	; 31
     8c4:	04 c0       	rjmp	.+8      	; 0x8ce <__stack+0x6f>
     8c6:	88 0f       	add	r24, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	aa 1f       	adc	r26, r26
     8cc:	bb 1f       	adc	r27, r27
     8ce:	0a 94       	dec	r0
     8d0:	d2 f7       	brpl	.-12     	; 0x8c6 <__stack+0x67>
     8d2:	8d a7       	std	Y+45, r24	; 0x2d
     8d4:	9e a7       	std	Y+46, r25	; 0x2e
     8d6:	af a7       	std	Y+47, r26	; 0x2f
     8d8:	b8 ab       	std	Y+48, r27	; 0x30
     8da:	a2 1a       	sub	r10, r18
     8dc:	b3 0a       	sbc	r11, r19
     8de:	c4 0a       	sbc	r12, r20
     8e0:	d5 0a       	sbc	r13, r21
     8e2:	25 96       	adiw	r28, 0x05	; 5
     8e4:	ec ac       	ldd	r14, Y+60	; 0x3c
     8e6:	fd ac       	ldd	r15, Y+61	; 0x3d
     8e8:	0e ad       	ldd	r16, Y+62	; 0x3e
     8ea:	1f ad       	ldd	r17, Y+63	; 0x3f
     8ec:	25 97       	sbiw	r28, 0x05	; 5
     8ee:	d7 01       	movw	r26, r14
     8f0:	99 27       	eor	r25, r25
     8f2:	88 27       	eor	r24, r24
     8f4:	68 2a       	or	r6, r24
     8f6:	79 2a       	or	r7, r25
     8f8:	8a 2a       	or	r8, r26
     8fa:	9b 2a       	or	r9, r27
     8fc:	82 01       	movw	r16, r4
     8fe:	22 27       	eor	r18, r18
     900:	33 27       	eor	r19, r19
     902:	29 96       	adiw	r28, 0x09	; 9
     904:	0c af       	std	Y+60, r16	; 0x3c
     906:	1d af       	std	Y+61, r17	; 0x3d
     908:	2e af       	std	Y+62, r18	; 0x3e
     90a:	3f af       	std	Y+63, r19	; 0x3f
     90c:	29 97       	sbiw	r28, 0x09	; 9
     90e:	a2 01       	movw	r20, r4
     910:	91 01       	movw	r18, r2
     912:	40 70       	andi	r20, 0x00	; 0
     914:	50 70       	andi	r21, 0x00	; 0
     916:	2d 96       	adiw	r28, 0x0d	; 13
     918:	2c af       	std	Y+60, r18	; 0x3c
     91a:	3d af       	std	Y+61, r19	; 0x3d
     91c:	4e af       	std	Y+62, r20	; 0x3e
     91e:	5f af       	std	Y+63, r21	; 0x3f
     920:	2d 97       	sbiw	r28, 0x0d	; 13
     922:	c6 01       	movw	r24, r12
     924:	b5 01       	movw	r22, r10
     926:	29 96       	adiw	r28, 0x09	; 9
     928:	2c ad       	ldd	r18, Y+60	; 0x3c
     92a:	3d ad       	ldd	r19, Y+61	; 0x3d
     92c:	4e ad       	ldd	r20, Y+62	; 0x3e
     92e:	5f ad       	ldd	r21, Y+63	; 0x3f
     930:	29 97       	sbiw	r28, 0x09	; 9
     932:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     936:	7b 01       	movw	r14, r22
     938:	8c 01       	movw	r16, r24
     93a:	c6 01       	movw	r24, r12
     93c:	b5 01       	movw	r22, r10
     93e:	29 96       	adiw	r28, 0x09	; 9
     940:	2c ad       	ldd	r18, Y+60	; 0x3c
     942:	3d ad       	ldd	r19, Y+61	; 0x3d
     944:	4e ad       	ldd	r20, Y+62	; 0x3e
     946:	5f ad       	ldd	r21, Y+63	; 0x3f
     948:	29 97       	sbiw	r28, 0x09	; 9
     94a:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     94e:	c9 01       	movw	r24, r18
     950:	da 01       	movw	r26, r20
     952:	61 96       	adiw	r28, 0x11	; 17
     954:	8c af       	std	Y+60, r24	; 0x3c
     956:	9d af       	std	Y+61, r25	; 0x3d
     958:	ae af       	std	Y+62, r26	; 0x3e
     95a:	bf af       	std	Y+63, r27	; 0x3f
     95c:	61 97       	sbiw	r28, 0x11	; 17
     95e:	bc 01       	movw	r22, r24
     960:	cd 01       	movw	r24, r26
     962:	2d 96       	adiw	r28, 0x0d	; 13
     964:	2c ad       	ldd	r18, Y+60	; 0x3c
     966:	3d ad       	ldd	r19, Y+61	; 0x3d
     968:	4e ad       	ldd	r20, Y+62	; 0x3e
     96a:	5f ad       	ldd	r21, Y+63	; 0x3f
     96c:	2d 97       	sbiw	r28, 0x0d	; 13
     96e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     972:	9b 01       	movw	r18, r22
     974:	ac 01       	movw	r20, r24
     976:	87 01       	movw	r16, r14
     978:	ff 24       	eor	r15, r15
     97a:	ee 24       	eor	r14, r14
     97c:	ad a4       	ldd	r10, Y+45	; 0x2d
     97e:	be a4       	ldd	r11, Y+46	; 0x2e
     980:	cf a4       	ldd	r12, Y+47	; 0x2f
     982:	d8 a8       	ldd	r13, Y+48	; 0x30
     984:	c6 01       	movw	r24, r12
     986:	aa 27       	eor	r26, r26
     988:	bb 27       	eor	r27, r27
     98a:	57 01       	movw	r10, r14
     98c:	68 01       	movw	r12, r16
     98e:	a8 2a       	or	r10, r24
     990:	b9 2a       	or	r11, r25
     992:	ca 2a       	or	r12, r26
     994:	db 2a       	or	r13, r27
     996:	a2 16       	cp	r10, r18
     998:	b3 06       	cpc	r11, r19
     99a:	c4 06       	cpc	r12, r20
     99c:	d5 06       	cpc	r13, r21
     99e:	60 f5       	brcc	.+88     	; 0x9f8 <__stack+0x199>
     9a0:	61 96       	adiw	r28, 0x11	; 17
     9a2:	6c ad       	ldd	r22, Y+60	; 0x3c
     9a4:	7d ad       	ldd	r23, Y+61	; 0x3d
     9a6:	8e ad       	ldd	r24, Y+62	; 0x3e
     9a8:	9f ad       	ldd	r25, Y+63	; 0x3f
     9aa:	61 97       	sbiw	r28, 0x11	; 17
     9ac:	61 50       	subi	r22, 0x01	; 1
     9ae:	70 40       	sbci	r23, 0x00	; 0
     9b0:	80 40       	sbci	r24, 0x00	; 0
     9b2:	90 40       	sbci	r25, 0x00	; 0
     9b4:	61 96       	adiw	r28, 0x11	; 17
     9b6:	6c af       	std	Y+60, r22	; 0x3c
     9b8:	7d af       	std	Y+61, r23	; 0x3d
     9ba:	8e af       	std	Y+62, r24	; 0x3e
     9bc:	9f af       	std	Y+63, r25	; 0x3f
     9be:	61 97       	sbiw	r28, 0x11	; 17
     9c0:	a2 0c       	add	r10, r2
     9c2:	b3 1c       	adc	r11, r3
     9c4:	c4 1c       	adc	r12, r4
     9c6:	d5 1c       	adc	r13, r5
     9c8:	a2 14       	cp	r10, r2
     9ca:	b3 04       	cpc	r11, r3
     9cc:	c4 04       	cpc	r12, r4
     9ce:	d5 04       	cpc	r13, r5
     9d0:	98 f0       	brcs	.+38     	; 0x9f8 <__stack+0x199>
     9d2:	a2 16       	cp	r10, r18
     9d4:	b3 06       	cpc	r11, r19
     9d6:	c4 06       	cpc	r12, r20
     9d8:	d5 06       	cpc	r13, r21
     9da:	70 f4       	brcc	.+28     	; 0x9f8 <__stack+0x199>
     9dc:	61 50       	subi	r22, 0x01	; 1
     9de:	70 40       	sbci	r23, 0x00	; 0
     9e0:	80 40       	sbci	r24, 0x00	; 0
     9e2:	90 40       	sbci	r25, 0x00	; 0
     9e4:	61 96       	adiw	r28, 0x11	; 17
     9e6:	6c af       	std	Y+60, r22	; 0x3c
     9e8:	7d af       	std	Y+61, r23	; 0x3d
     9ea:	8e af       	std	Y+62, r24	; 0x3e
     9ec:	9f af       	std	Y+63, r25	; 0x3f
     9ee:	61 97       	sbiw	r28, 0x11	; 17
     9f0:	a2 0c       	add	r10, r2
     9f2:	b3 1c       	adc	r11, r3
     9f4:	c4 1c       	adc	r12, r4
     9f6:	d5 1c       	adc	r13, r5
     9f8:	a2 1a       	sub	r10, r18
     9fa:	b3 0a       	sbc	r11, r19
     9fc:	c4 0a       	sbc	r12, r20
     9fe:	d5 0a       	sbc	r13, r21
     a00:	c6 01       	movw	r24, r12
     a02:	b5 01       	movw	r22, r10
     a04:	29 96       	adiw	r28, 0x09	; 9
     a06:	2c ad       	ldd	r18, Y+60	; 0x3c
     a08:	3d ad       	ldd	r19, Y+61	; 0x3d
     a0a:	4e ad       	ldd	r20, Y+62	; 0x3e
     a0c:	5f ad       	ldd	r21, Y+63	; 0x3f
     a0e:	29 97       	sbiw	r28, 0x09	; 9
     a10:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     a14:	7b 01       	movw	r14, r22
     a16:	8c 01       	movw	r16, r24
     a18:	c6 01       	movw	r24, r12
     a1a:	b5 01       	movw	r22, r10
     a1c:	29 96       	adiw	r28, 0x09	; 9
     a1e:	2c ad       	ldd	r18, Y+60	; 0x3c
     a20:	3d ad       	ldd	r19, Y+61	; 0x3d
     a22:	4e ad       	ldd	r20, Y+62	; 0x3e
     a24:	5f ad       	ldd	r21, Y+63	; 0x3f
     a26:	29 97       	sbiw	r28, 0x09	; 9
     a28:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     a2c:	c9 01       	movw	r24, r18
     a2e:	da 01       	movw	r26, r20
     a30:	5c 01       	movw	r10, r24
     a32:	6d 01       	movw	r12, r26
     a34:	c6 01       	movw	r24, r12
     a36:	b5 01       	movw	r22, r10
     a38:	2d 96       	adiw	r28, 0x0d	; 13
     a3a:	2c ad       	ldd	r18, Y+60	; 0x3c
     a3c:	3d ad       	ldd	r19, Y+61	; 0x3d
     a3e:	4e ad       	ldd	r20, Y+62	; 0x3e
     a40:	5f ad       	ldd	r21, Y+63	; 0x3f
     a42:	2d 97       	sbiw	r28, 0x0d	; 13
     a44:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     a48:	9b 01       	movw	r18, r22
     a4a:	ac 01       	movw	r20, r24
     a4c:	87 01       	movw	r16, r14
     a4e:	ff 24       	eor	r15, r15
     a50:	ee 24       	eor	r14, r14
     a52:	8d a5       	ldd	r24, Y+45	; 0x2d
     a54:	9e a5       	ldd	r25, Y+46	; 0x2e
     a56:	af a5       	ldd	r26, Y+47	; 0x2f
     a58:	b8 a9       	ldd	r27, Y+48	; 0x30
     a5a:	a0 70       	andi	r26, 0x00	; 0
     a5c:	b0 70       	andi	r27, 0x00	; 0
     a5e:	e8 2a       	or	r14, r24
     a60:	f9 2a       	or	r15, r25
     a62:	0a 2b       	or	r16, r26
     a64:	1b 2b       	or	r17, r27
     a66:	e2 16       	cp	r14, r18
     a68:	f3 06       	cpc	r15, r19
     a6a:	04 07       	cpc	r16, r20
     a6c:	15 07       	cpc	r17, r21
     a6e:	c0 f4       	brcc	.+48     	; 0xaa0 <__stack+0x241>
     a70:	08 94       	sec
     a72:	a1 08       	sbc	r10, r1
     a74:	b1 08       	sbc	r11, r1
     a76:	c1 08       	sbc	r12, r1
     a78:	d1 08       	sbc	r13, r1
     a7a:	e2 0c       	add	r14, r2
     a7c:	f3 1c       	adc	r15, r3
     a7e:	04 1d       	adc	r16, r4
     a80:	15 1d       	adc	r17, r5
     a82:	e2 14       	cp	r14, r2
     a84:	f3 04       	cpc	r15, r3
     a86:	04 05       	cpc	r16, r4
     a88:	15 05       	cpc	r17, r5
     a8a:	50 f0       	brcs	.+20     	; 0xaa0 <__stack+0x241>
     a8c:	e2 16       	cp	r14, r18
     a8e:	f3 06       	cpc	r15, r19
     a90:	04 07       	cpc	r16, r20
     a92:	15 07       	cpc	r17, r21
     a94:	28 f4       	brcc	.+10     	; 0xaa0 <__stack+0x241>
     a96:	08 94       	sec
     a98:	a1 08       	sbc	r10, r1
     a9a:	b1 08       	sbc	r11, r1
     a9c:	c1 08       	sbc	r12, r1
     a9e:	d1 08       	sbc	r13, r1
     aa0:	61 96       	adiw	r28, 0x11	; 17
     aa2:	ec ac       	ldd	r14, Y+60	; 0x3c
     aa4:	fd ac       	ldd	r15, Y+61	; 0x3d
     aa6:	0e ad       	ldd	r16, Y+62	; 0x3e
     aa8:	1f ad       	ldd	r17, Y+63	; 0x3f
     aaa:	61 97       	sbiw	r28, 0x11	; 17
     aac:	d7 01       	movw	r26, r14
     aae:	99 27       	eor	r25, r25
     ab0:	88 27       	eor	r24, r24
     ab2:	96 01       	movw	r18, r12
     ab4:	85 01       	movw	r16, r10
     ab6:	08 2b       	or	r16, r24
     ab8:	19 2b       	or	r17, r25
     aba:	2a 2b       	or	r18, r26
     abc:	3b 2b       	or	r19, r27
     abe:	09 ab       	std	Y+49, r16	; 0x31
     ac0:	1a ab       	std	Y+50, r17	; 0x32
     ac2:	2b ab       	std	Y+51, r18	; 0x33
     ac4:	3c ab       	std	Y+52, r19	; 0x34
     ac6:	62 c2       	rjmp	.+1220   	; 0xf8c <__stack+0x72d>
     ac8:	6e 14       	cp	r6, r14
     aca:	7f 04       	cpc	r7, r15
     acc:	80 06       	cpc	r8, r16
     ace:	91 06       	cpc	r9, r17
     ad0:	08 f4       	brcc	.+2      	; 0xad4 <__stack+0x275>
     ad2:	51 c2       	rjmp	.+1186   	; 0xf76 <__stack+0x717>
     ad4:	20 e0       	ldi	r18, 0x00	; 0
     ad6:	e2 16       	cp	r14, r18
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	f2 06       	cpc	r15, r18
     adc:	21 e0       	ldi	r18, 0x01	; 1
     ade:	02 07       	cpc	r16, r18
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	12 07       	cpc	r17, r18
     ae4:	88 f4       	brcc	.+34     	; 0xb08 <__stack+0x2a9>
     ae6:	3f ef       	ldi	r19, 0xFF	; 255
     ae8:	e3 16       	cp	r14, r19
     aea:	f1 04       	cpc	r15, r1
     aec:	01 05       	cpc	r16, r1
     aee:	11 05       	cpc	r17, r1
     af0:	31 f0       	breq	.+12     	; 0xafe <__stack+0x29f>
     af2:	28 f0       	brcs	.+10     	; 0xafe <__stack+0x29f>
     af4:	48 e0       	ldi	r20, 0x08	; 8
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	17 c0       	rjmp	.+46     	; 0xb2c <__stack+0x2cd>
     afe:	40 e0       	ldi	r20, 0x00	; 0
     b00:	50 e0       	ldi	r21, 0x00	; 0
     b02:	60 e0       	ldi	r22, 0x00	; 0
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	12 c0       	rjmp	.+36     	; 0xb2c <__stack+0x2cd>
     b08:	40 e0       	ldi	r20, 0x00	; 0
     b0a:	e4 16       	cp	r14, r20
     b0c:	40 e0       	ldi	r20, 0x00	; 0
     b0e:	f4 06       	cpc	r15, r20
     b10:	40 e0       	ldi	r20, 0x00	; 0
     b12:	04 07       	cpc	r16, r20
     b14:	41 e0       	ldi	r20, 0x01	; 1
     b16:	14 07       	cpc	r17, r20
     b18:	28 f0       	brcs	.+10     	; 0xb24 <__stack+0x2c5>
     b1a:	48 e1       	ldi	r20, 0x18	; 24
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	60 e0       	ldi	r22, 0x00	; 0
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	04 c0       	rjmp	.+8      	; 0xb2c <__stack+0x2cd>
     b24:	40 e1       	ldi	r20, 0x10	; 16
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	60 e0       	ldi	r22, 0x00	; 0
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	d8 01       	movw	r26, r16
     b2e:	c7 01       	movw	r24, r14
     b30:	04 2e       	mov	r0, r20
     b32:	04 c0       	rjmp	.+8      	; 0xb3c <__stack+0x2dd>
     b34:	b6 95       	lsr	r27
     b36:	a7 95       	ror	r26
     b38:	97 95       	ror	r25
     b3a:	87 95       	ror	r24
     b3c:	0a 94       	dec	r0
     b3e:	d2 f7       	brpl	.-12     	; 0xb34 <__stack+0x2d5>
     b40:	83 59       	subi	r24, 0x93	; 147
     b42:	9f 4f       	sbci	r25, 0xFF	; 255
     b44:	dc 01       	movw	r26, r24
     b46:	2c 91       	ld	r18, X
     b48:	30 e2       	ldi	r19, 0x20	; 32
     b4a:	a3 2e       	mov	r10, r19
     b4c:	b1 2c       	mov	r11, r1
     b4e:	c1 2c       	mov	r12, r1
     b50:	d1 2c       	mov	r13, r1
     b52:	d6 01       	movw	r26, r12
     b54:	c5 01       	movw	r24, r10
     b56:	84 1b       	sub	r24, r20
     b58:	95 0b       	sbc	r25, r21
     b5a:	a6 0b       	sbc	r26, r22
     b5c:	b7 0b       	sbc	r27, r23
     b5e:	82 1b       	sub	r24, r18
     b60:	91 09       	sbc	r25, r1
     b62:	a1 09       	sbc	r26, r1
     b64:	b1 09       	sbc	r27, r1
     b66:	00 97       	sbiw	r24, 0x00	; 0
     b68:	a1 05       	cpc	r26, r1
     b6a:	b1 05       	cpc	r27, r1
     b6c:	89 f4       	brne	.+34     	; 0xb90 <__stack+0x331>
     b6e:	e6 14       	cp	r14, r6
     b70:	f7 04       	cpc	r15, r7
     b72:	08 05       	cpc	r16, r8
     b74:	19 05       	cpc	r17, r9
     b76:	08 f4       	brcc	.+2      	; 0xb7a <__stack+0x31b>
     b78:	f2 c1       	rjmp	.+996    	; 0xf5e <__stack+0x6ff>
     b7a:	6d a4       	ldd	r6, Y+45	; 0x2d
     b7c:	7e a4       	ldd	r7, Y+46	; 0x2e
     b7e:	8f a4       	ldd	r8, Y+47	; 0x2f
     b80:	98 a8       	ldd	r9, Y+48	; 0x30
     b82:	62 14       	cp	r6, r2
     b84:	73 04       	cpc	r7, r3
     b86:	84 04       	cpc	r8, r4
     b88:	95 04       	cpc	r9, r5
     b8a:	08 f0       	brcs	.+2      	; 0xb8e <__stack+0x32f>
     b8c:	e8 c1       	rjmp	.+976    	; 0xf5e <__stack+0x6ff>
     b8e:	f3 c1       	rjmp	.+998    	; 0xf76 <__stack+0x717>
     b90:	6e 96       	adiw	r28, 0x1e	; 30
     b92:	8f af       	std	Y+63, r24	; 0x3f
     b94:	6e 97       	sbiw	r28, 0x1e	; 30
     b96:	08 2e       	mov	r0, r24
     b98:	04 c0       	rjmp	.+8      	; 0xba2 <__stack+0x343>
     b9a:	ee 0c       	add	r14, r14
     b9c:	ff 1c       	adc	r15, r15
     b9e:	00 1f       	adc	r16, r16
     ba0:	11 1f       	adc	r17, r17
     ba2:	0a 94       	dec	r0
     ba4:	d2 f7       	brpl	.-12     	; 0xb9a <__stack+0x33b>
     ba6:	6a 2d       	mov	r22, r10
     ba8:	68 1b       	sub	r22, r24
     baa:	d2 01       	movw	r26, r4
     bac:	c1 01       	movw	r24, r2
     bae:	06 2e       	mov	r0, r22
     bb0:	04 c0       	rjmp	.+8      	; 0xbba <__stack+0x35b>
     bb2:	b6 95       	lsr	r27
     bb4:	a7 95       	ror	r26
     bb6:	97 95       	ror	r25
     bb8:	87 95       	ror	r24
     bba:	0a 94       	dec	r0
     bbc:	d2 f7       	brpl	.-12     	; 0xbb2 <__stack+0x353>
     bbe:	5c 01       	movw	r10, r24
     bc0:	6d 01       	movw	r12, r26
     bc2:	ae 28       	or	r10, r14
     bc4:	bf 28       	or	r11, r15
     bc6:	c0 2a       	or	r12, r16
     bc8:	d1 2a       	or	r13, r17
     bca:	ad a2       	std	Y+37, r10	; 0x25
     bcc:	be a2       	std	Y+38, r11	; 0x26
     bce:	cf a2       	std	Y+39, r12	; 0x27
     bd0:	d8 a6       	std	Y+40, r13	; 0x28
     bd2:	72 01       	movw	r14, r4
     bd4:	61 01       	movw	r12, r2
     bd6:	6e 96       	adiw	r28, 0x1e	; 30
     bd8:	0f ac       	ldd	r0, Y+63	; 0x3f
     bda:	6e 97       	sbiw	r28, 0x1e	; 30
     bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <__stack+0x387>
     bde:	cc 0c       	add	r12, r12
     be0:	dd 1c       	adc	r13, r13
     be2:	ee 1c       	adc	r14, r14
     be4:	ff 1c       	adc	r15, r15
     be6:	0a 94       	dec	r0
     be8:	d2 f7       	brpl	.-12     	; 0xbde <__stack+0x37f>
     bea:	c9 a2       	std	Y+33, r12	; 0x21
     bec:	da a2       	std	Y+34, r13	; 0x22
     bee:	eb a2       	std	Y+35, r14	; 0x23
     bf0:	fc a2       	std	Y+36, r15	; 0x24
     bf2:	64 01       	movw	r12, r8
     bf4:	53 01       	movw	r10, r6
     bf6:	06 2e       	mov	r0, r22
     bf8:	04 c0       	rjmp	.+8      	; 0xc02 <__stack+0x3a3>
     bfa:	d6 94       	lsr	r13
     bfc:	c7 94       	ror	r12
     bfe:	b7 94       	ror	r11
     c00:	a7 94       	ror	r10
     c02:	0a 94       	dec	r0
     c04:	d2 f7       	brpl	.-12     	; 0xbfa <__stack+0x39b>
     c06:	d4 01       	movw	r26, r8
     c08:	c3 01       	movw	r24, r6
     c0a:	6e 96       	adiw	r28, 0x1e	; 30
     c0c:	0f ac       	ldd	r0, Y+63	; 0x3f
     c0e:	6e 97       	sbiw	r28, 0x1e	; 30
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <__stack+0x3bb>
     c12:	88 0f       	add	r24, r24
     c14:	99 1f       	adc	r25, r25
     c16:	aa 1f       	adc	r26, r26
     c18:	bb 1f       	adc	r27, r27
     c1a:	0a 94       	dec	r0
     c1c:	d2 f7       	brpl	.-12     	; 0xc12 <__stack+0x3b3>
     c1e:	ed a4       	ldd	r14, Y+45	; 0x2d
     c20:	fe a4       	ldd	r15, Y+46	; 0x2e
     c22:	0f a5       	ldd	r16, Y+47	; 0x2f
     c24:	18 a9       	ldd	r17, Y+48	; 0x30
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <__stack+0x3d1>
     c28:	16 95       	lsr	r17
     c2a:	07 95       	ror	r16
     c2c:	f7 94       	ror	r15
     c2e:	e7 94       	ror	r14
     c30:	6a 95       	dec	r22
     c32:	d2 f7       	brpl	.-12     	; 0xc28 <__stack+0x3c9>
     c34:	37 01       	movw	r6, r14
     c36:	48 01       	movw	r8, r16
     c38:	68 2a       	or	r6, r24
     c3a:	79 2a       	or	r7, r25
     c3c:	8a 2a       	or	r8, r26
     c3e:	9b 2a       	or	r9, r27
     c40:	6d 8e       	std	Y+29, r6	; 0x1d
     c42:	7e 8e       	std	Y+30, r7	; 0x1e
     c44:	8f 8e       	std	Y+31, r8	; 0x1f
     c46:	98 a2       	std	Y+32, r9	; 0x20
     c48:	ed a0       	ldd	r14, Y+37	; 0x25
     c4a:	fe a0       	ldd	r15, Y+38	; 0x26
     c4c:	0f a1       	ldd	r16, Y+39	; 0x27
     c4e:	18 a5       	ldd	r17, Y+40	; 0x28
     c50:	38 01       	movw	r6, r16
     c52:	88 24       	eor	r8, r8
     c54:	99 24       	eor	r9, r9
     c56:	98 01       	movw	r18, r16
     c58:	87 01       	movw	r16, r14
     c5a:	20 70       	andi	r18, 0x00	; 0
     c5c:	30 70       	andi	r19, 0x00	; 0
     c5e:	65 96       	adiw	r28, 0x15	; 21
     c60:	0c af       	std	Y+60, r16	; 0x3c
     c62:	1d af       	std	Y+61, r17	; 0x3d
     c64:	2e af       	std	Y+62, r18	; 0x3e
     c66:	3f af       	std	Y+63, r19	; 0x3f
     c68:	65 97       	sbiw	r28, 0x15	; 21
     c6a:	c6 01       	movw	r24, r12
     c6c:	b5 01       	movw	r22, r10
     c6e:	a4 01       	movw	r20, r8
     c70:	93 01       	movw	r18, r6
     c72:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     c76:	7b 01       	movw	r14, r22
     c78:	8c 01       	movw	r16, r24
     c7a:	c6 01       	movw	r24, r12
     c7c:	b5 01       	movw	r22, r10
     c7e:	a4 01       	movw	r20, r8
     c80:	93 01       	movw	r18, r6
     c82:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     c86:	c9 01       	movw	r24, r18
     c88:	da 01       	movw	r26, r20
     c8a:	1c 01       	movw	r2, r24
     c8c:	2d 01       	movw	r4, r26
     c8e:	c2 01       	movw	r24, r4
     c90:	b1 01       	movw	r22, r2
     c92:	65 96       	adiw	r28, 0x15	; 21
     c94:	2c ad       	ldd	r18, Y+60	; 0x3c
     c96:	3d ad       	ldd	r19, Y+61	; 0x3d
     c98:	4e ad       	ldd	r20, Y+62	; 0x3e
     c9a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c9c:	65 97       	sbiw	r28, 0x15	; 21
     c9e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     ca2:	9b 01       	movw	r18, r22
     ca4:	ac 01       	movw	r20, r24
     ca6:	87 01       	movw	r16, r14
     ca8:	ff 24       	eor	r15, r15
     caa:	ee 24       	eor	r14, r14
     cac:	ad 8c       	ldd	r10, Y+29	; 0x1d
     cae:	be 8c       	ldd	r11, Y+30	; 0x1e
     cb0:	cf 8c       	ldd	r12, Y+31	; 0x1f
     cb2:	d8 a0       	ldd	r13, Y+32	; 0x20
     cb4:	c6 01       	movw	r24, r12
     cb6:	aa 27       	eor	r26, r26
     cb8:	bb 27       	eor	r27, r27
     cba:	57 01       	movw	r10, r14
     cbc:	68 01       	movw	r12, r16
     cbe:	a8 2a       	or	r10, r24
     cc0:	b9 2a       	or	r11, r25
     cc2:	ca 2a       	or	r12, r26
     cc4:	db 2a       	or	r13, r27
     cc6:	a2 16       	cp	r10, r18
     cc8:	b3 06       	cpc	r11, r19
     cca:	c4 06       	cpc	r12, r20
     ccc:	d5 06       	cpc	r13, r21
     cce:	00 f5       	brcc	.+64     	; 0xd10 <__stack+0x4b1>
     cd0:	08 94       	sec
     cd2:	21 08       	sbc	r2, r1
     cd4:	31 08       	sbc	r3, r1
     cd6:	41 08       	sbc	r4, r1
     cd8:	51 08       	sbc	r5, r1
     cda:	ed a0       	ldd	r14, Y+37	; 0x25
     cdc:	fe a0       	ldd	r15, Y+38	; 0x26
     cde:	0f a1       	ldd	r16, Y+39	; 0x27
     ce0:	18 a5       	ldd	r17, Y+40	; 0x28
     ce2:	ae 0c       	add	r10, r14
     ce4:	bf 1c       	adc	r11, r15
     ce6:	c0 1e       	adc	r12, r16
     ce8:	d1 1e       	adc	r13, r17
     cea:	ae 14       	cp	r10, r14
     cec:	bf 04       	cpc	r11, r15
     cee:	c0 06       	cpc	r12, r16
     cf0:	d1 06       	cpc	r13, r17
     cf2:	70 f0       	brcs	.+28     	; 0xd10 <__stack+0x4b1>
     cf4:	a2 16       	cp	r10, r18
     cf6:	b3 06       	cpc	r11, r19
     cf8:	c4 06       	cpc	r12, r20
     cfa:	d5 06       	cpc	r13, r21
     cfc:	48 f4       	brcc	.+18     	; 0xd10 <__stack+0x4b1>
     cfe:	08 94       	sec
     d00:	21 08       	sbc	r2, r1
     d02:	31 08       	sbc	r3, r1
     d04:	41 08       	sbc	r4, r1
     d06:	51 08       	sbc	r5, r1
     d08:	ae 0c       	add	r10, r14
     d0a:	bf 1c       	adc	r11, r15
     d0c:	c0 1e       	adc	r12, r16
     d0e:	d1 1e       	adc	r13, r17
     d10:	a2 1a       	sub	r10, r18
     d12:	b3 0a       	sbc	r11, r19
     d14:	c4 0a       	sbc	r12, r20
     d16:	d5 0a       	sbc	r13, r21
     d18:	c6 01       	movw	r24, r12
     d1a:	b5 01       	movw	r22, r10
     d1c:	a4 01       	movw	r20, r8
     d1e:	93 01       	movw	r18, r6
     d20:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     d24:	7b 01       	movw	r14, r22
     d26:	8c 01       	movw	r16, r24
     d28:	c6 01       	movw	r24, r12
     d2a:	b5 01       	movw	r22, r10
     d2c:	a4 01       	movw	r20, r8
     d2e:	93 01       	movw	r18, r6
     d30:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
     d34:	c9 01       	movw	r24, r18
     d36:	da 01       	movw	r26, r20
     d38:	3c 01       	movw	r6, r24
     d3a:	4d 01       	movw	r8, r26
     d3c:	c4 01       	movw	r24, r8
     d3e:	b3 01       	movw	r22, r6
     d40:	65 96       	adiw	r28, 0x15	; 21
     d42:	2c ad       	ldd	r18, Y+60	; 0x3c
     d44:	3d ad       	ldd	r19, Y+61	; 0x3d
     d46:	4e ad       	ldd	r20, Y+62	; 0x3e
     d48:	5f ad       	ldd	r21, Y+63	; 0x3f
     d4a:	65 97       	sbiw	r28, 0x15	; 21
     d4c:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     d50:	9b 01       	movw	r18, r22
     d52:	ac 01       	movw	r20, r24
     d54:	87 01       	movw	r16, r14
     d56:	ff 24       	eor	r15, r15
     d58:	ee 24       	eor	r14, r14
     d5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d5c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d5e:	af 8d       	ldd	r26, Y+31	; 0x1f
     d60:	b8 a1       	ldd	r27, Y+32	; 0x20
     d62:	a0 70       	andi	r26, 0x00	; 0
     d64:	b0 70       	andi	r27, 0x00	; 0
     d66:	57 01       	movw	r10, r14
     d68:	68 01       	movw	r12, r16
     d6a:	a8 2a       	or	r10, r24
     d6c:	b9 2a       	or	r11, r25
     d6e:	ca 2a       	or	r12, r26
     d70:	db 2a       	or	r13, r27
     d72:	a2 16       	cp	r10, r18
     d74:	b3 06       	cpc	r11, r19
     d76:	c4 06       	cpc	r12, r20
     d78:	d5 06       	cpc	r13, r21
     d7a:	00 f5       	brcc	.+64     	; 0xdbc <__stack+0x55d>
     d7c:	08 94       	sec
     d7e:	61 08       	sbc	r6, r1
     d80:	71 08       	sbc	r7, r1
     d82:	81 08       	sbc	r8, r1
     d84:	91 08       	sbc	r9, r1
     d86:	6d a1       	ldd	r22, Y+37	; 0x25
     d88:	7e a1       	ldd	r23, Y+38	; 0x26
     d8a:	8f a1       	ldd	r24, Y+39	; 0x27
     d8c:	98 a5       	ldd	r25, Y+40	; 0x28
     d8e:	a6 0e       	add	r10, r22
     d90:	b7 1e       	adc	r11, r23
     d92:	c8 1e       	adc	r12, r24
     d94:	d9 1e       	adc	r13, r25
     d96:	a6 16       	cp	r10, r22
     d98:	b7 06       	cpc	r11, r23
     d9a:	c8 06       	cpc	r12, r24
     d9c:	d9 06       	cpc	r13, r25
     d9e:	70 f0       	brcs	.+28     	; 0xdbc <__stack+0x55d>
     da0:	a2 16       	cp	r10, r18
     da2:	b3 06       	cpc	r11, r19
     da4:	c4 06       	cpc	r12, r20
     da6:	d5 06       	cpc	r13, r21
     da8:	48 f4       	brcc	.+18     	; 0xdbc <__stack+0x55d>
     daa:	08 94       	sec
     dac:	61 08       	sbc	r6, r1
     dae:	71 08       	sbc	r7, r1
     db0:	81 08       	sbc	r8, r1
     db2:	91 08       	sbc	r9, r1
     db4:	a6 0e       	add	r10, r22
     db6:	b7 1e       	adc	r11, r23
     db8:	c8 1e       	adc	r12, r24
     dba:	d9 1e       	adc	r13, r25
     dbc:	d6 01       	movw	r26, r12
     dbe:	c5 01       	movw	r24, r10
     dc0:	82 1b       	sub	r24, r18
     dc2:	93 0b       	sbc	r25, r19
     dc4:	a4 0b       	sbc	r26, r20
     dc6:	b5 0b       	sbc	r27, r21
     dc8:	89 8f       	std	Y+25, r24	; 0x19
     dca:	9a 8f       	std	Y+26, r25	; 0x1a
     dcc:	ab 8f       	std	Y+27, r26	; 0x1b
     dce:	bc 8f       	std	Y+28, r27	; 0x1c
     dd0:	d1 01       	movw	r26, r2
     dd2:	99 27       	eor	r25, r25
     dd4:	88 27       	eor	r24, r24
     dd6:	64 01       	movw	r12, r8
     dd8:	53 01       	movw	r10, r6
     dda:	a8 2a       	or	r10, r24
     ddc:	b9 2a       	or	r11, r25
     dde:	ca 2a       	or	r12, r26
     de0:	db 2a       	or	r13, r27
     de2:	a9 aa       	std	Y+49, r10	; 0x31
     de4:	ba aa       	std	Y+50, r11	; 0x32
     de6:	cb aa       	std	Y+51, r12	; 0x33
     de8:	dc aa       	std	Y+52, r13	; 0x34
     dea:	86 01       	movw	r16, r12
     dec:	75 01       	movw	r14, r10
     dee:	2f ef       	ldi	r18, 0xFF	; 255
     df0:	3f ef       	ldi	r19, 0xFF	; 255
     df2:	40 e0       	ldi	r20, 0x00	; 0
     df4:	50 e0       	ldi	r21, 0x00	; 0
     df6:	e2 22       	and	r14, r18
     df8:	f3 22       	and	r15, r19
     dfa:	04 23       	and	r16, r20
     dfc:	15 23       	and	r17, r21
     dfe:	a6 01       	movw	r20, r12
     e00:	66 27       	eor	r22, r22
     e02:	77 27       	eor	r23, r23
     e04:	6d 96       	adiw	r28, 0x1d	; 29
     e06:	4c af       	std	Y+60, r20	; 0x3c
     e08:	5d af       	std	Y+61, r21	; 0x3d
     e0a:	6e af       	std	Y+62, r22	; 0x3e
     e0c:	7f af       	std	Y+63, r23	; 0x3f
     e0e:	6d 97       	sbiw	r28, 0x1d	; 29
     e10:	a9 a0       	ldd	r10, Y+33	; 0x21
     e12:	ba a0       	ldd	r11, Y+34	; 0x22
     e14:	cb a0       	ldd	r12, Y+35	; 0x23
     e16:	dc a0       	ldd	r13, Y+36	; 0x24
     e18:	6f ef       	ldi	r22, 0xFF	; 255
     e1a:	7f ef       	ldi	r23, 0xFF	; 255
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	a6 22       	and	r10, r22
     e22:	b7 22       	and	r11, r23
     e24:	c8 22       	and	r12, r24
     e26:	d9 22       	and	r13, r25
     e28:	89 a1       	ldd	r24, Y+33	; 0x21
     e2a:	9a a1       	ldd	r25, Y+34	; 0x22
     e2c:	ab a1       	ldd	r26, Y+35	; 0x23
     e2e:	bc a1       	ldd	r27, Y+36	; 0x24
     e30:	1d 01       	movw	r2, r26
     e32:	44 24       	eor	r4, r4
     e34:	55 24       	eor	r5, r5
     e36:	c8 01       	movw	r24, r16
     e38:	b7 01       	movw	r22, r14
     e3a:	a6 01       	movw	r20, r12
     e3c:	95 01       	movw	r18, r10
     e3e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     e42:	69 96       	adiw	r28, 0x19	; 25
     e44:	6c af       	std	Y+60, r22	; 0x3c
     e46:	7d af       	std	Y+61, r23	; 0x3d
     e48:	8e af       	std	Y+62, r24	; 0x3e
     e4a:	9f af       	std	Y+63, r25	; 0x3f
     e4c:	69 97       	sbiw	r28, 0x19	; 25
     e4e:	c8 01       	movw	r24, r16
     e50:	b7 01       	movw	r22, r14
     e52:	a2 01       	movw	r20, r4
     e54:	91 01       	movw	r18, r2
     e56:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     e5a:	3b 01       	movw	r6, r22
     e5c:	4c 01       	movw	r8, r24
     e5e:	6d 96       	adiw	r28, 0x1d	; 29
     e60:	6c ad       	ldd	r22, Y+60	; 0x3c
     e62:	7d ad       	ldd	r23, Y+61	; 0x3d
     e64:	8e ad       	ldd	r24, Y+62	; 0x3e
     e66:	9f ad       	ldd	r25, Y+63	; 0x3f
     e68:	6d 97       	sbiw	r28, 0x1d	; 29
     e6a:	a6 01       	movw	r20, r12
     e6c:	95 01       	movw	r18, r10
     e6e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     e72:	7b 01       	movw	r14, r22
     e74:	8c 01       	movw	r16, r24
     e76:	6d 96       	adiw	r28, 0x1d	; 29
     e78:	6c ad       	ldd	r22, Y+60	; 0x3c
     e7a:	7d ad       	ldd	r23, Y+61	; 0x3d
     e7c:	8e ad       	ldd	r24, Y+62	; 0x3e
     e7e:	9f ad       	ldd	r25, Y+63	; 0x3f
     e80:	6d 97       	sbiw	r28, 0x1d	; 29
     e82:	a2 01       	movw	r20, r4
     e84:	91 01       	movw	r18, r2
     e86:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
     e8a:	5b 01       	movw	r10, r22
     e8c:	6c 01       	movw	r12, r24
     e8e:	a8 01       	movw	r20, r16
     e90:	97 01       	movw	r18, r14
     e92:	26 0d       	add	r18, r6
     e94:	37 1d       	adc	r19, r7
     e96:	48 1d       	adc	r20, r8
     e98:	59 1d       	adc	r21, r9
     e9a:	69 96       	adiw	r28, 0x19	; 25
     e9c:	6c ac       	ldd	r6, Y+60	; 0x3c
     e9e:	7d ac       	ldd	r7, Y+61	; 0x3d
     ea0:	8e ac       	ldd	r8, Y+62	; 0x3e
     ea2:	9f ac       	ldd	r9, Y+63	; 0x3f
     ea4:	69 97       	sbiw	r28, 0x19	; 25
     ea6:	c4 01       	movw	r24, r8
     ea8:	aa 27       	eor	r26, r26
     eaa:	bb 27       	eor	r27, r27
     eac:	28 0f       	add	r18, r24
     eae:	39 1f       	adc	r19, r25
     eb0:	4a 1f       	adc	r20, r26
     eb2:	5b 1f       	adc	r21, r27
     eb4:	2e 15       	cp	r18, r14
     eb6:	3f 05       	cpc	r19, r15
     eb8:	40 07       	cpc	r20, r16
     eba:	51 07       	cpc	r21, r17
     ebc:	48 f4       	brcc	.+18     	; 0xed0 <__stack+0x671>
     ebe:	e1 2c       	mov	r14, r1
     ec0:	f1 2c       	mov	r15, r1
     ec2:	61 e0       	ldi	r22, 0x01	; 1
     ec4:	06 2f       	mov	r16, r22
     ec6:	11 2d       	mov	r17, r1
     ec8:	ae 0c       	add	r10, r14
     eca:	bf 1c       	adc	r11, r15
     ecc:	c0 1e       	adc	r12, r16
     ece:	d1 1e       	adc	r13, r17
     ed0:	ca 01       	movw	r24, r20
     ed2:	aa 27       	eor	r26, r26
     ed4:	bb 27       	eor	r27, r27
     ed6:	bc 01       	movw	r22, r24
     ed8:	cd 01       	movw	r24, r26
     eda:	6a 0d       	add	r22, r10
     edc:	7b 1d       	adc	r23, r11
     ede:	8c 1d       	adc	r24, r12
     ee0:	9d 1d       	adc	r25, r13
     ee2:	69 8c       	ldd	r6, Y+25	; 0x19
     ee4:	7a 8c       	ldd	r7, Y+26	; 0x1a
     ee6:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ee8:	9c 8c       	ldd	r9, Y+28	; 0x1c
     eea:	66 16       	cp	r6, r22
     eec:	77 06       	cpc	r7, r23
     eee:	88 06       	cpc	r8, r24
     ef0:	99 06       	cpc	r9, r25
     ef2:	40 f1       	brcs	.+80     	; 0xf44 <__stack+0x6e5>
     ef4:	66 15       	cp	r22, r6
     ef6:	77 05       	cpc	r23, r7
     ef8:	88 05       	cpc	r24, r8
     efa:	99 05       	cpc	r25, r9
     efc:	09 f0       	breq	.+2      	; 0xf00 <__stack+0x6a1>
     efe:	43 c0       	rjmp	.+134    	; 0xf86 <__stack+0x727>
     f00:	d9 01       	movw	r26, r18
     f02:	99 27       	eor	r25, r25
     f04:	88 27       	eor	r24, r24
     f06:	69 96       	adiw	r28, 0x19	; 25
     f08:	2c ad       	ldd	r18, Y+60	; 0x3c
     f0a:	3d ad       	ldd	r19, Y+61	; 0x3d
     f0c:	4e ad       	ldd	r20, Y+62	; 0x3e
     f0e:	5f ad       	ldd	r21, Y+63	; 0x3f
     f10:	69 97       	sbiw	r28, 0x19	; 25
     f12:	40 70       	andi	r20, 0x00	; 0
     f14:	50 70       	andi	r21, 0x00	; 0
     f16:	82 0f       	add	r24, r18
     f18:	93 1f       	adc	r25, r19
     f1a:	a4 1f       	adc	r26, r20
     f1c:	b5 1f       	adc	r27, r21
     f1e:	2d a5       	ldd	r18, Y+45	; 0x2d
     f20:	3e a5       	ldd	r19, Y+46	; 0x2e
     f22:	4f a5       	ldd	r20, Y+47	; 0x2f
     f24:	58 a9       	ldd	r21, Y+48	; 0x30
     f26:	6e 96       	adiw	r28, 0x1e	; 30
     f28:	0f ac       	ldd	r0, Y+63	; 0x3f
     f2a:	6e 97       	sbiw	r28, 0x1e	; 30
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <__stack+0x6d7>
     f2e:	22 0f       	add	r18, r18
     f30:	33 1f       	adc	r19, r19
     f32:	44 1f       	adc	r20, r20
     f34:	55 1f       	adc	r21, r21
     f36:	0a 94       	dec	r0
     f38:	d2 f7       	brpl	.-12     	; 0xf2e <__stack+0x6cf>
     f3a:	28 17       	cp	r18, r24
     f3c:	39 07       	cpc	r19, r25
     f3e:	4a 07       	cpc	r20, r26
     f40:	5b 07       	cpc	r21, r27
     f42:	08 f5       	brcc	.+66     	; 0xf86 <__stack+0x727>
     f44:	09 a9       	ldd	r16, Y+49	; 0x31
     f46:	1a a9       	ldd	r17, Y+50	; 0x32
     f48:	2b a9       	ldd	r18, Y+51	; 0x33
     f4a:	3c a9       	ldd	r19, Y+52	; 0x34
     f4c:	01 50       	subi	r16, 0x01	; 1
     f4e:	10 40       	sbci	r17, 0x00	; 0
     f50:	20 40       	sbci	r18, 0x00	; 0
     f52:	30 40       	sbci	r19, 0x00	; 0
     f54:	09 ab       	std	Y+49, r16	; 0x31
     f56:	1a ab       	std	Y+50, r17	; 0x32
     f58:	2b ab       	std	Y+51, r18	; 0x33
     f5a:	3c ab       	std	Y+52, r19	; 0x34
     f5c:	14 c0       	rjmp	.+40     	; 0xf86 <__stack+0x727>
     f5e:	66 24       	eor	r6, r6
     f60:	77 24       	eor	r7, r7
     f62:	43 01       	movw	r8, r6
     f64:	21 e0       	ldi	r18, 0x01	; 1
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	40 e0       	ldi	r20, 0x00	; 0
     f6a:	50 e0       	ldi	r21, 0x00	; 0
     f6c:	29 ab       	std	Y+49, r18	; 0x31
     f6e:	3a ab       	std	Y+50, r19	; 0x32
     f70:	4b ab       	std	Y+51, r20	; 0x33
     f72:	5c ab       	std	Y+52, r21	; 0x34
     f74:	0b c0       	rjmp	.+22     	; 0xf8c <__stack+0x72d>
     f76:	66 24       	eor	r6, r6
     f78:	77 24       	eor	r7, r7
     f7a:	43 01       	movw	r8, r6
     f7c:	19 aa       	std	Y+49, r1	; 0x31
     f7e:	1a aa       	std	Y+50, r1	; 0x32
     f80:	1b aa       	std	Y+51, r1	; 0x33
     f82:	1c aa       	std	Y+52, r1	; 0x34
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <__stack+0x72d>
     f86:	66 24       	eor	r6, r6
     f88:	77 24       	eor	r7, r7
     f8a:	43 01       	movw	r8, r6
     f8c:	fe 01       	movw	r30, r28
     f8e:	71 96       	adiw	r30, 0x11	; 17
     f90:	88 e0       	ldi	r24, 0x08	; 8
     f92:	df 01       	movw	r26, r30
     f94:	1d 92       	st	X+, r1
     f96:	8a 95       	dec	r24
     f98:	e9 f7       	brne	.-6      	; 0xf94 <__stack+0x735>
     f9a:	a9 a8       	ldd	r10, Y+49	; 0x31
     f9c:	ba a8       	ldd	r11, Y+50	; 0x32
     f9e:	cb a8       	ldd	r12, Y+51	; 0x33
     fa0:	dc a8       	ldd	r13, Y+52	; 0x34
     fa2:	a9 8a       	std	Y+17, r10	; 0x11
     fa4:	ba 8a       	std	Y+18, r11	; 0x12
     fa6:	cb 8a       	std	Y+19, r12	; 0x13
     fa8:	dc 8a       	std	Y+20, r13	; 0x14
     faa:	6d 8a       	std	Y+21, r6	; 0x15
     fac:	7e 8a       	std	Y+22, r7	; 0x16
     fae:	8f 8a       	std	Y+23, r8	; 0x17
     fb0:	98 8e       	std	Y+24, r9	; 0x18
     fb2:	29 a9       	ldd	r18, Y+49	; 0x31
     fb4:	3a 89       	ldd	r19, Y+18	; 0x12
     fb6:	4b 89       	ldd	r20, Y+19	; 0x13
     fb8:	5c 89       	ldd	r21, Y+20	; 0x14
     fba:	66 2d       	mov	r22, r6
     fbc:	7e 89       	ldd	r23, Y+22	; 0x16
     fbe:	8f 89       	ldd	r24, Y+23	; 0x17
     fc0:	98 8d       	ldd	r25, Y+24	; 0x18
     fc2:	c2 5a       	subi	r28, 0xA2	; 162
     fc4:	df 4f       	sbci	r29, 0xFF	; 255
     fc6:	e2 e1       	ldi	r30, 0x12	; 18
     fc8:	0c 94 b9 30 	jmp	0x6172	; 0x6172 <__epilogue_restores__>

00000fcc <__umoddi3>:
     fcc:	ab e5       	ldi	r26, 0x5B	; 91
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	ec ee       	ldi	r30, 0xEC	; 236
     fd2:	f7 e0       	ldi	r31, 0x07	; 7
     fd4:	0c 94 9d 30 	jmp	0x613a	; 0x613a <__prologue_saves__>
     fd8:	a8 e0       	ldi	r26, 0x08	; 8
     fda:	4e 01       	movw	r8, r28
     fdc:	08 94       	sec
     fde:	81 1c       	adc	r8, r1
     fe0:	91 1c       	adc	r9, r1
     fe2:	f4 01       	movw	r30, r8
     fe4:	6a 2e       	mov	r6, r26
     fe6:	11 92       	st	Z+, r1
     fe8:	6a 94       	dec	r6
     fea:	e9 f7       	brne	.-6      	; 0xfe6 <__umoddi3+0x1a>
     fec:	29 83       	std	Y+1, r18	; 0x01
     fee:	3a 83       	std	Y+2, r19	; 0x02
     ff0:	4b 83       	std	Y+3, r20	; 0x03
     ff2:	5c 83       	std	Y+4, r21	; 0x04
     ff4:	6d 83       	std	Y+5, r22	; 0x05
     ff6:	7e 83       	std	Y+6, r23	; 0x06
     ff8:	8f 83       	std	Y+7, r24	; 0x07
     ffa:	98 87       	std	Y+8, r25	; 0x08
     ffc:	ce 01       	movw	r24, r28
     ffe:	09 96       	adiw	r24, 0x09	; 9
    1000:	fc 01       	movw	r30, r24
    1002:	11 92       	st	Z+, r1
    1004:	aa 95       	dec	r26
    1006:	e9 f7       	brne	.-6      	; 0x1002 <__umoddi3+0x36>
    1008:	a9 86       	std	Y+9, r10	; 0x09
    100a:	ba 86       	std	Y+10, r11	; 0x0a
    100c:	cb 86       	std	Y+11, r12	; 0x0b
    100e:	dc 86       	std	Y+12, r13	; 0x0c
    1010:	ed 86       	std	Y+13, r14	; 0x0d
    1012:	fe 86       	std	Y+14, r15	; 0x0e
    1014:	0f 87       	std	Y+15, r16	; 0x0f
    1016:	18 8b       	std	Y+16, r17	; 0x10
    1018:	29 84       	ldd	r2, Y+9	; 0x09
    101a:	3a 84       	ldd	r3, Y+10	; 0x0a
    101c:	4b 84       	ldd	r4, Y+11	; 0x0b
    101e:	5c 84       	ldd	r5, Y+12	; 0x0c
    1020:	ad 84       	ldd	r10, Y+13	; 0x0d
    1022:	be 84       	ldd	r11, Y+14	; 0x0e
    1024:	cf 84       	ldd	r12, Y+15	; 0x0f
    1026:	d8 88       	ldd	r13, Y+16	; 0x10
    1028:	29 81       	ldd	r18, Y+1	; 0x01
    102a:	3a 81       	ldd	r19, Y+2	; 0x02
    102c:	4b 81       	ldd	r20, Y+3	; 0x03
    102e:	5c 81       	ldd	r21, Y+4	; 0x04
    1030:	69 96       	adiw	r28, 0x19	; 25
    1032:	2f af       	std	Y+63, r18	; 0x3f
    1034:	69 97       	sbiw	r28, 0x19	; 25
    1036:	6a 96       	adiw	r28, 0x1a	; 26
    1038:	3f af       	std	Y+63, r19	; 0x3f
    103a:	6a 97       	sbiw	r28, 0x1a	; 26
    103c:	6b 96       	adiw	r28, 0x1b	; 27
    103e:	4f af       	std	Y+63, r20	; 0x3f
    1040:	6b 97       	sbiw	r28, 0x1b	; 27
    1042:	6c 96       	adiw	r28, 0x1c	; 28
    1044:	5f af       	std	Y+63, r21	; 0x3f
    1046:	6c 97       	sbiw	r28, 0x1c	; 28
    1048:	6c 96       	adiw	r28, 0x1c	; 28
    104a:	6c ac       	ldd	r6, Y+60	; 0x3c
    104c:	7d ac       	ldd	r7, Y+61	; 0x3d
    104e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1050:	9f ac       	ldd	r9, Y+63	; 0x3f
    1052:	6c 97       	sbiw	r28, 0x1c	; 28
    1054:	69 aa       	std	Y+49, r6	; 0x31
    1056:	7a aa       	std	Y+50, r7	; 0x32
    1058:	8b aa       	std	Y+51, r8	; 0x33
    105a:	9c aa       	std	Y+52, r9	; 0x34
    105c:	6d 81       	ldd	r22, Y+5	; 0x05
    105e:	7e 81       	ldd	r23, Y+6	; 0x06
    1060:	8f 81       	ldd	r24, Y+7	; 0x07
    1062:	98 85       	ldd	r25, Y+8	; 0x08
    1064:	3b 01       	movw	r6, r22
    1066:	4c 01       	movw	r8, r24
    1068:	6d aa       	std	Y+53, r6	; 0x35
    106a:	7e aa       	std	Y+54, r7	; 0x36
    106c:	8f aa       	std	Y+55, r8	; 0x37
    106e:	98 ae       	std	Y+56, r9	; 0x38
    1070:	a1 14       	cp	r10, r1
    1072:	b1 04       	cpc	r11, r1
    1074:	c1 04       	cpc	r12, r1
    1076:	d1 04       	cpc	r13, r1
    1078:	09 f0       	breq	.+2      	; 0x107c <__umoddi3+0xb0>
    107a:	04 c3       	rjmp	.+1544   	; 0x1684 <__umoddi3+0x6b8>
    107c:	62 14       	cp	r6, r2
    107e:	73 04       	cpc	r7, r3
    1080:	84 04       	cpc	r8, r4
    1082:	95 04       	cpc	r9, r5
    1084:	08 f0       	brcs	.+2      	; 0x1088 <__umoddi3+0xbc>
    1086:	00 c1       	rjmp	.+512    	; 0x1288 <__umoddi3+0x2bc>
    1088:	00 e0       	ldi	r16, 0x00	; 0
    108a:	20 16       	cp	r2, r16
    108c:	00 e0       	ldi	r16, 0x00	; 0
    108e:	30 06       	cpc	r3, r16
    1090:	01 e0       	ldi	r16, 0x01	; 1
    1092:	40 06       	cpc	r4, r16
    1094:	00 e0       	ldi	r16, 0x00	; 0
    1096:	50 06       	cpc	r5, r16
    1098:	88 f4       	brcc	.+34     	; 0x10bc <__umoddi3+0xf0>
    109a:	1f ef       	ldi	r17, 0xFF	; 255
    109c:	21 16       	cp	r2, r17
    109e:	31 04       	cpc	r3, r1
    10a0:	41 04       	cpc	r4, r1
    10a2:	51 04       	cpc	r5, r1
    10a4:	39 f0       	breq	.+14     	; 0x10b4 <__umoddi3+0xe8>
    10a6:	30 f0       	brcs	.+12     	; 0x10b4 <__umoddi3+0xe8>
    10a8:	88 e0       	ldi	r24, 0x08	; 8
    10aa:	e8 2e       	mov	r14, r24
    10ac:	f1 2c       	mov	r15, r1
    10ae:	01 2d       	mov	r16, r1
    10b0:	11 2d       	mov	r17, r1
    10b2:	18 c0       	rjmp	.+48     	; 0x10e4 <__umoddi3+0x118>
    10b4:	ee 24       	eor	r14, r14
    10b6:	ff 24       	eor	r15, r15
    10b8:	87 01       	movw	r16, r14
    10ba:	14 c0       	rjmp	.+40     	; 0x10e4 <__umoddi3+0x118>
    10bc:	40 e0       	ldi	r20, 0x00	; 0
    10be:	24 16       	cp	r2, r20
    10c0:	40 e0       	ldi	r20, 0x00	; 0
    10c2:	34 06       	cpc	r3, r20
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	44 06       	cpc	r4, r20
    10c8:	41 e0       	ldi	r20, 0x01	; 1
    10ca:	54 06       	cpc	r5, r20
    10cc:	30 f0       	brcs	.+12     	; 0x10da <__umoddi3+0x10e>
    10ce:	b8 e1       	ldi	r27, 0x18	; 24
    10d0:	eb 2e       	mov	r14, r27
    10d2:	f1 2c       	mov	r15, r1
    10d4:	01 2d       	mov	r16, r1
    10d6:	11 2d       	mov	r17, r1
    10d8:	05 c0       	rjmp	.+10     	; 0x10e4 <__umoddi3+0x118>
    10da:	a0 e1       	ldi	r26, 0x10	; 16
    10dc:	ea 2e       	mov	r14, r26
    10de:	f1 2c       	mov	r15, r1
    10e0:	01 2d       	mov	r16, r1
    10e2:	11 2d       	mov	r17, r1
    10e4:	d2 01       	movw	r26, r4
    10e6:	c1 01       	movw	r24, r2
    10e8:	0e 2c       	mov	r0, r14
    10ea:	04 c0       	rjmp	.+8      	; 0x10f4 <__umoddi3+0x128>
    10ec:	b6 95       	lsr	r27
    10ee:	a7 95       	ror	r26
    10f0:	97 95       	ror	r25
    10f2:	87 95       	ror	r24
    10f4:	0a 94       	dec	r0
    10f6:	d2 f7       	brpl	.-12     	; 0x10ec <__umoddi3+0x120>
    10f8:	83 59       	subi	r24, 0x93	; 147
    10fa:	9f 4f       	sbci	r25, 0xFF	; 255
    10fc:	dc 01       	movw	r26, r24
    10fe:	2c 91       	ld	r18, X
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	a0 e0       	ldi	r26, 0x00	; 0
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	8e 19       	sub	r24, r14
    110a:	9f 09       	sbc	r25, r15
    110c:	a0 0b       	sbc	r26, r16
    110e:	b1 0b       	sbc	r27, r17
    1110:	5c 01       	movw	r10, r24
    1112:	6d 01       	movw	r12, r26
    1114:	a2 1a       	sub	r10, r18
    1116:	b1 08       	sbc	r11, r1
    1118:	c1 08       	sbc	r12, r1
    111a:	d1 08       	sbc	r13, r1
    111c:	a9 ae       	std	Y+57, r10	; 0x39
    111e:	ba ae       	std	Y+58, r11	; 0x3a
    1120:	cb ae       	std	Y+59, r12	; 0x3b
    1122:	dc ae       	std	Y+60, r13	; 0x3c
    1124:	a1 14       	cp	r10, r1
    1126:	b1 04       	cpc	r11, r1
    1128:	c1 04       	cpc	r12, r1
    112a:	d1 04       	cpc	r13, r1
    112c:	09 f4       	brne	.+2      	; 0x1130 <__umoddi3+0x164>
    112e:	3f c0       	rjmp	.+126    	; 0x11ae <__umoddi3+0x1e2>
    1130:	69 ad       	ldd	r22, Y+57	; 0x39
    1132:	06 2e       	mov	r0, r22
    1134:	04 c0       	rjmp	.+8      	; 0x113e <__umoddi3+0x172>
    1136:	22 0c       	add	r2, r2
    1138:	33 1c       	adc	r3, r3
    113a:	44 1c       	adc	r4, r4
    113c:	55 1c       	adc	r5, r5
    113e:	0a 94       	dec	r0
    1140:	d2 f7       	brpl	.-12     	; 0x1136 <__umoddi3+0x16a>
    1142:	a4 01       	movw	r20, r8
    1144:	93 01       	movw	r18, r6
    1146:	06 2e       	mov	r0, r22
    1148:	04 c0       	rjmp	.+8      	; 0x1152 <__umoddi3+0x186>
    114a:	22 0f       	add	r18, r18
    114c:	33 1f       	adc	r19, r19
    114e:	44 1f       	adc	r20, r20
    1150:	55 1f       	adc	r21, r21
    1152:	0a 94       	dec	r0
    1154:	d2 f7       	brpl	.-12     	; 0x114a <__umoddi3+0x17e>
    1156:	80 e2       	ldi	r24, 0x20	; 32
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	8a 19       	sub	r24, r10
    115c:	9b 09       	sbc	r25, r11
    115e:	6c 96       	adiw	r28, 0x1c	; 28
    1160:	cc ac       	ldd	r12, Y+60	; 0x3c
    1162:	dd ac       	ldd	r13, Y+61	; 0x3d
    1164:	ee ac       	ldd	r14, Y+62	; 0x3e
    1166:	ff ac       	ldd	r15, Y+63	; 0x3f
    1168:	6c 97       	sbiw	r28, 0x1c	; 28
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <__umoddi3+0x1a8>
    116c:	f6 94       	lsr	r15
    116e:	e7 94       	ror	r14
    1170:	d7 94       	ror	r13
    1172:	c7 94       	ror	r12
    1174:	8a 95       	dec	r24
    1176:	d2 f7       	brpl	.-12     	; 0x116c <__umoddi3+0x1a0>
    1178:	87 01       	movw	r16, r14
    117a:	76 01       	movw	r14, r12
    117c:	e2 2a       	or	r14, r18
    117e:	f3 2a       	or	r15, r19
    1180:	04 2b       	or	r16, r20
    1182:	15 2b       	or	r17, r21
    1184:	ed aa       	std	Y+53, r14	; 0x35
    1186:	fe aa       	std	Y+54, r15	; 0x36
    1188:	0f ab       	std	Y+55, r16	; 0x37
    118a:	18 af       	std	Y+56, r17	; 0x38
    118c:	6c 96       	adiw	r28, 0x1c	; 28
    118e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1190:	9d ad       	ldd	r25, Y+61	; 0x3d
    1192:	ae ad       	ldd	r26, Y+62	; 0x3e
    1194:	bf ad       	ldd	r27, Y+63	; 0x3f
    1196:	6c 97       	sbiw	r28, 0x1c	; 28
    1198:	04 c0       	rjmp	.+8      	; 0x11a2 <__umoddi3+0x1d6>
    119a:	88 0f       	add	r24, r24
    119c:	99 1f       	adc	r25, r25
    119e:	aa 1f       	adc	r26, r26
    11a0:	bb 1f       	adc	r27, r27
    11a2:	6a 95       	dec	r22
    11a4:	d2 f7       	brpl	.-12     	; 0x119a <__umoddi3+0x1ce>
    11a6:	89 ab       	std	Y+49, r24	; 0x31
    11a8:	9a ab       	std	Y+50, r25	; 0x32
    11aa:	ab ab       	std	Y+51, r26	; 0x33
    11ac:	bc ab       	std	Y+52, r27	; 0x34
    11ae:	32 01       	movw	r6, r4
    11b0:	88 24       	eor	r8, r8
    11b2:	99 24       	eor	r9, r9
    11b4:	b2 01       	movw	r22, r4
    11b6:	a1 01       	movw	r20, r2
    11b8:	60 70       	andi	r22, 0x00	; 0
    11ba:	70 70       	andi	r23, 0x00	; 0
    11bc:	21 96       	adiw	r28, 0x01	; 1
    11be:	4c af       	std	Y+60, r20	; 0x3c
    11c0:	5d af       	std	Y+61, r21	; 0x3d
    11c2:	6e af       	std	Y+62, r22	; 0x3e
    11c4:	7f af       	std	Y+63, r23	; 0x3f
    11c6:	21 97       	sbiw	r28, 0x01	; 1
    11c8:	6d a9       	ldd	r22, Y+53	; 0x35
    11ca:	7e a9       	ldd	r23, Y+54	; 0x36
    11cc:	8f a9       	ldd	r24, Y+55	; 0x37
    11ce:	98 ad       	ldd	r25, Y+56	; 0x38
    11d0:	a4 01       	movw	r20, r8
    11d2:	93 01       	movw	r18, r6
    11d4:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    11d8:	7b 01       	movw	r14, r22
    11da:	8c 01       	movw	r16, r24
    11dc:	6d a9       	ldd	r22, Y+53	; 0x35
    11de:	7e a9       	ldd	r23, Y+54	; 0x36
    11e0:	8f a9       	ldd	r24, Y+55	; 0x37
    11e2:	98 ad       	ldd	r25, Y+56	; 0x38
    11e4:	a4 01       	movw	r20, r8
    11e6:	93 01       	movw	r18, r6
    11e8:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    11ec:	ca 01       	movw	r24, r20
    11ee:	b9 01       	movw	r22, r18
    11f0:	21 96       	adiw	r28, 0x01	; 1
    11f2:	2c ad       	ldd	r18, Y+60	; 0x3c
    11f4:	3d ad       	ldd	r19, Y+61	; 0x3d
    11f6:	4e ad       	ldd	r20, Y+62	; 0x3e
    11f8:	5f ad       	ldd	r21, Y+63	; 0x3f
    11fa:	21 97       	sbiw	r28, 0x01	; 1
    11fc:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1200:	9b 01       	movw	r18, r22
    1202:	ac 01       	movw	r20, r24
    1204:	87 01       	movw	r16, r14
    1206:	ff 24       	eor	r15, r15
    1208:	ee 24       	eor	r14, r14
    120a:	a9 a8       	ldd	r10, Y+49	; 0x31
    120c:	ba a8       	ldd	r11, Y+50	; 0x32
    120e:	cb a8       	ldd	r12, Y+51	; 0x33
    1210:	dc a8       	ldd	r13, Y+52	; 0x34
    1212:	c6 01       	movw	r24, r12
    1214:	aa 27       	eor	r26, r26
    1216:	bb 27       	eor	r27, r27
    1218:	57 01       	movw	r10, r14
    121a:	68 01       	movw	r12, r16
    121c:	a8 2a       	or	r10, r24
    121e:	b9 2a       	or	r11, r25
    1220:	ca 2a       	or	r12, r26
    1222:	db 2a       	or	r13, r27
    1224:	a2 16       	cp	r10, r18
    1226:	b3 06       	cpc	r11, r19
    1228:	c4 06       	cpc	r12, r20
    122a:	d5 06       	cpc	r13, r21
    122c:	90 f4       	brcc	.+36     	; 0x1252 <__umoddi3+0x286>
    122e:	a2 0c       	add	r10, r2
    1230:	b3 1c       	adc	r11, r3
    1232:	c4 1c       	adc	r12, r4
    1234:	d5 1c       	adc	r13, r5
    1236:	a2 14       	cp	r10, r2
    1238:	b3 04       	cpc	r11, r3
    123a:	c4 04       	cpc	r12, r4
    123c:	d5 04       	cpc	r13, r5
    123e:	48 f0       	brcs	.+18     	; 0x1252 <__umoddi3+0x286>
    1240:	a2 16       	cp	r10, r18
    1242:	b3 06       	cpc	r11, r19
    1244:	c4 06       	cpc	r12, r20
    1246:	d5 06       	cpc	r13, r21
    1248:	20 f4       	brcc	.+8      	; 0x1252 <__umoddi3+0x286>
    124a:	a2 0c       	add	r10, r2
    124c:	b3 1c       	adc	r11, r3
    124e:	c4 1c       	adc	r12, r4
    1250:	d5 1c       	adc	r13, r5
    1252:	a2 1a       	sub	r10, r18
    1254:	b3 0a       	sbc	r11, r19
    1256:	c4 0a       	sbc	r12, r20
    1258:	d5 0a       	sbc	r13, r21
    125a:	c6 01       	movw	r24, r12
    125c:	b5 01       	movw	r22, r10
    125e:	a4 01       	movw	r20, r8
    1260:	93 01       	movw	r18, r6
    1262:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1266:	7b 01       	movw	r14, r22
    1268:	8c 01       	movw	r16, r24
    126a:	c6 01       	movw	r24, r12
    126c:	b5 01       	movw	r22, r10
    126e:	a4 01       	movw	r20, r8
    1270:	93 01       	movw	r18, r6
    1272:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1276:	ca 01       	movw	r24, r20
    1278:	b9 01       	movw	r22, r18
    127a:	21 96       	adiw	r28, 0x01	; 1
    127c:	2c ad       	ldd	r18, Y+60	; 0x3c
    127e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1280:	4e ad       	ldd	r20, Y+62	; 0x3e
    1282:	5f ad       	ldd	r21, Y+63	; 0x3f
    1284:	21 97       	sbiw	r28, 0x01	; 1
    1286:	ba c1       	rjmp	.+884    	; 0x15fc <__umoddi3+0x630>
    1288:	21 14       	cp	r2, r1
    128a:	31 04       	cpc	r3, r1
    128c:	41 04       	cpc	r4, r1
    128e:	51 04       	cpc	r5, r1
    1290:	71 f4       	brne	.+28     	; 0x12ae <__umoddi3+0x2e2>
    1292:	61 e0       	ldi	r22, 0x01	; 1
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	50 e0       	ldi	r21, 0x00	; 0
    12a2:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    12a6:	c9 01       	movw	r24, r18
    12a8:	da 01       	movw	r26, r20
    12aa:	1c 01       	movw	r2, r24
    12ac:	2d 01       	movw	r4, r26
    12ae:	00 e0       	ldi	r16, 0x00	; 0
    12b0:	20 16       	cp	r2, r16
    12b2:	00 e0       	ldi	r16, 0x00	; 0
    12b4:	30 06       	cpc	r3, r16
    12b6:	01 e0       	ldi	r16, 0x01	; 1
    12b8:	40 06       	cpc	r4, r16
    12ba:	00 e0       	ldi	r16, 0x00	; 0
    12bc:	50 06       	cpc	r5, r16
    12be:	88 f4       	brcc	.+34     	; 0x12e2 <__umoddi3+0x316>
    12c0:	1f ef       	ldi	r17, 0xFF	; 255
    12c2:	21 16       	cp	r2, r17
    12c4:	31 04       	cpc	r3, r1
    12c6:	41 04       	cpc	r4, r1
    12c8:	51 04       	cpc	r5, r1
    12ca:	39 f0       	breq	.+14     	; 0x12da <__umoddi3+0x30e>
    12cc:	30 f0       	brcs	.+12     	; 0x12da <__umoddi3+0x30e>
    12ce:	68 e0       	ldi	r22, 0x08	; 8
    12d0:	e6 2e       	mov	r14, r22
    12d2:	f1 2c       	mov	r15, r1
    12d4:	01 2d       	mov	r16, r1
    12d6:	11 2d       	mov	r17, r1
    12d8:	18 c0       	rjmp	.+48     	; 0x130a <__umoddi3+0x33e>
    12da:	ee 24       	eor	r14, r14
    12dc:	ff 24       	eor	r15, r15
    12de:	87 01       	movw	r16, r14
    12e0:	14 c0       	rjmp	.+40     	; 0x130a <__umoddi3+0x33e>
    12e2:	40 e0       	ldi	r20, 0x00	; 0
    12e4:	24 16       	cp	r2, r20
    12e6:	40 e0       	ldi	r20, 0x00	; 0
    12e8:	34 06       	cpc	r3, r20
    12ea:	40 e0       	ldi	r20, 0x00	; 0
    12ec:	44 06       	cpc	r4, r20
    12ee:	41 e0       	ldi	r20, 0x01	; 1
    12f0:	54 06       	cpc	r5, r20
    12f2:	30 f0       	brcs	.+12     	; 0x1300 <__umoddi3+0x334>
    12f4:	58 e1       	ldi	r21, 0x18	; 24
    12f6:	e5 2e       	mov	r14, r21
    12f8:	f1 2c       	mov	r15, r1
    12fa:	01 2d       	mov	r16, r1
    12fc:	11 2d       	mov	r17, r1
    12fe:	05 c0       	rjmp	.+10     	; 0x130a <__umoddi3+0x33e>
    1300:	40 e1       	ldi	r20, 0x10	; 16
    1302:	e4 2e       	mov	r14, r20
    1304:	f1 2c       	mov	r15, r1
    1306:	01 2d       	mov	r16, r1
    1308:	11 2d       	mov	r17, r1
    130a:	d2 01       	movw	r26, r4
    130c:	c1 01       	movw	r24, r2
    130e:	0e 2c       	mov	r0, r14
    1310:	04 c0       	rjmp	.+8      	; 0x131a <__umoddi3+0x34e>
    1312:	b6 95       	lsr	r27
    1314:	a7 95       	ror	r26
    1316:	97 95       	ror	r25
    1318:	87 95       	ror	r24
    131a:	0a 94       	dec	r0
    131c:	d2 f7       	brpl	.-12     	; 0x1312 <__umoddi3+0x346>
    131e:	83 59       	subi	r24, 0x93	; 147
    1320:	9f 4f       	sbci	r25, 0xFF	; 255
    1322:	dc 01       	movw	r26, r24
    1324:	2c 91       	ld	r18, X
    1326:	30 e2       	ldi	r19, 0x20	; 32
    1328:	a3 2e       	mov	r10, r19
    132a:	b1 2c       	mov	r11, r1
    132c:	c1 2c       	mov	r12, r1
    132e:	d1 2c       	mov	r13, r1
    1330:	d6 01       	movw	r26, r12
    1332:	c5 01       	movw	r24, r10
    1334:	8e 19       	sub	r24, r14
    1336:	9f 09       	sbc	r25, r15
    1338:	a0 0b       	sbc	r26, r16
    133a:	b1 0b       	sbc	r27, r17
    133c:	7c 01       	movw	r14, r24
    133e:	8d 01       	movw	r16, r26
    1340:	e2 1a       	sub	r14, r18
    1342:	f1 08       	sbc	r15, r1
    1344:	01 09       	sbc	r16, r1
    1346:	11 09       	sbc	r17, r1
    1348:	e9 ae       	std	Y+57, r14	; 0x39
    134a:	fa ae       	std	Y+58, r15	; 0x3a
    134c:	0b af       	std	Y+59, r16	; 0x3b
    134e:	1c af       	std	Y+60, r17	; 0x3c
    1350:	e1 14       	cp	r14, r1
    1352:	f1 04       	cpc	r15, r1
    1354:	01 05       	cpc	r16, r1
    1356:	11 05       	cpc	r17, r1
    1358:	39 f4       	brne	.+14     	; 0x1368 <__umoddi3+0x39c>
    135a:	64 01       	movw	r12, r8
    135c:	53 01       	movw	r10, r6
    135e:	a2 18       	sub	r10, r2
    1360:	b3 08       	sbc	r11, r3
    1362:	c4 08       	sbc	r12, r4
    1364:	d5 08       	sbc	r13, r5
    1366:	e2 c0       	rjmp	.+452    	; 0x152c <__umoddi3+0x560>
    1368:	f9 ac       	ldd	r15, Y+57	; 0x39
    136a:	68 96       	adiw	r28, 0x18	; 24
    136c:	ff ae       	std	Y+63, r15	; 0x3f
    136e:	68 97       	sbiw	r28, 0x18	; 24
    1370:	0f 2c       	mov	r0, r15
    1372:	04 c0       	rjmp	.+8      	; 0x137c <__umoddi3+0x3b0>
    1374:	22 0c       	add	r2, r2
    1376:	33 1c       	adc	r3, r3
    1378:	44 1c       	adc	r4, r4
    137a:	55 1c       	adc	r5, r5
    137c:	0a 94       	dec	r0
    137e:	d2 f7       	brpl	.-12     	; 0x1374 <__umoddi3+0x3a8>
    1380:	8a 2d       	mov	r24, r10
    1382:	8f 19       	sub	r24, r15
    1384:	64 01       	movw	r12, r8
    1386:	53 01       	movw	r10, r6
    1388:	08 2e       	mov	r0, r24
    138a:	04 c0       	rjmp	.+8      	; 0x1394 <__umoddi3+0x3c8>
    138c:	d6 94       	lsr	r13
    138e:	c7 94       	ror	r12
    1390:	b7 94       	ror	r11
    1392:	a7 94       	ror	r10
    1394:	0a 94       	dec	r0
    1396:	d2 f7       	brpl	.-12     	; 0x138c <__umoddi3+0x3c0>
    1398:	a4 01       	movw	r20, r8
    139a:	93 01       	movw	r18, r6
    139c:	04 c0       	rjmp	.+8      	; 0x13a6 <__umoddi3+0x3da>
    139e:	22 0f       	add	r18, r18
    13a0:	33 1f       	adc	r19, r19
    13a2:	44 1f       	adc	r20, r20
    13a4:	55 1f       	adc	r21, r21
    13a6:	fa 94       	dec	r15
    13a8:	d2 f7       	brpl	.-12     	; 0x139e <__umoddi3+0x3d2>
    13aa:	6c 96       	adiw	r28, 0x1c	; 28
    13ac:	6c ac       	ldd	r6, Y+60	; 0x3c
    13ae:	7d ac       	ldd	r7, Y+61	; 0x3d
    13b0:	8e ac       	ldd	r8, Y+62	; 0x3e
    13b2:	9f ac       	ldd	r9, Y+63	; 0x3f
    13b4:	6c 97       	sbiw	r28, 0x1c	; 28
    13b6:	04 c0       	rjmp	.+8      	; 0x13c0 <__umoddi3+0x3f4>
    13b8:	96 94       	lsr	r9
    13ba:	87 94       	ror	r8
    13bc:	77 94       	ror	r7
    13be:	67 94       	ror	r6
    13c0:	8a 95       	dec	r24
    13c2:	d2 f7       	brpl	.-12     	; 0x13b8 <__umoddi3+0x3ec>
    13c4:	84 01       	movw	r16, r8
    13c6:	73 01       	movw	r14, r6
    13c8:	e2 2a       	or	r14, r18
    13ca:	f3 2a       	or	r15, r19
    13cc:	04 2b       	or	r16, r20
    13ce:	15 2b       	or	r17, r21
    13d0:	ed a6       	std	Y+45, r14	; 0x2d
    13d2:	fe a6       	std	Y+46, r15	; 0x2e
    13d4:	0f a7       	std	Y+47, r16	; 0x2f
    13d6:	18 ab       	std	Y+48, r17	; 0x30
    13d8:	32 01       	movw	r6, r4
    13da:	88 24       	eor	r8, r8
    13dc:	99 24       	eor	r9, r9
    13de:	b2 01       	movw	r22, r4
    13e0:	a1 01       	movw	r20, r2
    13e2:	60 70       	andi	r22, 0x00	; 0
    13e4:	70 70       	andi	r23, 0x00	; 0
    13e6:	25 96       	adiw	r28, 0x05	; 5
    13e8:	4c af       	std	Y+60, r20	; 0x3c
    13ea:	5d af       	std	Y+61, r21	; 0x3d
    13ec:	6e af       	std	Y+62, r22	; 0x3e
    13ee:	7f af       	std	Y+63, r23	; 0x3f
    13f0:	25 97       	sbiw	r28, 0x05	; 5
    13f2:	c6 01       	movw	r24, r12
    13f4:	b5 01       	movw	r22, r10
    13f6:	a4 01       	movw	r20, r8
    13f8:	93 01       	movw	r18, r6
    13fa:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    13fe:	7b 01       	movw	r14, r22
    1400:	8c 01       	movw	r16, r24
    1402:	c6 01       	movw	r24, r12
    1404:	b5 01       	movw	r22, r10
    1406:	a4 01       	movw	r20, r8
    1408:	93 01       	movw	r18, r6
    140a:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    140e:	ca 01       	movw	r24, r20
    1410:	b9 01       	movw	r22, r18
    1412:	25 96       	adiw	r28, 0x05	; 5
    1414:	2c ad       	ldd	r18, Y+60	; 0x3c
    1416:	3d ad       	ldd	r19, Y+61	; 0x3d
    1418:	4e ad       	ldd	r20, Y+62	; 0x3e
    141a:	5f ad       	ldd	r21, Y+63	; 0x3f
    141c:	25 97       	sbiw	r28, 0x05	; 5
    141e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1422:	9b 01       	movw	r18, r22
    1424:	ac 01       	movw	r20, r24
    1426:	87 01       	movw	r16, r14
    1428:	ff 24       	eor	r15, r15
    142a:	ee 24       	eor	r14, r14
    142c:	ad a4       	ldd	r10, Y+45	; 0x2d
    142e:	be a4       	ldd	r11, Y+46	; 0x2e
    1430:	cf a4       	ldd	r12, Y+47	; 0x2f
    1432:	d8 a8       	ldd	r13, Y+48	; 0x30
    1434:	c6 01       	movw	r24, r12
    1436:	aa 27       	eor	r26, r26
    1438:	bb 27       	eor	r27, r27
    143a:	5c 01       	movw	r10, r24
    143c:	6d 01       	movw	r12, r26
    143e:	ae 28       	or	r10, r14
    1440:	bf 28       	or	r11, r15
    1442:	c0 2a       	or	r12, r16
    1444:	d1 2a       	or	r13, r17
    1446:	a2 16       	cp	r10, r18
    1448:	b3 06       	cpc	r11, r19
    144a:	c4 06       	cpc	r12, r20
    144c:	d5 06       	cpc	r13, r21
    144e:	90 f4       	brcc	.+36     	; 0x1474 <__umoddi3+0x4a8>
    1450:	a2 0c       	add	r10, r2
    1452:	b3 1c       	adc	r11, r3
    1454:	c4 1c       	adc	r12, r4
    1456:	d5 1c       	adc	r13, r5
    1458:	a2 14       	cp	r10, r2
    145a:	b3 04       	cpc	r11, r3
    145c:	c4 04       	cpc	r12, r4
    145e:	d5 04       	cpc	r13, r5
    1460:	48 f0       	brcs	.+18     	; 0x1474 <__umoddi3+0x4a8>
    1462:	a2 16       	cp	r10, r18
    1464:	b3 06       	cpc	r11, r19
    1466:	c4 06       	cpc	r12, r20
    1468:	d5 06       	cpc	r13, r21
    146a:	20 f4       	brcc	.+8      	; 0x1474 <__umoddi3+0x4a8>
    146c:	a2 0c       	add	r10, r2
    146e:	b3 1c       	adc	r11, r3
    1470:	c4 1c       	adc	r12, r4
    1472:	d5 1c       	adc	r13, r5
    1474:	a2 1a       	sub	r10, r18
    1476:	b3 0a       	sbc	r11, r19
    1478:	c4 0a       	sbc	r12, r20
    147a:	d5 0a       	sbc	r13, r21
    147c:	c6 01       	movw	r24, r12
    147e:	b5 01       	movw	r22, r10
    1480:	a4 01       	movw	r20, r8
    1482:	93 01       	movw	r18, r6
    1484:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1488:	7b 01       	movw	r14, r22
    148a:	8c 01       	movw	r16, r24
    148c:	c6 01       	movw	r24, r12
    148e:	b5 01       	movw	r22, r10
    1490:	a4 01       	movw	r20, r8
    1492:	93 01       	movw	r18, r6
    1494:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1498:	ca 01       	movw	r24, r20
    149a:	b9 01       	movw	r22, r18
    149c:	25 96       	adiw	r28, 0x05	; 5
    149e:	2c ad       	ldd	r18, Y+60	; 0x3c
    14a0:	3d ad       	ldd	r19, Y+61	; 0x3d
    14a2:	4e ad       	ldd	r20, Y+62	; 0x3e
    14a4:	5f ad       	ldd	r21, Y+63	; 0x3f
    14a6:	25 97       	sbiw	r28, 0x05	; 5
    14a8:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    14ac:	9b 01       	movw	r18, r22
    14ae:	ac 01       	movw	r20, r24
    14b0:	87 01       	movw	r16, r14
    14b2:	ff 24       	eor	r15, r15
    14b4:	ee 24       	eor	r14, r14
    14b6:	8d a5       	ldd	r24, Y+45	; 0x2d
    14b8:	9e a5       	ldd	r25, Y+46	; 0x2e
    14ba:	af a5       	ldd	r26, Y+47	; 0x2f
    14bc:	b8 a9       	ldd	r27, Y+48	; 0x30
    14be:	a0 70       	andi	r26, 0x00	; 0
    14c0:	b0 70       	andi	r27, 0x00	; 0
    14c2:	57 01       	movw	r10, r14
    14c4:	68 01       	movw	r12, r16
    14c6:	a8 2a       	or	r10, r24
    14c8:	b9 2a       	or	r11, r25
    14ca:	ca 2a       	or	r12, r26
    14cc:	db 2a       	or	r13, r27
    14ce:	a2 16       	cp	r10, r18
    14d0:	b3 06       	cpc	r11, r19
    14d2:	c4 06       	cpc	r12, r20
    14d4:	d5 06       	cpc	r13, r21
    14d6:	90 f4       	brcc	.+36     	; 0x14fc <__umoddi3+0x530>
    14d8:	a2 0c       	add	r10, r2
    14da:	b3 1c       	adc	r11, r3
    14dc:	c4 1c       	adc	r12, r4
    14de:	d5 1c       	adc	r13, r5
    14e0:	a2 14       	cp	r10, r2
    14e2:	b3 04       	cpc	r11, r3
    14e4:	c4 04       	cpc	r12, r4
    14e6:	d5 04       	cpc	r13, r5
    14e8:	48 f0       	brcs	.+18     	; 0x14fc <__umoddi3+0x530>
    14ea:	a2 16       	cp	r10, r18
    14ec:	b3 06       	cpc	r11, r19
    14ee:	c4 06       	cpc	r12, r20
    14f0:	d5 06       	cpc	r13, r21
    14f2:	20 f4       	brcc	.+8      	; 0x14fc <__umoddi3+0x530>
    14f4:	a2 0c       	add	r10, r2
    14f6:	b3 1c       	adc	r11, r3
    14f8:	c4 1c       	adc	r12, r4
    14fa:	d5 1c       	adc	r13, r5
    14fc:	6c 96       	adiw	r28, 0x1c	; 28
    14fe:	ec ac       	ldd	r14, Y+60	; 0x3c
    1500:	fd ac       	ldd	r15, Y+61	; 0x3d
    1502:	0e ad       	ldd	r16, Y+62	; 0x3e
    1504:	1f ad       	ldd	r17, Y+63	; 0x3f
    1506:	6c 97       	sbiw	r28, 0x1c	; 28
    1508:	68 96       	adiw	r28, 0x18	; 24
    150a:	0f ac       	ldd	r0, Y+63	; 0x3f
    150c:	68 97       	sbiw	r28, 0x18	; 24
    150e:	04 c0       	rjmp	.+8      	; 0x1518 <__umoddi3+0x54c>
    1510:	ee 0c       	add	r14, r14
    1512:	ff 1c       	adc	r15, r15
    1514:	00 1f       	adc	r16, r16
    1516:	11 1f       	adc	r17, r17
    1518:	0a 94       	dec	r0
    151a:	d2 f7       	brpl	.-12     	; 0x1510 <__umoddi3+0x544>
    151c:	e9 aa       	std	Y+49, r14	; 0x31
    151e:	fa aa       	std	Y+50, r15	; 0x32
    1520:	0b ab       	std	Y+51, r16	; 0x33
    1522:	1c ab       	std	Y+52, r17	; 0x34
    1524:	a2 1a       	sub	r10, r18
    1526:	b3 0a       	sbc	r11, r19
    1528:	c4 0a       	sbc	r12, r20
    152a:	d5 0a       	sbc	r13, r21
    152c:	32 01       	movw	r6, r4
    152e:	88 24       	eor	r8, r8
    1530:	99 24       	eor	r9, r9
    1532:	b2 01       	movw	r22, r4
    1534:	a1 01       	movw	r20, r2
    1536:	60 70       	andi	r22, 0x00	; 0
    1538:	70 70       	andi	r23, 0x00	; 0
    153a:	29 96       	adiw	r28, 0x09	; 9
    153c:	4c af       	std	Y+60, r20	; 0x3c
    153e:	5d af       	std	Y+61, r21	; 0x3d
    1540:	6e af       	std	Y+62, r22	; 0x3e
    1542:	7f af       	std	Y+63, r23	; 0x3f
    1544:	29 97       	sbiw	r28, 0x09	; 9
    1546:	c6 01       	movw	r24, r12
    1548:	b5 01       	movw	r22, r10
    154a:	a4 01       	movw	r20, r8
    154c:	93 01       	movw	r18, r6
    154e:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1552:	7b 01       	movw	r14, r22
    1554:	8c 01       	movw	r16, r24
    1556:	c6 01       	movw	r24, r12
    1558:	b5 01       	movw	r22, r10
    155a:	a4 01       	movw	r20, r8
    155c:	93 01       	movw	r18, r6
    155e:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1562:	ca 01       	movw	r24, r20
    1564:	b9 01       	movw	r22, r18
    1566:	29 96       	adiw	r28, 0x09	; 9
    1568:	2c ad       	ldd	r18, Y+60	; 0x3c
    156a:	3d ad       	ldd	r19, Y+61	; 0x3d
    156c:	4e ad       	ldd	r20, Y+62	; 0x3e
    156e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1570:	29 97       	sbiw	r28, 0x09	; 9
    1572:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1576:	9b 01       	movw	r18, r22
    1578:	ac 01       	movw	r20, r24
    157a:	87 01       	movw	r16, r14
    157c:	ff 24       	eor	r15, r15
    157e:	ee 24       	eor	r14, r14
    1580:	a9 a8       	ldd	r10, Y+49	; 0x31
    1582:	ba a8       	ldd	r11, Y+50	; 0x32
    1584:	cb a8       	ldd	r12, Y+51	; 0x33
    1586:	dc a8       	ldd	r13, Y+52	; 0x34
    1588:	c6 01       	movw	r24, r12
    158a:	aa 27       	eor	r26, r26
    158c:	bb 27       	eor	r27, r27
    158e:	57 01       	movw	r10, r14
    1590:	68 01       	movw	r12, r16
    1592:	a8 2a       	or	r10, r24
    1594:	b9 2a       	or	r11, r25
    1596:	ca 2a       	or	r12, r26
    1598:	db 2a       	or	r13, r27
    159a:	a2 16       	cp	r10, r18
    159c:	b3 06       	cpc	r11, r19
    159e:	c4 06       	cpc	r12, r20
    15a0:	d5 06       	cpc	r13, r21
    15a2:	90 f4       	brcc	.+36     	; 0x15c8 <__umoddi3+0x5fc>
    15a4:	a2 0c       	add	r10, r2
    15a6:	b3 1c       	adc	r11, r3
    15a8:	c4 1c       	adc	r12, r4
    15aa:	d5 1c       	adc	r13, r5
    15ac:	a2 14       	cp	r10, r2
    15ae:	b3 04       	cpc	r11, r3
    15b0:	c4 04       	cpc	r12, r4
    15b2:	d5 04       	cpc	r13, r5
    15b4:	48 f0       	brcs	.+18     	; 0x15c8 <__umoddi3+0x5fc>
    15b6:	a2 16       	cp	r10, r18
    15b8:	b3 06       	cpc	r11, r19
    15ba:	c4 06       	cpc	r12, r20
    15bc:	d5 06       	cpc	r13, r21
    15be:	20 f4       	brcc	.+8      	; 0x15c8 <__umoddi3+0x5fc>
    15c0:	a2 0c       	add	r10, r2
    15c2:	b3 1c       	adc	r11, r3
    15c4:	c4 1c       	adc	r12, r4
    15c6:	d5 1c       	adc	r13, r5
    15c8:	a2 1a       	sub	r10, r18
    15ca:	b3 0a       	sbc	r11, r19
    15cc:	c4 0a       	sbc	r12, r20
    15ce:	d5 0a       	sbc	r13, r21
    15d0:	c6 01       	movw	r24, r12
    15d2:	b5 01       	movw	r22, r10
    15d4:	a4 01       	movw	r20, r8
    15d6:	93 01       	movw	r18, r6
    15d8:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    15dc:	7b 01       	movw	r14, r22
    15de:	8c 01       	movw	r16, r24
    15e0:	c6 01       	movw	r24, r12
    15e2:	b5 01       	movw	r22, r10
    15e4:	a4 01       	movw	r20, r8
    15e6:	93 01       	movw	r18, r6
    15e8:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    15ec:	ca 01       	movw	r24, r20
    15ee:	b9 01       	movw	r22, r18
    15f0:	29 96       	adiw	r28, 0x09	; 9
    15f2:	2c ad       	ldd	r18, Y+60	; 0x3c
    15f4:	3d ad       	ldd	r19, Y+61	; 0x3d
    15f6:	4e ad       	ldd	r20, Y+62	; 0x3e
    15f8:	5f ad       	ldd	r21, Y+63	; 0x3f
    15fa:	29 97       	sbiw	r28, 0x09	; 9
    15fc:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1600:	9b 01       	movw	r18, r22
    1602:	ac 01       	movw	r20, r24
    1604:	87 01       	movw	r16, r14
    1606:	ff 24       	eor	r15, r15
    1608:	ee 24       	eor	r14, r14
    160a:	89 a9       	ldd	r24, Y+49	; 0x31
    160c:	9a a9       	ldd	r25, Y+50	; 0x32
    160e:	ab a9       	ldd	r26, Y+51	; 0x33
    1610:	bc a9       	ldd	r27, Y+52	; 0x34
    1612:	a0 70       	andi	r26, 0x00	; 0
    1614:	b0 70       	andi	r27, 0x00	; 0
    1616:	e8 2a       	or	r14, r24
    1618:	f9 2a       	or	r15, r25
    161a:	0a 2b       	or	r16, r26
    161c:	1b 2b       	or	r17, r27
    161e:	e2 16       	cp	r14, r18
    1620:	f3 06       	cpc	r15, r19
    1622:	04 07       	cpc	r16, r20
    1624:	15 07       	cpc	r17, r21
    1626:	90 f4       	brcc	.+36     	; 0x164c <__umoddi3+0x680>
    1628:	e2 0c       	add	r14, r2
    162a:	f3 1c       	adc	r15, r3
    162c:	04 1d       	adc	r16, r4
    162e:	15 1d       	adc	r17, r5
    1630:	e2 14       	cp	r14, r2
    1632:	f3 04       	cpc	r15, r3
    1634:	04 05       	cpc	r16, r4
    1636:	15 05       	cpc	r17, r5
    1638:	48 f0       	brcs	.+18     	; 0x164c <__umoddi3+0x680>
    163a:	e2 16       	cp	r14, r18
    163c:	f3 06       	cpc	r15, r19
    163e:	04 07       	cpc	r16, r20
    1640:	15 07       	cpc	r17, r21
    1642:	20 f4       	brcc	.+8      	; 0x164c <__umoddi3+0x680>
    1644:	e2 0c       	add	r14, r2
    1646:	f3 1c       	adc	r15, r3
    1648:	04 1d       	adc	r16, r4
    164a:	15 1d       	adc	r17, r5
    164c:	e2 1a       	sub	r14, r18
    164e:	f3 0a       	sbc	r15, r19
    1650:	04 0b       	sbc	r16, r20
    1652:	15 0b       	sbc	r17, r21
    1654:	d8 01       	movw	r26, r16
    1656:	c7 01       	movw	r24, r14
    1658:	09 ac       	ldd	r0, Y+57	; 0x39
    165a:	04 c0       	rjmp	.+8      	; 0x1664 <__umoddi3+0x698>
    165c:	b6 95       	lsr	r27
    165e:	a7 95       	ror	r26
    1660:	97 95       	ror	r25
    1662:	87 95       	ror	r24
    1664:	0a 94       	dec	r0
    1666:	d2 f7       	brpl	.-12     	; 0x165c <__umoddi3+0x690>
    1668:	89 8b       	std	Y+17, r24	; 0x11
    166a:	9a 8b       	std	Y+18, r25	; 0x12
    166c:	ab 8b       	std	Y+19, r26	; 0x13
    166e:	bc 8b       	std	Y+20, r27	; 0x14
    1670:	1d 8a       	std	Y+21, r1	; 0x15
    1672:	1e 8a       	std	Y+22, r1	; 0x16
    1674:	1f 8a       	std	Y+23, r1	; 0x17
    1676:	18 8e       	std	Y+24, r1	; 0x18
    1678:	28 2f       	mov	r18, r24
    167a:	3a 89       	ldd	r19, Y+18	; 0x12
    167c:	4b 89       	ldd	r20, Y+19	; 0x13
    167e:	5c 89       	ldd	r21, Y+20	; 0x14
    1680:	6d 89       	ldd	r22, Y+21	; 0x15
    1682:	0c c3       	rjmp	.+1560   	; 0x1c9c <__umoddi3+0xcd0>
    1684:	6a 14       	cp	r6, r10
    1686:	7b 04       	cpc	r7, r11
    1688:	8c 04       	cpc	r8, r12
    168a:	9d 04       	cpc	r9, r13
    168c:	08 f4       	brcc	.+2      	; 0x1690 <__umoddi3+0x6c4>
    168e:	09 c3       	rjmp	.+1554   	; 0x1ca2 <__umoddi3+0xcd6>
    1690:	00 e0       	ldi	r16, 0x00	; 0
    1692:	a0 16       	cp	r10, r16
    1694:	00 e0       	ldi	r16, 0x00	; 0
    1696:	b0 06       	cpc	r11, r16
    1698:	01 e0       	ldi	r16, 0x01	; 1
    169a:	c0 06       	cpc	r12, r16
    169c:	00 e0       	ldi	r16, 0x00	; 0
    169e:	d0 06       	cpc	r13, r16
    16a0:	88 f4       	brcc	.+34     	; 0x16c4 <__umoddi3+0x6f8>
    16a2:	1f ef       	ldi	r17, 0xFF	; 255
    16a4:	a1 16       	cp	r10, r17
    16a6:	b1 04       	cpc	r11, r1
    16a8:	c1 04       	cpc	r12, r1
    16aa:	d1 04       	cpc	r13, r1
    16ac:	39 f0       	breq	.+14     	; 0x16bc <__umoddi3+0x6f0>
    16ae:	30 f0       	brcs	.+12     	; 0x16bc <__umoddi3+0x6f0>
    16b0:	28 e0       	ldi	r18, 0x08	; 8
    16b2:	e2 2e       	mov	r14, r18
    16b4:	f1 2c       	mov	r15, r1
    16b6:	01 2d       	mov	r16, r1
    16b8:	11 2d       	mov	r17, r1
    16ba:	18 c0       	rjmp	.+48     	; 0x16ec <__umoddi3+0x720>
    16bc:	ee 24       	eor	r14, r14
    16be:	ff 24       	eor	r15, r15
    16c0:	87 01       	movw	r16, r14
    16c2:	14 c0       	rjmp	.+40     	; 0x16ec <__umoddi3+0x720>
    16c4:	40 e0       	ldi	r20, 0x00	; 0
    16c6:	a4 16       	cp	r10, r20
    16c8:	40 e0       	ldi	r20, 0x00	; 0
    16ca:	b4 06       	cpc	r11, r20
    16cc:	40 e0       	ldi	r20, 0x00	; 0
    16ce:	c4 06       	cpc	r12, r20
    16d0:	41 e0       	ldi	r20, 0x01	; 1
    16d2:	d4 06       	cpc	r13, r20
    16d4:	30 f0       	brcs	.+12     	; 0x16e2 <__umoddi3+0x716>
    16d6:	98 e1       	ldi	r25, 0x18	; 24
    16d8:	e9 2e       	mov	r14, r25
    16da:	f1 2c       	mov	r15, r1
    16dc:	01 2d       	mov	r16, r1
    16de:	11 2d       	mov	r17, r1
    16e0:	05 c0       	rjmp	.+10     	; 0x16ec <__umoddi3+0x720>
    16e2:	80 e1       	ldi	r24, 0x10	; 16
    16e4:	e8 2e       	mov	r14, r24
    16e6:	f1 2c       	mov	r15, r1
    16e8:	01 2d       	mov	r16, r1
    16ea:	11 2d       	mov	r17, r1
    16ec:	d6 01       	movw	r26, r12
    16ee:	c5 01       	movw	r24, r10
    16f0:	0e 2c       	mov	r0, r14
    16f2:	04 c0       	rjmp	.+8      	; 0x16fc <__umoddi3+0x730>
    16f4:	b6 95       	lsr	r27
    16f6:	a7 95       	ror	r26
    16f8:	97 95       	ror	r25
    16fa:	87 95       	ror	r24
    16fc:	0a 94       	dec	r0
    16fe:	d2 f7       	brpl	.-12     	; 0x16f4 <__umoddi3+0x728>
    1700:	83 59       	subi	r24, 0x93	; 147
    1702:	9f 4f       	sbci	r25, 0xFF	; 255
    1704:	dc 01       	movw	r26, r24
    1706:	2c 91       	ld	r18, X
    1708:	80 e2       	ldi	r24, 0x20	; 32
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	a0 e0       	ldi	r26, 0x00	; 0
    170e:	b0 e0       	ldi	r27, 0x00	; 0
    1710:	8e 19       	sub	r24, r14
    1712:	9f 09       	sbc	r25, r15
    1714:	a0 0b       	sbc	r26, r16
    1716:	b1 0b       	sbc	r27, r17
    1718:	82 1b       	sub	r24, r18
    171a:	91 09       	sbc	r25, r1
    171c:	a1 09       	sbc	r26, r1
    171e:	b1 09       	sbc	r27, r1
    1720:	00 97       	sbiw	r24, 0x00	; 0
    1722:	a1 05       	cpc	r26, r1
    1724:	b1 05       	cpc	r27, r1
    1726:	09 f0       	breq	.+2      	; 0x172a <__umoddi3+0x75e>
    1728:	4f c0       	rjmp	.+158    	; 0x17c8 <__umoddi3+0x7fc>
    172a:	a6 14       	cp	r10, r6
    172c:	b7 04       	cpc	r11, r7
    172e:	c8 04       	cpc	r12, r8
    1730:	d9 04       	cpc	r13, r9
    1732:	58 f0       	brcs	.+22     	; 0x174a <__umoddi3+0x77e>
    1734:	6c 96       	adiw	r28, 0x1c	; 28
    1736:	ec ac       	ldd	r14, Y+60	; 0x3c
    1738:	fd ac       	ldd	r15, Y+61	; 0x3d
    173a:	0e ad       	ldd	r16, Y+62	; 0x3e
    173c:	1f ad       	ldd	r17, Y+63	; 0x3f
    173e:	6c 97       	sbiw	r28, 0x1c	; 28
    1740:	e2 14       	cp	r14, r2
    1742:	f3 04       	cpc	r15, r3
    1744:	04 05       	cpc	r16, r4
    1746:	15 05       	cpc	r17, r5
    1748:	68 f1       	brcs	.+90     	; 0x17a4 <__umoddi3+0x7d8>
    174a:	6c 96       	adiw	r28, 0x1c	; 28
    174c:	ec ac       	ldd	r14, Y+60	; 0x3c
    174e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1750:	0e ad       	ldd	r16, Y+62	; 0x3e
    1752:	1f ad       	ldd	r17, Y+63	; 0x3f
    1754:	6c 97       	sbiw	r28, 0x1c	; 28
    1756:	e2 18       	sub	r14, r2
    1758:	f3 08       	sbc	r15, r3
    175a:	04 09       	sbc	r16, r4
    175c:	15 09       	sbc	r17, r5
    175e:	a4 01       	movw	r20, r8
    1760:	93 01       	movw	r18, r6
    1762:	2a 19       	sub	r18, r10
    1764:	3b 09       	sbc	r19, r11
    1766:	4c 09       	sbc	r20, r12
    1768:	5d 09       	sbc	r21, r13
    176a:	aa 24       	eor	r10, r10
    176c:	bb 24       	eor	r11, r11
    176e:	65 01       	movw	r12, r10
    1770:	6c 96       	adiw	r28, 0x1c	; 28
    1772:	6c ad       	ldd	r22, Y+60	; 0x3c
    1774:	7d ad       	ldd	r23, Y+61	; 0x3d
    1776:	8e ad       	ldd	r24, Y+62	; 0x3e
    1778:	9f ad       	ldd	r25, Y+63	; 0x3f
    177a:	6c 97       	sbiw	r28, 0x1c	; 28
    177c:	6e 15       	cp	r22, r14
    177e:	7f 05       	cpc	r23, r15
    1780:	80 07       	cpc	r24, r16
    1782:	91 07       	cpc	r25, r17
    1784:	28 f4       	brcc	.+10     	; 0x1790 <__umoddi3+0x7c4>
    1786:	b1 e0       	ldi	r27, 0x01	; 1
    1788:	ab 2e       	mov	r10, r27
    178a:	b1 2c       	mov	r11, r1
    178c:	c1 2c       	mov	r12, r1
    178e:	d1 2c       	mov	r13, r1
    1790:	da 01       	movw	r26, r20
    1792:	c9 01       	movw	r24, r18
    1794:	8a 19       	sub	r24, r10
    1796:	9b 09       	sbc	r25, r11
    1798:	ac 09       	sbc	r26, r12
    179a:	bd 09       	sbc	r27, r13
    179c:	8d ab       	std	Y+53, r24	; 0x35
    179e:	9e ab       	std	Y+54, r25	; 0x36
    17a0:	af ab       	std	Y+55, r26	; 0x37
    17a2:	b8 af       	std	Y+56, r27	; 0x38
    17a4:	e9 8a       	std	Y+17, r14	; 0x11
    17a6:	fa 8a       	std	Y+18, r15	; 0x12
    17a8:	0b 8b       	std	Y+19, r16	; 0x13
    17aa:	1c 8b       	std	Y+20, r17	; 0x14
    17ac:	6d a8       	ldd	r6, Y+53	; 0x35
    17ae:	7e a8       	ldd	r7, Y+54	; 0x36
    17b0:	8f a8       	ldd	r8, Y+55	; 0x37
    17b2:	98 ac       	ldd	r9, Y+56	; 0x38
    17b4:	6d 8a       	std	Y+21, r6	; 0x15
    17b6:	7e 8a       	std	Y+22, r7	; 0x16
    17b8:	8f 8a       	std	Y+23, r8	; 0x17
    17ba:	98 8e       	std	Y+24, r9	; 0x18
    17bc:	2e 2d       	mov	r18, r14
    17be:	3a 89       	ldd	r19, Y+18	; 0x12
    17c0:	4b 89       	ldd	r20, Y+19	; 0x13
    17c2:	5c 89       	ldd	r21, Y+20	; 0x14
    17c4:	6d a9       	ldd	r22, Y+53	; 0x35
    17c6:	6a c2       	rjmp	.+1236   	; 0x1c9c <__umoddi3+0xcd0>
    17c8:	67 96       	adiw	r28, 0x17	; 23
    17ca:	8f af       	std	Y+63, r24	; 0x3f
    17cc:	67 97       	sbiw	r28, 0x17	; 23
    17ce:	a6 01       	movw	r20, r12
    17d0:	95 01       	movw	r18, r10
    17d2:	08 2e       	mov	r0, r24
    17d4:	04 c0       	rjmp	.+8      	; 0x17de <__umoddi3+0x812>
    17d6:	22 0f       	add	r18, r18
    17d8:	33 1f       	adc	r19, r19
    17da:	44 1f       	adc	r20, r20
    17dc:	55 1f       	adc	r21, r21
    17de:	0a 94       	dec	r0
    17e0:	d2 f7       	brpl	.-12     	; 0x17d6 <__umoddi3+0x80a>
    17e2:	a0 e2       	ldi	r26, 0x20	; 32
    17e4:	aa 2e       	mov	r10, r26
    17e6:	a8 1a       	sub	r10, r24
    17e8:	66 96       	adiw	r28, 0x16	; 22
    17ea:	af ae       	std	Y+63, r10	; 0x3f
    17ec:	66 97       	sbiw	r28, 0x16	; 22
    17ee:	d2 01       	movw	r26, r4
    17f0:	c1 01       	movw	r24, r2
    17f2:	04 c0       	rjmp	.+8      	; 0x17fc <__umoddi3+0x830>
    17f4:	b6 95       	lsr	r27
    17f6:	a7 95       	ror	r26
    17f8:	97 95       	ror	r25
    17fa:	87 95       	ror	r24
    17fc:	aa 94       	dec	r10
    17fe:	d2 f7       	brpl	.-12     	; 0x17f4 <__umoddi3+0x828>
    1800:	6c 01       	movw	r12, r24
    1802:	7d 01       	movw	r14, r26
    1804:	c2 2a       	or	r12, r18
    1806:	d3 2a       	or	r13, r19
    1808:	e4 2a       	or	r14, r20
    180a:	f5 2a       	or	r15, r21
    180c:	c9 a6       	std	Y+41, r12	; 0x29
    180e:	da a6       	std	Y+42, r13	; 0x2a
    1810:	eb a6       	std	Y+43, r14	; 0x2b
    1812:	fc a6       	std	Y+44, r15	; 0x2c
    1814:	82 01       	movw	r16, r4
    1816:	71 01       	movw	r14, r2
    1818:	67 96       	adiw	r28, 0x17	; 23
    181a:	0f ac       	ldd	r0, Y+63	; 0x3f
    181c:	67 97       	sbiw	r28, 0x17	; 23
    181e:	04 c0       	rjmp	.+8      	; 0x1828 <__umoddi3+0x85c>
    1820:	ee 0c       	add	r14, r14
    1822:	ff 1c       	adc	r15, r15
    1824:	00 1f       	adc	r16, r16
    1826:	11 1f       	adc	r17, r17
    1828:	0a 94       	dec	r0
    182a:	d2 f7       	brpl	.-12     	; 0x1820 <__umoddi3+0x854>
    182c:	ed a2       	std	Y+37, r14	; 0x25
    182e:	fe a2       	std	Y+38, r15	; 0x26
    1830:	0f a3       	std	Y+39, r16	; 0x27
    1832:	18 a7       	std	Y+40, r17	; 0x28
    1834:	64 01       	movw	r12, r8
    1836:	53 01       	movw	r10, r6
    1838:	66 96       	adiw	r28, 0x16	; 22
    183a:	0f ac       	ldd	r0, Y+63	; 0x3f
    183c:	66 97       	sbiw	r28, 0x16	; 22
    183e:	04 c0       	rjmp	.+8      	; 0x1848 <__umoddi3+0x87c>
    1840:	d6 94       	lsr	r13
    1842:	c7 94       	ror	r12
    1844:	b7 94       	ror	r11
    1846:	a7 94       	ror	r10
    1848:	0a 94       	dec	r0
    184a:	d2 f7       	brpl	.-12     	; 0x1840 <__umoddi3+0x874>
    184c:	a4 01       	movw	r20, r8
    184e:	93 01       	movw	r18, r6
    1850:	67 96       	adiw	r28, 0x17	; 23
    1852:	0f ac       	ldd	r0, Y+63	; 0x3f
    1854:	67 97       	sbiw	r28, 0x17	; 23
    1856:	04 c0       	rjmp	.+8      	; 0x1860 <__umoddi3+0x894>
    1858:	22 0f       	add	r18, r18
    185a:	33 1f       	adc	r19, r19
    185c:	44 1f       	adc	r20, r20
    185e:	55 1f       	adc	r21, r21
    1860:	0a 94       	dec	r0
    1862:	d2 f7       	brpl	.-12     	; 0x1858 <__umoddi3+0x88c>
    1864:	6c 96       	adiw	r28, 0x1c	; 28
    1866:	8c ad       	ldd	r24, Y+60	; 0x3c
    1868:	9d ad       	ldd	r25, Y+61	; 0x3d
    186a:	ae ad       	ldd	r26, Y+62	; 0x3e
    186c:	bf ad       	ldd	r27, Y+63	; 0x3f
    186e:	6c 97       	sbiw	r28, 0x1c	; 28
    1870:	66 96       	adiw	r28, 0x16	; 22
    1872:	0f ac       	ldd	r0, Y+63	; 0x3f
    1874:	66 97       	sbiw	r28, 0x16	; 22
    1876:	04 c0       	rjmp	.+8      	; 0x1880 <__umoddi3+0x8b4>
    1878:	b6 95       	lsr	r27
    187a:	a7 95       	ror	r26
    187c:	97 95       	ror	r25
    187e:	87 95       	ror	r24
    1880:	0a 94       	dec	r0
    1882:	d2 f7       	brpl	.-12     	; 0x1878 <__umoddi3+0x8ac>
    1884:	3c 01       	movw	r6, r24
    1886:	4d 01       	movw	r8, r26
    1888:	62 2a       	or	r6, r18
    188a:	73 2a       	or	r7, r19
    188c:	84 2a       	or	r8, r20
    188e:	95 2a       	or	r9, r21
    1890:	69 a2       	std	Y+33, r6	; 0x21
    1892:	7a a2       	std	Y+34, r7	; 0x22
    1894:	8b a2       	std	Y+35, r8	; 0x23
    1896:	9c a2       	std	Y+36, r9	; 0x24
    1898:	6c 96       	adiw	r28, 0x1c	; 28
    189a:	ec ac       	ldd	r14, Y+60	; 0x3c
    189c:	fd ac       	ldd	r15, Y+61	; 0x3d
    189e:	0e ad       	ldd	r16, Y+62	; 0x3e
    18a0:	1f ad       	ldd	r17, Y+63	; 0x3f
    18a2:	6c 97       	sbiw	r28, 0x1c	; 28
    18a4:	67 96       	adiw	r28, 0x17	; 23
    18a6:	0f ac       	ldd	r0, Y+63	; 0x3f
    18a8:	67 97       	sbiw	r28, 0x17	; 23
    18aa:	04 c0       	rjmp	.+8      	; 0x18b4 <__umoddi3+0x8e8>
    18ac:	ee 0c       	add	r14, r14
    18ae:	ff 1c       	adc	r15, r15
    18b0:	00 1f       	adc	r16, r16
    18b2:	11 1f       	adc	r17, r17
    18b4:	0a 94       	dec	r0
    18b6:	d2 f7       	brpl	.-12     	; 0x18ac <__umoddi3+0x8e0>
    18b8:	ed 8e       	std	Y+29, r14	; 0x1d
    18ba:	fe 8e       	std	Y+30, r15	; 0x1e
    18bc:	0f 8f       	std	Y+31, r16	; 0x1f
    18be:	18 a3       	std	Y+32, r17	; 0x20
    18c0:	49 a5       	ldd	r20, Y+41	; 0x29
    18c2:	5a a5       	ldd	r21, Y+42	; 0x2a
    18c4:	6b a5       	ldd	r22, Y+43	; 0x2b
    18c6:	7c a5       	ldd	r23, Y+44	; 0x2c
    18c8:	3b 01       	movw	r6, r22
    18ca:	88 24       	eor	r8, r8
    18cc:	99 24       	eor	r9, r9
    18ce:	60 70       	andi	r22, 0x00	; 0
    18d0:	70 70       	andi	r23, 0x00	; 0
    18d2:	2d 96       	adiw	r28, 0x0d	; 13
    18d4:	4c af       	std	Y+60, r20	; 0x3c
    18d6:	5d af       	std	Y+61, r21	; 0x3d
    18d8:	6e af       	std	Y+62, r22	; 0x3e
    18da:	7f af       	std	Y+63, r23	; 0x3f
    18dc:	2d 97       	sbiw	r28, 0x0d	; 13
    18de:	c6 01       	movw	r24, r12
    18e0:	b5 01       	movw	r22, r10
    18e2:	a4 01       	movw	r20, r8
    18e4:	93 01       	movw	r18, r6
    18e6:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    18ea:	7b 01       	movw	r14, r22
    18ec:	8c 01       	movw	r16, r24
    18ee:	c6 01       	movw	r24, r12
    18f0:	b5 01       	movw	r22, r10
    18f2:	a4 01       	movw	r20, r8
    18f4:	93 01       	movw	r18, r6
    18f6:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    18fa:	c9 01       	movw	r24, r18
    18fc:	da 01       	movw	r26, r20
    18fe:	1c 01       	movw	r2, r24
    1900:	2d 01       	movw	r4, r26
    1902:	c2 01       	movw	r24, r4
    1904:	b1 01       	movw	r22, r2
    1906:	2d 96       	adiw	r28, 0x0d	; 13
    1908:	2c ad       	ldd	r18, Y+60	; 0x3c
    190a:	3d ad       	ldd	r19, Y+61	; 0x3d
    190c:	4e ad       	ldd	r20, Y+62	; 0x3e
    190e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1910:	2d 97       	sbiw	r28, 0x0d	; 13
    1912:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1916:	9b 01       	movw	r18, r22
    1918:	ac 01       	movw	r20, r24
    191a:	87 01       	movw	r16, r14
    191c:	ff 24       	eor	r15, r15
    191e:	ee 24       	eor	r14, r14
    1920:	a9 a0       	ldd	r10, Y+33	; 0x21
    1922:	ba a0       	ldd	r11, Y+34	; 0x22
    1924:	cb a0       	ldd	r12, Y+35	; 0x23
    1926:	dc a0       	ldd	r13, Y+36	; 0x24
    1928:	c6 01       	movw	r24, r12
    192a:	aa 27       	eor	r26, r26
    192c:	bb 27       	eor	r27, r27
    192e:	57 01       	movw	r10, r14
    1930:	68 01       	movw	r12, r16
    1932:	a8 2a       	or	r10, r24
    1934:	b9 2a       	or	r11, r25
    1936:	ca 2a       	or	r12, r26
    1938:	db 2a       	or	r13, r27
    193a:	a2 16       	cp	r10, r18
    193c:	b3 06       	cpc	r11, r19
    193e:	c4 06       	cpc	r12, r20
    1940:	d5 06       	cpc	r13, r21
    1942:	00 f5       	brcc	.+64     	; 0x1984 <__umoddi3+0x9b8>
    1944:	08 94       	sec
    1946:	21 08       	sbc	r2, r1
    1948:	31 08       	sbc	r3, r1
    194a:	41 08       	sbc	r4, r1
    194c:	51 08       	sbc	r5, r1
    194e:	e9 a4       	ldd	r14, Y+41	; 0x29
    1950:	fa a4       	ldd	r15, Y+42	; 0x2a
    1952:	0b a5       	ldd	r16, Y+43	; 0x2b
    1954:	1c a5       	ldd	r17, Y+44	; 0x2c
    1956:	ae 0c       	add	r10, r14
    1958:	bf 1c       	adc	r11, r15
    195a:	c0 1e       	adc	r12, r16
    195c:	d1 1e       	adc	r13, r17
    195e:	ae 14       	cp	r10, r14
    1960:	bf 04       	cpc	r11, r15
    1962:	c0 06       	cpc	r12, r16
    1964:	d1 06       	cpc	r13, r17
    1966:	70 f0       	brcs	.+28     	; 0x1984 <__umoddi3+0x9b8>
    1968:	a2 16       	cp	r10, r18
    196a:	b3 06       	cpc	r11, r19
    196c:	c4 06       	cpc	r12, r20
    196e:	d5 06       	cpc	r13, r21
    1970:	48 f4       	brcc	.+18     	; 0x1984 <__umoddi3+0x9b8>
    1972:	08 94       	sec
    1974:	21 08       	sbc	r2, r1
    1976:	31 08       	sbc	r3, r1
    1978:	41 08       	sbc	r4, r1
    197a:	51 08       	sbc	r5, r1
    197c:	ae 0c       	add	r10, r14
    197e:	bf 1c       	adc	r11, r15
    1980:	c0 1e       	adc	r12, r16
    1982:	d1 1e       	adc	r13, r17
    1984:	a2 1a       	sub	r10, r18
    1986:	b3 0a       	sbc	r11, r19
    1988:	c4 0a       	sbc	r12, r20
    198a:	d5 0a       	sbc	r13, r21
    198c:	c6 01       	movw	r24, r12
    198e:	b5 01       	movw	r22, r10
    1990:	a4 01       	movw	r20, r8
    1992:	93 01       	movw	r18, r6
    1994:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    1998:	7b 01       	movw	r14, r22
    199a:	8c 01       	movw	r16, r24
    199c:	c6 01       	movw	r24, r12
    199e:	b5 01       	movw	r22, r10
    19a0:	a4 01       	movw	r20, r8
    19a2:	93 01       	movw	r18, r6
    19a4:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <__udivmodsi4>
    19a8:	c9 01       	movw	r24, r18
    19aa:	da 01       	movw	r26, r20
    19ac:	3c 01       	movw	r6, r24
    19ae:	4d 01       	movw	r8, r26
    19b0:	c4 01       	movw	r24, r8
    19b2:	b3 01       	movw	r22, r6
    19b4:	2d 96       	adiw	r28, 0x0d	; 13
    19b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    19bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19be:	2d 97       	sbiw	r28, 0x0d	; 13
    19c0:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    19c4:	9b 01       	movw	r18, r22
    19c6:	ac 01       	movw	r20, r24
    19c8:	87 01       	movw	r16, r14
    19ca:	ff 24       	eor	r15, r15
    19cc:	ee 24       	eor	r14, r14
    19ce:	89 a1       	ldd	r24, Y+33	; 0x21
    19d0:	9a a1       	ldd	r25, Y+34	; 0x22
    19d2:	ab a1       	ldd	r26, Y+35	; 0x23
    19d4:	bc a1       	ldd	r27, Y+36	; 0x24
    19d6:	a0 70       	andi	r26, 0x00	; 0
    19d8:	b0 70       	andi	r27, 0x00	; 0
    19da:	57 01       	movw	r10, r14
    19dc:	68 01       	movw	r12, r16
    19de:	a8 2a       	or	r10, r24
    19e0:	b9 2a       	or	r11, r25
    19e2:	ca 2a       	or	r12, r26
    19e4:	db 2a       	or	r13, r27
    19e6:	a2 16       	cp	r10, r18
    19e8:	b3 06       	cpc	r11, r19
    19ea:	c4 06       	cpc	r12, r20
    19ec:	d5 06       	cpc	r13, r21
    19ee:	00 f5       	brcc	.+64     	; 0x1a30 <__umoddi3+0xa64>
    19f0:	08 94       	sec
    19f2:	61 08       	sbc	r6, r1
    19f4:	71 08       	sbc	r7, r1
    19f6:	81 08       	sbc	r8, r1
    19f8:	91 08       	sbc	r9, r1
    19fa:	69 a5       	ldd	r22, Y+41	; 0x29
    19fc:	7a a5       	ldd	r23, Y+42	; 0x2a
    19fe:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a00:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a02:	a6 0e       	add	r10, r22
    1a04:	b7 1e       	adc	r11, r23
    1a06:	c8 1e       	adc	r12, r24
    1a08:	d9 1e       	adc	r13, r25
    1a0a:	a6 16       	cp	r10, r22
    1a0c:	b7 06       	cpc	r11, r23
    1a0e:	c8 06       	cpc	r12, r24
    1a10:	d9 06       	cpc	r13, r25
    1a12:	70 f0       	brcs	.+28     	; 0x1a30 <__umoddi3+0xa64>
    1a14:	a2 16       	cp	r10, r18
    1a16:	b3 06       	cpc	r11, r19
    1a18:	c4 06       	cpc	r12, r20
    1a1a:	d5 06       	cpc	r13, r21
    1a1c:	48 f4       	brcc	.+18     	; 0x1a30 <__umoddi3+0xa64>
    1a1e:	08 94       	sec
    1a20:	61 08       	sbc	r6, r1
    1a22:	71 08       	sbc	r7, r1
    1a24:	81 08       	sbc	r8, r1
    1a26:	91 08       	sbc	r9, r1
    1a28:	a6 0e       	add	r10, r22
    1a2a:	b7 1e       	adc	r11, r23
    1a2c:	c8 1e       	adc	r12, r24
    1a2e:	d9 1e       	adc	r13, r25
    1a30:	d6 01       	movw	r26, r12
    1a32:	c5 01       	movw	r24, r10
    1a34:	82 1b       	sub	r24, r18
    1a36:	93 0b       	sbc	r25, r19
    1a38:	a4 0b       	sbc	r26, r20
    1a3a:	b5 0b       	sbc	r27, r21
    1a3c:	89 8f       	std	Y+25, r24	; 0x19
    1a3e:	9a 8f       	std	Y+26, r25	; 0x1a
    1a40:	ab 8f       	std	Y+27, r26	; 0x1b
    1a42:	bc 8f       	std	Y+28, r27	; 0x1c
    1a44:	d1 01       	movw	r26, r2
    1a46:	99 27       	eor	r25, r25
    1a48:	88 27       	eor	r24, r24
    1a4a:	84 01       	movw	r16, r8
    1a4c:	73 01       	movw	r14, r6
    1a4e:	e8 2a       	or	r14, r24
    1a50:	f9 2a       	or	r15, r25
    1a52:	0a 2b       	or	r16, r26
    1a54:	1b 2b       	or	r17, r27
    1a56:	4f ef       	ldi	r20, 0xFF	; 255
    1a58:	a4 2e       	mov	r10, r20
    1a5a:	4f ef       	ldi	r20, 0xFF	; 255
    1a5c:	b4 2e       	mov	r11, r20
    1a5e:	c1 2c       	mov	r12, r1
    1a60:	d1 2c       	mov	r13, r1
    1a62:	ae 20       	and	r10, r14
    1a64:	bf 20       	and	r11, r15
    1a66:	c0 22       	and	r12, r16
    1a68:	d1 22       	and	r13, r17
    1a6a:	78 01       	movw	r14, r16
    1a6c:	00 27       	eor	r16, r16
    1a6e:	11 27       	eor	r17, r17
    1a70:	6d a0       	ldd	r6, Y+37	; 0x25
    1a72:	7e a0       	ldd	r7, Y+38	; 0x26
    1a74:	8f a0       	ldd	r8, Y+39	; 0x27
    1a76:	98 a4       	ldd	r9, Y+40	; 0x28
    1a78:	4f ef       	ldi	r20, 0xFF	; 255
    1a7a:	5f ef       	ldi	r21, 0xFF	; 255
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	70 e0       	ldi	r23, 0x00	; 0
    1a80:	64 22       	and	r6, r20
    1a82:	75 22       	and	r7, r21
    1a84:	86 22       	and	r8, r22
    1a86:	97 22       	and	r9, r23
    1a88:	8d a1       	ldd	r24, Y+37	; 0x25
    1a8a:	9e a1       	ldd	r25, Y+38	; 0x26
    1a8c:	af a1       	ldd	r26, Y+39	; 0x27
    1a8e:	b8 a5       	ldd	r27, Y+40	; 0x28
    1a90:	bd 01       	movw	r22, r26
    1a92:	88 27       	eor	r24, r24
    1a94:	99 27       	eor	r25, r25
    1a96:	65 96       	adiw	r28, 0x15	; 21
    1a98:	6c af       	std	Y+60, r22	; 0x3c
    1a9a:	7d af       	std	Y+61, r23	; 0x3d
    1a9c:	8e af       	std	Y+62, r24	; 0x3e
    1a9e:	9f af       	std	Y+63, r25	; 0x3f
    1aa0:	65 97       	sbiw	r28, 0x15	; 21
    1aa2:	c6 01       	movw	r24, r12
    1aa4:	b5 01       	movw	r22, r10
    1aa6:	a4 01       	movw	r20, r8
    1aa8:	93 01       	movw	r18, r6
    1aaa:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1aae:	61 96       	adiw	r28, 0x11	; 17
    1ab0:	6c af       	std	Y+60, r22	; 0x3c
    1ab2:	7d af       	std	Y+61, r23	; 0x3d
    1ab4:	8e af       	std	Y+62, r24	; 0x3e
    1ab6:	9f af       	std	Y+63, r25	; 0x3f
    1ab8:	61 97       	sbiw	r28, 0x11	; 17
    1aba:	c6 01       	movw	r24, r12
    1abc:	b5 01       	movw	r22, r10
    1abe:	65 96       	adiw	r28, 0x15	; 21
    1ac0:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ac2:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ac4:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ac6:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ac8:	65 97       	sbiw	r28, 0x15	; 21
    1aca:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1ace:	1b 01       	movw	r2, r22
    1ad0:	2c 01       	movw	r4, r24
    1ad2:	c8 01       	movw	r24, r16
    1ad4:	b7 01       	movw	r22, r14
    1ad6:	a4 01       	movw	r20, r8
    1ad8:	93 01       	movw	r18, r6
    1ada:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1ade:	5b 01       	movw	r10, r22
    1ae0:	6c 01       	movw	r12, r24
    1ae2:	c8 01       	movw	r24, r16
    1ae4:	b7 01       	movw	r22, r14
    1ae6:	65 96       	adiw	r28, 0x15	; 21
    1ae8:	2c ad       	ldd	r18, Y+60	; 0x3c
    1aea:	3d ad       	ldd	r19, Y+61	; 0x3d
    1aec:	4e ad       	ldd	r20, Y+62	; 0x3e
    1aee:	5f ad       	ldd	r21, Y+63	; 0x3f
    1af0:	65 97       	sbiw	r28, 0x15	; 21
    1af2:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    1af6:	7b 01       	movw	r14, r22
    1af8:	8c 01       	movw	r16, r24
    1afa:	a6 01       	movw	r20, r12
    1afc:	95 01       	movw	r18, r10
    1afe:	22 0d       	add	r18, r2
    1b00:	33 1d       	adc	r19, r3
    1b02:	44 1d       	adc	r20, r4
    1b04:	55 1d       	adc	r21, r5
    1b06:	61 96       	adiw	r28, 0x11	; 17
    1b08:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b0a:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b0c:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b0e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b10:	61 97       	sbiw	r28, 0x11	; 17
    1b12:	c4 01       	movw	r24, r8
    1b14:	aa 27       	eor	r26, r26
    1b16:	bb 27       	eor	r27, r27
    1b18:	28 0f       	add	r18, r24
    1b1a:	39 1f       	adc	r19, r25
    1b1c:	4a 1f       	adc	r20, r26
    1b1e:	5b 1f       	adc	r21, r27
    1b20:	2a 15       	cp	r18, r10
    1b22:	3b 05       	cpc	r19, r11
    1b24:	4c 05       	cpc	r20, r12
    1b26:	5d 05       	cpc	r21, r13
    1b28:	48 f4       	brcc	.+18     	; 0x1b3c <__umoddi3+0xb70>
    1b2a:	81 2c       	mov	r8, r1
    1b2c:	91 2c       	mov	r9, r1
    1b2e:	e1 e0       	ldi	r30, 0x01	; 1
    1b30:	ae 2e       	mov	r10, r30
    1b32:	b1 2c       	mov	r11, r1
    1b34:	e8 0c       	add	r14, r8
    1b36:	f9 1c       	adc	r15, r9
    1b38:	0a 1d       	adc	r16, r10
    1b3a:	1b 1d       	adc	r17, r11
    1b3c:	ca 01       	movw	r24, r20
    1b3e:	aa 27       	eor	r26, r26
    1b40:	bb 27       	eor	r27, r27
    1b42:	57 01       	movw	r10, r14
    1b44:	68 01       	movw	r12, r16
    1b46:	a8 0e       	add	r10, r24
    1b48:	b9 1e       	adc	r11, r25
    1b4a:	ca 1e       	adc	r12, r26
    1b4c:	db 1e       	adc	r13, r27
    1b4e:	a9 01       	movw	r20, r18
    1b50:	33 27       	eor	r19, r19
    1b52:	22 27       	eor	r18, r18
    1b54:	61 96       	adiw	r28, 0x11	; 17
    1b56:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b58:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b5a:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b5c:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b5e:	61 97       	sbiw	r28, 0x11	; 17
    1b60:	a0 70       	andi	r26, 0x00	; 0
    1b62:	b0 70       	andi	r27, 0x00	; 0
    1b64:	28 0f       	add	r18, r24
    1b66:	39 1f       	adc	r19, r25
    1b68:	4a 1f       	adc	r20, r26
    1b6a:	5b 1f       	adc	r21, r27
    1b6c:	e9 8c       	ldd	r14, Y+25	; 0x19
    1b6e:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1b70:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1b72:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1b74:	ea 14       	cp	r14, r10
    1b76:	fb 04       	cpc	r15, r11
    1b78:	0c 05       	cpc	r16, r12
    1b7a:	1d 05       	cpc	r17, r13
    1b7c:	70 f0       	brcs	.+28     	; 0x1b9a <__umoddi3+0xbce>
    1b7e:	ae 14       	cp	r10, r14
    1b80:	bf 04       	cpc	r11, r15
    1b82:	c0 06       	cpc	r12, r16
    1b84:	d1 06       	cpc	r13, r17
    1b86:	69 f5       	brne	.+90     	; 0x1be2 <__umoddi3+0xc16>
    1b88:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b8a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b8c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b8e:	98 a1       	ldd	r25, Y+32	; 0x20
    1b90:	62 17       	cp	r22, r18
    1b92:	73 07       	cpc	r23, r19
    1b94:	84 07       	cpc	r24, r20
    1b96:	95 07       	cpc	r25, r21
    1b98:	20 f5       	brcc	.+72     	; 0x1be2 <__umoddi3+0xc16>
    1b9a:	da 01       	movw	r26, r20
    1b9c:	c9 01       	movw	r24, r18
    1b9e:	6d a0       	ldd	r6, Y+37	; 0x25
    1ba0:	7e a0       	ldd	r7, Y+38	; 0x26
    1ba2:	8f a0       	ldd	r8, Y+39	; 0x27
    1ba4:	98 a4       	ldd	r9, Y+40	; 0x28
    1ba6:	86 19       	sub	r24, r6
    1ba8:	97 09       	sbc	r25, r7
    1baa:	a8 09       	sbc	r26, r8
    1bac:	b9 09       	sbc	r27, r9
    1bae:	e9 a4       	ldd	r14, Y+41	; 0x29
    1bb0:	fa a4       	ldd	r15, Y+42	; 0x2a
    1bb2:	0b a5       	ldd	r16, Y+43	; 0x2b
    1bb4:	1c a5       	ldd	r17, Y+44	; 0x2c
    1bb6:	ae 18       	sub	r10, r14
    1bb8:	bf 08       	sbc	r11, r15
    1bba:	c0 0a       	sbc	r12, r16
    1bbc:	d1 0a       	sbc	r13, r17
    1bbe:	ee 24       	eor	r14, r14
    1bc0:	ff 24       	eor	r15, r15
    1bc2:	87 01       	movw	r16, r14
    1bc4:	28 17       	cp	r18, r24
    1bc6:	39 07       	cpc	r19, r25
    1bc8:	4a 07       	cpc	r20, r26
    1bca:	5b 07       	cpc	r21, r27
    1bcc:	28 f4       	brcc	.+10     	; 0x1bd8 <__umoddi3+0xc0c>
    1bce:	21 e0       	ldi	r18, 0x01	; 1
    1bd0:	e2 2e       	mov	r14, r18
    1bd2:	f1 2c       	mov	r15, r1
    1bd4:	01 2d       	mov	r16, r1
    1bd6:	11 2d       	mov	r17, r1
    1bd8:	ae 18       	sub	r10, r14
    1bda:	bf 08       	sbc	r11, r15
    1bdc:	c0 0a       	sbc	r12, r16
    1bde:	d1 0a       	sbc	r13, r17
    1be0:	02 c0       	rjmp	.+4      	; 0x1be6 <__umoddi3+0xc1a>
    1be2:	da 01       	movw	r26, r20
    1be4:	c9 01       	movw	r24, r18
    1be6:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1be8:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1bea:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1bec:	98 a0       	ldd	r9, Y+32	; 0x20
    1bee:	68 1a       	sub	r6, r24
    1bf0:	79 0a       	sbc	r7, r25
    1bf2:	8a 0a       	sbc	r8, r26
    1bf4:	9b 0a       	sbc	r9, r27
    1bf6:	49 8d       	ldd	r20, Y+25	; 0x19
    1bf8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1bfa:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1bfc:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1bfe:	4a 19       	sub	r20, r10
    1c00:	5b 09       	sbc	r21, r11
    1c02:	6c 09       	sbc	r22, r12
    1c04:	7d 09       	sbc	r23, r13
    1c06:	5a 01       	movw	r10, r20
    1c08:	6b 01       	movw	r12, r22
    1c0a:	22 24       	eor	r2, r2
    1c0c:	33 24       	eor	r3, r3
    1c0e:	21 01       	movw	r4, r2
    1c10:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c12:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c14:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c16:	98 a1       	ldd	r25, Y+32	; 0x20
    1c18:	66 15       	cp	r22, r6
    1c1a:	77 05       	cpc	r23, r7
    1c1c:	88 05       	cpc	r24, r8
    1c1e:	99 05       	cpc	r25, r9
    1c20:	28 f4       	brcc	.+10     	; 0x1c2c <__umoddi3+0xc60>
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	28 2e       	mov	r2, r24
    1c26:	31 2c       	mov	r3, r1
    1c28:	41 2c       	mov	r4, r1
    1c2a:	51 2c       	mov	r5, r1
    1c2c:	86 01       	movw	r16, r12
    1c2e:	75 01       	movw	r14, r10
    1c30:	e2 18       	sub	r14, r2
    1c32:	f3 08       	sbc	r15, r3
    1c34:	04 09       	sbc	r16, r4
    1c36:	15 09       	sbc	r17, r5
    1c38:	a8 01       	movw	r20, r16
    1c3a:	97 01       	movw	r18, r14
    1c3c:	66 96       	adiw	r28, 0x16	; 22
    1c3e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c40:	66 97       	sbiw	r28, 0x16	; 22
    1c42:	04 c0       	rjmp	.+8      	; 0x1c4c <__umoddi3+0xc80>
    1c44:	22 0f       	add	r18, r18
    1c46:	33 1f       	adc	r19, r19
    1c48:	44 1f       	adc	r20, r20
    1c4a:	55 1f       	adc	r21, r21
    1c4c:	0a 94       	dec	r0
    1c4e:	d2 f7       	brpl	.-12     	; 0x1c44 <__umoddi3+0xc78>
    1c50:	d4 01       	movw	r26, r8
    1c52:	c3 01       	movw	r24, r6
    1c54:	67 96       	adiw	r28, 0x17	; 23
    1c56:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c58:	67 97       	sbiw	r28, 0x17	; 23
    1c5a:	04 c0       	rjmp	.+8      	; 0x1c64 <__umoddi3+0xc98>
    1c5c:	b6 95       	lsr	r27
    1c5e:	a7 95       	ror	r26
    1c60:	97 95       	ror	r25
    1c62:	87 95       	ror	r24
    1c64:	0a 94       	dec	r0
    1c66:	d2 f7       	brpl	.-12     	; 0x1c5c <__umoddi3+0xc90>
    1c68:	28 2b       	or	r18, r24
    1c6a:	39 2b       	or	r19, r25
    1c6c:	4a 2b       	or	r20, r26
    1c6e:	5b 2b       	or	r21, r27
    1c70:	29 8b       	std	Y+17, r18	; 0x11
    1c72:	3a 8b       	std	Y+18, r19	; 0x12
    1c74:	4b 8b       	std	Y+19, r20	; 0x13
    1c76:	5c 8b       	std	Y+20, r21	; 0x14
    1c78:	67 96       	adiw	r28, 0x17	; 23
    1c7a:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c7c:	67 97       	sbiw	r28, 0x17	; 23
    1c7e:	04 c0       	rjmp	.+8      	; 0x1c88 <__umoddi3+0xcbc>
    1c80:	16 95       	lsr	r17
    1c82:	07 95       	ror	r16
    1c84:	f7 94       	ror	r15
    1c86:	e7 94       	ror	r14
    1c88:	0a 94       	dec	r0
    1c8a:	d2 f7       	brpl	.-12     	; 0x1c80 <__umoddi3+0xcb4>
    1c8c:	ed 8a       	std	Y+21, r14	; 0x15
    1c8e:	fe 8a       	std	Y+22, r15	; 0x16
    1c90:	0f 8b       	std	Y+23, r16	; 0x17
    1c92:	18 8f       	std	Y+24, r17	; 0x18
    1c94:	3a 89       	ldd	r19, Y+18	; 0x12
    1c96:	4b 89       	ldd	r20, Y+19	; 0x13
    1c98:	5c 89       	ldd	r21, Y+20	; 0x14
    1c9a:	6e 2d       	mov	r22, r14
    1c9c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c9e:	8f 89       	ldd	r24, Y+23	; 0x17
    1ca0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ca2:	c5 5a       	subi	r28, 0xA5	; 165
    1ca4:	df 4f       	sbci	r29, 0xFF	; 255
    1ca6:	e2 e1       	ldi	r30, 0x12	; 18
    1ca8:	0c 94 b9 30 	jmp	0x6172	; 0x6172 <__epilogue_restores__>

00001cac <_fpadd_parts>:
    1cac:	a0 e0       	ldi	r26, 0x00	; 0
    1cae:	b0 e0       	ldi	r27, 0x00	; 0
    1cb0:	ec e5       	ldi	r30, 0x5C	; 92
    1cb2:	fe e0       	ldi	r31, 0x0E	; 14
    1cb4:	0c 94 9d 30 	jmp	0x613a	; 0x613a <__prologue_saves__>
    1cb8:	dc 01       	movw	r26, r24
    1cba:	2b 01       	movw	r4, r22
    1cbc:	fa 01       	movw	r30, r20
    1cbe:	9c 91       	ld	r25, X
    1cc0:	92 30       	cpi	r25, 0x02	; 2
    1cc2:	08 f4       	brcc	.+2      	; 0x1cc6 <_fpadd_parts+0x1a>
    1cc4:	39 c1       	rjmp	.+626    	; 0x1f38 <_fpadd_parts+0x28c>
    1cc6:	eb 01       	movw	r28, r22
    1cc8:	88 81       	ld	r24, Y
    1cca:	82 30       	cpi	r24, 0x02	; 2
    1ccc:	08 f4       	brcc	.+2      	; 0x1cd0 <_fpadd_parts+0x24>
    1cce:	33 c1       	rjmp	.+614    	; 0x1f36 <_fpadd_parts+0x28a>
    1cd0:	94 30       	cpi	r25, 0x04	; 4
    1cd2:	69 f4       	brne	.+26     	; 0x1cee <_fpadd_parts+0x42>
    1cd4:	84 30       	cpi	r24, 0x04	; 4
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <_fpadd_parts+0x2e>
    1cd8:	2f c1       	rjmp	.+606    	; 0x1f38 <_fpadd_parts+0x28c>
    1cda:	11 96       	adiw	r26, 0x01	; 1
    1cdc:	9c 91       	ld	r25, X
    1cde:	11 97       	sbiw	r26, 0x01	; 1
    1ce0:	89 81       	ldd	r24, Y+1	; 0x01
    1ce2:	98 17       	cp	r25, r24
    1ce4:	09 f4       	brne	.+2      	; 0x1ce8 <_fpadd_parts+0x3c>
    1ce6:	28 c1       	rjmp	.+592    	; 0x1f38 <_fpadd_parts+0x28c>
    1ce8:	a5 e6       	ldi	r26, 0x65	; 101
    1cea:	b0 e0       	ldi	r27, 0x00	; 0
    1cec:	25 c1       	rjmp	.+586    	; 0x1f38 <_fpadd_parts+0x28c>
    1cee:	84 30       	cpi	r24, 0x04	; 4
    1cf0:	09 f4       	brne	.+2      	; 0x1cf4 <_fpadd_parts+0x48>
    1cf2:	21 c1       	rjmp	.+578    	; 0x1f36 <_fpadd_parts+0x28a>
    1cf4:	82 30       	cpi	r24, 0x02	; 2
    1cf6:	a9 f4       	brne	.+42     	; 0x1d22 <_fpadd_parts+0x76>
    1cf8:	92 30       	cpi	r25, 0x02	; 2
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <_fpadd_parts+0x52>
    1cfc:	1d c1       	rjmp	.+570    	; 0x1f38 <_fpadd_parts+0x28c>
    1cfe:	9a 01       	movw	r18, r20
    1d00:	ad 01       	movw	r20, r26
    1d02:	88 e0       	ldi	r24, 0x08	; 8
    1d04:	ea 01       	movw	r28, r20
    1d06:	09 90       	ld	r0, Y+
    1d08:	ae 01       	movw	r20, r28
    1d0a:	e9 01       	movw	r28, r18
    1d0c:	09 92       	st	Y+, r0
    1d0e:	9e 01       	movw	r18, r28
    1d10:	81 50       	subi	r24, 0x01	; 1
    1d12:	c1 f7       	brne	.-16     	; 0x1d04 <_fpadd_parts+0x58>
    1d14:	e2 01       	movw	r28, r4
    1d16:	89 81       	ldd	r24, Y+1	; 0x01
    1d18:	11 96       	adiw	r26, 0x01	; 1
    1d1a:	9c 91       	ld	r25, X
    1d1c:	89 23       	and	r24, r25
    1d1e:	81 83       	std	Z+1, r24	; 0x01
    1d20:	08 c1       	rjmp	.+528    	; 0x1f32 <_fpadd_parts+0x286>
    1d22:	92 30       	cpi	r25, 0x02	; 2
    1d24:	09 f4       	brne	.+2      	; 0x1d28 <_fpadd_parts+0x7c>
    1d26:	07 c1       	rjmp	.+526    	; 0x1f36 <_fpadd_parts+0x28a>
    1d28:	12 96       	adiw	r26, 0x02	; 2
    1d2a:	2d 90       	ld	r2, X+
    1d2c:	3c 90       	ld	r3, X
    1d2e:	13 97       	sbiw	r26, 0x03	; 3
    1d30:	eb 01       	movw	r28, r22
    1d32:	8a 81       	ldd	r24, Y+2	; 0x02
    1d34:	9b 81       	ldd	r25, Y+3	; 0x03
    1d36:	14 96       	adiw	r26, 0x04	; 4
    1d38:	ad 90       	ld	r10, X+
    1d3a:	bd 90       	ld	r11, X+
    1d3c:	cd 90       	ld	r12, X+
    1d3e:	dc 90       	ld	r13, X
    1d40:	17 97       	sbiw	r26, 0x07	; 7
    1d42:	ec 80       	ldd	r14, Y+4	; 0x04
    1d44:	fd 80       	ldd	r15, Y+5	; 0x05
    1d46:	0e 81       	ldd	r16, Y+6	; 0x06
    1d48:	1f 81       	ldd	r17, Y+7	; 0x07
    1d4a:	91 01       	movw	r18, r2
    1d4c:	28 1b       	sub	r18, r24
    1d4e:	39 0b       	sbc	r19, r25
    1d50:	b9 01       	movw	r22, r18
    1d52:	37 ff       	sbrs	r19, 7
    1d54:	04 c0       	rjmp	.+8      	; 0x1d5e <_fpadd_parts+0xb2>
    1d56:	66 27       	eor	r22, r22
    1d58:	77 27       	eor	r23, r23
    1d5a:	62 1b       	sub	r22, r18
    1d5c:	73 0b       	sbc	r23, r19
    1d5e:	60 32       	cpi	r22, 0x20	; 32
    1d60:	71 05       	cpc	r23, r1
    1d62:	0c f0       	brlt	.+2      	; 0x1d66 <_fpadd_parts+0xba>
    1d64:	61 c0       	rjmp	.+194    	; 0x1e28 <_fpadd_parts+0x17c>
    1d66:	12 16       	cp	r1, r18
    1d68:	13 06       	cpc	r1, r19
    1d6a:	6c f5       	brge	.+90     	; 0x1dc6 <_fpadd_parts+0x11a>
    1d6c:	37 01       	movw	r6, r14
    1d6e:	48 01       	movw	r8, r16
    1d70:	06 2e       	mov	r0, r22
    1d72:	04 c0       	rjmp	.+8      	; 0x1d7c <_fpadd_parts+0xd0>
    1d74:	96 94       	lsr	r9
    1d76:	87 94       	ror	r8
    1d78:	77 94       	ror	r7
    1d7a:	67 94       	ror	r6
    1d7c:	0a 94       	dec	r0
    1d7e:	d2 f7       	brpl	.-12     	; 0x1d74 <_fpadd_parts+0xc8>
    1d80:	21 e0       	ldi	r18, 0x01	; 1
    1d82:	30 e0       	ldi	r19, 0x00	; 0
    1d84:	40 e0       	ldi	r20, 0x00	; 0
    1d86:	50 e0       	ldi	r21, 0x00	; 0
    1d88:	04 c0       	rjmp	.+8      	; 0x1d92 <_fpadd_parts+0xe6>
    1d8a:	22 0f       	add	r18, r18
    1d8c:	33 1f       	adc	r19, r19
    1d8e:	44 1f       	adc	r20, r20
    1d90:	55 1f       	adc	r21, r21
    1d92:	6a 95       	dec	r22
    1d94:	d2 f7       	brpl	.-12     	; 0x1d8a <_fpadd_parts+0xde>
    1d96:	21 50       	subi	r18, 0x01	; 1
    1d98:	30 40       	sbci	r19, 0x00	; 0
    1d9a:	40 40       	sbci	r20, 0x00	; 0
    1d9c:	50 40       	sbci	r21, 0x00	; 0
    1d9e:	2e 21       	and	r18, r14
    1da0:	3f 21       	and	r19, r15
    1da2:	40 23       	and	r20, r16
    1da4:	51 23       	and	r21, r17
    1da6:	21 15       	cp	r18, r1
    1da8:	31 05       	cpc	r19, r1
    1daa:	41 05       	cpc	r20, r1
    1dac:	51 05       	cpc	r21, r1
    1dae:	21 f0       	breq	.+8      	; 0x1db8 <_fpadd_parts+0x10c>
    1db0:	21 e0       	ldi	r18, 0x01	; 1
    1db2:	30 e0       	ldi	r19, 0x00	; 0
    1db4:	40 e0       	ldi	r20, 0x00	; 0
    1db6:	50 e0       	ldi	r21, 0x00	; 0
    1db8:	79 01       	movw	r14, r18
    1dba:	8a 01       	movw	r16, r20
    1dbc:	e6 28       	or	r14, r6
    1dbe:	f7 28       	or	r15, r7
    1dc0:	08 29       	or	r16, r8
    1dc2:	19 29       	or	r17, r9
    1dc4:	3c c0       	rjmp	.+120    	; 0x1e3e <_fpadd_parts+0x192>
    1dc6:	23 2b       	or	r18, r19
    1dc8:	d1 f1       	breq	.+116    	; 0x1e3e <_fpadd_parts+0x192>
    1dca:	26 0e       	add	r2, r22
    1dcc:	37 1e       	adc	r3, r23
    1dce:	35 01       	movw	r6, r10
    1dd0:	46 01       	movw	r8, r12
    1dd2:	06 2e       	mov	r0, r22
    1dd4:	04 c0       	rjmp	.+8      	; 0x1dde <_fpadd_parts+0x132>
    1dd6:	96 94       	lsr	r9
    1dd8:	87 94       	ror	r8
    1dda:	77 94       	ror	r7
    1ddc:	67 94       	ror	r6
    1dde:	0a 94       	dec	r0
    1de0:	d2 f7       	brpl	.-12     	; 0x1dd6 <_fpadd_parts+0x12a>
    1de2:	21 e0       	ldi	r18, 0x01	; 1
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	04 c0       	rjmp	.+8      	; 0x1df4 <_fpadd_parts+0x148>
    1dec:	22 0f       	add	r18, r18
    1dee:	33 1f       	adc	r19, r19
    1df0:	44 1f       	adc	r20, r20
    1df2:	55 1f       	adc	r21, r21
    1df4:	6a 95       	dec	r22
    1df6:	d2 f7       	brpl	.-12     	; 0x1dec <_fpadd_parts+0x140>
    1df8:	21 50       	subi	r18, 0x01	; 1
    1dfa:	30 40       	sbci	r19, 0x00	; 0
    1dfc:	40 40       	sbci	r20, 0x00	; 0
    1dfe:	50 40       	sbci	r21, 0x00	; 0
    1e00:	2a 21       	and	r18, r10
    1e02:	3b 21       	and	r19, r11
    1e04:	4c 21       	and	r20, r12
    1e06:	5d 21       	and	r21, r13
    1e08:	21 15       	cp	r18, r1
    1e0a:	31 05       	cpc	r19, r1
    1e0c:	41 05       	cpc	r20, r1
    1e0e:	51 05       	cpc	r21, r1
    1e10:	21 f0       	breq	.+8      	; 0x1e1a <_fpadd_parts+0x16e>
    1e12:	21 e0       	ldi	r18, 0x01	; 1
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	40 e0       	ldi	r20, 0x00	; 0
    1e18:	50 e0       	ldi	r21, 0x00	; 0
    1e1a:	59 01       	movw	r10, r18
    1e1c:	6a 01       	movw	r12, r20
    1e1e:	a6 28       	or	r10, r6
    1e20:	b7 28       	or	r11, r7
    1e22:	c8 28       	or	r12, r8
    1e24:	d9 28       	or	r13, r9
    1e26:	0b c0       	rjmp	.+22     	; 0x1e3e <_fpadd_parts+0x192>
    1e28:	82 15       	cp	r24, r2
    1e2a:	93 05       	cpc	r25, r3
    1e2c:	2c f0       	brlt	.+10     	; 0x1e38 <_fpadd_parts+0x18c>
    1e2e:	1c 01       	movw	r2, r24
    1e30:	aa 24       	eor	r10, r10
    1e32:	bb 24       	eor	r11, r11
    1e34:	65 01       	movw	r12, r10
    1e36:	03 c0       	rjmp	.+6      	; 0x1e3e <_fpadd_parts+0x192>
    1e38:	ee 24       	eor	r14, r14
    1e3a:	ff 24       	eor	r15, r15
    1e3c:	87 01       	movw	r16, r14
    1e3e:	11 96       	adiw	r26, 0x01	; 1
    1e40:	9c 91       	ld	r25, X
    1e42:	d2 01       	movw	r26, r4
    1e44:	11 96       	adiw	r26, 0x01	; 1
    1e46:	8c 91       	ld	r24, X
    1e48:	98 17       	cp	r25, r24
    1e4a:	09 f4       	brne	.+2      	; 0x1e4e <_fpadd_parts+0x1a2>
    1e4c:	45 c0       	rjmp	.+138    	; 0x1ed8 <_fpadd_parts+0x22c>
    1e4e:	99 23       	and	r25, r25
    1e50:	39 f0       	breq	.+14     	; 0x1e60 <_fpadd_parts+0x1b4>
    1e52:	a8 01       	movw	r20, r16
    1e54:	97 01       	movw	r18, r14
    1e56:	2a 19       	sub	r18, r10
    1e58:	3b 09       	sbc	r19, r11
    1e5a:	4c 09       	sbc	r20, r12
    1e5c:	5d 09       	sbc	r21, r13
    1e5e:	06 c0       	rjmp	.+12     	; 0x1e6c <_fpadd_parts+0x1c0>
    1e60:	a6 01       	movw	r20, r12
    1e62:	95 01       	movw	r18, r10
    1e64:	2e 19       	sub	r18, r14
    1e66:	3f 09       	sbc	r19, r15
    1e68:	40 0b       	sbc	r20, r16
    1e6a:	51 0b       	sbc	r21, r17
    1e6c:	57 fd       	sbrc	r21, 7
    1e6e:	08 c0       	rjmp	.+16     	; 0x1e80 <_fpadd_parts+0x1d4>
    1e70:	11 82       	std	Z+1, r1	; 0x01
    1e72:	33 82       	std	Z+3, r3	; 0x03
    1e74:	22 82       	std	Z+2, r2	; 0x02
    1e76:	24 83       	std	Z+4, r18	; 0x04
    1e78:	35 83       	std	Z+5, r19	; 0x05
    1e7a:	46 83       	std	Z+6, r20	; 0x06
    1e7c:	57 83       	std	Z+7, r21	; 0x07
    1e7e:	1d c0       	rjmp	.+58     	; 0x1eba <_fpadd_parts+0x20e>
    1e80:	81 e0       	ldi	r24, 0x01	; 1
    1e82:	81 83       	std	Z+1, r24	; 0x01
    1e84:	33 82       	std	Z+3, r3	; 0x03
    1e86:	22 82       	std	Z+2, r2	; 0x02
    1e88:	88 27       	eor	r24, r24
    1e8a:	99 27       	eor	r25, r25
    1e8c:	dc 01       	movw	r26, r24
    1e8e:	82 1b       	sub	r24, r18
    1e90:	93 0b       	sbc	r25, r19
    1e92:	a4 0b       	sbc	r26, r20
    1e94:	b5 0b       	sbc	r27, r21
    1e96:	84 83       	std	Z+4, r24	; 0x04
    1e98:	95 83       	std	Z+5, r25	; 0x05
    1e9a:	a6 83       	std	Z+6, r26	; 0x06
    1e9c:	b7 83       	std	Z+7, r27	; 0x07
    1e9e:	0d c0       	rjmp	.+26     	; 0x1eba <_fpadd_parts+0x20e>
    1ea0:	22 0f       	add	r18, r18
    1ea2:	33 1f       	adc	r19, r19
    1ea4:	44 1f       	adc	r20, r20
    1ea6:	55 1f       	adc	r21, r21
    1ea8:	24 83       	std	Z+4, r18	; 0x04
    1eaa:	35 83       	std	Z+5, r19	; 0x05
    1eac:	46 83       	std	Z+6, r20	; 0x06
    1eae:	57 83       	std	Z+7, r21	; 0x07
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	01 97       	sbiw	r24, 0x01	; 1
    1eb6:	93 83       	std	Z+3, r25	; 0x03
    1eb8:	82 83       	std	Z+2, r24	; 0x02
    1eba:	24 81       	ldd	r18, Z+4	; 0x04
    1ebc:	35 81       	ldd	r19, Z+5	; 0x05
    1ebe:	46 81       	ldd	r20, Z+6	; 0x06
    1ec0:	57 81       	ldd	r21, Z+7	; 0x07
    1ec2:	da 01       	movw	r26, r20
    1ec4:	c9 01       	movw	r24, r18
    1ec6:	01 97       	sbiw	r24, 0x01	; 1
    1ec8:	a1 09       	sbc	r26, r1
    1eca:	b1 09       	sbc	r27, r1
    1ecc:	8f 5f       	subi	r24, 0xFF	; 255
    1ece:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed0:	af 4f       	sbci	r26, 0xFF	; 255
    1ed2:	bf 43       	sbci	r27, 0x3F	; 63
    1ed4:	28 f3       	brcs	.-54     	; 0x1ea0 <_fpadd_parts+0x1f4>
    1ed6:	0b c0       	rjmp	.+22     	; 0x1eee <_fpadd_parts+0x242>
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	33 82       	std	Z+3, r3	; 0x03
    1edc:	22 82       	std	Z+2, r2	; 0x02
    1ede:	ea 0c       	add	r14, r10
    1ee0:	fb 1c       	adc	r15, r11
    1ee2:	0c 1d       	adc	r16, r12
    1ee4:	1d 1d       	adc	r17, r13
    1ee6:	e4 82       	std	Z+4, r14	; 0x04
    1ee8:	f5 82       	std	Z+5, r15	; 0x05
    1eea:	06 83       	std	Z+6, r16	; 0x06
    1eec:	17 83       	std	Z+7, r17	; 0x07
    1eee:	83 e0       	ldi	r24, 0x03	; 3
    1ef0:	80 83       	st	Z, r24
    1ef2:	24 81       	ldd	r18, Z+4	; 0x04
    1ef4:	35 81       	ldd	r19, Z+5	; 0x05
    1ef6:	46 81       	ldd	r20, Z+6	; 0x06
    1ef8:	57 81       	ldd	r21, Z+7	; 0x07
    1efa:	57 ff       	sbrs	r21, 7
    1efc:	1a c0       	rjmp	.+52     	; 0x1f32 <_fpadd_parts+0x286>
    1efe:	c9 01       	movw	r24, r18
    1f00:	aa 27       	eor	r26, r26
    1f02:	97 fd       	sbrc	r25, 7
    1f04:	a0 95       	com	r26
    1f06:	ba 2f       	mov	r27, r26
    1f08:	81 70       	andi	r24, 0x01	; 1
    1f0a:	90 70       	andi	r25, 0x00	; 0
    1f0c:	a0 70       	andi	r26, 0x00	; 0
    1f0e:	b0 70       	andi	r27, 0x00	; 0
    1f10:	56 95       	lsr	r21
    1f12:	47 95       	ror	r20
    1f14:	37 95       	ror	r19
    1f16:	27 95       	ror	r18
    1f18:	82 2b       	or	r24, r18
    1f1a:	93 2b       	or	r25, r19
    1f1c:	a4 2b       	or	r26, r20
    1f1e:	b5 2b       	or	r27, r21
    1f20:	84 83       	std	Z+4, r24	; 0x04
    1f22:	95 83       	std	Z+5, r25	; 0x05
    1f24:	a6 83       	std	Z+6, r26	; 0x06
    1f26:	b7 83       	std	Z+7, r27	; 0x07
    1f28:	82 81       	ldd	r24, Z+2	; 0x02
    1f2a:	93 81       	ldd	r25, Z+3	; 0x03
    1f2c:	01 96       	adiw	r24, 0x01	; 1
    1f2e:	93 83       	std	Z+3, r25	; 0x03
    1f30:	82 83       	std	Z+2, r24	; 0x02
    1f32:	df 01       	movw	r26, r30
    1f34:	01 c0       	rjmp	.+2      	; 0x1f38 <_fpadd_parts+0x28c>
    1f36:	d2 01       	movw	r26, r4
    1f38:	cd 01       	movw	r24, r26
    1f3a:	cd b7       	in	r28, 0x3d	; 61
    1f3c:	de b7       	in	r29, 0x3e	; 62
    1f3e:	e2 e1       	ldi	r30, 0x12	; 18
    1f40:	0c 94 b9 30 	jmp	0x6172	; 0x6172 <__epilogue_restores__>

00001f44 <__subsf3>:
    1f44:	a0 e2       	ldi	r26, 0x20	; 32
    1f46:	b0 e0       	ldi	r27, 0x00	; 0
    1f48:	e8 ea       	ldi	r30, 0xA8	; 168
    1f4a:	ff e0       	ldi	r31, 0x0F	; 15
    1f4c:	0c 94 a9 30 	jmp	0x6152	; 0x6152 <__prologue_saves__+0x18>
    1f50:	69 83       	std	Y+1, r22	; 0x01
    1f52:	7a 83       	std	Y+2, r23	; 0x02
    1f54:	8b 83       	std	Y+3, r24	; 0x03
    1f56:	9c 83       	std	Y+4, r25	; 0x04
    1f58:	2d 83       	std	Y+5, r18	; 0x05
    1f5a:	3e 83       	std	Y+6, r19	; 0x06
    1f5c:	4f 83       	std	Y+7, r20	; 0x07
    1f5e:	58 87       	std	Y+8, r21	; 0x08
    1f60:	e9 e0       	ldi	r30, 0x09	; 9
    1f62:	ee 2e       	mov	r14, r30
    1f64:	f1 2c       	mov	r15, r1
    1f66:	ec 0e       	add	r14, r28
    1f68:	fd 1e       	adc	r15, r29
    1f6a:	ce 01       	movw	r24, r28
    1f6c:	01 96       	adiw	r24, 0x01	; 1
    1f6e:	b7 01       	movw	r22, r14
    1f70:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    1f74:	8e 01       	movw	r16, r28
    1f76:	0f 5e       	subi	r16, 0xEF	; 239
    1f78:	1f 4f       	sbci	r17, 0xFF	; 255
    1f7a:	ce 01       	movw	r24, r28
    1f7c:	05 96       	adiw	r24, 0x05	; 5
    1f7e:	b8 01       	movw	r22, r16
    1f80:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    1f84:	8a 89       	ldd	r24, Y+18	; 0x12
    1f86:	91 e0       	ldi	r25, 0x01	; 1
    1f88:	89 27       	eor	r24, r25
    1f8a:	8a 8b       	std	Y+18, r24	; 0x12
    1f8c:	c7 01       	movw	r24, r14
    1f8e:	b8 01       	movw	r22, r16
    1f90:	ae 01       	movw	r20, r28
    1f92:	47 5e       	subi	r20, 0xE7	; 231
    1f94:	5f 4f       	sbci	r21, 0xFF	; 255
    1f96:	0e 94 56 0e 	call	0x1cac	; 0x1cac <_fpadd_parts>
    1f9a:	0e 94 37 13 	call	0x266e	; 0x266e <__pack_f>
    1f9e:	a0 96       	adiw	r28, 0x20	; 32
    1fa0:	e6 e0       	ldi	r30, 0x06	; 6
    1fa2:	0c 94 c5 30 	jmp	0x618a	; 0x618a <__epilogue_restores__+0x18>

00001fa6 <__addsf3>:
    1fa6:	a0 e2       	ldi	r26, 0x20	; 32
    1fa8:	b0 e0       	ldi	r27, 0x00	; 0
    1faa:	e9 ed       	ldi	r30, 0xD9	; 217
    1fac:	ff e0       	ldi	r31, 0x0F	; 15
    1fae:	0c 94 a9 30 	jmp	0x6152	; 0x6152 <__prologue_saves__+0x18>
    1fb2:	69 83       	std	Y+1, r22	; 0x01
    1fb4:	7a 83       	std	Y+2, r23	; 0x02
    1fb6:	8b 83       	std	Y+3, r24	; 0x03
    1fb8:	9c 83       	std	Y+4, r25	; 0x04
    1fba:	2d 83       	std	Y+5, r18	; 0x05
    1fbc:	3e 83       	std	Y+6, r19	; 0x06
    1fbe:	4f 83       	std	Y+7, r20	; 0x07
    1fc0:	58 87       	std	Y+8, r21	; 0x08
    1fc2:	f9 e0       	ldi	r31, 0x09	; 9
    1fc4:	ef 2e       	mov	r14, r31
    1fc6:	f1 2c       	mov	r15, r1
    1fc8:	ec 0e       	add	r14, r28
    1fca:	fd 1e       	adc	r15, r29
    1fcc:	ce 01       	movw	r24, r28
    1fce:	01 96       	adiw	r24, 0x01	; 1
    1fd0:	b7 01       	movw	r22, r14
    1fd2:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    1fd6:	8e 01       	movw	r16, r28
    1fd8:	0f 5e       	subi	r16, 0xEF	; 239
    1fda:	1f 4f       	sbci	r17, 0xFF	; 255
    1fdc:	ce 01       	movw	r24, r28
    1fde:	05 96       	adiw	r24, 0x05	; 5
    1fe0:	b8 01       	movw	r22, r16
    1fe2:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    1fe6:	c7 01       	movw	r24, r14
    1fe8:	b8 01       	movw	r22, r16
    1fea:	ae 01       	movw	r20, r28
    1fec:	47 5e       	subi	r20, 0xE7	; 231
    1fee:	5f 4f       	sbci	r21, 0xFF	; 255
    1ff0:	0e 94 56 0e 	call	0x1cac	; 0x1cac <_fpadd_parts>
    1ff4:	0e 94 37 13 	call	0x266e	; 0x266e <__pack_f>
    1ff8:	a0 96       	adiw	r28, 0x20	; 32
    1ffa:	e6 e0       	ldi	r30, 0x06	; 6
    1ffc:	0c 94 c5 30 	jmp	0x618a	; 0x618a <__epilogue_restores__+0x18>

00002000 <__mulsf3>:
    2000:	a0 e2       	ldi	r26, 0x20	; 32
    2002:	b0 e0       	ldi	r27, 0x00	; 0
    2004:	e6 e0       	ldi	r30, 0x06	; 6
    2006:	f0 e1       	ldi	r31, 0x10	; 16
    2008:	0c 94 9d 30 	jmp	0x613a	; 0x613a <__prologue_saves__>
    200c:	69 83       	std	Y+1, r22	; 0x01
    200e:	7a 83       	std	Y+2, r23	; 0x02
    2010:	8b 83       	std	Y+3, r24	; 0x03
    2012:	9c 83       	std	Y+4, r25	; 0x04
    2014:	2d 83       	std	Y+5, r18	; 0x05
    2016:	3e 83       	std	Y+6, r19	; 0x06
    2018:	4f 83       	std	Y+7, r20	; 0x07
    201a:	58 87       	std	Y+8, r21	; 0x08
    201c:	ce 01       	movw	r24, r28
    201e:	01 96       	adiw	r24, 0x01	; 1
    2020:	be 01       	movw	r22, r28
    2022:	67 5f       	subi	r22, 0xF7	; 247
    2024:	7f 4f       	sbci	r23, 0xFF	; 255
    2026:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    202a:	ce 01       	movw	r24, r28
    202c:	05 96       	adiw	r24, 0x05	; 5
    202e:	be 01       	movw	r22, r28
    2030:	6f 5e       	subi	r22, 0xEF	; 239
    2032:	7f 4f       	sbci	r23, 0xFF	; 255
    2034:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    2038:	99 85       	ldd	r25, Y+9	; 0x09
    203a:	92 30       	cpi	r25, 0x02	; 2
    203c:	88 f0       	brcs	.+34     	; 0x2060 <__mulsf3+0x60>
    203e:	89 89       	ldd	r24, Y+17	; 0x11
    2040:	82 30       	cpi	r24, 0x02	; 2
    2042:	c8 f0       	brcs	.+50     	; 0x2076 <__mulsf3+0x76>
    2044:	94 30       	cpi	r25, 0x04	; 4
    2046:	19 f4       	brne	.+6      	; 0x204e <__mulsf3+0x4e>
    2048:	82 30       	cpi	r24, 0x02	; 2
    204a:	51 f4       	brne	.+20     	; 0x2060 <__mulsf3+0x60>
    204c:	04 c0       	rjmp	.+8      	; 0x2056 <__mulsf3+0x56>
    204e:	84 30       	cpi	r24, 0x04	; 4
    2050:	29 f4       	brne	.+10     	; 0x205c <__mulsf3+0x5c>
    2052:	92 30       	cpi	r25, 0x02	; 2
    2054:	81 f4       	brne	.+32     	; 0x2076 <__mulsf3+0x76>
    2056:	85 e6       	ldi	r24, 0x65	; 101
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	c6 c0       	rjmp	.+396    	; 0x21e8 <__mulsf3+0x1e8>
    205c:	92 30       	cpi	r25, 0x02	; 2
    205e:	49 f4       	brne	.+18     	; 0x2072 <__mulsf3+0x72>
    2060:	20 e0       	ldi	r18, 0x00	; 0
    2062:	9a 85       	ldd	r25, Y+10	; 0x0a
    2064:	8a 89       	ldd	r24, Y+18	; 0x12
    2066:	98 13       	cpse	r25, r24
    2068:	21 e0       	ldi	r18, 0x01	; 1
    206a:	2a 87       	std	Y+10, r18	; 0x0a
    206c:	ce 01       	movw	r24, r28
    206e:	09 96       	adiw	r24, 0x09	; 9
    2070:	bb c0       	rjmp	.+374    	; 0x21e8 <__mulsf3+0x1e8>
    2072:	82 30       	cpi	r24, 0x02	; 2
    2074:	49 f4       	brne	.+18     	; 0x2088 <__mulsf3+0x88>
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	9a 85       	ldd	r25, Y+10	; 0x0a
    207a:	8a 89       	ldd	r24, Y+18	; 0x12
    207c:	98 13       	cpse	r25, r24
    207e:	21 e0       	ldi	r18, 0x01	; 1
    2080:	2a 8b       	std	Y+18, r18	; 0x12
    2082:	ce 01       	movw	r24, r28
    2084:	41 96       	adiw	r24, 0x11	; 17
    2086:	b0 c0       	rjmp	.+352    	; 0x21e8 <__mulsf3+0x1e8>
    2088:	2d 84       	ldd	r2, Y+13	; 0x0d
    208a:	3e 84       	ldd	r3, Y+14	; 0x0e
    208c:	4f 84       	ldd	r4, Y+15	; 0x0f
    208e:	58 88       	ldd	r5, Y+16	; 0x10
    2090:	6d 88       	ldd	r6, Y+21	; 0x15
    2092:	7e 88       	ldd	r7, Y+22	; 0x16
    2094:	8f 88       	ldd	r8, Y+23	; 0x17
    2096:	98 8c       	ldd	r9, Y+24	; 0x18
    2098:	ee 24       	eor	r14, r14
    209a:	ff 24       	eor	r15, r15
    209c:	87 01       	movw	r16, r14
    209e:	aa 24       	eor	r10, r10
    20a0:	bb 24       	eor	r11, r11
    20a2:	65 01       	movw	r12, r10
    20a4:	40 e0       	ldi	r20, 0x00	; 0
    20a6:	50 e0       	ldi	r21, 0x00	; 0
    20a8:	60 e0       	ldi	r22, 0x00	; 0
    20aa:	70 e0       	ldi	r23, 0x00	; 0
    20ac:	e0 e0       	ldi	r30, 0x00	; 0
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	c1 01       	movw	r24, r2
    20b2:	81 70       	andi	r24, 0x01	; 1
    20b4:	90 70       	andi	r25, 0x00	; 0
    20b6:	89 2b       	or	r24, r25
    20b8:	e9 f0       	breq	.+58     	; 0x20f4 <__mulsf3+0xf4>
    20ba:	e6 0c       	add	r14, r6
    20bc:	f7 1c       	adc	r15, r7
    20be:	08 1d       	adc	r16, r8
    20c0:	19 1d       	adc	r17, r9
    20c2:	9a 01       	movw	r18, r20
    20c4:	ab 01       	movw	r20, r22
    20c6:	2a 0d       	add	r18, r10
    20c8:	3b 1d       	adc	r19, r11
    20ca:	4c 1d       	adc	r20, r12
    20cc:	5d 1d       	adc	r21, r13
    20ce:	80 e0       	ldi	r24, 0x00	; 0
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	a0 e0       	ldi	r26, 0x00	; 0
    20d4:	b0 e0       	ldi	r27, 0x00	; 0
    20d6:	e6 14       	cp	r14, r6
    20d8:	f7 04       	cpc	r15, r7
    20da:	08 05       	cpc	r16, r8
    20dc:	19 05       	cpc	r17, r9
    20de:	20 f4       	brcc	.+8      	; 0x20e8 <__mulsf3+0xe8>
    20e0:	81 e0       	ldi	r24, 0x01	; 1
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	a0 e0       	ldi	r26, 0x00	; 0
    20e6:	b0 e0       	ldi	r27, 0x00	; 0
    20e8:	ba 01       	movw	r22, r20
    20ea:	a9 01       	movw	r20, r18
    20ec:	48 0f       	add	r20, r24
    20ee:	59 1f       	adc	r21, r25
    20f0:	6a 1f       	adc	r22, r26
    20f2:	7b 1f       	adc	r23, r27
    20f4:	aa 0c       	add	r10, r10
    20f6:	bb 1c       	adc	r11, r11
    20f8:	cc 1c       	adc	r12, r12
    20fa:	dd 1c       	adc	r13, r13
    20fc:	97 fe       	sbrs	r9, 7
    20fe:	08 c0       	rjmp	.+16     	; 0x2110 <__mulsf3+0x110>
    2100:	81 e0       	ldi	r24, 0x01	; 1
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	a0 e0       	ldi	r26, 0x00	; 0
    2106:	b0 e0       	ldi	r27, 0x00	; 0
    2108:	a8 2a       	or	r10, r24
    210a:	b9 2a       	or	r11, r25
    210c:	ca 2a       	or	r12, r26
    210e:	db 2a       	or	r13, r27
    2110:	31 96       	adiw	r30, 0x01	; 1
    2112:	e0 32       	cpi	r30, 0x20	; 32
    2114:	f1 05       	cpc	r31, r1
    2116:	49 f0       	breq	.+18     	; 0x212a <__mulsf3+0x12a>
    2118:	66 0c       	add	r6, r6
    211a:	77 1c       	adc	r7, r7
    211c:	88 1c       	adc	r8, r8
    211e:	99 1c       	adc	r9, r9
    2120:	56 94       	lsr	r5
    2122:	47 94       	ror	r4
    2124:	37 94       	ror	r3
    2126:	27 94       	ror	r2
    2128:	c3 cf       	rjmp	.-122    	; 0x20b0 <__mulsf3+0xb0>
    212a:	fa 85       	ldd	r31, Y+10	; 0x0a
    212c:	ea 89       	ldd	r30, Y+18	; 0x12
    212e:	2b 89       	ldd	r18, Y+19	; 0x13
    2130:	3c 89       	ldd	r19, Y+20	; 0x14
    2132:	8b 85       	ldd	r24, Y+11	; 0x0b
    2134:	9c 85       	ldd	r25, Y+12	; 0x0c
    2136:	28 0f       	add	r18, r24
    2138:	39 1f       	adc	r19, r25
    213a:	2e 5f       	subi	r18, 0xFE	; 254
    213c:	3f 4f       	sbci	r19, 0xFF	; 255
    213e:	17 c0       	rjmp	.+46     	; 0x216e <__mulsf3+0x16e>
    2140:	ca 01       	movw	r24, r20
    2142:	81 70       	andi	r24, 0x01	; 1
    2144:	90 70       	andi	r25, 0x00	; 0
    2146:	89 2b       	or	r24, r25
    2148:	61 f0       	breq	.+24     	; 0x2162 <__mulsf3+0x162>
    214a:	16 95       	lsr	r17
    214c:	07 95       	ror	r16
    214e:	f7 94       	ror	r15
    2150:	e7 94       	ror	r14
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	a0 e0       	ldi	r26, 0x00	; 0
    2158:	b0 e8       	ldi	r27, 0x80	; 128
    215a:	e8 2a       	or	r14, r24
    215c:	f9 2a       	or	r15, r25
    215e:	0a 2b       	or	r16, r26
    2160:	1b 2b       	or	r17, r27
    2162:	76 95       	lsr	r23
    2164:	67 95       	ror	r22
    2166:	57 95       	ror	r21
    2168:	47 95       	ror	r20
    216a:	2f 5f       	subi	r18, 0xFF	; 255
    216c:	3f 4f       	sbci	r19, 0xFF	; 255
    216e:	77 fd       	sbrc	r23, 7
    2170:	e7 cf       	rjmp	.-50     	; 0x2140 <__mulsf3+0x140>
    2172:	0c c0       	rjmp	.+24     	; 0x218c <__mulsf3+0x18c>
    2174:	44 0f       	add	r20, r20
    2176:	55 1f       	adc	r21, r21
    2178:	66 1f       	adc	r22, r22
    217a:	77 1f       	adc	r23, r23
    217c:	17 fd       	sbrc	r17, 7
    217e:	41 60       	ori	r20, 0x01	; 1
    2180:	ee 0c       	add	r14, r14
    2182:	ff 1c       	adc	r15, r15
    2184:	00 1f       	adc	r16, r16
    2186:	11 1f       	adc	r17, r17
    2188:	21 50       	subi	r18, 0x01	; 1
    218a:	30 40       	sbci	r19, 0x00	; 0
    218c:	40 30       	cpi	r20, 0x00	; 0
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	59 07       	cpc	r21, r25
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	69 07       	cpc	r22, r25
    2196:	90 e4       	ldi	r25, 0x40	; 64
    2198:	79 07       	cpc	r23, r25
    219a:	60 f3       	brcs	.-40     	; 0x2174 <__mulsf3+0x174>
    219c:	2b 8f       	std	Y+27, r18	; 0x1b
    219e:	3c 8f       	std	Y+28, r19	; 0x1c
    21a0:	db 01       	movw	r26, r22
    21a2:	ca 01       	movw	r24, r20
    21a4:	8f 77       	andi	r24, 0x7F	; 127
    21a6:	90 70       	andi	r25, 0x00	; 0
    21a8:	a0 70       	andi	r26, 0x00	; 0
    21aa:	b0 70       	andi	r27, 0x00	; 0
    21ac:	80 34       	cpi	r24, 0x40	; 64
    21ae:	91 05       	cpc	r25, r1
    21b0:	a1 05       	cpc	r26, r1
    21b2:	b1 05       	cpc	r27, r1
    21b4:	61 f4       	brne	.+24     	; 0x21ce <__mulsf3+0x1ce>
    21b6:	47 fd       	sbrc	r20, 7
    21b8:	0a c0       	rjmp	.+20     	; 0x21ce <__mulsf3+0x1ce>
    21ba:	e1 14       	cp	r14, r1
    21bc:	f1 04       	cpc	r15, r1
    21be:	01 05       	cpc	r16, r1
    21c0:	11 05       	cpc	r17, r1
    21c2:	29 f0       	breq	.+10     	; 0x21ce <__mulsf3+0x1ce>
    21c4:	40 5c       	subi	r20, 0xC0	; 192
    21c6:	5f 4f       	sbci	r21, 0xFF	; 255
    21c8:	6f 4f       	sbci	r22, 0xFF	; 255
    21ca:	7f 4f       	sbci	r23, 0xFF	; 255
    21cc:	40 78       	andi	r20, 0x80	; 128
    21ce:	1a 8e       	std	Y+26, r1	; 0x1a
    21d0:	fe 17       	cp	r31, r30
    21d2:	11 f0       	breq	.+4      	; 0x21d8 <__mulsf3+0x1d8>
    21d4:	81 e0       	ldi	r24, 0x01	; 1
    21d6:	8a 8f       	std	Y+26, r24	; 0x1a
    21d8:	4d 8f       	std	Y+29, r20	; 0x1d
    21da:	5e 8f       	std	Y+30, r21	; 0x1e
    21dc:	6f 8f       	std	Y+31, r22	; 0x1f
    21de:	78 a3       	std	Y+32, r23	; 0x20
    21e0:	83 e0       	ldi	r24, 0x03	; 3
    21e2:	89 8f       	std	Y+25, r24	; 0x19
    21e4:	ce 01       	movw	r24, r28
    21e6:	49 96       	adiw	r24, 0x19	; 25
    21e8:	0e 94 37 13 	call	0x266e	; 0x266e <__pack_f>
    21ec:	a0 96       	adiw	r28, 0x20	; 32
    21ee:	e2 e1       	ldi	r30, 0x12	; 18
    21f0:	0c 94 b9 30 	jmp	0x6172	; 0x6172 <__epilogue_restores__>

000021f4 <__divsf3>:
    21f4:	a8 e1       	ldi	r26, 0x18	; 24
    21f6:	b0 e0       	ldi	r27, 0x00	; 0
    21f8:	e0 e0       	ldi	r30, 0x00	; 0
    21fa:	f1 e1       	ldi	r31, 0x11	; 17
    21fc:	0c 94 a5 30 	jmp	0x614a	; 0x614a <__prologue_saves__+0x10>
    2200:	69 83       	std	Y+1, r22	; 0x01
    2202:	7a 83       	std	Y+2, r23	; 0x02
    2204:	8b 83       	std	Y+3, r24	; 0x03
    2206:	9c 83       	std	Y+4, r25	; 0x04
    2208:	2d 83       	std	Y+5, r18	; 0x05
    220a:	3e 83       	std	Y+6, r19	; 0x06
    220c:	4f 83       	std	Y+7, r20	; 0x07
    220e:	58 87       	std	Y+8, r21	; 0x08
    2210:	b9 e0       	ldi	r27, 0x09	; 9
    2212:	eb 2e       	mov	r14, r27
    2214:	f1 2c       	mov	r15, r1
    2216:	ec 0e       	add	r14, r28
    2218:	fd 1e       	adc	r15, r29
    221a:	ce 01       	movw	r24, r28
    221c:	01 96       	adiw	r24, 0x01	; 1
    221e:	b7 01       	movw	r22, r14
    2220:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    2224:	8e 01       	movw	r16, r28
    2226:	0f 5e       	subi	r16, 0xEF	; 239
    2228:	1f 4f       	sbci	r17, 0xFF	; 255
    222a:	ce 01       	movw	r24, r28
    222c:	05 96       	adiw	r24, 0x05	; 5
    222e:	b8 01       	movw	r22, r16
    2230:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    2234:	29 85       	ldd	r18, Y+9	; 0x09
    2236:	22 30       	cpi	r18, 0x02	; 2
    2238:	08 f4       	brcc	.+2      	; 0x223c <__divsf3+0x48>
    223a:	7e c0       	rjmp	.+252    	; 0x2338 <__divsf3+0x144>
    223c:	39 89       	ldd	r19, Y+17	; 0x11
    223e:	32 30       	cpi	r19, 0x02	; 2
    2240:	10 f4       	brcc	.+4      	; 0x2246 <__divsf3+0x52>
    2242:	b8 01       	movw	r22, r16
    2244:	7c c0       	rjmp	.+248    	; 0x233e <__divsf3+0x14a>
    2246:	8a 85       	ldd	r24, Y+10	; 0x0a
    2248:	9a 89       	ldd	r25, Y+18	; 0x12
    224a:	89 27       	eor	r24, r25
    224c:	8a 87       	std	Y+10, r24	; 0x0a
    224e:	24 30       	cpi	r18, 0x04	; 4
    2250:	11 f0       	breq	.+4      	; 0x2256 <__divsf3+0x62>
    2252:	22 30       	cpi	r18, 0x02	; 2
    2254:	31 f4       	brne	.+12     	; 0x2262 <__divsf3+0x6e>
    2256:	23 17       	cp	r18, r19
    2258:	09 f0       	breq	.+2      	; 0x225c <__divsf3+0x68>
    225a:	6e c0       	rjmp	.+220    	; 0x2338 <__divsf3+0x144>
    225c:	65 e6       	ldi	r22, 0x65	; 101
    225e:	70 e0       	ldi	r23, 0x00	; 0
    2260:	6e c0       	rjmp	.+220    	; 0x233e <__divsf3+0x14a>
    2262:	34 30       	cpi	r19, 0x04	; 4
    2264:	39 f4       	brne	.+14     	; 0x2274 <__divsf3+0x80>
    2266:	1d 86       	std	Y+13, r1	; 0x0d
    2268:	1e 86       	std	Y+14, r1	; 0x0e
    226a:	1f 86       	std	Y+15, r1	; 0x0f
    226c:	18 8a       	std	Y+16, r1	; 0x10
    226e:	1c 86       	std	Y+12, r1	; 0x0c
    2270:	1b 86       	std	Y+11, r1	; 0x0b
    2272:	04 c0       	rjmp	.+8      	; 0x227c <__divsf3+0x88>
    2274:	32 30       	cpi	r19, 0x02	; 2
    2276:	21 f4       	brne	.+8      	; 0x2280 <__divsf3+0x8c>
    2278:	84 e0       	ldi	r24, 0x04	; 4
    227a:	89 87       	std	Y+9, r24	; 0x09
    227c:	b7 01       	movw	r22, r14
    227e:	5f c0       	rjmp	.+190    	; 0x233e <__divsf3+0x14a>
    2280:	2b 85       	ldd	r18, Y+11	; 0x0b
    2282:	3c 85       	ldd	r19, Y+12	; 0x0c
    2284:	8b 89       	ldd	r24, Y+19	; 0x13
    2286:	9c 89       	ldd	r25, Y+20	; 0x14
    2288:	28 1b       	sub	r18, r24
    228a:	39 0b       	sbc	r19, r25
    228c:	3c 87       	std	Y+12, r19	; 0x0c
    228e:	2b 87       	std	Y+11, r18	; 0x0b
    2290:	ed 84       	ldd	r14, Y+13	; 0x0d
    2292:	fe 84       	ldd	r15, Y+14	; 0x0e
    2294:	0f 85       	ldd	r16, Y+15	; 0x0f
    2296:	18 89       	ldd	r17, Y+16	; 0x10
    2298:	ad 88       	ldd	r10, Y+21	; 0x15
    229a:	be 88       	ldd	r11, Y+22	; 0x16
    229c:	cf 88       	ldd	r12, Y+23	; 0x17
    229e:	d8 8c       	ldd	r13, Y+24	; 0x18
    22a0:	ea 14       	cp	r14, r10
    22a2:	fb 04       	cpc	r15, r11
    22a4:	0c 05       	cpc	r16, r12
    22a6:	1d 05       	cpc	r17, r13
    22a8:	40 f4       	brcc	.+16     	; 0x22ba <__divsf3+0xc6>
    22aa:	ee 0c       	add	r14, r14
    22ac:	ff 1c       	adc	r15, r15
    22ae:	00 1f       	adc	r16, r16
    22b0:	11 1f       	adc	r17, r17
    22b2:	21 50       	subi	r18, 0x01	; 1
    22b4:	30 40       	sbci	r19, 0x00	; 0
    22b6:	3c 87       	std	Y+12, r19	; 0x0c
    22b8:	2b 87       	std	Y+11, r18	; 0x0b
    22ba:	20 e0       	ldi	r18, 0x00	; 0
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	40 e0       	ldi	r20, 0x00	; 0
    22c0:	50 e0       	ldi	r21, 0x00	; 0
    22c2:	80 e0       	ldi	r24, 0x00	; 0
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	a0 e0       	ldi	r26, 0x00	; 0
    22c8:	b0 e4       	ldi	r27, 0x40	; 64
    22ca:	60 e0       	ldi	r22, 0x00	; 0
    22cc:	70 e0       	ldi	r23, 0x00	; 0
    22ce:	ea 14       	cp	r14, r10
    22d0:	fb 04       	cpc	r15, r11
    22d2:	0c 05       	cpc	r16, r12
    22d4:	1d 05       	cpc	r17, r13
    22d6:	40 f0       	brcs	.+16     	; 0x22e8 <__divsf3+0xf4>
    22d8:	28 2b       	or	r18, r24
    22da:	39 2b       	or	r19, r25
    22dc:	4a 2b       	or	r20, r26
    22de:	5b 2b       	or	r21, r27
    22e0:	ea 18       	sub	r14, r10
    22e2:	fb 08       	sbc	r15, r11
    22e4:	0c 09       	sbc	r16, r12
    22e6:	1d 09       	sbc	r17, r13
    22e8:	b6 95       	lsr	r27
    22ea:	a7 95       	ror	r26
    22ec:	97 95       	ror	r25
    22ee:	87 95       	ror	r24
    22f0:	ee 0c       	add	r14, r14
    22f2:	ff 1c       	adc	r15, r15
    22f4:	00 1f       	adc	r16, r16
    22f6:	11 1f       	adc	r17, r17
    22f8:	6f 5f       	subi	r22, 0xFF	; 255
    22fa:	7f 4f       	sbci	r23, 0xFF	; 255
    22fc:	6f 31       	cpi	r22, 0x1F	; 31
    22fe:	71 05       	cpc	r23, r1
    2300:	31 f7       	brne	.-52     	; 0x22ce <__divsf3+0xda>
    2302:	da 01       	movw	r26, r20
    2304:	c9 01       	movw	r24, r18
    2306:	8f 77       	andi	r24, 0x7F	; 127
    2308:	90 70       	andi	r25, 0x00	; 0
    230a:	a0 70       	andi	r26, 0x00	; 0
    230c:	b0 70       	andi	r27, 0x00	; 0
    230e:	80 34       	cpi	r24, 0x40	; 64
    2310:	91 05       	cpc	r25, r1
    2312:	a1 05       	cpc	r26, r1
    2314:	b1 05       	cpc	r27, r1
    2316:	61 f4       	brne	.+24     	; 0x2330 <__divsf3+0x13c>
    2318:	27 fd       	sbrc	r18, 7
    231a:	0a c0       	rjmp	.+20     	; 0x2330 <__divsf3+0x13c>
    231c:	e1 14       	cp	r14, r1
    231e:	f1 04       	cpc	r15, r1
    2320:	01 05       	cpc	r16, r1
    2322:	11 05       	cpc	r17, r1
    2324:	29 f0       	breq	.+10     	; 0x2330 <__divsf3+0x13c>
    2326:	20 5c       	subi	r18, 0xC0	; 192
    2328:	3f 4f       	sbci	r19, 0xFF	; 255
    232a:	4f 4f       	sbci	r20, 0xFF	; 255
    232c:	5f 4f       	sbci	r21, 0xFF	; 255
    232e:	20 78       	andi	r18, 0x80	; 128
    2330:	2d 87       	std	Y+13, r18	; 0x0d
    2332:	3e 87       	std	Y+14, r19	; 0x0e
    2334:	4f 87       	std	Y+15, r20	; 0x0f
    2336:	58 8b       	std	Y+16, r21	; 0x10
    2338:	be 01       	movw	r22, r28
    233a:	67 5f       	subi	r22, 0xF7	; 247
    233c:	7f 4f       	sbci	r23, 0xFF	; 255
    233e:	cb 01       	movw	r24, r22
    2340:	0e 94 37 13 	call	0x266e	; 0x266e <__pack_f>
    2344:	68 96       	adiw	r28, 0x18	; 24
    2346:	ea e0       	ldi	r30, 0x0A	; 10
    2348:	0c 94 c1 30 	jmp	0x6182	; 0x6182 <__epilogue_restores__+0x10>

0000234c <__gtsf2>:
    234c:	a8 e1       	ldi	r26, 0x18	; 24
    234e:	b0 e0       	ldi	r27, 0x00	; 0
    2350:	ec ea       	ldi	r30, 0xAC	; 172
    2352:	f1 e1       	ldi	r31, 0x11	; 17
    2354:	0c 94 a9 30 	jmp	0x6152	; 0x6152 <__prologue_saves__+0x18>
    2358:	69 83       	std	Y+1, r22	; 0x01
    235a:	7a 83       	std	Y+2, r23	; 0x02
    235c:	8b 83       	std	Y+3, r24	; 0x03
    235e:	9c 83       	std	Y+4, r25	; 0x04
    2360:	2d 83       	std	Y+5, r18	; 0x05
    2362:	3e 83       	std	Y+6, r19	; 0x06
    2364:	4f 83       	std	Y+7, r20	; 0x07
    2366:	58 87       	std	Y+8, r21	; 0x08
    2368:	89 e0       	ldi	r24, 0x09	; 9
    236a:	e8 2e       	mov	r14, r24
    236c:	f1 2c       	mov	r15, r1
    236e:	ec 0e       	add	r14, r28
    2370:	fd 1e       	adc	r15, r29
    2372:	ce 01       	movw	r24, r28
    2374:	01 96       	adiw	r24, 0x01	; 1
    2376:	b7 01       	movw	r22, r14
    2378:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    237c:	8e 01       	movw	r16, r28
    237e:	0f 5e       	subi	r16, 0xEF	; 239
    2380:	1f 4f       	sbci	r17, 0xFF	; 255
    2382:	ce 01       	movw	r24, r28
    2384:	05 96       	adiw	r24, 0x05	; 5
    2386:	b8 01       	movw	r22, r16
    2388:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    238c:	89 85       	ldd	r24, Y+9	; 0x09
    238e:	82 30       	cpi	r24, 0x02	; 2
    2390:	40 f0       	brcs	.+16     	; 0x23a2 <__gtsf2+0x56>
    2392:	89 89       	ldd	r24, Y+17	; 0x11
    2394:	82 30       	cpi	r24, 0x02	; 2
    2396:	28 f0       	brcs	.+10     	; 0x23a2 <__gtsf2+0x56>
    2398:	c7 01       	movw	r24, r14
    239a:	b8 01       	movw	r22, r16
    239c:	0e 94 84 14 	call	0x2908	; 0x2908 <__fpcmp_parts_f>
    23a0:	01 c0       	rjmp	.+2      	; 0x23a4 <__gtsf2+0x58>
    23a2:	8f ef       	ldi	r24, 0xFF	; 255
    23a4:	68 96       	adiw	r28, 0x18	; 24
    23a6:	e6 e0       	ldi	r30, 0x06	; 6
    23a8:	0c 94 c5 30 	jmp	0x618a	; 0x618a <__epilogue_restores__+0x18>

000023ac <__gesf2>:
    23ac:	a8 e1       	ldi	r26, 0x18	; 24
    23ae:	b0 e0       	ldi	r27, 0x00	; 0
    23b0:	ec ed       	ldi	r30, 0xDC	; 220
    23b2:	f1 e1       	ldi	r31, 0x11	; 17
    23b4:	0c 94 a9 30 	jmp	0x6152	; 0x6152 <__prologue_saves__+0x18>
    23b8:	69 83       	std	Y+1, r22	; 0x01
    23ba:	7a 83       	std	Y+2, r23	; 0x02
    23bc:	8b 83       	std	Y+3, r24	; 0x03
    23be:	9c 83       	std	Y+4, r25	; 0x04
    23c0:	2d 83       	std	Y+5, r18	; 0x05
    23c2:	3e 83       	std	Y+6, r19	; 0x06
    23c4:	4f 83       	std	Y+7, r20	; 0x07
    23c6:	58 87       	std	Y+8, r21	; 0x08
    23c8:	89 e0       	ldi	r24, 0x09	; 9
    23ca:	e8 2e       	mov	r14, r24
    23cc:	f1 2c       	mov	r15, r1
    23ce:	ec 0e       	add	r14, r28
    23d0:	fd 1e       	adc	r15, r29
    23d2:	ce 01       	movw	r24, r28
    23d4:	01 96       	adiw	r24, 0x01	; 1
    23d6:	b7 01       	movw	r22, r14
    23d8:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    23dc:	8e 01       	movw	r16, r28
    23de:	0f 5e       	subi	r16, 0xEF	; 239
    23e0:	1f 4f       	sbci	r17, 0xFF	; 255
    23e2:	ce 01       	movw	r24, r28
    23e4:	05 96       	adiw	r24, 0x05	; 5
    23e6:	b8 01       	movw	r22, r16
    23e8:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    23ec:	89 85       	ldd	r24, Y+9	; 0x09
    23ee:	82 30       	cpi	r24, 0x02	; 2
    23f0:	40 f0       	brcs	.+16     	; 0x2402 <__gesf2+0x56>
    23f2:	89 89       	ldd	r24, Y+17	; 0x11
    23f4:	82 30       	cpi	r24, 0x02	; 2
    23f6:	28 f0       	brcs	.+10     	; 0x2402 <__gesf2+0x56>
    23f8:	c7 01       	movw	r24, r14
    23fa:	b8 01       	movw	r22, r16
    23fc:	0e 94 84 14 	call	0x2908	; 0x2908 <__fpcmp_parts_f>
    2400:	01 c0       	rjmp	.+2      	; 0x2404 <__gesf2+0x58>
    2402:	8f ef       	ldi	r24, 0xFF	; 255
    2404:	68 96       	adiw	r28, 0x18	; 24
    2406:	e6 e0       	ldi	r30, 0x06	; 6
    2408:	0c 94 c5 30 	jmp	0x618a	; 0x618a <__epilogue_restores__+0x18>

0000240c <__ltsf2>:
    240c:	a8 e1       	ldi	r26, 0x18	; 24
    240e:	b0 e0       	ldi	r27, 0x00	; 0
    2410:	ec e0       	ldi	r30, 0x0C	; 12
    2412:	f2 e1       	ldi	r31, 0x12	; 18
    2414:	0c 94 a9 30 	jmp	0x6152	; 0x6152 <__prologue_saves__+0x18>
    2418:	69 83       	std	Y+1, r22	; 0x01
    241a:	7a 83       	std	Y+2, r23	; 0x02
    241c:	8b 83       	std	Y+3, r24	; 0x03
    241e:	9c 83       	std	Y+4, r25	; 0x04
    2420:	2d 83       	std	Y+5, r18	; 0x05
    2422:	3e 83       	std	Y+6, r19	; 0x06
    2424:	4f 83       	std	Y+7, r20	; 0x07
    2426:	58 87       	std	Y+8, r21	; 0x08
    2428:	89 e0       	ldi	r24, 0x09	; 9
    242a:	e8 2e       	mov	r14, r24
    242c:	f1 2c       	mov	r15, r1
    242e:	ec 0e       	add	r14, r28
    2430:	fd 1e       	adc	r15, r29
    2432:	ce 01       	movw	r24, r28
    2434:	01 96       	adiw	r24, 0x01	; 1
    2436:	b7 01       	movw	r22, r14
    2438:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    243c:	8e 01       	movw	r16, r28
    243e:	0f 5e       	subi	r16, 0xEF	; 239
    2440:	1f 4f       	sbci	r17, 0xFF	; 255
    2442:	ce 01       	movw	r24, r28
    2444:	05 96       	adiw	r24, 0x05	; 5
    2446:	b8 01       	movw	r22, r16
    2448:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    244c:	89 85       	ldd	r24, Y+9	; 0x09
    244e:	82 30       	cpi	r24, 0x02	; 2
    2450:	40 f0       	brcs	.+16     	; 0x2462 <__ltsf2+0x56>
    2452:	89 89       	ldd	r24, Y+17	; 0x11
    2454:	82 30       	cpi	r24, 0x02	; 2
    2456:	28 f0       	brcs	.+10     	; 0x2462 <__ltsf2+0x56>
    2458:	c7 01       	movw	r24, r14
    245a:	b8 01       	movw	r22, r16
    245c:	0e 94 84 14 	call	0x2908	; 0x2908 <__fpcmp_parts_f>
    2460:	01 c0       	rjmp	.+2      	; 0x2464 <__ltsf2+0x58>
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	68 96       	adiw	r28, 0x18	; 24
    2466:	e6 e0       	ldi	r30, 0x06	; 6
    2468:	0c 94 c5 30 	jmp	0x618a	; 0x618a <__epilogue_restores__+0x18>

0000246c <__floatsisf>:
    246c:	a8 e0       	ldi	r26, 0x08	; 8
    246e:	b0 e0       	ldi	r27, 0x00	; 0
    2470:	ec e3       	ldi	r30, 0x3C	; 60
    2472:	f2 e1       	ldi	r31, 0x12	; 18
    2474:	0c 94 a6 30 	jmp	0x614c	; 0x614c <__prologue_saves__+0x12>
    2478:	9b 01       	movw	r18, r22
    247a:	ac 01       	movw	r20, r24
    247c:	83 e0       	ldi	r24, 0x03	; 3
    247e:	89 83       	std	Y+1, r24	; 0x01
    2480:	da 01       	movw	r26, r20
    2482:	c9 01       	movw	r24, r18
    2484:	88 27       	eor	r24, r24
    2486:	b7 fd       	sbrc	r27, 7
    2488:	83 95       	inc	r24
    248a:	99 27       	eor	r25, r25
    248c:	aa 27       	eor	r26, r26
    248e:	bb 27       	eor	r27, r27
    2490:	b8 2e       	mov	r11, r24
    2492:	21 15       	cp	r18, r1
    2494:	31 05       	cpc	r19, r1
    2496:	41 05       	cpc	r20, r1
    2498:	51 05       	cpc	r21, r1
    249a:	19 f4       	brne	.+6      	; 0x24a2 <__floatsisf+0x36>
    249c:	82 e0       	ldi	r24, 0x02	; 2
    249e:	89 83       	std	Y+1, r24	; 0x01
    24a0:	3a c0       	rjmp	.+116    	; 0x2516 <__floatsisf+0xaa>
    24a2:	88 23       	and	r24, r24
    24a4:	a9 f0       	breq	.+42     	; 0x24d0 <__floatsisf+0x64>
    24a6:	20 30       	cpi	r18, 0x00	; 0
    24a8:	80 e0       	ldi	r24, 0x00	; 0
    24aa:	38 07       	cpc	r19, r24
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	48 07       	cpc	r20, r24
    24b0:	80 e8       	ldi	r24, 0x80	; 128
    24b2:	58 07       	cpc	r21, r24
    24b4:	29 f4       	brne	.+10     	; 0x24c0 <__floatsisf+0x54>
    24b6:	60 e0       	ldi	r22, 0x00	; 0
    24b8:	70 e0       	ldi	r23, 0x00	; 0
    24ba:	80 e0       	ldi	r24, 0x00	; 0
    24bc:	9f ec       	ldi	r25, 0xCF	; 207
    24be:	30 c0       	rjmp	.+96     	; 0x2520 <__floatsisf+0xb4>
    24c0:	ee 24       	eor	r14, r14
    24c2:	ff 24       	eor	r15, r15
    24c4:	87 01       	movw	r16, r14
    24c6:	e2 1a       	sub	r14, r18
    24c8:	f3 0a       	sbc	r15, r19
    24ca:	04 0b       	sbc	r16, r20
    24cc:	15 0b       	sbc	r17, r21
    24ce:	02 c0       	rjmp	.+4      	; 0x24d4 <__floatsisf+0x68>
    24d0:	79 01       	movw	r14, r18
    24d2:	8a 01       	movw	r16, r20
    24d4:	8e e1       	ldi	r24, 0x1E	; 30
    24d6:	c8 2e       	mov	r12, r24
    24d8:	d1 2c       	mov	r13, r1
    24da:	dc 82       	std	Y+4, r13	; 0x04
    24dc:	cb 82       	std	Y+3, r12	; 0x03
    24de:	ed 82       	std	Y+5, r14	; 0x05
    24e0:	fe 82       	std	Y+6, r15	; 0x06
    24e2:	0f 83       	std	Y+7, r16	; 0x07
    24e4:	18 87       	std	Y+8, r17	; 0x08
    24e6:	c8 01       	movw	r24, r16
    24e8:	b7 01       	movw	r22, r14
    24ea:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <__clzsi2>
    24ee:	01 97       	sbiw	r24, 0x01	; 1
    24f0:	18 16       	cp	r1, r24
    24f2:	19 06       	cpc	r1, r25
    24f4:	84 f4       	brge	.+32     	; 0x2516 <__floatsisf+0xaa>
    24f6:	08 2e       	mov	r0, r24
    24f8:	04 c0       	rjmp	.+8      	; 0x2502 <__floatsisf+0x96>
    24fa:	ee 0c       	add	r14, r14
    24fc:	ff 1c       	adc	r15, r15
    24fe:	00 1f       	adc	r16, r16
    2500:	11 1f       	adc	r17, r17
    2502:	0a 94       	dec	r0
    2504:	d2 f7       	brpl	.-12     	; 0x24fa <__floatsisf+0x8e>
    2506:	ed 82       	std	Y+5, r14	; 0x05
    2508:	fe 82       	std	Y+6, r15	; 0x06
    250a:	0f 83       	std	Y+7, r16	; 0x07
    250c:	18 87       	std	Y+8, r17	; 0x08
    250e:	c8 1a       	sub	r12, r24
    2510:	d9 0a       	sbc	r13, r25
    2512:	dc 82       	std	Y+4, r13	; 0x04
    2514:	cb 82       	std	Y+3, r12	; 0x03
    2516:	ba 82       	std	Y+2, r11	; 0x02
    2518:	ce 01       	movw	r24, r28
    251a:	01 96       	adiw	r24, 0x01	; 1
    251c:	0e 94 37 13 	call	0x266e	; 0x266e <__pack_f>
    2520:	28 96       	adiw	r28, 0x08	; 8
    2522:	e9 e0       	ldi	r30, 0x09	; 9
    2524:	0c 94 c2 30 	jmp	0x6184	; 0x6184 <__epilogue_restores__+0x12>

00002528 <__fixsfsi>:
    2528:	ac e0       	ldi	r26, 0x0C	; 12
    252a:	b0 e0       	ldi	r27, 0x00	; 0
    252c:	ea e9       	ldi	r30, 0x9A	; 154
    252e:	f2 e1       	ldi	r31, 0x12	; 18
    2530:	0c 94 ad 30 	jmp	0x615a	; 0x615a <__prologue_saves__+0x20>
    2534:	69 83       	std	Y+1, r22	; 0x01
    2536:	7a 83       	std	Y+2, r23	; 0x02
    2538:	8b 83       	std	Y+3, r24	; 0x03
    253a:	9c 83       	std	Y+4, r25	; 0x04
    253c:	ce 01       	movw	r24, r28
    253e:	01 96       	adiw	r24, 0x01	; 1
    2540:	be 01       	movw	r22, r28
    2542:	6b 5f       	subi	r22, 0xFB	; 251
    2544:	7f 4f       	sbci	r23, 0xFF	; 255
    2546:	0e 94 0c 14 	call	0x2818	; 0x2818 <__unpack_f>
    254a:	8d 81       	ldd	r24, Y+5	; 0x05
    254c:	82 30       	cpi	r24, 0x02	; 2
    254e:	61 f1       	breq	.+88     	; 0x25a8 <__fixsfsi+0x80>
    2550:	82 30       	cpi	r24, 0x02	; 2
    2552:	50 f1       	brcs	.+84     	; 0x25a8 <__fixsfsi+0x80>
    2554:	84 30       	cpi	r24, 0x04	; 4
    2556:	21 f4       	brne	.+8      	; 0x2560 <__fixsfsi+0x38>
    2558:	8e 81       	ldd	r24, Y+6	; 0x06
    255a:	88 23       	and	r24, r24
    255c:	51 f1       	breq	.+84     	; 0x25b2 <__fixsfsi+0x8a>
    255e:	2e c0       	rjmp	.+92     	; 0x25bc <__fixsfsi+0x94>
    2560:	2f 81       	ldd	r18, Y+7	; 0x07
    2562:	38 85       	ldd	r19, Y+8	; 0x08
    2564:	37 fd       	sbrc	r19, 7
    2566:	20 c0       	rjmp	.+64     	; 0x25a8 <__fixsfsi+0x80>
    2568:	6e 81       	ldd	r22, Y+6	; 0x06
    256a:	2f 31       	cpi	r18, 0x1F	; 31
    256c:	31 05       	cpc	r19, r1
    256e:	1c f0       	brlt	.+6      	; 0x2576 <__fixsfsi+0x4e>
    2570:	66 23       	and	r22, r22
    2572:	f9 f0       	breq	.+62     	; 0x25b2 <__fixsfsi+0x8a>
    2574:	23 c0       	rjmp	.+70     	; 0x25bc <__fixsfsi+0x94>
    2576:	8e e1       	ldi	r24, 0x1E	; 30
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	82 1b       	sub	r24, r18
    257c:	93 0b       	sbc	r25, r19
    257e:	29 85       	ldd	r18, Y+9	; 0x09
    2580:	3a 85       	ldd	r19, Y+10	; 0x0a
    2582:	4b 85       	ldd	r20, Y+11	; 0x0b
    2584:	5c 85       	ldd	r21, Y+12	; 0x0c
    2586:	04 c0       	rjmp	.+8      	; 0x2590 <__fixsfsi+0x68>
    2588:	56 95       	lsr	r21
    258a:	47 95       	ror	r20
    258c:	37 95       	ror	r19
    258e:	27 95       	ror	r18
    2590:	8a 95       	dec	r24
    2592:	d2 f7       	brpl	.-12     	; 0x2588 <__fixsfsi+0x60>
    2594:	66 23       	and	r22, r22
    2596:	b1 f0       	breq	.+44     	; 0x25c4 <__fixsfsi+0x9c>
    2598:	50 95       	com	r21
    259a:	40 95       	com	r20
    259c:	30 95       	com	r19
    259e:	21 95       	neg	r18
    25a0:	3f 4f       	sbci	r19, 0xFF	; 255
    25a2:	4f 4f       	sbci	r20, 0xFF	; 255
    25a4:	5f 4f       	sbci	r21, 0xFF	; 255
    25a6:	0e c0       	rjmp	.+28     	; 0x25c4 <__fixsfsi+0x9c>
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	30 e0       	ldi	r19, 0x00	; 0
    25ac:	40 e0       	ldi	r20, 0x00	; 0
    25ae:	50 e0       	ldi	r21, 0x00	; 0
    25b0:	09 c0       	rjmp	.+18     	; 0x25c4 <__fixsfsi+0x9c>
    25b2:	2f ef       	ldi	r18, 0xFF	; 255
    25b4:	3f ef       	ldi	r19, 0xFF	; 255
    25b6:	4f ef       	ldi	r20, 0xFF	; 255
    25b8:	5f e7       	ldi	r21, 0x7F	; 127
    25ba:	04 c0       	rjmp	.+8      	; 0x25c4 <__fixsfsi+0x9c>
    25bc:	20 e0       	ldi	r18, 0x00	; 0
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	40 e0       	ldi	r20, 0x00	; 0
    25c2:	50 e8       	ldi	r21, 0x80	; 128
    25c4:	b9 01       	movw	r22, r18
    25c6:	ca 01       	movw	r24, r20
    25c8:	2c 96       	adiw	r28, 0x0c	; 12
    25ca:	e2 e0       	ldi	r30, 0x02	; 2
    25cc:	0c 94 c9 30 	jmp	0x6192	; 0x6192 <__epilogue_restores__+0x20>

000025d0 <__clzsi2>:
    25d0:	ef 92       	push	r14
    25d2:	ff 92       	push	r15
    25d4:	0f 93       	push	r16
    25d6:	1f 93       	push	r17
    25d8:	7b 01       	movw	r14, r22
    25da:	8c 01       	movw	r16, r24
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	e8 16       	cp	r14, r24
    25e0:	80 e0       	ldi	r24, 0x00	; 0
    25e2:	f8 06       	cpc	r15, r24
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	08 07       	cpc	r16, r24
    25e8:	80 e0       	ldi	r24, 0x00	; 0
    25ea:	18 07       	cpc	r17, r24
    25ec:	88 f4       	brcc	.+34     	; 0x2610 <__clzsi2+0x40>
    25ee:	8f ef       	ldi	r24, 0xFF	; 255
    25f0:	e8 16       	cp	r14, r24
    25f2:	f1 04       	cpc	r15, r1
    25f4:	01 05       	cpc	r16, r1
    25f6:	11 05       	cpc	r17, r1
    25f8:	31 f0       	breq	.+12     	; 0x2606 <__clzsi2+0x36>
    25fa:	28 f0       	brcs	.+10     	; 0x2606 <__clzsi2+0x36>
    25fc:	88 e0       	ldi	r24, 0x08	; 8
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	a0 e0       	ldi	r26, 0x00	; 0
    2602:	b0 e0       	ldi	r27, 0x00	; 0
    2604:	17 c0       	rjmp	.+46     	; 0x2634 <__clzsi2+0x64>
    2606:	80 e0       	ldi	r24, 0x00	; 0
    2608:	90 e0       	ldi	r25, 0x00	; 0
    260a:	a0 e0       	ldi	r26, 0x00	; 0
    260c:	b0 e0       	ldi	r27, 0x00	; 0
    260e:	12 c0       	rjmp	.+36     	; 0x2634 <__clzsi2+0x64>
    2610:	80 e0       	ldi	r24, 0x00	; 0
    2612:	e8 16       	cp	r14, r24
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	f8 06       	cpc	r15, r24
    2618:	80 e0       	ldi	r24, 0x00	; 0
    261a:	08 07       	cpc	r16, r24
    261c:	81 e0       	ldi	r24, 0x01	; 1
    261e:	18 07       	cpc	r17, r24
    2620:	28 f0       	brcs	.+10     	; 0x262c <__clzsi2+0x5c>
    2622:	88 e1       	ldi	r24, 0x18	; 24
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	a0 e0       	ldi	r26, 0x00	; 0
    2628:	b0 e0       	ldi	r27, 0x00	; 0
    262a:	04 c0       	rjmp	.+8      	; 0x2634 <__clzsi2+0x64>
    262c:	80 e1       	ldi	r24, 0x10	; 16
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	a0 e0       	ldi	r26, 0x00	; 0
    2632:	b0 e0       	ldi	r27, 0x00	; 0
    2634:	20 e2       	ldi	r18, 0x20	; 32
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	40 e0       	ldi	r20, 0x00	; 0
    263a:	50 e0       	ldi	r21, 0x00	; 0
    263c:	28 1b       	sub	r18, r24
    263e:	39 0b       	sbc	r19, r25
    2640:	4a 0b       	sbc	r20, r26
    2642:	5b 0b       	sbc	r21, r27
    2644:	04 c0       	rjmp	.+8      	; 0x264e <__clzsi2+0x7e>
    2646:	16 95       	lsr	r17
    2648:	07 95       	ror	r16
    264a:	f7 94       	ror	r15
    264c:	e7 94       	ror	r14
    264e:	8a 95       	dec	r24
    2650:	d2 f7       	brpl	.-12     	; 0x2646 <__clzsi2+0x76>
    2652:	f7 01       	movw	r30, r14
    2654:	e3 59       	subi	r30, 0x93	; 147
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	80 81       	ld	r24, Z
    265a:	28 1b       	sub	r18, r24
    265c:	31 09       	sbc	r19, r1
    265e:	41 09       	sbc	r20, r1
    2660:	51 09       	sbc	r21, r1
    2662:	c9 01       	movw	r24, r18
    2664:	1f 91       	pop	r17
    2666:	0f 91       	pop	r16
    2668:	ff 90       	pop	r15
    266a:	ef 90       	pop	r14
    266c:	08 95       	ret

0000266e <__pack_f>:
    266e:	df 92       	push	r13
    2670:	ef 92       	push	r14
    2672:	ff 92       	push	r15
    2674:	0f 93       	push	r16
    2676:	1f 93       	push	r17
    2678:	fc 01       	movw	r30, r24
    267a:	e4 80       	ldd	r14, Z+4	; 0x04
    267c:	f5 80       	ldd	r15, Z+5	; 0x05
    267e:	06 81       	ldd	r16, Z+6	; 0x06
    2680:	17 81       	ldd	r17, Z+7	; 0x07
    2682:	d1 80       	ldd	r13, Z+1	; 0x01
    2684:	80 81       	ld	r24, Z
    2686:	82 30       	cpi	r24, 0x02	; 2
    2688:	48 f4       	brcc	.+18     	; 0x269c <__pack_f+0x2e>
    268a:	80 e0       	ldi	r24, 0x00	; 0
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	a0 e1       	ldi	r26, 0x10	; 16
    2690:	b0 e0       	ldi	r27, 0x00	; 0
    2692:	e8 2a       	or	r14, r24
    2694:	f9 2a       	or	r15, r25
    2696:	0a 2b       	or	r16, r26
    2698:	1b 2b       	or	r17, r27
    269a:	a5 c0       	rjmp	.+330    	; 0x27e6 <__pack_f+0x178>
    269c:	84 30       	cpi	r24, 0x04	; 4
    269e:	09 f4       	brne	.+2      	; 0x26a2 <__pack_f+0x34>
    26a0:	9f c0       	rjmp	.+318    	; 0x27e0 <__pack_f+0x172>
    26a2:	82 30       	cpi	r24, 0x02	; 2
    26a4:	21 f4       	brne	.+8      	; 0x26ae <__pack_f+0x40>
    26a6:	ee 24       	eor	r14, r14
    26a8:	ff 24       	eor	r15, r15
    26aa:	87 01       	movw	r16, r14
    26ac:	05 c0       	rjmp	.+10     	; 0x26b8 <__pack_f+0x4a>
    26ae:	e1 14       	cp	r14, r1
    26b0:	f1 04       	cpc	r15, r1
    26b2:	01 05       	cpc	r16, r1
    26b4:	11 05       	cpc	r17, r1
    26b6:	19 f4       	brne	.+6      	; 0x26be <__pack_f+0x50>
    26b8:	e0 e0       	ldi	r30, 0x00	; 0
    26ba:	f0 e0       	ldi	r31, 0x00	; 0
    26bc:	96 c0       	rjmp	.+300    	; 0x27ea <__pack_f+0x17c>
    26be:	62 81       	ldd	r22, Z+2	; 0x02
    26c0:	73 81       	ldd	r23, Z+3	; 0x03
    26c2:	9f ef       	ldi	r25, 0xFF	; 255
    26c4:	62 38       	cpi	r22, 0x82	; 130
    26c6:	79 07       	cpc	r23, r25
    26c8:	0c f0       	brlt	.+2      	; 0x26cc <__pack_f+0x5e>
    26ca:	5b c0       	rjmp	.+182    	; 0x2782 <__pack_f+0x114>
    26cc:	22 e8       	ldi	r18, 0x82	; 130
    26ce:	3f ef       	ldi	r19, 0xFF	; 255
    26d0:	26 1b       	sub	r18, r22
    26d2:	37 0b       	sbc	r19, r23
    26d4:	2a 31       	cpi	r18, 0x1A	; 26
    26d6:	31 05       	cpc	r19, r1
    26d8:	2c f0       	brlt	.+10     	; 0x26e4 <__pack_f+0x76>
    26da:	20 e0       	ldi	r18, 0x00	; 0
    26dc:	30 e0       	ldi	r19, 0x00	; 0
    26de:	40 e0       	ldi	r20, 0x00	; 0
    26e0:	50 e0       	ldi	r21, 0x00	; 0
    26e2:	2a c0       	rjmp	.+84     	; 0x2738 <__pack_f+0xca>
    26e4:	b8 01       	movw	r22, r16
    26e6:	a7 01       	movw	r20, r14
    26e8:	02 2e       	mov	r0, r18
    26ea:	04 c0       	rjmp	.+8      	; 0x26f4 <__pack_f+0x86>
    26ec:	76 95       	lsr	r23
    26ee:	67 95       	ror	r22
    26f0:	57 95       	ror	r21
    26f2:	47 95       	ror	r20
    26f4:	0a 94       	dec	r0
    26f6:	d2 f7       	brpl	.-12     	; 0x26ec <__pack_f+0x7e>
    26f8:	81 e0       	ldi	r24, 0x01	; 1
    26fa:	90 e0       	ldi	r25, 0x00	; 0
    26fc:	a0 e0       	ldi	r26, 0x00	; 0
    26fe:	b0 e0       	ldi	r27, 0x00	; 0
    2700:	04 c0       	rjmp	.+8      	; 0x270a <__pack_f+0x9c>
    2702:	88 0f       	add	r24, r24
    2704:	99 1f       	adc	r25, r25
    2706:	aa 1f       	adc	r26, r26
    2708:	bb 1f       	adc	r27, r27
    270a:	2a 95       	dec	r18
    270c:	d2 f7       	brpl	.-12     	; 0x2702 <__pack_f+0x94>
    270e:	01 97       	sbiw	r24, 0x01	; 1
    2710:	a1 09       	sbc	r26, r1
    2712:	b1 09       	sbc	r27, r1
    2714:	8e 21       	and	r24, r14
    2716:	9f 21       	and	r25, r15
    2718:	a0 23       	and	r26, r16
    271a:	b1 23       	and	r27, r17
    271c:	00 97       	sbiw	r24, 0x00	; 0
    271e:	a1 05       	cpc	r26, r1
    2720:	b1 05       	cpc	r27, r1
    2722:	21 f0       	breq	.+8      	; 0x272c <__pack_f+0xbe>
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	a0 e0       	ldi	r26, 0x00	; 0
    272a:	b0 e0       	ldi	r27, 0x00	; 0
    272c:	9a 01       	movw	r18, r20
    272e:	ab 01       	movw	r20, r22
    2730:	28 2b       	or	r18, r24
    2732:	39 2b       	or	r19, r25
    2734:	4a 2b       	or	r20, r26
    2736:	5b 2b       	or	r21, r27
    2738:	da 01       	movw	r26, r20
    273a:	c9 01       	movw	r24, r18
    273c:	8f 77       	andi	r24, 0x7F	; 127
    273e:	90 70       	andi	r25, 0x00	; 0
    2740:	a0 70       	andi	r26, 0x00	; 0
    2742:	b0 70       	andi	r27, 0x00	; 0
    2744:	80 34       	cpi	r24, 0x40	; 64
    2746:	91 05       	cpc	r25, r1
    2748:	a1 05       	cpc	r26, r1
    274a:	b1 05       	cpc	r27, r1
    274c:	39 f4       	brne	.+14     	; 0x275c <__pack_f+0xee>
    274e:	27 ff       	sbrs	r18, 7
    2750:	09 c0       	rjmp	.+18     	; 0x2764 <__pack_f+0xf6>
    2752:	20 5c       	subi	r18, 0xC0	; 192
    2754:	3f 4f       	sbci	r19, 0xFF	; 255
    2756:	4f 4f       	sbci	r20, 0xFF	; 255
    2758:	5f 4f       	sbci	r21, 0xFF	; 255
    275a:	04 c0       	rjmp	.+8      	; 0x2764 <__pack_f+0xf6>
    275c:	21 5c       	subi	r18, 0xC1	; 193
    275e:	3f 4f       	sbci	r19, 0xFF	; 255
    2760:	4f 4f       	sbci	r20, 0xFF	; 255
    2762:	5f 4f       	sbci	r21, 0xFF	; 255
    2764:	e0 e0       	ldi	r30, 0x00	; 0
    2766:	f0 e0       	ldi	r31, 0x00	; 0
    2768:	20 30       	cpi	r18, 0x00	; 0
    276a:	a0 e0       	ldi	r26, 0x00	; 0
    276c:	3a 07       	cpc	r19, r26
    276e:	a0 e0       	ldi	r26, 0x00	; 0
    2770:	4a 07       	cpc	r20, r26
    2772:	a0 e4       	ldi	r26, 0x40	; 64
    2774:	5a 07       	cpc	r21, r26
    2776:	10 f0       	brcs	.+4      	; 0x277c <__pack_f+0x10e>
    2778:	e1 e0       	ldi	r30, 0x01	; 1
    277a:	f0 e0       	ldi	r31, 0x00	; 0
    277c:	79 01       	movw	r14, r18
    277e:	8a 01       	movw	r16, r20
    2780:	27 c0       	rjmp	.+78     	; 0x27d0 <__pack_f+0x162>
    2782:	60 38       	cpi	r22, 0x80	; 128
    2784:	71 05       	cpc	r23, r1
    2786:	64 f5       	brge	.+88     	; 0x27e0 <__pack_f+0x172>
    2788:	fb 01       	movw	r30, r22
    278a:	e1 58       	subi	r30, 0x81	; 129
    278c:	ff 4f       	sbci	r31, 0xFF	; 255
    278e:	d8 01       	movw	r26, r16
    2790:	c7 01       	movw	r24, r14
    2792:	8f 77       	andi	r24, 0x7F	; 127
    2794:	90 70       	andi	r25, 0x00	; 0
    2796:	a0 70       	andi	r26, 0x00	; 0
    2798:	b0 70       	andi	r27, 0x00	; 0
    279a:	80 34       	cpi	r24, 0x40	; 64
    279c:	91 05       	cpc	r25, r1
    279e:	a1 05       	cpc	r26, r1
    27a0:	b1 05       	cpc	r27, r1
    27a2:	39 f4       	brne	.+14     	; 0x27b2 <__pack_f+0x144>
    27a4:	e7 fe       	sbrs	r14, 7
    27a6:	0d c0       	rjmp	.+26     	; 0x27c2 <__pack_f+0x154>
    27a8:	80 e4       	ldi	r24, 0x40	; 64
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	a0 e0       	ldi	r26, 0x00	; 0
    27ae:	b0 e0       	ldi	r27, 0x00	; 0
    27b0:	04 c0       	rjmp	.+8      	; 0x27ba <__pack_f+0x14c>
    27b2:	8f e3       	ldi	r24, 0x3F	; 63
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	a0 e0       	ldi	r26, 0x00	; 0
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	e8 0e       	add	r14, r24
    27bc:	f9 1e       	adc	r15, r25
    27be:	0a 1f       	adc	r16, r26
    27c0:	1b 1f       	adc	r17, r27
    27c2:	17 ff       	sbrs	r17, 7
    27c4:	05 c0       	rjmp	.+10     	; 0x27d0 <__pack_f+0x162>
    27c6:	16 95       	lsr	r17
    27c8:	07 95       	ror	r16
    27ca:	f7 94       	ror	r15
    27cc:	e7 94       	ror	r14
    27ce:	31 96       	adiw	r30, 0x01	; 1
    27d0:	87 e0       	ldi	r24, 0x07	; 7
    27d2:	16 95       	lsr	r17
    27d4:	07 95       	ror	r16
    27d6:	f7 94       	ror	r15
    27d8:	e7 94       	ror	r14
    27da:	8a 95       	dec	r24
    27dc:	d1 f7       	brne	.-12     	; 0x27d2 <__pack_f+0x164>
    27de:	05 c0       	rjmp	.+10     	; 0x27ea <__pack_f+0x17c>
    27e0:	ee 24       	eor	r14, r14
    27e2:	ff 24       	eor	r15, r15
    27e4:	87 01       	movw	r16, r14
    27e6:	ef ef       	ldi	r30, 0xFF	; 255
    27e8:	f0 e0       	ldi	r31, 0x00	; 0
    27ea:	6e 2f       	mov	r22, r30
    27ec:	67 95       	ror	r22
    27ee:	66 27       	eor	r22, r22
    27f0:	67 95       	ror	r22
    27f2:	90 2f       	mov	r25, r16
    27f4:	9f 77       	andi	r25, 0x7F	; 127
    27f6:	d7 94       	ror	r13
    27f8:	dd 24       	eor	r13, r13
    27fa:	d7 94       	ror	r13
    27fc:	8e 2f       	mov	r24, r30
    27fe:	86 95       	lsr	r24
    2800:	49 2f       	mov	r20, r25
    2802:	46 2b       	or	r20, r22
    2804:	58 2f       	mov	r21, r24
    2806:	5d 29       	or	r21, r13
    2808:	b7 01       	movw	r22, r14
    280a:	ca 01       	movw	r24, r20
    280c:	1f 91       	pop	r17
    280e:	0f 91       	pop	r16
    2810:	ff 90       	pop	r15
    2812:	ef 90       	pop	r14
    2814:	df 90       	pop	r13
    2816:	08 95       	ret

00002818 <__unpack_f>:
    2818:	fc 01       	movw	r30, r24
    281a:	db 01       	movw	r26, r22
    281c:	40 81       	ld	r20, Z
    281e:	51 81       	ldd	r21, Z+1	; 0x01
    2820:	22 81       	ldd	r18, Z+2	; 0x02
    2822:	62 2f       	mov	r22, r18
    2824:	6f 77       	andi	r22, 0x7F	; 127
    2826:	70 e0       	ldi	r23, 0x00	; 0
    2828:	22 1f       	adc	r18, r18
    282a:	22 27       	eor	r18, r18
    282c:	22 1f       	adc	r18, r18
    282e:	93 81       	ldd	r25, Z+3	; 0x03
    2830:	89 2f       	mov	r24, r25
    2832:	88 0f       	add	r24, r24
    2834:	82 2b       	or	r24, r18
    2836:	28 2f       	mov	r18, r24
    2838:	30 e0       	ldi	r19, 0x00	; 0
    283a:	99 1f       	adc	r25, r25
    283c:	99 27       	eor	r25, r25
    283e:	99 1f       	adc	r25, r25
    2840:	11 96       	adiw	r26, 0x01	; 1
    2842:	9c 93       	st	X, r25
    2844:	11 97       	sbiw	r26, 0x01	; 1
    2846:	21 15       	cp	r18, r1
    2848:	31 05       	cpc	r19, r1
    284a:	a9 f5       	brne	.+106    	; 0x28b6 <__unpack_f+0x9e>
    284c:	41 15       	cp	r20, r1
    284e:	51 05       	cpc	r21, r1
    2850:	61 05       	cpc	r22, r1
    2852:	71 05       	cpc	r23, r1
    2854:	11 f4       	brne	.+4      	; 0x285a <__unpack_f+0x42>
    2856:	82 e0       	ldi	r24, 0x02	; 2
    2858:	37 c0       	rjmp	.+110    	; 0x28c8 <__unpack_f+0xb0>
    285a:	82 e8       	ldi	r24, 0x82	; 130
    285c:	9f ef       	ldi	r25, 0xFF	; 255
    285e:	13 96       	adiw	r26, 0x03	; 3
    2860:	9c 93       	st	X, r25
    2862:	8e 93       	st	-X, r24
    2864:	12 97       	sbiw	r26, 0x02	; 2
    2866:	9a 01       	movw	r18, r20
    2868:	ab 01       	movw	r20, r22
    286a:	67 e0       	ldi	r22, 0x07	; 7
    286c:	22 0f       	add	r18, r18
    286e:	33 1f       	adc	r19, r19
    2870:	44 1f       	adc	r20, r20
    2872:	55 1f       	adc	r21, r21
    2874:	6a 95       	dec	r22
    2876:	d1 f7       	brne	.-12     	; 0x286c <__unpack_f+0x54>
    2878:	83 e0       	ldi	r24, 0x03	; 3
    287a:	8c 93       	st	X, r24
    287c:	0d c0       	rjmp	.+26     	; 0x2898 <__unpack_f+0x80>
    287e:	22 0f       	add	r18, r18
    2880:	33 1f       	adc	r19, r19
    2882:	44 1f       	adc	r20, r20
    2884:	55 1f       	adc	r21, r21
    2886:	12 96       	adiw	r26, 0x02	; 2
    2888:	8d 91       	ld	r24, X+
    288a:	9c 91       	ld	r25, X
    288c:	13 97       	sbiw	r26, 0x03	; 3
    288e:	01 97       	sbiw	r24, 0x01	; 1
    2890:	13 96       	adiw	r26, 0x03	; 3
    2892:	9c 93       	st	X, r25
    2894:	8e 93       	st	-X, r24
    2896:	12 97       	sbiw	r26, 0x02	; 2
    2898:	20 30       	cpi	r18, 0x00	; 0
    289a:	80 e0       	ldi	r24, 0x00	; 0
    289c:	38 07       	cpc	r19, r24
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	48 07       	cpc	r20, r24
    28a2:	80 e4       	ldi	r24, 0x40	; 64
    28a4:	58 07       	cpc	r21, r24
    28a6:	58 f3       	brcs	.-42     	; 0x287e <__unpack_f+0x66>
    28a8:	14 96       	adiw	r26, 0x04	; 4
    28aa:	2d 93       	st	X+, r18
    28ac:	3d 93       	st	X+, r19
    28ae:	4d 93       	st	X+, r20
    28b0:	5c 93       	st	X, r21
    28b2:	17 97       	sbiw	r26, 0x07	; 7
    28b4:	08 95       	ret
    28b6:	2f 3f       	cpi	r18, 0xFF	; 255
    28b8:	31 05       	cpc	r19, r1
    28ba:	79 f4       	brne	.+30     	; 0x28da <__unpack_f+0xc2>
    28bc:	41 15       	cp	r20, r1
    28be:	51 05       	cpc	r21, r1
    28c0:	61 05       	cpc	r22, r1
    28c2:	71 05       	cpc	r23, r1
    28c4:	19 f4       	brne	.+6      	; 0x28cc <__unpack_f+0xb4>
    28c6:	84 e0       	ldi	r24, 0x04	; 4
    28c8:	8c 93       	st	X, r24
    28ca:	08 95       	ret
    28cc:	64 ff       	sbrs	r22, 4
    28ce:	03 c0       	rjmp	.+6      	; 0x28d6 <__unpack_f+0xbe>
    28d0:	81 e0       	ldi	r24, 0x01	; 1
    28d2:	8c 93       	st	X, r24
    28d4:	12 c0       	rjmp	.+36     	; 0x28fa <__unpack_f+0xe2>
    28d6:	1c 92       	st	X, r1
    28d8:	10 c0       	rjmp	.+32     	; 0x28fa <__unpack_f+0xe2>
    28da:	2f 57       	subi	r18, 0x7F	; 127
    28dc:	30 40       	sbci	r19, 0x00	; 0
    28de:	13 96       	adiw	r26, 0x03	; 3
    28e0:	3c 93       	st	X, r19
    28e2:	2e 93       	st	-X, r18
    28e4:	12 97       	sbiw	r26, 0x02	; 2
    28e6:	83 e0       	ldi	r24, 0x03	; 3
    28e8:	8c 93       	st	X, r24
    28ea:	87 e0       	ldi	r24, 0x07	; 7
    28ec:	44 0f       	add	r20, r20
    28ee:	55 1f       	adc	r21, r21
    28f0:	66 1f       	adc	r22, r22
    28f2:	77 1f       	adc	r23, r23
    28f4:	8a 95       	dec	r24
    28f6:	d1 f7       	brne	.-12     	; 0x28ec <__unpack_f+0xd4>
    28f8:	70 64       	ori	r23, 0x40	; 64
    28fa:	14 96       	adiw	r26, 0x04	; 4
    28fc:	4d 93       	st	X+, r20
    28fe:	5d 93       	st	X+, r21
    2900:	6d 93       	st	X+, r22
    2902:	7c 93       	st	X, r23
    2904:	17 97       	sbiw	r26, 0x07	; 7
    2906:	08 95       	ret

00002908 <__fpcmp_parts_f>:
    2908:	1f 93       	push	r17
    290a:	dc 01       	movw	r26, r24
    290c:	fb 01       	movw	r30, r22
    290e:	9c 91       	ld	r25, X
    2910:	92 30       	cpi	r25, 0x02	; 2
    2912:	08 f4       	brcc	.+2      	; 0x2916 <__fpcmp_parts_f+0xe>
    2914:	47 c0       	rjmp	.+142    	; 0x29a4 <__fpcmp_parts_f+0x9c>
    2916:	80 81       	ld	r24, Z
    2918:	82 30       	cpi	r24, 0x02	; 2
    291a:	08 f4       	brcc	.+2      	; 0x291e <__fpcmp_parts_f+0x16>
    291c:	43 c0       	rjmp	.+134    	; 0x29a4 <__fpcmp_parts_f+0x9c>
    291e:	94 30       	cpi	r25, 0x04	; 4
    2920:	51 f4       	brne	.+20     	; 0x2936 <__fpcmp_parts_f+0x2e>
    2922:	11 96       	adiw	r26, 0x01	; 1
    2924:	1c 91       	ld	r17, X
    2926:	84 30       	cpi	r24, 0x04	; 4
    2928:	99 f5       	brne	.+102    	; 0x2990 <__fpcmp_parts_f+0x88>
    292a:	81 81       	ldd	r24, Z+1	; 0x01
    292c:	68 2f       	mov	r22, r24
    292e:	70 e0       	ldi	r23, 0x00	; 0
    2930:	61 1b       	sub	r22, r17
    2932:	71 09       	sbc	r23, r1
    2934:	3f c0       	rjmp	.+126    	; 0x29b4 <__fpcmp_parts_f+0xac>
    2936:	84 30       	cpi	r24, 0x04	; 4
    2938:	21 f0       	breq	.+8      	; 0x2942 <__fpcmp_parts_f+0x3a>
    293a:	92 30       	cpi	r25, 0x02	; 2
    293c:	31 f4       	brne	.+12     	; 0x294a <__fpcmp_parts_f+0x42>
    293e:	82 30       	cpi	r24, 0x02	; 2
    2940:	b9 f1       	breq	.+110    	; 0x29b0 <__fpcmp_parts_f+0xa8>
    2942:	81 81       	ldd	r24, Z+1	; 0x01
    2944:	88 23       	and	r24, r24
    2946:	89 f1       	breq	.+98     	; 0x29aa <__fpcmp_parts_f+0xa2>
    2948:	2d c0       	rjmp	.+90     	; 0x29a4 <__fpcmp_parts_f+0x9c>
    294a:	11 96       	adiw	r26, 0x01	; 1
    294c:	1c 91       	ld	r17, X
    294e:	11 97       	sbiw	r26, 0x01	; 1
    2950:	82 30       	cpi	r24, 0x02	; 2
    2952:	f1 f0       	breq	.+60     	; 0x2990 <__fpcmp_parts_f+0x88>
    2954:	81 81       	ldd	r24, Z+1	; 0x01
    2956:	18 17       	cp	r17, r24
    2958:	d9 f4       	brne	.+54     	; 0x2990 <__fpcmp_parts_f+0x88>
    295a:	12 96       	adiw	r26, 0x02	; 2
    295c:	2d 91       	ld	r18, X+
    295e:	3c 91       	ld	r19, X
    2960:	13 97       	sbiw	r26, 0x03	; 3
    2962:	82 81       	ldd	r24, Z+2	; 0x02
    2964:	93 81       	ldd	r25, Z+3	; 0x03
    2966:	82 17       	cp	r24, r18
    2968:	93 07       	cpc	r25, r19
    296a:	94 f0       	brlt	.+36     	; 0x2990 <__fpcmp_parts_f+0x88>
    296c:	28 17       	cp	r18, r24
    296e:	39 07       	cpc	r19, r25
    2970:	bc f0       	brlt	.+46     	; 0x29a0 <__fpcmp_parts_f+0x98>
    2972:	14 96       	adiw	r26, 0x04	; 4
    2974:	8d 91       	ld	r24, X+
    2976:	9d 91       	ld	r25, X+
    2978:	0d 90       	ld	r0, X+
    297a:	bc 91       	ld	r27, X
    297c:	a0 2d       	mov	r26, r0
    297e:	24 81       	ldd	r18, Z+4	; 0x04
    2980:	35 81       	ldd	r19, Z+5	; 0x05
    2982:	46 81       	ldd	r20, Z+6	; 0x06
    2984:	57 81       	ldd	r21, Z+7	; 0x07
    2986:	28 17       	cp	r18, r24
    2988:	39 07       	cpc	r19, r25
    298a:	4a 07       	cpc	r20, r26
    298c:	5b 07       	cpc	r21, r27
    298e:	18 f4       	brcc	.+6      	; 0x2996 <__fpcmp_parts_f+0x8e>
    2990:	11 23       	and	r17, r17
    2992:	41 f0       	breq	.+16     	; 0x29a4 <__fpcmp_parts_f+0x9c>
    2994:	0a c0       	rjmp	.+20     	; 0x29aa <__fpcmp_parts_f+0xa2>
    2996:	82 17       	cp	r24, r18
    2998:	93 07       	cpc	r25, r19
    299a:	a4 07       	cpc	r26, r20
    299c:	b5 07       	cpc	r27, r21
    299e:	40 f4       	brcc	.+16     	; 0x29b0 <__fpcmp_parts_f+0xa8>
    29a0:	11 23       	and	r17, r17
    29a2:	19 f0       	breq	.+6      	; 0x29aa <__fpcmp_parts_f+0xa2>
    29a4:	61 e0       	ldi	r22, 0x01	; 1
    29a6:	70 e0       	ldi	r23, 0x00	; 0
    29a8:	05 c0       	rjmp	.+10     	; 0x29b4 <__fpcmp_parts_f+0xac>
    29aa:	6f ef       	ldi	r22, 0xFF	; 255
    29ac:	7f ef       	ldi	r23, 0xFF	; 255
    29ae:	02 c0       	rjmp	.+4      	; 0x29b4 <__fpcmp_parts_f+0xac>
    29b0:	60 e0       	ldi	r22, 0x00	; 0
    29b2:	70 e0       	ldi	r23, 0x00	; 0
    29b4:	cb 01       	movw	r24, r22
    29b6:	1f 91       	pop	r17
    29b8:	08 95       	ret

000029ba <DIO_SetPinDirection>:
#include "../../uitils/BIT_MATH.h"

#include "DIO.h"

void DIO_SetPinDirection(u8 GropuIDcopy, u8 PinIDcopy, u8 DirId)
{
    29ba:	df 93       	push	r29
    29bc:	cf 93       	push	r28
    29be:	cd b7       	in	r28, 0x3d	; 61
    29c0:	de b7       	in	r29, 0x3e	; 62
    29c2:	27 97       	sbiw	r28, 0x07	; 7
    29c4:	0f b6       	in	r0, 0x3f	; 63
    29c6:	f8 94       	cli
    29c8:	de bf       	out	0x3e, r29	; 62
    29ca:	0f be       	out	0x3f, r0	; 63
    29cc:	cd bf       	out	0x3d, r28	; 61
    29ce:	89 83       	std	Y+1, r24	; 0x01
    29d0:	6a 83       	std	Y+2, r22	; 0x02
    29d2:	4b 83       	std	Y+3, r20	; 0x03
    if (DirId == INPUT)
    29d4:	8b 81       	ldd	r24, Y+3	; 0x03
    29d6:	88 23       	and	r24, r24
    29d8:	09 f0       	breq	.+2      	; 0x29dc <DIO_SetPinDirection+0x22>
    29da:	74 c0       	rjmp	.+232    	; 0x2ac4 <DIO_SetPinDirection+0x10a>
    {
        switch (GropuIDcopy)
    29dc:	89 81       	ldd	r24, Y+1	; 0x01
    29de:	28 2f       	mov	r18, r24
    29e0:	30 e0       	ldi	r19, 0x00	; 0
    29e2:	3f 83       	std	Y+7, r19	; 0x07
    29e4:	2e 83       	std	Y+6, r18	; 0x06
    29e6:	8e 81       	ldd	r24, Y+6	; 0x06
    29e8:	9f 81       	ldd	r25, Y+7	; 0x07
    29ea:	81 30       	cpi	r24, 0x01	; 1
    29ec:	91 05       	cpc	r25, r1
    29ee:	59 f1       	breq	.+86     	; 0x2a46 <DIO_SetPinDirection+0x8c>
    29f0:	2e 81       	ldd	r18, Y+6	; 0x06
    29f2:	3f 81       	ldd	r19, Y+7	; 0x07
    29f4:	22 30       	cpi	r18, 0x02	; 2
    29f6:	31 05       	cpc	r19, r1
    29f8:	2c f4       	brge	.+10     	; 0x2a04 <DIO_SetPinDirection+0x4a>
    29fa:	8e 81       	ldd	r24, Y+6	; 0x06
    29fc:	9f 81       	ldd	r25, Y+7	; 0x07
    29fe:	00 97       	sbiw	r24, 0x00	; 0
    2a00:	69 f0       	breq	.+26     	; 0x2a1c <DIO_SetPinDirection+0x62>
    2a02:	d2 c0       	rjmp	.+420    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
    2a04:	2e 81       	ldd	r18, Y+6	; 0x06
    2a06:	3f 81       	ldd	r19, Y+7	; 0x07
    2a08:	22 30       	cpi	r18, 0x02	; 2
    2a0a:	31 05       	cpc	r19, r1
    2a0c:	89 f1       	breq	.+98     	; 0x2a70 <DIO_SetPinDirection+0xb6>
    2a0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2a10:	9f 81       	ldd	r25, Y+7	; 0x07
    2a12:	83 30       	cpi	r24, 0x03	; 3
    2a14:	91 05       	cpc	r25, r1
    2a16:	09 f4       	brne	.+2      	; 0x2a1a <DIO_SetPinDirection+0x60>
    2a18:	40 c0       	rjmp	.+128    	; 0x2a9a <DIO_SetPinDirection+0xe0>
    2a1a:	c6 c0       	rjmp	.+396    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
        {
        case GROUPA:
            CLR_BIT(DDRA_Register, PinIDcopy);
    2a1c:	aa e3       	ldi	r26, 0x3A	; 58
    2a1e:	b0 e0       	ldi	r27, 0x00	; 0
    2a20:	ea e3       	ldi	r30, 0x3A	; 58
    2a22:	f0 e0       	ldi	r31, 0x00	; 0
    2a24:	80 81       	ld	r24, Z
    2a26:	48 2f       	mov	r20, r24
    2a28:	8a 81       	ldd	r24, Y+2	; 0x02
    2a2a:	28 2f       	mov	r18, r24
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	81 e0       	ldi	r24, 0x01	; 1
    2a30:	90 e0       	ldi	r25, 0x00	; 0
    2a32:	02 2e       	mov	r0, r18
    2a34:	02 c0       	rjmp	.+4      	; 0x2a3a <DIO_SetPinDirection+0x80>
    2a36:	88 0f       	add	r24, r24
    2a38:	99 1f       	adc	r25, r25
    2a3a:	0a 94       	dec	r0
    2a3c:	e2 f7       	brpl	.-8      	; 0x2a36 <DIO_SetPinDirection+0x7c>
    2a3e:	80 95       	com	r24
    2a40:	84 23       	and	r24, r20
    2a42:	8c 93       	st	X, r24
    2a44:	b1 c0       	rjmp	.+354    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPB:
            CLR_BIT(DDRB_Register, PinIDcopy);
    2a46:	a7 e3       	ldi	r26, 0x37	; 55
    2a48:	b0 e0       	ldi	r27, 0x00	; 0
    2a4a:	e7 e3       	ldi	r30, 0x37	; 55
    2a4c:	f0 e0       	ldi	r31, 0x00	; 0
    2a4e:	80 81       	ld	r24, Z
    2a50:	48 2f       	mov	r20, r24
    2a52:	8a 81       	ldd	r24, Y+2	; 0x02
    2a54:	28 2f       	mov	r18, r24
    2a56:	30 e0       	ldi	r19, 0x00	; 0
    2a58:	81 e0       	ldi	r24, 0x01	; 1
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	02 2e       	mov	r0, r18
    2a5e:	02 c0       	rjmp	.+4      	; 0x2a64 <DIO_SetPinDirection+0xaa>
    2a60:	88 0f       	add	r24, r24
    2a62:	99 1f       	adc	r25, r25
    2a64:	0a 94       	dec	r0
    2a66:	e2 f7       	brpl	.-8      	; 0x2a60 <DIO_SetPinDirection+0xa6>
    2a68:	80 95       	com	r24
    2a6a:	84 23       	and	r24, r20
    2a6c:	8c 93       	st	X, r24
    2a6e:	9c c0       	rjmp	.+312    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPC:
            CLR_BIT(DDRC_Register, PinIDcopy);
    2a70:	a4 e3       	ldi	r26, 0x34	; 52
    2a72:	b0 e0       	ldi	r27, 0x00	; 0
    2a74:	e4 e3       	ldi	r30, 0x34	; 52
    2a76:	f0 e0       	ldi	r31, 0x00	; 0
    2a78:	80 81       	ld	r24, Z
    2a7a:	48 2f       	mov	r20, r24
    2a7c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a7e:	28 2f       	mov	r18, r24
    2a80:	30 e0       	ldi	r19, 0x00	; 0
    2a82:	81 e0       	ldi	r24, 0x01	; 1
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	02 2e       	mov	r0, r18
    2a88:	02 c0       	rjmp	.+4      	; 0x2a8e <DIO_SetPinDirection+0xd4>
    2a8a:	88 0f       	add	r24, r24
    2a8c:	99 1f       	adc	r25, r25
    2a8e:	0a 94       	dec	r0
    2a90:	e2 f7       	brpl	.-8      	; 0x2a8a <DIO_SetPinDirection+0xd0>
    2a92:	80 95       	com	r24
    2a94:	84 23       	and	r24, r20
    2a96:	8c 93       	st	X, r24
    2a98:	87 c0       	rjmp	.+270    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPD:
            CLR_BIT(DDRD_Register, PinIDcopy);
    2a9a:	a1 e3       	ldi	r26, 0x31	; 49
    2a9c:	b0 e0       	ldi	r27, 0x00	; 0
    2a9e:	e1 e3       	ldi	r30, 0x31	; 49
    2aa0:	f0 e0       	ldi	r31, 0x00	; 0
    2aa2:	80 81       	ld	r24, Z
    2aa4:	48 2f       	mov	r20, r24
    2aa6:	8a 81       	ldd	r24, Y+2	; 0x02
    2aa8:	28 2f       	mov	r18, r24
    2aaa:	30 e0       	ldi	r19, 0x00	; 0
    2aac:	81 e0       	ldi	r24, 0x01	; 1
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	02 2e       	mov	r0, r18
    2ab2:	02 c0       	rjmp	.+4      	; 0x2ab8 <DIO_SetPinDirection+0xfe>
    2ab4:	88 0f       	add	r24, r24
    2ab6:	99 1f       	adc	r25, r25
    2ab8:	0a 94       	dec	r0
    2aba:	e2 f7       	brpl	.-8      	; 0x2ab4 <DIO_SetPinDirection+0xfa>
    2abc:	80 95       	com	r24
    2abe:	84 23       	and	r24, r20
    2ac0:	8c 93       	st	X, r24
    2ac2:	72 c0       	rjmp	.+228    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        }
    }
    else if (DirId == OUTPUT)
    2ac4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ac6:	81 30       	cpi	r24, 0x01	; 1
    2ac8:	09 f0       	breq	.+2      	; 0x2acc <DIO_SetPinDirection+0x112>
    2aca:	6e c0       	rjmp	.+220    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
    {
        switch (GropuIDcopy)
    2acc:	89 81       	ldd	r24, Y+1	; 0x01
    2ace:	28 2f       	mov	r18, r24
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	3d 83       	std	Y+5, r19	; 0x05
    2ad4:	2c 83       	std	Y+4, r18	; 0x04
    2ad6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ad8:	9d 81       	ldd	r25, Y+5	; 0x05
    2ada:	81 30       	cpi	r24, 0x01	; 1
    2adc:	91 05       	cpc	r25, r1
    2ade:	49 f1       	breq	.+82     	; 0x2b32 <DIO_SetPinDirection+0x178>
    2ae0:	2c 81       	ldd	r18, Y+4	; 0x04
    2ae2:	3d 81       	ldd	r19, Y+5	; 0x05
    2ae4:	22 30       	cpi	r18, 0x02	; 2
    2ae6:	31 05       	cpc	r19, r1
    2ae8:	2c f4       	brge	.+10     	; 0x2af4 <DIO_SetPinDirection+0x13a>
    2aea:	8c 81       	ldd	r24, Y+4	; 0x04
    2aec:	9d 81       	ldd	r25, Y+5	; 0x05
    2aee:	00 97       	sbiw	r24, 0x00	; 0
    2af0:	61 f0       	breq	.+24     	; 0x2b0a <DIO_SetPinDirection+0x150>
    2af2:	5a c0       	rjmp	.+180    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
    2af4:	2c 81       	ldd	r18, Y+4	; 0x04
    2af6:	3d 81       	ldd	r19, Y+5	; 0x05
    2af8:	22 30       	cpi	r18, 0x02	; 2
    2afa:	31 05       	cpc	r19, r1
    2afc:	71 f1       	breq	.+92     	; 0x2b5a <DIO_SetPinDirection+0x1a0>
    2afe:	8c 81       	ldd	r24, Y+4	; 0x04
    2b00:	9d 81       	ldd	r25, Y+5	; 0x05
    2b02:	83 30       	cpi	r24, 0x03	; 3
    2b04:	91 05       	cpc	r25, r1
    2b06:	e9 f1       	breq	.+122    	; 0x2b82 <DIO_SetPinDirection+0x1c8>
    2b08:	4f c0       	rjmp	.+158    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
        {
        case GROUPA:
            SET_BIT(DDRA_Register, PinIDcopy);
    2b0a:	aa e3       	ldi	r26, 0x3A	; 58
    2b0c:	b0 e0       	ldi	r27, 0x00	; 0
    2b0e:	ea e3       	ldi	r30, 0x3A	; 58
    2b10:	f0 e0       	ldi	r31, 0x00	; 0
    2b12:	80 81       	ld	r24, Z
    2b14:	48 2f       	mov	r20, r24
    2b16:	8a 81       	ldd	r24, Y+2	; 0x02
    2b18:	28 2f       	mov	r18, r24
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	81 e0       	ldi	r24, 0x01	; 1
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	02 2e       	mov	r0, r18
    2b22:	02 c0       	rjmp	.+4      	; 0x2b28 <DIO_SetPinDirection+0x16e>
    2b24:	88 0f       	add	r24, r24
    2b26:	99 1f       	adc	r25, r25
    2b28:	0a 94       	dec	r0
    2b2a:	e2 f7       	brpl	.-8      	; 0x2b24 <DIO_SetPinDirection+0x16a>
    2b2c:	84 2b       	or	r24, r20
    2b2e:	8c 93       	st	X, r24
    2b30:	3b c0       	rjmp	.+118    	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPB:
            SET_BIT(DDRB_Register, PinIDcopy);
    2b32:	a7 e3       	ldi	r26, 0x37	; 55
    2b34:	b0 e0       	ldi	r27, 0x00	; 0
    2b36:	e7 e3       	ldi	r30, 0x37	; 55
    2b38:	f0 e0       	ldi	r31, 0x00	; 0
    2b3a:	80 81       	ld	r24, Z
    2b3c:	48 2f       	mov	r20, r24
    2b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b40:	28 2f       	mov	r18, r24
    2b42:	30 e0       	ldi	r19, 0x00	; 0
    2b44:	81 e0       	ldi	r24, 0x01	; 1
    2b46:	90 e0       	ldi	r25, 0x00	; 0
    2b48:	02 2e       	mov	r0, r18
    2b4a:	02 c0       	rjmp	.+4      	; 0x2b50 <DIO_SetPinDirection+0x196>
    2b4c:	88 0f       	add	r24, r24
    2b4e:	99 1f       	adc	r25, r25
    2b50:	0a 94       	dec	r0
    2b52:	e2 f7       	brpl	.-8      	; 0x2b4c <DIO_SetPinDirection+0x192>
    2b54:	84 2b       	or	r24, r20
    2b56:	8c 93       	st	X, r24
    2b58:	27 c0       	rjmp	.+78     	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPC:
            SET_BIT(DDRC_Register, PinIDcopy);
    2b5a:	a4 e3       	ldi	r26, 0x34	; 52
    2b5c:	b0 e0       	ldi	r27, 0x00	; 0
    2b5e:	e4 e3       	ldi	r30, 0x34	; 52
    2b60:	f0 e0       	ldi	r31, 0x00	; 0
    2b62:	80 81       	ld	r24, Z
    2b64:	48 2f       	mov	r20, r24
    2b66:	8a 81       	ldd	r24, Y+2	; 0x02
    2b68:	28 2f       	mov	r18, r24
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	81 e0       	ldi	r24, 0x01	; 1
    2b6e:	90 e0       	ldi	r25, 0x00	; 0
    2b70:	02 2e       	mov	r0, r18
    2b72:	02 c0       	rjmp	.+4      	; 0x2b78 <DIO_SetPinDirection+0x1be>
    2b74:	88 0f       	add	r24, r24
    2b76:	99 1f       	adc	r25, r25
    2b78:	0a 94       	dec	r0
    2b7a:	e2 f7       	brpl	.-8      	; 0x2b74 <DIO_SetPinDirection+0x1ba>
    2b7c:	84 2b       	or	r24, r20
    2b7e:	8c 93       	st	X, r24
    2b80:	13 c0       	rjmp	.+38     	; 0x2ba8 <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPD:
            SET_BIT(DDRD_Register, PinIDcopy);
    2b82:	a1 e3       	ldi	r26, 0x31	; 49
    2b84:	b0 e0       	ldi	r27, 0x00	; 0
    2b86:	e1 e3       	ldi	r30, 0x31	; 49
    2b88:	f0 e0       	ldi	r31, 0x00	; 0
    2b8a:	80 81       	ld	r24, Z
    2b8c:	48 2f       	mov	r20, r24
    2b8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b90:	28 2f       	mov	r18, r24
    2b92:	30 e0       	ldi	r19, 0x00	; 0
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	90 e0       	ldi	r25, 0x00	; 0
    2b98:	02 2e       	mov	r0, r18
    2b9a:	02 c0       	rjmp	.+4      	; 0x2ba0 <DIO_SetPinDirection+0x1e6>
    2b9c:	88 0f       	add	r24, r24
    2b9e:	99 1f       	adc	r25, r25
    2ba0:	0a 94       	dec	r0
    2ba2:	e2 f7       	brpl	.-8      	; 0x2b9c <DIO_SetPinDirection+0x1e2>
    2ba4:	84 2b       	or	r24, r20
    2ba6:	8c 93       	st	X, r24
    }
    else
    {

    }
}
    2ba8:	27 96       	adiw	r28, 0x07	; 7
    2baa:	0f b6       	in	r0, 0x3f	; 63
    2bac:	f8 94       	cli
    2bae:	de bf       	out	0x3e, r29	; 62
    2bb0:	0f be       	out	0x3f, r0	; 63
    2bb2:	cd bf       	out	0x3d, r28	; 61
    2bb4:	cf 91       	pop	r28
    2bb6:	df 91       	pop	r29
    2bb8:	08 95       	ret

00002bba <DIO_SetPinValue>:

void DIO_SetPinValue(u8 GropuIDcopy, u8 PinIDcopy, u8 ValueId)
{
    2bba:	df 93       	push	r29
    2bbc:	cf 93       	push	r28
    2bbe:	cd b7       	in	r28, 0x3d	; 61
    2bc0:	de b7       	in	r29, 0x3e	; 62
    2bc2:	27 97       	sbiw	r28, 0x07	; 7
    2bc4:	0f b6       	in	r0, 0x3f	; 63
    2bc6:	f8 94       	cli
    2bc8:	de bf       	out	0x3e, r29	; 62
    2bca:	0f be       	out	0x3f, r0	; 63
    2bcc:	cd bf       	out	0x3d, r28	; 61
    2bce:	89 83       	std	Y+1, r24	; 0x01
    2bd0:	6a 83       	std	Y+2, r22	; 0x02
    2bd2:	4b 83       	std	Y+3, r20	; 0x03
    if (ValueId == LOW)
    2bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd6:	88 23       	and	r24, r24
    2bd8:	09 f0       	breq	.+2      	; 0x2bdc <DIO_SetPinValue+0x22>
    2bda:	74 c0       	rjmp	.+232    	; 0x2cc4 <DIO_SetPinValue+0x10a>
    {
        switch (GropuIDcopy)
    2bdc:	89 81       	ldd	r24, Y+1	; 0x01
    2bde:	28 2f       	mov	r18, r24
    2be0:	30 e0       	ldi	r19, 0x00	; 0
    2be2:	3f 83       	std	Y+7, r19	; 0x07
    2be4:	2e 83       	std	Y+6, r18	; 0x06
    2be6:	8e 81       	ldd	r24, Y+6	; 0x06
    2be8:	9f 81       	ldd	r25, Y+7	; 0x07
    2bea:	81 30       	cpi	r24, 0x01	; 1
    2bec:	91 05       	cpc	r25, r1
    2bee:	59 f1       	breq	.+86     	; 0x2c46 <DIO_SetPinValue+0x8c>
    2bf0:	2e 81       	ldd	r18, Y+6	; 0x06
    2bf2:	3f 81       	ldd	r19, Y+7	; 0x07
    2bf4:	22 30       	cpi	r18, 0x02	; 2
    2bf6:	31 05       	cpc	r19, r1
    2bf8:	2c f4       	brge	.+10     	; 0x2c04 <DIO_SetPinValue+0x4a>
    2bfa:	8e 81       	ldd	r24, Y+6	; 0x06
    2bfc:	9f 81       	ldd	r25, Y+7	; 0x07
    2bfe:	00 97       	sbiw	r24, 0x00	; 0
    2c00:	69 f0       	breq	.+26     	; 0x2c1c <DIO_SetPinValue+0x62>
    2c02:	d2 c0       	rjmp	.+420    	; 0x2da8 <DIO_SetPinValue+0x1ee>
    2c04:	2e 81       	ldd	r18, Y+6	; 0x06
    2c06:	3f 81       	ldd	r19, Y+7	; 0x07
    2c08:	22 30       	cpi	r18, 0x02	; 2
    2c0a:	31 05       	cpc	r19, r1
    2c0c:	89 f1       	breq	.+98     	; 0x2c70 <DIO_SetPinValue+0xb6>
    2c0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2c10:	9f 81       	ldd	r25, Y+7	; 0x07
    2c12:	83 30       	cpi	r24, 0x03	; 3
    2c14:	91 05       	cpc	r25, r1
    2c16:	09 f4       	brne	.+2      	; 0x2c1a <DIO_SetPinValue+0x60>
    2c18:	40 c0       	rjmp	.+128    	; 0x2c9a <DIO_SetPinValue+0xe0>
    2c1a:	c6 c0       	rjmp	.+396    	; 0x2da8 <DIO_SetPinValue+0x1ee>
        {
        case GROUPA:
            CLR_BIT(PORTA_Register, PinIDcopy);
    2c1c:	ab e3       	ldi	r26, 0x3B	; 59
    2c1e:	b0 e0       	ldi	r27, 0x00	; 0
    2c20:	eb e3       	ldi	r30, 0x3B	; 59
    2c22:	f0 e0       	ldi	r31, 0x00	; 0
    2c24:	80 81       	ld	r24, Z
    2c26:	48 2f       	mov	r20, r24
    2c28:	8a 81       	ldd	r24, Y+2	; 0x02
    2c2a:	28 2f       	mov	r18, r24
    2c2c:	30 e0       	ldi	r19, 0x00	; 0
    2c2e:	81 e0       	ldi	r24, 0x01	; 1
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	02 2e       	mov	r0, r18
    2c34:	02 c0       	rjmp	.+4      	; 0x2c3a <DIO_SetPinValue+0x80>
    2c36:	88 0f       	add	r24, r24
    2c38:	99 1f       	adc	r25, r25
    2c3a:	0a 94       	dec	r0
    2c3c:	e2 f7       	brpl	.-8      	; 0x2c36 <DIO_SetPinValue+0x7c>
    2c3e:	80 95       	com	r24
    2c40:	84 23       	and	r24, r20
    2c42:	8c 93       	st	X, r24
    2c44:	b1 c0       	rjmp	.+354    	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPB:
            CLR_BIT(PORTB_Register, PinIDcopy);
    2c46:	a8 e3       	ldi	r26, 0x38	; 56
    2c48:	b0 e0       	ldi	r27, 0x00	; 0
    2c4a:	e8 e3       	ldi	r30, 0x38	; 56
    2c4c:	f0 e0       	ldi	r31, 0x00	; 0
    2c4e:	80 81       	ld	r24, Z
    2c50:	48 2f       	mov	r20, r24
    2c52:	8a 81       	ldd	r24, Y+2	; 0x02
    2c54:	28 2f       	mov	r18, r24
    2c56:	30 e0       	ldi	r19, 0x00	; 0
    2c58:	81 e0       	ldi	r24, 0x01	; 1
    2c5a:	90 e0       	ldi	r25, 0x00	; 0
    2c5c:	02 2e       	mov	r0, r18
    2c5e:	02 c0       	rjmp	.+4      	; 0x2c64 <DIO_SetPinValue+0xaa>
    2c60:	88 0f       	add	r24, r24
    2c62:	99 1f       	adc	r25, r25
    2c64:	0a 94       	dec	r0
    2c66:	e2 f7       	brpl	.-8      	; 0x2c60 <DIO_SetPinValue+0xa6>
    2c68:	80 95       	com	r24
    2c6a:	84 23       	and	r24, r20
    2c6c:	8c 93       	st	X, r24
    2c6e:	9c c0       	rjmp	.+312    	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPC:
            CLR_BIT(PORTC_Register, PinIDcopy);
    2c70:	a5 e3       	ldi	r26, 0x35	; 53
    2c72:	b0 e0       	ldi	r27, 0x00	; 0
    2c74:	e5 e3       	ldi	r30, 0x35	; 53
    2c76:	f0 e0       	ldi	r31, 0x00	; 0
    2c78:	80 81       	ld	r24, Z
    2c7a:	48 2f       	mov	r20, r24
    2c7c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c7e:	28 2f       	mov	r18, r24
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	81 e0       	ldi	r24, 0x01	; 1
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	02 2e       	mov	r0, r18
    2c88:	02 c0       	rjmp	.+4      	; 0x2c8e <DIO_SetPinValue+0xd4>
    2c8a:	88 0f       	add	r24, r24
    2c8c:	99 1f       	adc	r25, r25
    2c8e:	0a 94       	dec	r0
    2c90:	e2 f7       	brpl	.-8      	; 0x2c8a <DIO_SetPinValue+0xd0>
    2c92:	80 95       	com	r24
    2c94:	84 23       	and	r24, r20
    2c96:	8c 93       	st	X, r24
    2c98:	87 c0       	rjmp	.+270    	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPD:
            CLR_BIT(PORTD_Register, PinIDcopy);
    2c9a:	a2 e3       	ldi	r26, 0x32	; 50
    2c9c:	b0 e0       	ldi	r27, 0x00	; 0
    2c9e:	e2 e3       	ldi	r30, 0x32	; 50
    2ca0:	f0 e0       	ldi	r31, 0x00	; 0
    2ca2:	80 81       	ld	r24, Z
    2ca4:	48 2f       	mov	r20, r24
    2ca6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca8:	28 2f       	mov	r18, r24
    2caa:	30 e0       	ldi	r19, 0x00	; 0
    2cac:	81 e0       	ldi	r24, 0x01	; 1
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	02 2e       	mov	r0, r18
    2cb2:	02 c0       	rjmp	.+4      	; 0x2cb8 <DIO_SetPinValue+0xfe>
    2cb4:	88 0f       	add	r24, r24
    2cb6:	99 1f       	adc	r25, r25
    2cb8:	0a 94       	dec	r0
    2cba:	e2 f7       	brpl	.-8      	; 0x2cb4 <DIO_SetPinValue+0xfa>
    2cbc:	80 95       	com	r24
    2cbe:	84 23       	and	r24, r20
    2cc0:	8c 93       	st	X, r24
    2cc2:	72 c0       	rjmp	.+228    	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        }
    }
    else if (ValueId == HIGH)
    2cc4:	8b 81       	ldd	r24, Y+3	; 0x03
    2cc6:	81 30       	cpi	r24, 0x01	; 1
    2cc8:	09 f0       	breq	.+2      	; 0x2ccc <DIO_SetPinValue+0x112>
    2cca:	6e c0       	rjmp	.+220    	; 0x2da8 <DIO_SetPinValue+0x1ee>
    {
        switch (GropuIDcopy)
    2ccc:	89 81       	ldd	r24, Y+1	; 0x01
    2cce:	28 2f       	mov	r18, r24
    2cd0:	30 e0       	ldi	r19, 0x00	; 0
    2cd2:	3d 83       	std	Y+5, r19	; 0x05
    2cd4:	2c 83       	std	Y+4, r18	; 0x04
    2cd6:	8c 81       	ldd	r24, Y+4	; 0x04
    2cd8:	9d 81       	ldd	r25, Y+5	; 0x05
    2cda:	81 30       	cpi	r24, 0x01	; 1
    2cdc:	91 05       	cpc	r25, r1
    2cde:	49 f1       	breq	.+82     	; 0x2d32 <DIO_SetPinValue+0x178>
    2ce0:	2c 81       	ldd	r18, Y+4	; 0x04
    2ce2:	3d 81       	ldd	r19, Y+5	; 0x05
    2ce4:	22 30       	cpi	r18, 0x02	; 2
    2ce6:	31 05       	cpc	r19, r1
    2ce8:	2c f4       	brge	.+10     	; 0x2cf4 <DIO_SetPinValue+0x13a>
    2cea:	8c 81       	ldd	r24, Y+4	; 0x04
    2cec:	9d 81       	ldd	r25, Y+5	; 0x05
    2cee:	00 97       	sbiw	r24, 0x00	; 0
    2cf0:	61 f0       	breq	.+24     	; 0x2d0a <DIO_SetPinValue+0x150>
    2cf2:	5a c0       	rjmp	.+180    	; 0x2da8 <DIO_SetPinValue+0x1ee>
    2cf4:	2c 81       	ldd	r18, Y+4	; 0x04
    2cf6:	3d 81       	ldd	r19, Y+5	; 0x05
    2cf8:	22 30       	cpi	r18, 0x02	; 2
    2cfa:	31 05       	cpc	r19, r1
    2cfc:	71 f1       	breq	.+92     	; 0x2d5a <DIO_SetPinValue+0x1a0>
    2cfe:	8c 81       	ldd	r24, Y+4	; 0x04
    2d00:	9d 81       	ldd	r25, Y+5	; 0x05
    2d02:	83 30       	cpi	r24, 0x03	; 3
    2d04:	91 05       	cpc	r25, r1
    2d06:	e9 f1       	breq	.+122    	; 0x2d82 <DIO_SetPinValue+0x1c8>
    2d08:	4f c0       	rjmp	.+158    	; 0x2da8 <DIO_SetPinValue+0x1ee>
        {
        case GROUPA:
            SET_BIT(PORTA_Register, PinIDcopy);
    2d0a:	ab e3       	ldi	r26, 0x3B	; 59
    2d0c:	b0 e0       	ldi	r27, 0x00	; 0
    2d0e:	eb e3       	ldi	r30, 0x3B	; 59
    2d10:	f0 e0       	ldi	r31, 0x00	; 0
    2d12:	80 81       	ld	r24, Z
    2d14:	48 2f       	mov	r20, r24
    2d16:	8a 81       	ldd	r24, Y+2	; 0x02
    2d18:	28 2f       	mov	r18, r24
    2d1a:	30 e0       	ldi	r19, 0x00	; 0
    2d1c:	81 e0       	ldi	r24, 0x01	; 1
    2d1e:	90 e0       	ldi	r25, 0x00	; 0
    2d20:	02 2e       	mov	r0, r18
    2d22:	02 c0       	rjmp	.+4      	; 0x2d28 <DIO_SetPinValue+0x16e>
    2d24:	88 0f       	add	r24, r24
    2d26:	99 1f       	adc	r25, r25
    2d28:	0a 94       	dec	r0
    2d2a:	e2 f7       	brpl	.-8      	; 0x2d24 <DIO_SetPinValue+0x16a>
    2d2c:	84 2b       	or	r24, r20
    2d2e:	8c 93       	st	X, r24
    2d30:	3b c0       	rjmp	.+118    	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPB:
            SET_BIT(PORTB_Register, PinIDcopy);
    2d32:	a8 e3       	ldi	r26, 0x38	; 56
    2d34:	b0 e0       	ldi	r27, 0x00	; 0
    2d36:	e8 e3       	ldi	r30, 0x38	; 56
    2d38:	f0 e0       	ldi	r31, 0x00	; 0
    2d3a:	80 81       	ld	r24, Z
    2d3c:	48 2f       	mov	r20, r24
    2d3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d40:	28 2f       	mov	r18, r24
    2d42:	30 e0       	ldi	r19, 0x00	; 0
    2d44:	81 e0       	ldi	r24, 0x01	; 1
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	02 2e       	mov	r0, r18
    2d4a:	02 c0       	rjmp	.+4      	; 0x2d50 <DIO_SetPinValue+0x196>
    2d4c:	88 0f       	add	r24, r24
    2d4e:	99 1f       	adc	r25, r25
    2d50:	0a 94       	dec	r0
    2d52:	e2 f7       	brpl	.-8      	; 0x2d4c <DIO_SetPinValue+0x192>
    2d54:	84 2b       	or	r24, r20
    2d56:	8c 93       	st	X, r24
    2d58:	27 c0       	rjmp	.+78     	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPC:
            SET_BIT(PORTC_Register, PinIDcopy);
    2d5a:	a5 e3       	ldi	r26, 0x35	; 53
    2d5c:	b0 e0       	ldi	r27, 0x00	; 0
    2d5e:	e5 e3       	ldi	r30, 0x35	; 53
    2d60:	f0 e0       	ldi	r31, 0x00	; 0
    2d62:	80 81       	ld	r24, Z
    2d64:	48 2f       	mov	r20, r24
    2d66:	8a 81       	ldd	r24, Y+2	; 0x02
    2d68:	28 2f       	mov	r18, r24
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	81 e0       	ldi	r24, 0x01	; 1
    2d6e:	90 e0       	ldi	r25, 0x00	; 0
    2d70:	02 2e       	mov	r0, r18
    2d72:	02 c0       	rjmp	.+4      	; 0x2d78 <DIO_SetPinValue+0x1be>
    2d74:	88 0f       	add	r24, r24
    2d76:	99 1f       	adc	r25, r25
    2d78:	0a 94       	dec	r0
    2d7a:	e2 f7       	brpl	.-8      	; 0x2d74 <DIO_SetPinValue+0x1ba>
    2d7c:	84 2b       	or	r24, r20
    2d7e:	8c 93       	st	X, r24
    2d80:	13 c0       	rjmp	.+38     	; 0x2da8 <DIO_SetPinValue+0x1ee>
            break;
        case GROUPD:
            SET_BIT(PORTD_Register, PinIDcopy);
    2d82:	a2 e3       	ldi	r26, 0x32	; 50
    2d84:	b0 e0       	ldi	r27, 0x00	; 0
    2d86:	e2 e3       	ldi	r30, 0x32	; 50
    2d88:	f0 e0       	ldi	r31, 0x00	; 0
    2d8a:	80 81       	ld	r24, Z
    2d8c:	48 2f       	mov	r20, r24
    2d8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d90:	28 2f       	mov	r18, r24
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	81 e0       	ldi	r24, 0x01	; 1
    2d96:	90 e0       	ldi	r25, 0x00	; 0
    2d98:	02 2e       	mov	r0, r18
    2d9a:	02 c0       	rjmp	.+4      	; 0x2da0 <DIO_SetPinValue+0x1e6>
    2d9c:	88 0f       	add	r24, r24
    2d9e:	99 1f       	adc	r25, r25
    2da0:	0a 94       	dec	r0
    2da2:	e2 f7       	brpl	.-8      	; 0x2d9c <DIO_SetPinValue+0x1e2>
    2da4:	84 2b       	or	r24, r20
    2da6:	8c 93       	st	X, r24
            break;
        }
    }
}
    2da8:	27 96       	adiw	r28, 0x07	; 7
    2daa:	0f b6       	in	r0, 0x3f	; 63
    2dac:	f8 94       	cli
    2dae:	de bf       	out	0x3e, r29	; 62
    2db0:	0f be       	out	0x3f, r0	; 63
    2db2:	cd bf       	out	0x3d, r28	; 61
    2db4:	cf 91       	pop	r28
    2db6:	df 91       	pop	r29
    2db8:	08 95       	ret

00002dba <DIO_GetPinValue>:

u8 DIO_GetPinValue(u8 GropuIDcopy, u8 PinIDcopy)
{
    2dba:	df 93       	push	r29
    2dbc:	cf 93       	push	r28
    2dbe:	00 d0       	rcall	.+0      	; 0x2dc0 <DIO_GetPinValue+0x6>
    2dc0:	00 d0       	rcall	.+0      	; 0x2dc2 <DIO_GetPinValue+0x8>
    2dc2:	0f 92       	push	r0
    2dc4:	cd b7       	in	r28, 0x3d	; 61
    2dc6:	de b7       	in	r29, 0x3e	; 62
    2dc8:	8a 83       	std	Y+2, r24	; 0x02
    2dca:	6b 83       	std	Y+3, r22	; 0x03
    u8 result = 0xFF;
    2dcc:	8f ef       	ldi	r24, 0xFF	; 255
    2dce:	89 83       	std	Y+1, r24	; 0x01
    switch (GropuIDcopy)
    2dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    2dd2:	28 2f       	mov	r18, r24
    2dd4:	30 e0       	ldi	r19, 0x00	; 0
    2dd6:	3d 83       	std	Y+5, r19	; 0x05
    2dd8:	2c 83       	std	Y+4, r18	; 0x04
    2dda:	4c 81       	ldd	r20, Y+4	; 0x04
    2ddc:	5d 81       	ldd	r21, Y+5	; 0x05
    2dde:	41 30       	cpi	r20, 0x01	; 1
    2de0:	51 05       	cpc	r21, r1
    2de2:	41 f1       	breq	.+80     	; 0x2e34 <DIO_GetPinValue+0x7a>
    2de4:	8c 81       	ldd	r24, Y+4	; 0x04
    2de6:	9d 81       	ldd	r25, Y+5	; 0x05
    2de8:	82 30       	cpi	r24, 0x02	; 2
    2dea:	91 05       	cpc	r25, r1
    2dec:	34 f4       	brge	.+12     	; 0x2dfa <DIO_GetPinValue+0x40>
    2dee:	2c 81       	ldd	r18, Y+4	; 0x04
    2df0:	3d 81       	ldd	r19, Y+5	; 0x05
    2df2:	21 15       	cp	r18, r1
    2df4:	31 05       	cpc	r19, r1
    2df6:	61 f0       	breq	.+24     	; 0x2e10 <DIO_GetPinValue+0x56>
    2df8:	52 c0       	rjmp	.+164    	; 0x2e9e <DIO_GetPinValue+0xe4>
    2dfa:	4c 81       	ldd	r20, Y+4	; 0x04
    2dfc:	5d 81       	ldd	r21, Y+5	; 0x05
    2dfe:	42 30       	cpi	r20, 0x02	; 2
    2e00:	51 05       	cpc	r21, r1
    2e02:	51 f1       	breq	.+84     	; 0x2e58 <DIO_GetPinValue+0x9e>
    2e04:	8c 81       	ldd	r24, Y+4	; 0x04
    2e06:	9d 81       	ldd	r25, Y+5	; 0x05
    2e08:	83 30       	cpi	r24, 0x03	; 3
    2e0a:	91 05       	cpc	r25, r1
    2e0c:	b9 f1       	breq	.+110    	; 0x2e7c <DIO_GetPinValue+0xc2>
    2e0e:	47 c0       	rjmp	.+142    	; 0x2e9e <DIO_GetPinValue+0xe4>
    {
    case GROUPA:
        result = GET_BIT(PINA_Register, PinIDcopy);
    2e10:	e9 e3       	ldi	r30, 0x39	; 57
    2e12:	f0 e0       	ldi	r31, 0x00	; 0
    2e14:	80 81       	ld	r24, Z
    2e16:	28 2f       	mov	r18, r24
    2e18:	30 e0       	ldi	r19, 0x00	; 0
    2e1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2e1c:	88 2f       	mov	r24, r24
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	a9 01       	movw	r20, r18
    2e22:	02 c0       	rjmp	.+4      	; 0x2e28 <DIO_GetPinValue+0x6e>
    2e24:	55 95       	asr	r21
    2e26:	47 95       	ror	r20
    2e28:	8a 95       	dec	r24
    2e2a:	e2 f7       	brpl	.-8      	; 0x2e24 <DIO_GetPinValue+0x6a>
    2e2c:	ca 01       	movw	r24, r20
    2e2e:	81 70       	andi	r24, 0x01	; 1
    2e30:	89 83       	std	Y+1, r24	; 0x01
    2e32:	35 c0       	rjmp	.+106    	; 0x2e9e <DIO_GetPinValue+0xe4>
        break;
    case GROUPB:
        result = GET_BIT(PINB_Register, PinIDcopy);
    2e34:	e6 e3       	ldi	r30, 0x36	; 54
    2e36:	f0 e0       	ldi	r31, 0x00	; 0
    2e38:	80 81       	ld	r24, Z
    2e3a:	28 2f       	mov	r18, r24
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e40:	88 2f       	mov	r24, r24
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	a9 01       	movw	r20, r18
    2e46:	02 c0       	rjmp	.+4      	; 0x2e4c <DIO_GetPinValue+0x92>
    2e48:	55 95       	asr	r21
    2e4a:	47 95       	ror	r20
    2e4c:	8a 95       	dec	r24
    2e4e:	e2 f7       	brpl	.-8      	; 0x2e48 <DIO_GetPinValue+0x8e>
    2e50:	ca 01       	movw	r24, r20
    2e52:	81 70       	andi	r24, 0x01	; 1
    2e54:	89 83       	std	Y+1, r24	; 0x01
    2e56:	23 c0       	rjmp	.+70     	; 0x2e9e <DIO_GetPinValue+0xe4>
        break;
    case GROUPC:
        result = GET_BIT(PINC_Register, PinIDcopy);
    2e58:	e3 e3       	ldi	r30, 0x33	; 51
    2e5a:	f0 e0       	ldi	r31, 0x00	; 0
    2e5c:	80 81       	ld	r24, Z
    2e5e:	28 2f       	mov	r18, r24
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	8b 81       	ldd	r24, Y+3	; 0x03
    2e64:	88 2f       	mov	r24, r24
    2e66:	90 e0       	ldi	r25, 0x00	; 0
    2e68:	a9 01       	movw	r20, r18
    2e6a:	02 c0       	rjmp	.+4      	; 0x2e70 <DIO_GetPinValue+0xb6>
    2e6c:	55 95       	asr	r21
    2e6e:	47 95       	ror	r20
    2e70:	8a 95       	dec	r24
    2e72:	e2 f7       	brpl	.-8      	; 0x2e6c <DIO_GetPinValue+0xb2>
    2e74:	ca 01       	movw	r24, r20
    2e76:	81 70       	andi	r24, 0x01	; 1
    2e78:	89 83       	std	Y+1, r24	; 0x01
    2e7a:	11 c0       	rjmp	.+34     	; 0x2e9e <DIO_GetPinValue+0xe4>
        break;
    case GROUPD:
        result = GET_BIT(PIND_Register, PinIDcopy);
    2e7c:	e0 e3       	ldi	r30, 0x30	; 48
    2e7e:	f0 e0       	ldi	r31, 0x00	; 0
    2e80:	80 81       	ld	r24, Z
    2e82:	28 2f       	mov	r18, r24
    2e84:	30 e0       	ldi	r19, 0x00	; 0
    2e86:	8b 81       	ldd	r24, Y+3	; 0x03
    2e88:	88 2f       	mov	r24, r24
    2e8a:	90 e0       	ldi	r25, 0x00	; 0
    2e8c:	a9 01       	movw	r20, r18
    2e8e:	02 c0       	rjmp	.+4      	; 0x2e94 <DIO_GetPinValue+0xda>
    2e90:	55 95       	asr	r21
    2e92:	47 95       	ror	r20
    2e94:	8a 95       	dec	r24
    2e96:	e2 f7       	brpl	.-8      	; 0x2e90 <DIO_GetPinValue+0xd6>
    2e98:	ca 01       	movw	r24, r20
    2e9a:	81 70       	andi	r24, 0x01	; 1
    2e9c:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return result;
    2e9e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ea0:	0f 90       	pop	r0
    2ea2:	0f 90       	pop	r0
    2ea4:	0f 90       	pop	r0
    2ea6:	0f 90       	pop	r0
    2ea8:	0f 90       	pop	r0
    2eaa:	cf 91       	pop	r28
    2eac:	df 91       	pop	r29
    2eae:	08 95       	ret

00002eb0 <DIO_SetGroupDirection>:

void DIO_SetGroupDirection(u8 GropuIDcopy, u8 DirID)
{
    2eb0:	df 93       	push	r29
    2eb2:	cf 93       	push	r28
    2eb4:	00 d0       	rcall	.+0      	; 0x2eb6 <DIO_SetGroupDirection+0x6>
    2eb6:	00 d0       	rcall	.+0      	; 0x2eb8 <DIO_SetGroupDirection+0x8>
    2eb8:	cd b7       	in	r28, 0x3d	; 61
    2eba:	de b7       	in	r29, 0x3e	; 62
    2ebc:	89 83       	std	Y+1, r24	; 0x01
    2ebe:	6a 83       	std	Y+2, r22	; 0x02
    switch (GropuIDcopy)
    2ec0:	89 81       	ldd	r24, Y+1	; 0x01
    2ec2:	28 2f       	mov	r18, r24
    2ec4:	30 e0       	ldi	r19, 0x00	; 0
    2ec6:	3c 83       	std	Y+4, r19	; 0x04
    2ec8:	2b 83       	std	Y+3, r18	; 0x03
    2eca:	8b 81       	ldd	r24, Y+3	; 0x03
    2ecc:	9c 81       	ldd	r25, Y+4	; 0x04
    2ece:	81 30       	cpi	r24, 0x01	; 1
    2ed0:	91 05       	cpc	r25, r1
    2ed2:	d1 f0       	breq	.+52     	; 0x2f08 <DIO_SetGroupDirection+0x58>
    2ed4:	2b 81       	ldd	r18, Y+3	; 0x03
    2ed6:	3c 81       	ldd	r19, Y+4	; 0x04
    2ed8:	22 30       	cpi	r18, 0x02	; 2
    2eda:	31 05       	cpc	r19, r1
    2edc:	2c f4       	brge	.+10     	; 0x2ee8 <DIO_SetGroupDirection+0x38>
    2ede:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ee2:	00 97       	sbiw	r24, 0x00	; 0
    2ee4:	61 f0       	breq	.+24     	; 0x2efe <DIO_SetGroupDirection+0x4e>
    2ee6:	1e c0       	rjmp	.+60     	; 0x2f24 <DIO_SetGroupDirection+0x74>
    2ee8:	2b 81       	ldd	r18, Y+3	; 0x03
    2eea:	3c 81       	ldd	r19, Y+4	; 0x04
    2eec:	22 30       	cpi	r18, 0x02	; 2
    2eee:	31 05       	cpc	r19, r1
    2ef0:	81 f0       	breq	.+32     	; 0x2f12 <DIO_SetGroupDirection+0x62>
    2ef2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ef6:	83 30       	cpi	r24, 0x03	; 3
    2ef8:	91 05       	cpc	r25, r1
    2efa:	81 f0       	breq	.+32     	; 0x2f1c <DIO_SetGroupDirection+0x6c>
    2efc:	13 c0       	rjmp	.+38     	; 0x2f24 <DIO_SetGroupDirection+0x74>
    {
    case GROUPA:
        DDRA_Register = DirID;
    2efe:	ea e3       	ldi	r30, 0x3A	; 58
    2f00:	f0 e0       	ldi	r31, 0x00	; 0
    2f02:	8a 81       	ldd	r24, Y+2	; 0x02
    2f04:	80 83       	st	Z, r24
    2f06:	0e c0       	rjmp	.+28     	; 0x2f24 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPB:
        DDRB_Register = DirID;
    2f08:	e7 e3       	ldi	r30, 0x37	; 55
    2f0a:	f0 e0       	ldi	r31, 0x00	; 0
    2f0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f0e:	80 83       	st	Z, r24
    2f10:	09 c0       	rjmp	.+18     	; 0x2f24 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPC:
        DDRC_Register = DirID;
    2f12:	e4 e3       	ldi	r30, 0x34	; 52
    2f14:	f0 e0       	ldi	r31, 0x00	; 0
    2f16:	8a 81       	ldd	r24, Y+2	; 0x02
    2f18:	80 83       	st	Z, r24
    2f1a:	04 c0       	rjmp	.+8      	; 0x2f24 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPD:
        DDRD_Register = DirID;
    2f1c:	e1 e3       	ldi	r30, 0x31	; 49
    2f1e:	f0 e0       	ldi	r31, 0x00	; 0
    2f20:	8a 81       	ldd	r24, Y+2	; 0x02
    2f22:	80 83       	st	Z, r24
        break;
    }
}
    2f24:	0f 90       	pop	r0
    2f26:	0f 90       	pop	r0
    2f28:	0f 90       	pop	r0
    2f2a:	0f 90       	pop	r0
    2f2c:	cf 91       	pop	r28
    2f2e:	df 91       	pop	r29
    2f30:	08 95       	ret

00002f32 <DIO_SetGroupValue>:

void DIO_SetGroupValue(u8 GropuIDcopy, u8 valueID)
{
    2f32:	df 93       	push	r29
    2f34:	cf 93       	push	r28
    2f36:	00 d0       	rcall	.+0      	; 0x2f38 <DIO_SetGroupValue+0x6>
    2f38:	00 d0       	rcall	.+0      	; 0x2f3a <DIO_SetGroupValue+0x8>
    2f3a:	cd b7       	in	r28, 0x3d	; 61
    2f3c:	de b7       	in	r29, 0x3e	; 62
    2f3e:	89 83       	std	Y+1, r24	; 0x01
    2f40:	6a 83       	std	Y+2, r22	; 0x02

    switch (GropuIDcopy)
    2f42:	89 81       	ldd	r24, Y+1	; 0x01
    2f44:	28 2f       	mov	r18, r24
    2f46:	30 e0       	ldi	r19, 0x00	; 0
    2f48:	3c 83       	std	Y+4, r19	; 0x04
    2f4a:	2b 83       	std	Y+3, r18	; 0x03
    2f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f4e:	9c 81       	ldd	r25, Y+4	; 0x04
    2f50:	81 30       	cpi	r24, 0x01	; 1
    2f52:	91 05       	cpc	r25, r1
    2f54:	d1 f0       	breq	.+52     	; 0x2f8a <DIO_SetGroupValue+0x58>
    2f56:	2b 81       	ldd	r18, Y+3	; 0x03
    2f58:	3c 81       	ldd	r19, Y+4	; 0x04
    2f5a:	22 30       	cpi	r18, 0x02	; 2
    2f5c:	31 05       	cpc	r19, r1
    2f5e:	2c f4       	brge	.+10     	; 0x2f6a <DIO_SetGroupValue+0x38>
    2f60:	8b 81       	ldd	r24, Y+3	; 0x03
    2f62:	9c 81       	ldd	r25, Y+4	; 0x04
    2f64:	00 97       	sbiw	r24, 0x00	; 0
    2f66:	61 f0       	breq	.+24     	; 0x2f80 <DIO_SetGroupValue+0x4e>
    2f68:	1e c0       	rjmp	.+60     	; 0x2fa6 <DIO_SetGroupValue+0x74>
    2f6a:	2b 81       	ldd	r18, Y+3	; 0x03
    2f6c:	3c 81       	ldd	r19, Y+4	; 0x04
    2f6e:	22 30       	cpi	r18, 0x02	; 2
    2f70:	31 05       	cpc	r19, r1
    2f72:	81 f0       	breq	.+32     	; 0x2f94 <DIO_SetGroupValue+0x62>
    2f74:	8b 81       	ldd	r24, Y+3	; 0x03
    2f76:	9c 81       	ldd	r25, Y+4	; 0x04
    2f78:	83 30       	cpi	r24, 0x03	; 3
    2f7a:	91 05       	cpc	r25, r1
    2f7c:	81 f0       	breq	.+32     	; 0x2f9e <DIO_SetGroupValue+0x6c>
    2f7e:	13 c0       	rjmp	.+38     	; 0x2fa6 <DIO_SetGroupValue+0x74>
    {
    case GROUPA:
        PORTA_Register = valueID;
    2f80:	eb e3       	ldi	r30, 0x3B	; 59
    2f82:	f0 e0       	ldi	r31, 0x00	; 0
    2f84:	8a 81       	ldd	r24, Y+2	; 0x02
    2f86:	80 83       	st	Z, r24
    2f88:	0e c0       	rjmp	.+28     	; 0x2fa6 <DIO_SetGroupValue+0x74>
        break;
    case GROUPB:
        PORTB_Register = valueID;
    2f8a:	e8 e3       	ldi	r30, 0x38	; 56
    2f8c:	f0 e0       	ldi	r31, 0x00	; 0
    2f8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2f90:	80 83       	st	Z, r24
    2f92:	09 c0       	rjmp	.+18     	; 0x2fa6 <DIO_SetGroupValue+0x74>
        break;
    case GROUPC:
        PORTC_Register = valueID;
    2f94:	e5 e3       	ldi	r30, 0x35	; 53
    2f96:	f0 e0       	ldi	r31, 0x00	; 0
    2f98:	8a 81       	ldd	r24, Y+2	; 0x02
    2f9a:	80 83       	st	Z, r24
    2f9c:	04 c0       	rjmp	.+8      	; 0x2fa6 <DIO_SetGroupValue+0x74>
        break;
    case GROUPD:
        PORTD_Register = valueID;
    2f9e:	e2 e3       	ldi	r30, 0x32	; 50
    2fa0:	f0 e0       	ldi	r31, 0x00	; 0
    2fa2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa4:	80 83       	st	Z, r24
        break;
    }
}
    2fa6:	0f 90       	pop	r0
    2fa8:	0f 90       	pop	r0
    2faa:	0f 90       	pop	r0
    2fac:	0f 90       	pop	r0
    2fae:	cf 91       	pop	r28
    2fb0:	df 91       	pop	r29
    2fb2:	08 95       	ret

00002fb4 <DIO_TogPin>:


void DIO_TogPin(u8 GropuIDcopy, u8 PinIDcopy) {
    2fb4:	df 93       	push	r29
    2fb6:	cf 93       	push	r28
    2fb8:	00 d0       	rcall	.+0      	; 0x2fba <DIO_TogPin+0x6>
    2fba:	00 d0       	rcall	.+0      	; 0x2fbc <DIO_TogPin+0x8>
    2fbc:	cd b7       	in	r28, 0x3d	; 61
    2fbe:	de b7       	in	r29, 0x3e	; 62
    2fc0:	89 83       	std	Y+1, r24	; 0x01
    2fc2:	6a 83       	std	Y+2, r22	; 0x02
	switch (GropuIDcopy) {
    2fc4:	89 81       	ldd	r24, Y+1	; 0x01
    2fc6:	28 2f       	mov	r18, r24
    2fc8:	30 e0       	ldi	r19, 0x00	; 0
    2fca:	3c 83       	std	Y+4, r19	; 0x04
    2fcc:	2b 83       	std	Y+3, r18	; 0x03
    2fce:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd2:	81 30       	cpi	r24, 0x01	; 1
    2fd4:	91 05       	cpc	r25, r1
    2fd6:	49 f1       	breq	.+82     	; 0x302a <DIO_TogPin+0x76>
    2fd8:	2b 81       	ldd	r18, Y+3	; 0x03
    2fda:	3c 81       	ldd	r19, Y+4	; 0x04
    2fdc:	22 30       	cpi	r18, 0x02	; 2
    2fde:	31 05       	cpc	r19, r1
    2fe0:	2c f4       	brge	.+10     	; 0x2fec <DIO_TogPin+0x38>
    2fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe6:	00 97       	sbiw	r24, 0x00	; 0
    2fe8:	61 f0       	breq	.+24     	; 0x3002 <DIO_TogPin+0x4e>
    2fea:	5a c0       	rjmp	.+180    	; 0x30a0 <DIO_TogPin+0xec>
    2fec:	2b 81       	ldd	r18, Y+3	; 0x03
    2fee:	3c 81       	ldd	r19, Y+4	; 0x04
    2ff0:	22 30       	cpi	r18, 0x02	; 2
    2ff2:	31 05       	cpc	r19, r1
    2ff4:	71 f1       	breq	.+92     	; 0x3052 <DIO_TogPin+0x9e>
    2ff6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ff8:	9c 81       	ldd	r25, Y+4	; 0x04
    2ffa:	83 30       	cpi	r24, 0x03	; 3
    2ffc:	91 05       	cpc	r25, r1
    2ffe:	e9 f1       	breq	.+122    	; 0x307a <DIO_TogPin+0xc6>
    3000:	4f c0       	rjmp	.+158    	; 0x30a0 <DIO_TogPin+0xec>
	case GROUPA:
		PORTA_Register ^= (1 << PinIDcopy);
    3002:	ab e3       	ldi	r26, 0x3B	; 59
    3004:	b0 e0       	ldi	r27, 0x00	; 0
    3006:	eb e3       	ldi	r30, 0x3B	; 59
    3008:	f0 e0       	ldi	r31, 0x00	; 0
    300a:	80 81       	ld	r24, Z
    300c:	48 2f       	mov	r20, r24
    300e:	8a 81       	ldd	r24, Y+2	; 0x02
    3010:	28 2f       	mov	r18, r24
    3012:	30 e0       	ldi	r19, 0x00	; 0
    3014:	81 e0       	ldi	r24, 0x01	; 1
    3016:	90 e0       	ldi	r25, 0x00	; 0
    3018:	02 2e       	mov	r0, r18
    301a:	02 c0       	rjmp	.+4      	; 0x3020 <DIO_TogPin+0x6c>
    301c:	88 0f       	add	r24, r24
    301e:	99 1f       	adc	r25, r25
    3020:	0a 94       	dec	r0
    3022:	e2 f7       	brpl	.-8      	; 0x301c <DIO_TogPin+0x68>
    3024:	84 27       	eor	r24, r20
    3026:	8c 93       	st	X, r24
    3028:	3b c0       	rjmp	.+118    	; 0x30a0 <DIO_TogPin+0xec>
		break;
	case GROUPB:
		PORTB_Register ^= (1 << PinIDcopy);
    302a:	a8 e3       	ldi	r26, 0x38	; 56
    302c:	b0 e0       	ldi	r27, 0x00	; 0
    302e:	e8 e3       	ldi	r30, 0x38	; 56
    3030:	f0 e0       	ldi	r31, 0x00	; 0
    3032:	80 81       	ld	r24, Z
    3034:	48 2f       	mov	r20, r24
    3036:	8a 81       	ldd	r24, Y+2	; 0x02
    3038:	28 2f       	mov	r18, r24
    303a:	30 e0       	ldi	r19, 0x00	; 0
    303c:	81 e0       	ldi	r24, 0x01	; 1
    303e:	90 e0       	ldi	r25, 0x00	; 0
    3040:	02 2e       	mov	r0, r18
    3042:	02 c0       	rjmp	.+4      	; 0x3048 <DIO_TogPin+0x94>
    3044:	88 0f       	add	r24, r24
    3046:	99 1f       	adc	r25, r25
    3048:	0a 94       	dec	r0
    304a:	e2 f7       	brpl	.-8      	; 0x3044 <DIO_TogPin+0x90>
    304c:	84 27       	eor	r24, r20
    304e:	8c 93       	st	X, r24
    3050:	27 c0       	rjmp	.+78     	; 0x30a0 <DIO_TogPin+0xec>
		break;
	case GROUPC:
		PORTC_Register ^= (1 << PinIDcopy);
    3052:	a5 e3       	ldi	r26, 0x35	; 53
    3054:	b0 e0       	ldi	r27, 0x00	; 0
    3056:	e5 e3       	ldi	r30, 0x35	; 53
    3058:	f0 e0       	ldi	r31, 0x00	; 0
    305a:	80 81       	ld	r24, Z
    305c:	48 2f       	mov	r20, r24
    305e:	8a 81       	ldd	r24, Y+2	; 0x02
    3060:	28 2f       	mov	r18, r24
    3062:	30 e0       	ldi	r19, 0x00	; 0
    3064:	81 e0       	ldi	r24, 0x01	; 1
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	02 2e       	mov	r0, r18
    306a:	02 c0       	rjmp	.+4      	; 0x3070 <DIO_TogPin+0xbc>
    306c:	88 0f       	add	r24, r24
    306e:	99 1f       	adc	r25, r25
    3070:	0a 94       	dec	r0
    3072:	e2 f7       	brpl	.-8      	; 0x306c <DIO_TogPin+0xb8>
    3074:	84 27       	eor	r24, r20
    3076:	8c 93       	st	X, r24
    3078:	13 c0       	rjmp	.+38     	; 0x30a0 <DIO_TogPin+0xec>
		break;
	case GROUPD:
		PORTD_Register ^= (1 << PinIDcopy);
    307a:	a2 e3       	ldi	r26, 0x32	; 50
    307c:	b0 e0       	ldi	r27, 0x00	; 0
    307e:	e2 e3       	ldi	r30, 0x32	; 50
    3080:	f0 e0       	ldi	r31, 0x00	; 0
    3082:	80 81       	ld	r24, Z
    3084:	48 2f       	mov	r20, r24
    3086:	8a 81       	ldd	r24, Y+2	; 0x02
    3088:	28 2f       	mov	r18, r24
    308a:	30 e0       	ldi	r19, 0x00	; 0
    308c:	81 e0       	ldi	r24, 0x01	; 1
    308e:	90 e0       	ldi	r25, 0x00	; 0
    3090:	02 2e       	mov	r0, r18
    3092:	02 c0       	rjmp	.+4      	; 0x3098 <DIO_TogPin+0xe4>
    3094:	88 0f       	add	r24, r24
    3096:	99 1f       	adc	r25, r25
    3098:	0a 94       	dec	r0
    309a:	e2 f7       	brpl	.-8      	; 0x3094 <DIO_TogPin+0xe0>
    309c:	84 27       	eor	r24, r20
    309e:	8c 93       	st	X, r24
		break;
	}
}
    30a0:	0f 90       	pop	r0
    30a2:	0f 90       	pop	r0
    30a4:	0f 90       	pop	r0
    30a6:	0f 90       	pop	r0
    30a8:	cf 91       	pop	r28
    30aa:	df 91       	pop	r29
    30ac:	08 95       	ret

000030ae <LCD_Vinit>:
#define LCD_DISPLAY_ON 0x0C


#define degree_sysmbol 0xdf
#define degree_sysmbol_i  0xdf
void LCD_Vinit(void) {
    30ae:	0f 93       	push	r16
    30b0:	1f 93       	push	r17
    30b2:	df 93       	push	r29
    30b4:	cf 93       	push	r28
    30b6:	cd b7       	in	r28, 0x3d	; 61
    30b8:	de b7       	in	r29, 0x3e	; 62
    30ba:	c4 55       	subi	r28, 0x54	; 84
    30bc:	d0 40       	sbci	r29, 0x00	; 0
    30be:	0f b6       	in	r0, 0x3f	; 63
    30c0:	f8 94       	cli
    30c2:	de bf       	out	0x3e, r29	; 62
    30c4:	0f be       	out	0x3f, r0	; 63
    30c6:	cd bf       	out	0x3d, r28	; 61
	/* set DDRA as OUTPUTs pins */
	DIO_SetGroupDirection(LCD_GROUP_DATA, 0xFF);
    30c8:	81 e0       	ldi	r24, 0x01	; 1
    30ca:	6f ef       	ldi	r22, 0xFF	; 255
    30cc:	0e 94 58 17 	call	0x2eb0	; 0x2eb0 <DIO_SetGroupDirection>
	/* confguire RS & E as output */
	DIO_SetPinDirection(LCD_GROUP_CONTROL, LCD_RS_PIN, OUTPUT);
    30d0:	83 e0       	ldi	r24, 0x03	; 3
    30d2:	64 e0       	ldi	r22, 0x04	; 4
    30d4:	41 e0       	ldi	r20, 0x01	; 1
    30d6:	0e 94 dd 14 	call	0x29ba	; 0x29ba <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_GROUP_CONTROL, LCD_E_PIN, OUTPUT);
    30da:	83 e0       	ldi	r24, 0x03	; 3
    30dc:	65 e0       	ldi	r22, 0x05	; 5
    30de:	41 e0       	ldi	r20, 0x01	; 1
    30e0:	0e 94 dd 14 	call	0x29ba	; 0x29ba <DIO_SetPinDirection>
    30e4:	fe 01       	movw	r30, r28
    30e6:	ef 5a       	subi	r30, 0xAF	; 175
    30e8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ea:	80 e0       	ldi	r24, 0x00	; 0
    30ec:	90 e0       	ldi	r25, 0x00	; 0
    30ee:	a0 ef       	ldi	r26, 0xF0	; 240
    30f0:	b1 e4       	ldi	r27, 0x41	; 65
    30f2:	80 83       	st	Z, r24
    30f4:	91 83       	std	Z+1, r25	; 0x01
    30f6:	a2 83       	std	Z+2, r26	; 0x02
    30f8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30fa:	8e 01       	movw	r16, r28
    30fc:	03 5b       	subi	r16, 0xB3	; 179
    30fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3100:	fe 01       	movw	r30, r28
    3102:	ef 5a       	subi	r30, 0xAF	; 175
    3104:	ff 4f       	sbci	r31, 0xFF	; 255
    3106:	60 81       	ld	r22, Z
    3108:	71 81       	ldd	r23, Z+1	; 0x01
    310a:	82 81       	ldd	r24, Z+2	; 0x02
    310c:	93 81       	ldd	r25, Z+3	; 0x03
    310e:	20 e0       	ldi	r18, 0x00	; 0
    3110:	30 e0       	ldi	r19, 0x00	; 0
    3112:	4a ef       	ldi	r20, 0xFA	; 250
    3114:	54 e4       	ldi	r21, 0x44	; 68
    3116:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    311a:	dc 01       	movw	r26, r24
    311c:	cb 01       	movw	r24, r22
    311e:	f8 01       	movw	r30, r16
    3120:	80 83       	st	Z, r24
    3122:	91 83       	std	Z+1, r25	; 0x01
    3124:	a2 83       	std	Z+2, r26	; 0x02
    3126:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3128:	fe 01       	movw	r30, r28
    312a:	e3 5b       	subi	r30, 0xB3	; 179
    312c:	ff 4f       	sbci	r31, 0xFF	; 255
    312e:	60 81       	ld	r22, Z
    3130:	71 81       	ldd	r23, Z+1	; 0x01
    3132:	82 81       	ldd	r24, Z+2	; 0x02
    3134:	93 81       	ldd	r25, Z+3	; 0x03
    3136:	20 e0       	ldi	r18, 0x00	; 0
    3138:	30 e0       	ldi	r19, 0x00	; 0
    313a:	40 e8       	ldi	r20, 0x80	; 128
    313c:	5f e3       	ldi	r21, 0x3F	; 63
    313e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3142:	88 23       	and	r24, r24
    3144:	44 f4       	brge	.+16     	; 0x3156 <LCD_Vinit+0xa8>
		__ticks = 1;
    3146:	fe 01       	movw	r30, r28
    3148:	e5 5b       	subi	r30, 0xB5	; 181
    314a:	ff 4f       	sbci	r31, 0xFF	; 255
    314c:	81 e0       	ldi	r24, 0x01	; 1
    314e:	90 e0       	ldi	r25, 0x00	; 0
    3150:	91 83       	std	Z+1, r25	; 0x01
    3152:	80 83       	st	Z, r24
    3154:	64 c0       	rjmp	.+200    	; 0x321e <LCD_Vinit+0x170>
	else if (__tmp > 65535)
    3156:	fe 01       	movw	r30, r28
    3158:	e3 5b       	subi	r30, 0xB3	; 179
    315a:	ff 4f       	sbci	r31, 0xFF	; 255
    315c:	60 81       	ld	r22, Z
    315e:	71 81       	ldd	r23, Z+1	; 0x01
    3160:	82 81       	ldd	r24, Z+2	; 0x02
    3162:	93 81       	ldd	r25, Z+3	; 0x03
    3164:	20 e0       	ldi	r18, 0x00	; 0
    3166:	3f ef       	ldi	r19, 0xFF	; 255
    3168:	4f e7       	ldi	r20, 0x7F	; 127
    316a:	57 e4       	ldi	r21, 0x47	; 71
    316c:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3170:	18 16       	cp	r1, r24
    3172:	0c f0       	brlt	.+2      	; 0x3176 <LCD_Vinit+0xc8>
    3174:	43 c0       	rjmp	.+134    	; 0x31fc <LCD_Vinit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3176:	fe 01       	movw	r30, r28
    3178:	ef 5a       	subi	r30, 0xAF	; 175
    317a:	ff 4f       	sbci	r31, 0xFF	; 255
    317c:	60 81       	ld	r22, Z
    317e:	71 81       	ldd	r23, Z+1	; 0x01
    3180:	82 81       	ldd	r24, Z+2	; 0x02
    3182:	93 81       	ldd	r25, Z+3	; 0x03
    3184:	20 e0       	ldi	r18, 0x00	; 0
    3186:	30 e0       	ldi	r19, 0x00	; 0
    3188:	40 e2       	ldi	r20, 0x20	; 32
    318a:	51 e4       	ldi	r21, 0x41	; 65
    318c:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	8e 01       	movw	r16, r28
    3196:	05 5b       	subi	r16, 0xB5	; 181
    3198:	1f 4f       	sbci	r17, 0xFF	; 255
    319a:	bc 01       	movw	r22, r24
    319c:	cd 01       	movw	r24, r26
    319e:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    31a2:	dc 01       	movw	r26, r24
    31a4:	cb 01       	movw	r24, r22
    31a6:	f8 01       	movw	r30, r16
    31a8:	91 83       	std	Z+1, r25	; 0x01
    31aa:	80 83       	st	Z, r24
    31ac:	1f c0       	rjmp	.+62     	; 0x31ec <LCD_Vinit+0x13e>
    31ae:	fe 01       	movw	r30, r28
    31b0:	e7 5b       	subi	r30, 0xB7	; 183
    31b2:	ff 4f       	sbci	r31, 0xFF	; 255
    31b4:	88 ec       	ldi	r24, 0xC8	; 200
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	91 83       	std	Z+1, r25	; 0x01
    31ba:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    31bc:	fe 01       	movw	r30, r28
    31be:	e7 5b       	subi	r30, 0xB7	; 183
    31c0:	ff 4f       	sbci	r31, 0xFF	; 255
    31c2:	80 81       	ld	r24, Z
    31c4:	91 81       	ldd	r25, Z+1	; 0x01
    31c6:	01 97       	sbiw	r24, 0x01	; 1
    31c8:	f1 f7       	brne	.-4      	; 0x31c6 <LCD_Vinit+0x118>
    31ca:	fe 01       	movw	r30, r28
    31cc:	e7 5b       	subi	r30, 0xB7	; 183
    31ce:	ff 4f       	sbci	r31, 0xFF	; 255
    31d0:	91 83       	std	Z+1, r25	; 0x01
    31d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31d4:	de 01       	movw	r26, r28
    31d6:	a5 5b       	subi	r26, 0xB5	; 181
    31d8:	bf 4f       	sbci	r27, 0xFF	; 255
    31da:	fe 01       	movw	r30, r28
    31dc:	e5 5b       	subi	r30, 0xB5	; 181
    31de:	ff 4f       	sbci	r31, 0xFF	; 255
    31e0:	80 81       	ld	r24, Z
    31e2:	91 81       	ldd	r25, Z+1	; 0x01
    31e4:	01 97       	sbiw	r24, 0x01	; 1
    31e6:	11 96       	adiw	r26, 0x01	; 1
    31e8:	9c 93       	st	X, r25
    31ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31ec:	fe 01       	movw	r30, r28
    31ee:	e5 5b       	subi	r30, 0xB5	; 181
    31f0:	ff 4f       	sbci	r31, 0xFF	; 255
    31f2:	80 81       	ld	r24, Z
    31f4:	91 81       	ldd	r25, Z+1	; 0x01
    31f6:	00 97       	sbiw	r24, 0x00	; 0
    31f8:	d1 f6       	brne	.-76     	; 0x31ae <LCD_Vinit+0x100>
    31fa:	27 c0       	rjmp	.+78     	; 0x324a <LCD_Vinit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31fc:	8e 01       	movw	r16, r28
    31fe:	05 5b       	subi	r16, 0xB5	; 181
    3200:	1f 4f       	sbci	r17, 0xFF	; 255
    3202:	fe 01       	movw	r30, r28
    3204:	e3 5b       	subi	r30, 0xB3	; 179
    3206:	ff 4f       	sbci	r31, 0xFF	; 255
    3208:	60 81       	ld	r22, Z
    320a:	71 81       	ldd	r23, Z+1	; 0x01
    320c:	82 81       	ldd	r24, Z+2	; 0x02
    320e:	93 81       	ldd	r25, Z+3	; 0x03
    3210:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3214:	dc 01       	movw	r26, r24
    3216:	cb 01       	movw	r24, r22
    3218:	f8 01       	movw	r30, r16
    321a:	91 83       	std	Z+1, r25	; 0x01
    321c:	80 83       	st	Z, r24
    321e:	de 01       	movw	r26, r28
    3220:	a9 5b       	subi	r26, 0xB9	; 185
    3222:	bf 4f       	sbci	r27, 0xFF	; 255
    3224:	fe 01       	movw	r30, r28
    3226:	e5 5b       	subi	r30, 0xB5	; 181
    3228:	ff 4f       	sbci	r31, 0xFF	; 255
    322a:	80 81       	ld	r24, Z
    322c:	91 81       	ldd	r25, Z+1	; 0x01
    322e:	8d 93       	st	X+, r24
    3230:	9c 93       	st	X, r25
    3232:	fe 01       	movw	r30, r28
    3234:	e9 5b       	subi	r30, 0xB9	; 185
    3236:	ff 4f       	sbci	r31, 0xFF	; 255
    3238:	80 81       	ld	r24, Z
    323a:	91 81       	ldd	r25, Z+1	; 0x01
    323c:	01 97       	sbiw	r24, 0x01	; 1
    323e:	f1 f7       	brne	.-4      	; 0x323c <LCD_Vinit+0x18e>
    3240:	fe 01       	movw	r30, r28
    3242:	e9 5b       	subi	r30, 0xB9	; 185
    3244:	ff 4f       	sbci	r31, 0xFF	; 255
    3246:	91 83       	std	Z+1, r25	; 0x01
    3248:	80 83       	st	Z, r24

	_delay_ms(30);
	LCD_Send_Command(LCD_HOME);
    324a:	82 e0       	ldi	r24, 0x02	; 2
    324c:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    3250:	fe 01       	movw	r30, r28
    3252:	ed 5b       	subi	r30, 0xBD	; 189
    3254:	ff 4f       	sbci	r31, 0xFF	; 255
    3256:	80 e0       	ldi	r24, 0x00	; 0
    3258:	90 e0       	ldi	r25, 0x00	; 0
    325a:	a0 e7       	ldi	r26, 0x70	; 112
    325c:	b1 e4       	ldi	r27, 0x41	; 65
    325e:	80 83       	st	Z, r24
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	a2 83       	std	Z+2, r26	; 0x02
    3264:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3266:	8e 01       	movw	r16, r28
    3268:	01 5c       	subi	r16, 0xC1	; 193
    326a:	1f 4f       	sbci	r17, 0xFF	; 255
    326c:	fe 01       	movw	r30, r28
    326e:	ed 5b       	subi	r30, 0xBD	; 189
    3270:	ff 4f       	sbci	r31, 0xFF	; 255
    3272:	60 81       	ld	r22, Z
    3274:	71 81       	ldd	r23, Z+1	; 0x01
    3276:	82 81       	ldd	r24, Z+2	; 0x02
    3278:	93 81       	ldd	r25, Z+3	; 0x03
    327a:	20 e0       	ldi	r18, 0x00	; 0
    327c:	30 e0       	ldi	r19, 0x00	; 0
    327e:	4a ef       	ldi	r20, 0xFA	; 250
    3280:	54 e4       	ldi	r21, 0x44	; 68
    3282:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3286:	dc 01       	movw	r26, r24
    3288:	cb 01       	movw	r24, r22
    328a:	f8 01       	movw	r30, r16
    328c:	80 83       	st	Z, r24
    328e:	91 83       	std	Z+1, r25	; 0x01
    3290:	a2 83       	std	Z+2, r26	; 0x02
    3292:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3294:	fe 01       	movw	r30, r28
    3296:	ff 96       	adiw	r30, 0x3f	; 63
    3298:	60 81       	ld	r22, Z
    329a:	71 81       	ldd	r23, Z+1	; 0x01
    329c:	82 81       	ldd	r24, Z+2	; 0x02
    329e:	93 81       	ldd	r25, Z+3	; 0x03
    32a0:	20 e0       	ldi	r18, 0x00	; 0
    32a2:	30 e0       	ldi	r19, 0x00	; 0
    32a4:	40 e8       	ldi	r20, 0x80	; 128
    32a6:	5f e3       	ldi	r21, 0x3F	; 63
    32a8:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    32ac:	88 23       	and	r24, r24
    32ae:	2c f4       	brge	.+10     	; 0x32ba <LCD_Vinit+0x20c>
		__ticks = 1;
    32b0:	81 e0       	ldi	r24, 0x01	; 1
    32b2:	90 e0       	ldi	r25, 0x00	; 0
    32b4:	9e af       	std	Y+62, r25	; 0x3e
    32b6:	8d af       	std	Y+61, r24	; 0x3d
    32b8:	46 c0       	rjmp	.+140    	; 0x3346 <LCD_Vinit+0x298>
	else if (__tmp > 65535)
    32ba:	fe 01       	movw	r30, r28
    32bc:	ff 96       	adiw	r30, 0x3f	; 63
    32be:	60 81       	ld	r22, Z
    32c0:	71 81       	ldd	r23, Z+1	; 0x01
    32c2:	82 81       	ldd	r24, Z+2	; 0x02
    32c4:	93 81       	ldd	r25, Z+3	; 0x03
    32c6:	20 e0       	ldi	r18, 0x00	; 0
    32c8:	3f ef       	ldi	r19, 0xFF	; 255
    32ca:	4f e7       	ldi	r20, 0x7F	; 127
    32cc:	57 e4       	ldi	r21, 0x47	; 71
    32ce:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    32d2:	18 16       	cp	r1, r24
    32d4:	64 f5       	brge	.+88     	; 0x332e <LCD_Vinit+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32d6:	fe 01       	movw	r30, r28
    32d8:	ed 5b       	subi	r30, 0xBD	; 189
    32da:	ff 4f       	sbci	r31, 0xFF	; 255
    32dc:	60 81       	ld	r22, Z
    32de:	71 81       	ldd	r23, Z+1	; 0x01
    32e0:	82 81       	ldd	r24, Z+2	; 0x02
    32e2:	93 81       	ldd	r25, Z+3	; 0x03
    32e4:	20 e0       	ldi	r18, 0x00	; 0
    32e6:	30 e0       	ldi	r19, 0x00	; 0
    32e8:	40 e2       	ldi	r20, 0x20	; 32
    32ea:	51 e4       	ldi	r21, 0x41	; 65
    32ec:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    32f0:	dc 01       	movw	r26, r24
    32f2:	cb 01       	movw	r24, r22
    32f4:	bc 01       	movw	r22, r24
    32f6:	cd 01       	movw	r24, r26
    32f8:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    32fc:	dc 01       	movw	r26, r24
    32fe:	cb 01       	movw	r24, r22
    3300:	9e af       	std	Y+62, r25	; 0x3e
    3302:	8d af       	std	Y+61, r24	; 0x3d
    3304:	0f c0       	rjmp	.+30     	; 0x3324 <LCD_Vinit+0x276>
    3306:	88 ec       	ldi	r24, 0xC8	; 200
    3308:	90 e0       	ldi	r25, 0x00	; 0
    330a:	9c af       	std	Y+60, r25	; 0x3c
    330c:	8b af       	std	Y+59, r24	; 0x3b
    330e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3310:	9c ad       	ldd	r25, Y+60	; 0x3c
    3312:	01 97       	sbiw	r24, 0x01	; 1
    3314:	f1 f7       	brne	.-4      	; 0x3312 <LCD_Vinit+0x264>
    3316:	9c af       	std	Y+60, r25	; 0x3c
    3318:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    331a:	8d ad       	ldd	r24, Y+61	; 0x3d
    331c:	9e ad       	ldd	r25, Y+62	; 0x3e
    331e:	01 97       	sbiw	r24, 0x01	; 1
    3320:	9e af       	std	Y+62, r25	; 0x3e
    3322:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3324:	8d ad       	ldd	r24, Y+61	; 0x3d
    3326:	9e ad       	ldd	r25, Y+62	; 0x3e
    3328:	00 97       	sbiw	r24, 0x00	; 0
    332a:	69 f7       	brne	.-38     	; 0x3306 <LCD_Vinit+0x258>
    332c:	16 c0       	rjmp	.+44     	; 0x335a <LCD_Vinit+0x2ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    332e:	fe 01       	movw	r30, r28
    3330:	ff 96       	adiw	r30, 0x3f	; 63
    3332:	60 81       	ld	r22, Z
    3334:	71 81       	ldd	r23, Z+1	; 0x01
    3336:	82 81       	ldd	r24, Z+2	; 0x02
    3338:	93 81       	ldd	r25, Z+3	; 0x03
    333a:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    333e:	dc 01       	movw	r26, r24
    3340:	cb 01       	movw	r24, r22
    3342:	9e af       	std	Y+62, r25	; 0x3e
    3344:	8d af       	std	Y+61, r24	; 0x3d
    3346:	8d ad       	ldd	r24, Y+61	; 0x3d
    3348:	9e ad       	ldd	r25, Y+62	; 0x3e
    334a:	9a af       	std	Y+58, r25	; 0x3a
    334c:	89 af       	std	Y+57, r24	; 0x39
    334e:	89 ad       	ldd	r24, Y+57	; 0x39
    3350:	9a ad       	ldd	r25, Y+58	; 0x3a
    3352:	01 97       	sbiw	r24, 0x01	; 1
    3354:	f1 f7       	brne	.-4      	; 0x3352 <LCD_Vinit+0x2a4>
    3356:	9a af       	std	Y+58, r25	; 0x3a
    3358:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(15);

	LCD_Send_Command(LCD_SET_8FUNCTION);
    335a:	88 e3       	ldi	r24, 0x38	; 56
    335c:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    3360:	80 e0       	ldi	r24, 0x00	; 0
    3362:	90 e0       	ldi	r25, 0x00	; 0
    3364:	a0 e8       	ldi	r26, 0x80	; 128
    3366:	bf e3       	ldi	r27, 0x3F	; 63
    3368:	8d ab       	std	Y+53, r24	; 0x35
    336a:	9e ab       	std	Y+54, r25	; 0x36
    336c:	af ab       	std	Y+55, r26	; 0x37
    336e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3370:	6d a9       	ldd	r22, Y+53	; 0x35
    3372:	7e a9       	ldd	r23, Y+54	; 0x36
    3374:	8f a9       	ldd	r24, Y+55	; 0x37
    3376:	98 ad       	ldd	r25, Y+56	; 0x38
    3378:	20 e0       	ldi	r18, 0x00	; 0
    337a:	30 e0       	ldi	r19, 0x00	; 0
    337c:	4a ef       	ldi	r20, 0xFA	; 250
    337e:	54 e4       	ldi	r21, 0x44	; 68
    3380:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3384:	dc 01       	movw	r26, r24
    3386:	cb 01       	movw	r24, r22
    3388:	89 ab       	std	Y+49, r24	; 0x31
    338a:	9a ab       	std	Y+50, r25	; 0x32
    338c:	ab ab       	std	Y+51, r26	; 0x33
    338e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3390:	69 a9       	ldd	r22, Y+49	; 0x31
    3392:	7a a9       	ldd	r23, Y+50	; 0x32
    3394:	8b a9       	ldd	r24, Y+51	; 0x33
    3396:	9c a9       	ldd	r25, Y+52	; 0x34
    3398:	20 e0       	ldi	r18, 0x00	; 0
    339a:	30 e0       	ldi	r19, 0x00	; 0
    339c:	40 e8       	ldi	r20, 0x80	; 128
    339e:	5f e3       	ldi	r21, 0x3F	; 63
    33a0:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    33a4:	88 23       	and	r24, r24
    33a6:	2c f4       	brge	.+10     	; 0x33b2 <LCD_Vinit+0x304>
		__ticks = 1;
    33a8:	81 e0       	ldi	r24, 0x01	; 1
    33aa:	90 e0       	ldi	r25, 0x00	; 0
    33ac:	98 ab       	std	Y+48, r25	; 0x30
    33ae:	8f a7       	std	Y+47, r24	; 0x2f
    33b0:	3f c0       	rjmp	.+126    	; 0x3430 <LCD_Vinit+0x382>
	else if (__tmp > 65535)
    33b2:	69 a9       	ldd	r22, Y+49	; 0x31
    33b4:	7a a9       	ldd	r23, Y+50	; 0x32
    33b6:	8b a9       	ldd	r24, Y+51	; 0x33
    33b8:	9c a9       	ldd	r25, Y+52	; 0x34
    33ba:	20 e0       	ldi	r18, 0x00	; 0
    33bc:	3f ef       	ldi	r19, 0xFF	; 255
    33be:	4f e7       	ldi	r20, 0x7F	; 127
    33c0:	57 e4       	ldi	r21, 0x47	; 71
    33c2:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    33c6:	18 16       	cp	r1, r24
    33c8:	4c f5       	brge	.+82     	; 0x341c <LCD_Vinit+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33ca:	6d a9       	ldd	r22, Y+53	; 0x35
    33cc:	7e a9       	ldd	r23, Y+54	; 0x36
    33ce:	8f a9       	ldd	r24, Y+55	; 0x37
    33d0:	98 ad       	ldd	r25, Y+56	; 0x38
    33d2:	20 e0       	ldi	r18, 0x00	; 0
    33d4:	30 e0       	ldi	r19, 0x00	; 0
    33d6:	40 e2       	ldi	r20, 0x20	; 32
    33d8:	51 e4       	ldi	r21, 0x41	; 65
    33da:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    33de:	dc 01       	movw	r26, r24
    33e0:	cb 01       	movw	r24, r22
    33e2:	bc 01       	movw	r22, r24
    33e4:	cd 01       	movw	r24, r26
    33e6:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    33ea:	dc 01       	movw	r26, r24
    33ec:	cb 01       	movw	r24, r22
    33ee:	98 ab       	std	Y+48, r25	; 0x30
    33f0:	8f a7       	std	Y+47, r24	; 0x2f
    33f2:	0f c0       	rjmp	.+30     	; 0x3412 <LCD_Vinit+0x364>
    33f4:	88 ec       	ldi	r24, 0xC8	; 200
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	9e a7       	std	Y+46, r25	; 0x2e
    33fa:	8d a7       	std	Y+45, r24	; 0x2d
    33fc:	8d a5       	ldd	r24, Y+45	; 0x2d
    33fe:	9e a5       	ldd	r25, Y+46	; 0x2e
    3400:	01 97       	sbiw	r24, 0x01	; 1
    3402:	f1 f7       	brne	.-4      	; 0x3400 <LCD_Vinit+0x352>
    3404:	9e a7       	std	Y+46, r25	; 0x2e
    3406:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3408:	8f a5       	ldd	r24, Y+47	; 0x2f
    340a:	98 a9       	ldd	r25, Y+48	; 0x30
    340c:	01 97       	sbiw	r24, 0x01	; 1
    340e:	98 ab       	std	Y+48, r25	; 0x30
    3410:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3412:	8f a5       	ldd	r24, Y+47	; 0x2f
    3414:	98 a9       	ldd	r25, Y+48	; 0x30
    3416:	00 97       	sbiw	r24, 0x00	; 0
    3418:	69 f7       	brne	.-38     	; 0x33f4 <LCD_Vinit+0x346>
    341a:	14 c0       	rjmp	.+40     	; 0x3444 <LCD_Vinit+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    341c:	69 a9       	ldd	r22, Y+49	; 0x31
    341e:	7a a9       	ldd	r23, Y+50	; 0x32
    3420:	8b a9       	ldd	r24, Y+51	; 0x33
    3422:	9c a9       	ldd	r25, Y+52	; 0x34
    3424:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3428:	dc 01       	movw	r26, r24
    342a:	cb 01       	movw	r24, r22
    342c:	98 ab       	std	Y+48, r25	; 0x30
    342e:	8f a7       	std	Y+47, r24	; 0x2f
    3430:	8f a5       	ldd	r24, Y+47	; 0x2f
    3432:	98 a9       	ldd	r25, Y+48	; 0x30
    3434:	9c a7       	std	Y+44, r25	; 0x2c
    3436:	8b a7       	std	Y+43, r24	; 0x2b
    3438:	8b a5       	ldd	r24, Y+43	; 0x2b
    343a:	9c a5       	ldd	r25, Y+44	; 0x2c
    343c:	01 97       	sbiw	r24, 0x01	; 1
    343e:	f1 f7       	brne	.-4      	; 0x343c <LCD_Vinit+0x38e>
    3440:	9c a7       	std	Y+44, r25	; 0x2c
    3442:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	LCD_Send_Command(LCD_DISPLAY_ON);
    3444:	8c e0       	ldi	r24, 0x0C	; 12
    3446:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    344a:	80 e0       	ldi	r24, 0x00	; 0
    344c:	90 e0       	ldi	r25, 0x00	; 0
    344e:	a0 e8       	ldi	r26, 0x80	; 128
    3450:	bf e3       	ldi	r27, 0x3F	; 63
    3452:	8f a3       	std	Y+39, r24	; 0x27
    3454:	98 a7       	std	Y+40, r25	; 0x28
    3456:	a9 a7       	std	Y+41, r26	; 0x29
    3458:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    345a:	6f a1       	ldd	r22, Y+39	; 0x27
    345c:	78 a5       	ldd	r23, Y+40	; 0x28
    345e:	89 a5       	ldd	r24, Y+41	; 0x29
    3460:	9a a5       	ldd	r25, Y+42	; 0x2a
    3462:	20 e0       	ldi	r18, 0x00	; 0
    3464:	30 e0       	ldi	r19, 0x00	; 0
    3466:	4a ef       	ldi	r20, 0xFA	; 250
    3468:	54 e4       	ldi	r21, 0x44	; 68
    346a:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    346e:	dc 01       	movw	r26, r24
    3470:	cb 01       	movw	r24, r22
    3472:	8b a3       	std	Y+35, r24	; 0x23
    3474:	9c a3       	std	Y+36, r25	; 0x24
    3476:	ad a3       	std	Y+37, r26	; 0x25
    3478:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    347a:	6b a1       	ldd	r22, Y+35	; 0x23
    347c:	7c a1       	ldd	r23, Y+36	; 0x24
    347e:	8d a1       	ldd	r24, Y+37	; 0x25
    3480:	9e a1       	ldd	r25, Y+38	; 0x26
    3482:	20 e0       	ldi	r18, 0x00	; 0
    3484:	30 e0       	ldi	r19, 0x00	; 0
    3486:	40 e8       	ldi	r20, 0x80	; 128
    3488:	5f e3       	ldi	r21, 0x3F	; 63
    348a:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    348e:	88 23       	and	r24, r24
    3490:	2c f4       	brge	.+10     	; 0x349c <LCD_Vinit+0x3ee>
		__ticks = 1;
    3492:	81 e0       	ldi	r24, 0x01	; 1
    3494:	90 e0       	ldi	r25, 0x00	; 0
    3496:	9a a3       	std	Y+34, r25	; 0x22
    3498:	89 a3       	std	Y+33, r24	; 0x21
    349a:	3f c0       	rjmp	.+126    	; 0x351a <LCD_Vinit+0x46c>
	else if (__tmp > 65535)
    349c:	6b a1       	ldd	r22, Y+35	; 0x23
    349e:	7c a1       	ldd	r23, Y+36	; 0x24
    34a0:	8d a1       	ldd	r24, Y+37	; 0x25
    34a2:	9e a1       	ldd	r25, Y+38	; 0x26
    34a4:	20 e0       	ldi	r18, 0x00	; 0
    34a6:	3f ef       	ldi	r19, 0xFF	; 255
    34a8:	4f e7       	ldi	r20, 0x7F	; 127
    34aa:	57 e4       	ldi	r21, 0x47	; 71
    34ac:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    34b0:	18 16       	cp	r1, r24
    34b2:	4c f5       	brge	.+82     	; 0x3506 <LCD_Vinit+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34b4:	6f a1       	ldd	r22, Y+39	; 0x27
    34b6:	78 a5       	ldd	r23, Y+40	; 0x28
    34b8:	89 a5       	ldd	r24, Y+41	; 0x29
    34ba:	9a a5       	ldd	r25, Y+42	; 0x2a
    34bc:	20 e0       	ldi	r18, 0x00	; 0
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	40 e2       	ldi	r20, 0x20	; 32
    34c2:	51 e4       	ldi	r21, 0x41	; 65
    34c4:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    34c8:	dc 01       	movw	r26, r24
    34ca:	cb 01       	movw	r24, r22
    34cc:	bc 01       	movw	r22, r24
    34ce:	cd 01       	movw	r24, r26
    34d0:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    34d4:	dc 01       	movw	r26, r24
    34d6:	cb 01       	movw	r24, r22
    34d8:	9a a3       	std	Y+34, r25	; 0x22
    34da:	89 a3       	std	Y+33, r24	; 0x21
    34dc:	0f c0       	rjmp	.+30     	; 0x34fc <LCD_Vinit+0x44e>
    34de:	88 ec       	ldi	r24, 0xC8	; 200
    34e0:	90 e0       	ldi	r25, 0x00	; 0
    34e2:	98 a3       	std	Y+32, r25	; 0x20
    34e4:	8f 8f       	std	Y+31, r24	; 0x1f
    34e6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    34e8:	98 a1       	ldd	r25, Y+32	; 0x20
    34ea:	01 97       	sbiw	r24, 0x01	; 1
    34ec:	f1 f7       	brne	.-4      	; 0x34ea <LCD_Vinit+0x43c>
    34ee:	98 a3       	std	Y+32, r25	; 0x20
    34f0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34f2:	89 a1       	ldd	r24, Y+33	; 0x21
    34f4:	9a a1       	ldd	r25, Y+34	; 0x22
    34f6:	01 97       	sbiw	r24, 0x01	; 1
    34f8:	9a a3       	std	Y+34, r25	; 0x22
    34fa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34fc:	89 a1       	ldd	r24, Y+33	; 0x21
    34fe:	9a a1       	ldd	r25, Y+34	; 0x22
    3500:	00 97       	sbiw	r24, 0x00	; 0
    3502:	69 f7       	brne	.-38     	; 0x34de <LCD_Vinit+0x430>
    3504:	14 c0       	rjmp	.+40     	; 0x352e <LCD_Vinit+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3506:	6b a1       	ldd	r22, Y+35	; 0x23
    3508:	7c a1       	ldd	r23, Y+36	; 0x24
    350a:	8d a1       	ldd	r24, Y+37	; 0x25
    350c:	9e a1       	ldd	r25, Y+38	; 0x26
    350e:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3512:	dc 01       	movw	r26, r24
    3514:	cb 01       	movw	r24, r22
    3516:	9a a3       	std	Y+34, r25	; 0x22
    3518:	89 a3       	std	Y+33, r24	; 0x21
    351a:	89 a1       	ldd	r24, Y+33	; 0x21
    351c:	9a a1       	ldd	r25, Y+34	; 0x22
    351e:	9e 8f       	std	Y+30, r25	; 0x1e
    3520:	8d 8f       	std	Y+29, r24	; 0x1d
    3522:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3524:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3526:	01 97       	sbiw	r24, 0x01	; 1
    3528:	f1 f7       	brne	.-4      	; 0x3526 <LCD_Vinit+0x478>
    352a:	9e 8f       	std	Y+30, r25	; 0x1e
    352c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	LCD_Send_Command(LCD_CLEAR);
    352e:	81 e0       	ldi	r24, 0x01	; 1
    3530:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    3534:	80 e0       	ldi	r24, 0x00	; 0
    3536:	90 e0       	ldi	r25, 0x00	; 0
    3538:	a0 e0       	ldi	r26, 0x00	; 0
    353a:	b0 e4       	ldi	r27, 0x40	; 64
    353c:	89 8f       	std	Y+25, r24	; 0x19
    353e:	9a 8f       	std	Y+26, r25	; 0x1a
    3540:	ab 8f       	std	Y+27, r26	; 0x1b
    3542:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3544:	69 8d       	ldd	r22, Y+25	; 0x19
    3546:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3548:	8b 8d       	ldd	r24, Y+27	; 0x1b
    354a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    354c:	20 e0       	ldi	r18, 0x00	; 0
    354e:	30 e0       	ldi	r19, 0x00	; 0
    3550:	4a ef       	ldi	r20, 0xFA	; 250
    3552:	54 e4       	ldi	r21, 0x44	; 68
    3554:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3558:	dc 01       	movw	r26, r24
    355a:	cb 01       	movw	r24, r22
    355c:	8d 8b       	std	Y+21, r24	; 0x15
    355e:	9e 8b       	std	Y+22, r25	; 0x16
    3560:	af 8b       	std	Y+23, r26	; 0x17
    3562:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3564:	6d 89       	ldd	r22, Y+21	; 0x15
    3566:	7e 89       	ldd	r23, Y+22	; 0x16
    3568:	8f 89       	ldd	r24, Y+23	; 0x17
    356a:	98 8d       	ldd	r25, Y+24	; 0x18
    356c:	20 e0       	ldi	r18, 0x00	; 0
    356e:	30 e0       	ldi	r19, 0x00	; 0
    3570:	40 e8       	ldi	r20, 0x80	; 128
    3572:	5f e3       	ldi	r21, 0x3F	; 63
    3574:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3578:	88 23       	and	r24, r24
    357a:	2c f4       	brge	.+10     	; 0x3586 <LCD_Vinit+0x4d8>
		__ticks = 1;
    357c:	81 e0       	ldi	r24, 0x01	; 1
    357e:	90 e0       	ldi	r25, 0x00	; 0
    3580:	9c 8b       	std	Y+20, r25	; 0x14
    3582:	8b 8b       	std	Y+19, r24	; 0x13
    3584:	3f c0       	rjmp	.+126    	; 0x3604 <LCD_Vinit+0x556>
	else if (__tmp > 65535)
    3586:	6d 89       	ldd	r22, Y+21	; 0x15
    3588:	7e 89       	ldd	r23, Y+22	; 0x16
    358a:	8f 89       	ldd	r24, Y+23	; 0x17
    358c:	98 8d       	ldd	r25, Y+24	; 0x18
    358e:	20 e0       	ldi	r18, 0x00	; 0
    3590:	3f ef       	ldi	r19, 0xFF	; 255
    3592:	4f e7       	ldi	r20, 0x7F	; 127
    3594:	57 e4       	ldi	r21, 0x47	; 71
    3596:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    359a:	18 16       	cp	r1, r24
    359c:	4c f5       	brge	.+82     	; 0x35f0 <LCD_Vinit+0x542>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    359e:	69 8d       	ldd	r22, Y+25	; 0x19
    35a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35a6:	20 e0       	ldi	r18, 0x00	; 0
    35a8:	30 e0       	ldi	r19, 0x00	; 0
    35aa:	40 e2       	ldi	r20, 0x20	; 32
    35ac:	51 e4       	ldi	r21, 0x41	; 65
    35ae:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    35b2:	dc 01       	movw	r26, r24
    35b4:	cb 01       	movw	r24, r22
    35b6:	bc 01       	movw	r22, r24
    35b8:	cd 01       	movw	r24, r26
    35ba:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    35be:	dc 01       	movw	r26, r24
    35c0:	cb 01       	movw	r24, r22
    35c2:	9c 8b       	std	Y+20, r25	; 0x14
    35c4:	8b 8b       	std	Y+19, r24	; 0x13
    35c6:	0f c0       	rjmp	.+30     	; 0x35e6 <LCD_Vinit+0x538>
    35c8:	88 ec       	ldi	r24, 0xC8	; 200
    35ca:	90 e0       	ldi	r25, 0x00	; 0
    35cc:	9a 8b       	std	Y+18, r25	; 0x12
    35ce:	89 8b       	std	Y+17, r24	; 0x11
    35d0:	89 89       	ldd	r24, Y+17	; 0x11
    35d2:	9a 89       	ldd	r25, Y+18	; 0x12
    35d4:	01 97       	sbiw	r24, 0x01	; 1
    35d6:	f1 f7       	brne	.-4      	; 0x35d4 <LCD_Vinit+0x526>
    35d8:	9a 8b       	std	Y+18, r25	; 0x12
    35da:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35dc:	8b 89       	ldd	r24, Y+19	; 0x13
    35de:	9c 89       	ldd	r25, Y+20	; 0x14
    35e0:	01 97       	sbiw	r24, 0x01	; 1
    35e2:	9c 8b       	std	Y+20, r25	; 0x14
    35e4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35e6:	8b 89       	ldd	r24, Y+19	; 0x13
    35e8:	9c 89       	ldd	r25, Y+20	; 0x14
    35ea:	00 97       	sbiw	r24, 0x00	; 0
    35ec:	69 f7       	brne	.-38     	; 0x35c8 <LCD_Vinit+0x51a>
    35ee:	14 c0       	rjmp	.+40     	; 0x3618 <LCD_Vinit+0x56a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35f0:	6d 89       	ldd	r22, Y+21	; 0x15
    35f2:	7e 89       	ldd	r23, Y+22	; 0x16
    35f4:	8f 89       	ldd	r24, Y+23	; 0x17
    35f6:	98 8d       	ldd	r25, Y+24	; 0x18
    35f8:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    35fc:	dc 01       	movw	r26, r24
    35fe:	cb 01       	movw	r24, r22
    3600:	9c 8b       	std	Y+20, r25	; 0x14
    3602:	8b 8b       	std	Y+19, r24	; 0x13
    3604:	8b 89       	ldd	r24, Y+19	; 0x13
    3606:	9c 89       	ldd	r25, Y+20	; 0x14
    3608:	98 8b       	std	Y+16, r25	; 0x10
    360a:	8f 87       	std	Y+15, r24	; 0x0f
    360c:	8f 85       	ldd	r24, Y+15	; 0x0f
    360e:	98 89       	ldd	r25, Y+16	; 0x10
    3610:	01 97       	sbiw	r24, 0x01	; 1
    3612:	f1 f7       	brne	.-4      	; 0x3610 <LCD_Vinit+0x562>
    3614:	98 8b       	std	Y+16, r25	; 0x10
    3616:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);

	LCD_Send_Command(LCD_DATA_ENTERY);
    3618:	86 e0       	ldi	r24, 0x06	; 6
    361a:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    361e:	80 e0       	ldi	r24, 0x00	; 0
    3620:	90 e0       	ldi	r25, 0x00	; 0
    3622:	a0 e7       	ldi	r26, 0x70	; 112
    3624:	b1 e4       	ldi	r27, 0x41	; 65
    3626:	8b 87       	std	Y+11, r24	; 0x0b
    3628:	9c 87       	std	Y+12, r25	; 0x0c
    362a:	ad 87       	std	Y+13, r26	; 0x0d
    362c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    362e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3630:	7c 85       	ldd	r23, Y+12	; 0x0c
    3632:	8d 85       	ldd	r24, Y+13	; 0x0d
    3634:	9e 85       	ldd	r25, Y+14	; 0x0e
    3636:	20 e0       	ldi	r18, 0x00	; 0
    3638:	30 e0       	ldi	r19, 0x00	; 0
    363a:	4a ef       	ldi	r20, 0xFA	; 250
    363c:	54 e4       	ldi	r21, 0x44	; 68
    363e:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3642:	dc 01       	movw	r26, r24
    3644:	cb 01       	movw	r24, r22
    3646:	8f 83       	std	Y+7, r24	; 0x07
    3648:	98 87       	std	Y+8, r25	; 0x08
    364a:	a9 87       	std	Y+9, r26	; 0x09
    364c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    364e:	6f 81       	ldd	r22, Y+7	; 0x07
    3650:	78 85       	ldd	r23, Y+8	; 0x08
    3652:	89 85       	ldd	r24, Y+9	; 0x09
    3654:	9a 85       	ldd	r25, Y+10	; 0x0a
    3656:	20 e0       	ldi	r18, 0x00	; 0
    3658:	30 e0       	ldi	r19, 0x00	; 0
    365a:	40 e8       	ldi	r20, 0x80	; 128
    365c:	5f e3       	ldi	r21, 0x3F	; 63
    365e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3662:	88 23       	and	r24, r24
    3664:	2c f4       	brge	.+10     	; 0x3670 <LCD_Vinit+0x5c2>
		__ticks = 1;
    3666:	81 e0       	ldi	r24, 0x01	; 1
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	9e 83       	std	Y+6, r25	; 0x06
    366c:	8d 83       	std	Y+5, r24	; 0x05
    366e:	3f c0       	rjmp	.+126    	; 0x36ee <LCD_Vinit+0x640>
	else if (__tmp > 65535)
    3670:	6f 81       	ldd	r22, Y+7	; 0x07
    3672:	78 85       	ldd	r23, Y+8	; 0x08
    3674:	89 85       	ldd	r24, Y+9	; 0x09
    3676:	9a 85       	ldd	r25, Y+10	; 0x0a
    3678:	20 e0       	ldi	r18, 0x00	; 0
    367a:	3f ef       	ldi	r19, 0xFF	; 255
    367c:	4f e7       	ldi	r20, 0x7F	; 127
    367e:	57 e4       	ldi	r21, 0x47	; 71
    3680:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3684:	18 16       	cp	r1, r24
    3686:	4c f5       	brge	.+82     	; 0x36da <LCD_Vinit+0x62c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3688:	6b 85       	ldd	r22, Y+11	; 0x0b
    368a:	7c 85       	ldd	r23, Y+12	; 0x0c
    368c:	8d 85       	ldd	r24, Y+13	; 0x0d
    368e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3690:	20 e0       	ldi	r18, 0x00	; 0
    3692:	30 e0       	ldi	r19, 0x00	; 0
    3694:	40 e2       	ldi	r20, 0x20	; 32
    3696:	51 e4       	ldi	r21, 0x41	; 65
    3698:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    369c:	dc 01       	movw	r26, r24
    369e:	cb 01       	movw	r24, r22
    36a0:	bc 01       	movw	r22, r24
    36a2:	cd 01       	movw	r24, r26
    36a4:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    36a8:	dc 01       	movw	r26, r24
    36aa:	cb 01       	movw	r24, r22
    36ac:	9e 83       	std	Y+6, r25	; 0x06
    36ae:	8d 83       	std	Y+5, r24	; 0x05
    36b0:	0f c0       	rjmp	.+30     	; 0x36d0 <LCD_Vinit+0x622>
    36b2:	88 ec       	ldi	r24, 0xC8	; 200
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	9c 83       	std	Y+4, r25	; 0x04
    36b8:	8b 83       	std	Y+3, r24	; 0x03
    36ba:	8b 81       	ldd	r24, Y+3	; 0x03
    36bc:	9c 81       	ldd	r25, Y+4	; 0x04
    36be:	01 97       	sbiw	r24, 0x01	; 1
    36c0:	f1 f7       	brne	.-4      	; 0x36be <LCD_Vinit+0x610>
    36c2:	9c 83       	std	Y+4, r25	; 0x04
    36c4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36c6:	8d 81       	ldd	r24, Y+5	; 0x05
    36c8:	9e 81       	ldd	r25, Y+6	; 0x06
    36ca:	01 97       	sbiw	r24, 0x01	; 1
    36cc:	9e 83       	std	Y+6, r25	; 0x06
    36ce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36d0:	8d 81       	ldd	r24, Y+5	; 0x05
    36d2:	9e 81       	ldd	r25, Y+6	; 0x06
    36d4:	00 97       	sbiw	r24, 0x00	; 0
    36d6:	69 f7       	brne	.-38     	; 0x36b2 <LCD_Vinit+0x604>
    36d8:	14 c0       	rjmp	.+40     	; 0x3702 <LCD_Vinit+0x654>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36da:	6f 81       	ldd	r22, Y+7	; 0x07
    36dc:	78 85       	ldd	r23, Y+8	; 0x08
    36de:	89 85       	ldd	r24, Y+9	; 0x09
    36e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    36e2:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    36e6:	dc 01       	movw	r26, r24
    36e8:	cb 01       	movw	r24, r22
    36ea:	9e 83       	std	Y+6, r25	; 0x06
    36ec:	8d 83       	std	Y+5, r24	; 0x05
    36ee:	8d 81       	ldd	r24, Y+5	; 0x05
    36f0:	9e 81       	ldd	r25, Y+6	; 0x06
    36f2:	9a 83       	std	Y+2, r25	; 0x02
    36f4:	89 83       	std	Y+1, r24	; 0x01
    36f6:	89 81       	ldd	r24, Y+1	; 0x01
    36f8:	9a 81       	ldd	r25, Y+2	; 0x02
    36fa:	01 97       	sbiw	r24, 0x01	; 1
    36fc:	f1 f7       	brne	.-4      	; 0x36fa <LCD_Vinit+0x64c>
    36fe:	9a 83       	std	Y+2, r25	; 0x02
    3700:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);

}
    3702:	cc 5a       	subi	r28, 0xAC	; 172
    3704:	df 4f       	sbci	r29, 0xFF	; 255
    3706:	0f b6       	in	r0, 0x3f	; 63
    3708:	f8 94       	cli
    370a:	de bf       	out	0x3e, r29	; 62
    370c:	0f be       	out	0x3f, r0	; 63
    370e:	cd bf       	out	0x3d, r28	; 61
    3710:	cf 91       	pop	r28
    3712:	df 91       	pop	r29
    3714:	1f 91       	pop	r17
    3716:	0f 91       	pop	r16
    3718:	08 95       	ret

0000371a <LCD_Send_Command>:

void LCD_Send_Command(u8 command) {
    371a:	0f 93       	push	r16
    371c:	1f 93       	push	r17
    371e:	df 93       	push	r29
    3720:	cf 93       	push	r28
    3722:	cd b7       	in	r28, 0x3d	; 61
    3724:	de b7       	in	r29, 0x3e	; 62
    3726:	cf 56       	subi	r28, 0x6F	; 111
    3728:	d0 40       	sbci	r29, 0x00	; 0
    372a:	0f b6       	in	r0, 0x3f	; 63
    372c:	f8 94       	cli
    372e:	de bf       	out	0x3e, r29	; 62
    3730:	0f be       	out	0x3f, r0	; 63
    3732:	cd bf       	out	0x3d, r28	; 61
    3734:	fe 01       	movw	r30, r28
    3736:	e1 59       	subi	r30, 0x91	; 145
    3738:	ff 4f       	sbci	r31, 0xFF	; 255
    373a:	80 83       	st	Z, r24
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_RS_PIN, LOW);
    373c:	83 e0       	ldi	r24, 0x03	; 3
    373e:	64 e0       	ldi	r22, 0x04	; 4
    3740:	40 e0       	ldi	r20, 0x00	; 0
    3742:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    3746:	fe 01       	movw	r30, r28
    3748:	e5 59       	subi	r30, 0x95	; 149
    374a:	ff 4f       	sbci	r31, 0xFF	; 255
    374c:	80 e0       	ldi	r24, 0x00	; 0
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	a0 e8       	ldi	r26, 0x80	; 128
    3752:	bf e3       	ldi	r27, 0x3F	; 63
    3754:	80 83       	st	Z, r24
    3756:	91 83       	std	Z+1, r25	; 0x01
    3758:	a2 83       	std	Z+2, r26	; 0x02
    375a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    375c:	8e 01       	movw	r16, r28
    375e:	09 59       	subi	r16, 0x99	; 153
    3760:	1f 4f       	sbci	r17, 0xFF	; 255
    3762:	fe 01       	movw	r30, r28
    3764:	e5 59       	subi	r30, 0x95	; 149
    3766:	ff 4f       	sbci	r31, 0xFF	; 255
    3768:	60 81       	ld	r22, Z
    376a:	71 81       	ldd	r23, Z+1	; 0x01
    376c:	82 81       	ldd	r24, Z+2	; 0x02
    376e:	93 81       	ldd	r25, Z+3	; 0x03
    3770:	2b ea       	ldi	r18, 0xAB	; 171
    3772:	3a ea       	ldi	r19, 0xAA	; 170
    3774:	4a e2       	ldi	r20, 0x2A	; 42
    3776:	50 e4       	ldi	r21, 0x40	; 64
    3778:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    377c:	dc 01       	movw	r26, r24
    377e:	cb 01       	movw	r24, r22
    3780:	f8 01       	movw	r30, r16
    3782:	80 83       	st	Z, r24
    3784:	91 83       	std	Z+1, r25	; 0x01
    3786:	a2 83       	std	Z+2, r26	; 0x02
    3788:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    378a:	fe 01       	movw	r30, r28
    378c:	e9 59       	subi	r30, 0x99	; 153
    378e:	ff 4f       	sbci	r31, 0xFF	; 255
    3790:	60 81       	ld	r22, Z
    3792:	71 81       	ldd	r23, Z+1	; 0x01
    3794:	82 81       	ldd	r24, Z+2	; 0x02
    3796:	93 81       	ldd	r25, Z+3	; 0x03
    3798:	20 e0       	ldi	r18, 0x00	; 0
    379a:	30 e0       	ldi	r19, 0x00	; 0
    379c:	40 e8       	ldi	r20, 0x80	; 128
    379e:	5f e3       	ldi	r21, 0x3F	; 63
    37a0:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    37a4:	88 23       	and	r24, r24
    37a6:	34 f4       	brge	.+12     	; 0x37b4 <LCD_Send_Command+0x9a>
		__ticks = 1;
    37a8:	fe 01       	movw	r30, r28
    37aa:	ea 59       	subi	r30, 0x9A	; 154
    37ac:	ff 4f       	sbci	r31, 0xFF	; 255
    37ae:	81 e0       	ldi	r24, 0x01	; 1
    37b0:	80 83       	st	Z, r24
    37b2:	e0 c0       	rjmp	.+448    	; 0x3974 <LCD_Send_Command+0x25a>
	else if (__tmp > 255)
    37b4:	fe 01       	movw	r30, r28
    37b6:	e9 59       	subi	r30, 0x99	; 153
    37b8:	ff 4f       	sbci	r31, 0xFF	; 255
    37ba:	60 81       	ld	r22, Z
    37bc:	71 81       	ldd	r23, Z+1	; 0x01
    37be:	82 81       	ldd	r24, Z+2	; 0x02
    37c0:	93 81       	ldd	r25, Z+3	; 0x03
    37c2:	20 e0       	ldi	r18, 0x00	; 0
    37c4:	30 e0       	ldi	r19, 0x00	; 0
    37c6:	4f e7       	ldi	r20, 0x7F	; 127
    37c8:	53 e4       	ldi	r21, 0x43	; 67
    37ca:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    37ce:	18 16       	cp	r1, r24
    37d0:	0c f0       	brlt	.+2      	; 0x37d4 <LCD_Send_Command+0xba>
    37d2:	c0 c0       	rjmp	.+384    	; 0x3954 <LCD_Send_Command+0x23a>
	{
		_delay_ms(__us / 1000.0);
    37d4:	fe 01       	movw	r30, r28
    37d6:	e5 59       	subi	r30, 0x95	; 149
    37d8:	ff 4f       	sbci	r31, 0xFF	; 255
    37da:	60 81       	ld	r22, Z
    37dc:	71 81       	ldd	r23, Z+1	; 0x01
    37de:	82 81       	ldd	r24, Z+2	; 0x02
    37e0:	93 81       	ldd	r25, Z+3	; 0x03
    37e2:	20 e0       	ldi	r18, 0x00	; 0
    37e4:	30 e0       	ldi	r19, 0x00	; 0
    37e6:	4a e7       	ldi	r20, 0x7A	; 122
    37e8:	54 e4       	ldi	r21, 0x44	; 68
    37ea:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    37ee:	dc 01       	movw	r26, r24
    37f0:	cb 01       	movw	r24, r22
    37f2:	fe 01       	movw	r30, r28
    37f4:	ee 59       	subi	r30, 0x9E	; 158
    37f6:	ff 4f       	sbci	r31, 0xFF	; 255
    37f8:	80 83       	st	Z, r24
    37fa:	91 83       	std	Z+1, r25	; 0x01
    37fc:	a2 83       	std	Z+2, r26	; 0x02
    37fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3800:	8e 01       	movw	r16, r28
    3802:	02 5a       	subi	r16, 0xA2	; 162
    3804:	1f 4f       	sbci	r17, 0xFF	; 255
    3806:	fe 01       	movw	r30, r28
    3808:	ee 59       	subi	r30, 0x9E	; 158
    380a:	ff 4f       	sbci	r31, 0xFF	; 255
    380c:	60 81       	ld	r22, Z
    380e:	71 81       	ldd	r23, Z+1	; 0x01
    3810:	82 81       	ldd	r24, Z+2	; 0x02
    3812:	93 81       	ldd	r25, Z+3	; 0x03
    3814:	20 e0       	ldi	r18, 0x00	; 0
    3816:	30 e0       	ldi	r19, 0x00	; 0
    3818:	4a ef       	ldi	r20, 0xFA	; 250
    381a:	54 e4       	ldi	r21, 0x44	; 68
    381c:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3820:	dc 01       	movw	r26, r24
    3822:	cb 01       	movw	r24, r22
    3824:	f8 01       	movw	r30, r16
    3826:	80 83       	st	Z, r24
    3828:	91 83       	std	Z+1, r25	; 0x01
    382a:	a2 83       	std	Z+2, r26	; 0x02
    382c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    382e:	fe 01       	movw	r30, r28
    3830:	e2 5a       	subi	r30, 0xA2	; 162
    3832:	ff 4f       	sbci	r31, 0xFF	; 255
    3834:	60 81       	ld	r22, Z
    3836:	71 81       	ldd	r23, Z+1	; 0x01
    3838:	82 81       	ldd	r24, Z+2	; 0x02
    383a:	93 81       	ldd	r25, Z+3	; 0x03
    383c:	20 e0       	ldi	r18, 0x00	; 0
    383e:	30 e0       	ldi	r19, 0x00	; 0
    3840:	40 e8       	ldi	r20, 0x80	; 128
    3842:	5f e3       	ldi	r21, 0x3F	; 63
    3844:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3848:	88 23       	and	r24, r24
    384a:	44 f4       	brge	.+16     	; 0x385c <LCD_Send_Command+0x142>
		__ticks = 1;
    384c:	fe 01       	movw	r30, r28
    384e:	e4 5a       	subi	r30, 0xA4	; 164
    3850:	ff 4f       	sbci	r31, 0xFF	; 255
    3852:	81 e0       	ldi	r24, 0x01	; 1
    3854:	90 e0       	ldi	r25, 0x00	; 0
    3856:	91 83       	std	Z+1, r25	; 0x01
    3858:	80 83       	st	Z, r24
    385a:	64 c0       	rjmp	.+200    	; 0x3924 <LCD_Send_Command+0x20a>
	else if (__tmp > 65535)
    385c:	fe 01       	movw	r30, r28
    385e:	e2 5a       	subi	r30, 0xA2	; 162
    3860:	ff 4f       	sbci	r31, 0xFF	; 255
    3862:	60 81       	ld	r22, Z
    3864:	71 81       	ldd	r23, Z+1	; 0x01
    3866:	82 81       	ldd	r24, Z+2	; 0x02
    3868:	93 81       	ldd	r25, Z+3	; 0x03
    386a:	20 e0       	ldi	r18, 0x00	; 0
    386c:	3f ef       	ldi	r19, 0xFF	; 255
    386e:	4f e7       	ldi	r20, 0x7F	; 127
    3870:	57 e4       	ldi	r21, 0x47	; 71
    3872:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3876:	18 16       	cp	r1, r24
    3878:	0c f0       	brlt	.+2      	; 0x387c <LCD_Send_Command+0x162>
    387a:	43 c0       	rjmp	.+134    	; 0x3902 <LCD_Send_Command+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    387c:	fe 01       	movw	r30, r28
    387e:	ee 59       	subi	r30, 0x9E	; 158
    3880:	ff 4f       	sbci	r31, 0xFF	; 255
    3882:	60 81       	ld	r22, Z
    3884:	71 81       	ldd	r23, Z+1	; 0x01
    3886:	82 81       	ldd	r24, Z+2	; 0x02
    3888:	93 81       	ldd	r25, Z+3	; 0x03
    388a:	20 e0       	ldi	r18, 0x00	; 0
    388c:	30 e0       	ldi	r19, 0x00	; 0
    388e:	40 e2       	ldi	r20, 0x20	; 32
    3890:	51 e4       	ldi	r21, 0x41	; 65
    3892:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3896:	dc 01       	movw	r26, r24
    3898:	cb 01       	movw	r24, r22
    389a:	8e 01       	movw	r16, r28
    389c:	04 5a       	subi	r16, 0xA4	; 164
    389e:	1f 4f       	sbci	r17, 0xFF	; 255
    38a0:	bc 01       	movw	r22, r24
    38a2:	cd 01       	movw	r24, r26
    38a4:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    38a8:	dc 01       	movw	r26, r24
    38aa:	cb 01       	movw	r24, r22
    38ac:	f8 01       	movw	r30, r16
    38ae:	91 83       	std	Z+1, r25	; 0x01
    38b0:	80 83       	st	Z, r24
    38b2:	1f c0       	rjmp	.+62     	; 0x38f2 <LCD_Send_Command+0x1d8>
    38b4:	fe 01       	movw	r30, r28
    38b6:	e6 5a       	subi	r30, 0xA6	; 166
    38b8:	ff 4f       	sbci	r31, 0xFF	; 255
    38ba:	88 ec       	ldi	r24, 0xC8	; 200
    38bc:	90 e0       	ldi	r25, 0x00	; 0
    38be:	91 83       	std	Z+1, r25	; 0x01
    38c0:	80 83       	st	Z, r24
    38c2:	fe 01       	movw	r30, r28
    38c4:	e6 5a       	subi	r30, 0xA6	; 166
    38c6:	ff 4f       	sbci	r31, 0xFF	; 255
    38c8:	80 81       	ld	r24, Z
    38ca:	91 81       	ldd	r25, Z+1	; 0x01
    38cc:	01 97       	sbiw	r24, 0x01	; 1
    38ce:	f1 f7       	brne	.-4      	; 0x38cc <LCD_Send_Command+0x1b2>
    38d0:	fe 01       	movw	r30, r28
    38d2:	e6 5a       	subi	r30, 0xA6	; 166
    38d4:	ff 4f       	sbci	r31, 0xFF	; 255
    38d6:	91 83       	std	Z+1, r25	; 0x01
    38d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38da:	de 01       	movw	r26, r28
    38dc:	a4 5a       	subi	r26, 0xA4	; 164
    38de:	bf 4f       	sbci	r27, 0xFF	; 255
    38e0:	fe 01       	movw	r30, r28
    38e2:	e4 5a       	subi	r30, 0xA4	; 164
    38e4:	ff 4f       	sbci	r31, 0xFF	; 255
    38e6:	80 81       	ld	r24, Z
    38e8:	91 81       	ldd	r25, Z+1	; 0x01
    38ea:	01 97       	sbiw	r24, 0x01	; 1
    38ec:	11 96       	adiw	r26, 0x01	; 1
    38ee:	9c 93       	st	X, r25
    38f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38f2:	fe 01       	movw	r30, r28
    38f4:	e4 5a       	subi	r30, 0xA4	; 164
    38f6:	ff 4f       	sbci	r31, 0xFF	; 255
    38f8:	80 81       	ld	r24, Z
    38fa:	91 81       	ldd	r25, Z+1	; 0x01
    38fc:	00 97       	sbiw	r24, 0x00	; 0
    38fe:	d1 f6       	brne	.-76     	; 0x38b4 <LCD_Send_Command+0x19a>
    3900:	4b c0       	rjmp	.+150    	; 0x3998 <LCD_Send_Command+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3902:	8e 01       	movw	r16, r28
    3904:	04 5a       	subi	r16, 0xA4	; 164
    3906:	1f 4f       	sbci	r17, 0xFF	; 255
    3908:	fe 01       	movw	r30, r28
    390a:	e2 5a       	subi	r30, 0xA2	; 162
    390c:	ff 4f       	sbci	r31, 0xFF	; 255
    390e:	60 81       	ld	r22, Z
    3910:	71 81       	ldd	r23, Z+1	; 0x01
    3912:	82 81       	ldd	r24, Z+2	; 0x02
    3914:	93 81       	ldd	r25, Z+3	; 0x03
    3916:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    391a:	dc 01       	movw	r26, r24
    391c:	cb 01       	movw	r24, r22
    391e:	f8 01       	movw	r30, r16
    3920:	91 83       	std	Z+1, r25	; 0x01
    3922:	80 83       	st	Z, r24
    3924:	de 01       	movw	r26, r28
    3926:	a8 5a       	subi	r26, 0xA8	; 168
    3928:	bf 4f       	sbci	r27, 0xFF	; 255
    392a:	fe 01       	movw	r30, r28
    392c:	e4 5a       	subi	r30, 0xA4	; 164
    392e:	ff 4f       	sbci	r31, 0xFF	; 255
    3930:	80 81       	ld	r24, Z
    3932:	91 81       	ldd	r25, Z+1	; 0x01
    3934:	11 96       	adiw	r26, 0x01	; 1
    3936:	9c 93       	st	X, r25
    3938:	8e 93       	st	-X, r24
    393a:	fe 01       	movw	r30, r28
    393c:	e8 5a       	subi	r30, 0xA8	; 168
    393e:	ff 4f       	sbci	r31, 0xFF	; 255
    3940:	80 81       	ld	r24, Z
    3942:	91 81       	ldd	r25, Z+1	; 0x01
    3944:	01 97       	sbiw	r24, 0x01	; 1
    3946:	f1 f7       	brne	.-4      	; 0x3944 <LCD_Send_Command+0x22a>
    3948:	fe 01       	movw	r30, r28
    394a:	e8 5a       	subi	r30, 0xA8	; 168
    394c:	ff 4f       	sbci	r31, 0xFF	; 255
    394e:	91 83       	std	Z+1, r25	; 0x01
    3950:	80 83       	st	Z, r24
    3952:	22 c0       	rjmp	.+68     	; 0x3998 <LCD_Send_Command+0x27e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3954:	8e 01       	movw	r16, r28
    3956:	0a 59       	subi	r16, 0x9A	; 154
    3958:	1f 4f       	sbci	r17, 0xFF	; 255
    395a:	fe 01       	movw	r30, r28
    395c:	e9 59       	subi	r30, 0x99	; 153
    395e:	ff 4f       	sbci	r31, 0xFF	; 255
    3960:	60 81       	ld	r22, Z
    3962:	71 81       	ldd	r23, Z+1	; 0x01
    3964:	82 81       	ldd	r24, Z+2	; 0x02
    3966:	93 81       	ldd	r25, Z+3	; 0x03
    3968:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    396c:	dc 01       	movw	r26, r24
    396e:	cb 01       	movw	r24, r22
    3970:	f8 01       	movw	r30, r16
    3972:	80 83       	st	Z, r24
    3974:	de 01       	movw	r26, r28
    3976:	a9 5a       	subi	r26, 0xA9	; 169
    3978:	bf 4f       	sbci	r27, 0xFF	; 255
    397a:	fe 01       	movw	r30, r28
    397c:	ea 59       	subi	r30, 0x9A	; 154
    397e:	ff 4f       	sbci	r31, 0xFF	; 255
    3980:	80 81       	ld	r24, Z
    3982:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3984:	fe 01       	movw	r30, r28
    3986:	e9 5a       	subi	r30, 0xA9	; 169
    3988:	ff 4f       	sbci	r31, 0xFF	; 255
    398a:	80 81       	ld	r24, Z
    398c:	8a 95       	dec	r24
    398e:	f1 f7       	brne	.-4      	; 0x398c <LCD_Send_Command+0x272>
    3990:	fe 01       	movw	r30, r28
    3992:	e9 5a       	subi	r30, 0xA9	; 169
    3994:	ff 4f       	sbci	r31, 0xFF	; 255
    3996:	80 83       	st	Z, r24
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    3998:	83 e0       	ldi	r24, 0x03	; 3
    399a:	65 e0       	ldi	r22, 0x05	; 5
    399c:	41 e0       	ldi	r20, 0x01	; 1
    399e:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    39a2:	fe 01       	movw	r30, r28
    39a4:	ed 5a       	subi	r30, 0xAD	; 173
    39a6:	ff 4f       	sbci	r31, 0xFF	; 255
    39a8:	80 e0       	ldi	r24, 0x00	; 0
    39aa:	90 e0       	ldi	r25, 0x00	; 0
    39ac:	a0 e8       	ldi	r26, 0x80	; 128
    39ae:	bf e3       	ldi	r27, 0x3F	; 63
    39b0:	80 83       	st	Z, r24
    39b2:	91 83       	std	Z+1, r25	; 0x01
    39b4:	a2 83       	std	Z+2, r26	; 0x02
    39b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    39b8:	8e 01       	movw	r16, r28
    39ba:	01 5b       	subi	r16, 0xB1	; 177
    39bc:	1f 4f       	sbci	r17, 0xFF	; 255
    39be:	fe 01       	movw	r30, r28
    39c0:	ed 5a       	subi	r30, 0xAD	; 173
    39c2:	ff 4f       	sbci	r31, 0xFF	; 255
    39c4:	60 81       	ld	r22, Z
    39c6:	71 81       	ldd	r23, Z+1	; 0x01
    39c8:	82 81       	ldd	r24, Z+2	; 0x02
    39ca:	93 81       	ldd	r25, Z+3	; 0x03
    39cc:	2b ea       	ldi	r18, 0xAB	; 171
    39ce:	3a ea       	ldi	r19, 0xAA	; 170
    39d0:	4a e2       	ldi	r20, 0x2A	; 42
    39d2:	50 e4       	ldi	r21, 0x40	; 64
    39d4:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    39d8:	dc 01       	movw	r26, r24
    39da:	cb 01       	movw	r24, r22
    39dc:	f8 01       	movw	r30, r16
    39de:	80 83       	st	Z, r24
    39e0:	91 83       	std	Z+1, r25	; 0x01
    39e2:	a2 83       	std	Z+2, r26	; 0x02
    39e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39e6:	fe 01       	movw	r30, r28
    39e8:	e1 5b       	subi	r30, 0xB1	; 177
    39ea:	ff 4f       	sbci	r31, 0xFF	; 255
    39ec:	60 81       	ld	r22, Z
    39ee:	71 81       	ldd	r23, Z+1	; 0x01
    39f0:	82 81       	ldd	r24, Z+2	; 0x02
    39f2:	93 81       	ldd	r25, Z+3	; 0x03
    39f4:	20 e0       	ldi	r18, 0x00	; 0
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	40 e8       	ldi	r20, 0x80	; 128
    39fa:	5f e3       	ldi	r21, 0x3F	; 63
    39fc:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3a00:	88 23       	and	r24, r24
    3a02:	34 f4       	brge	.+12     	; 0x3a10 <LCD_Send_Command+0x2f6>
		__ticks = 1;
    3a04:	fe 01       	movw	r30, r28
    3a06:	e2 5b       	subi	r30, 0xB2	; 178
    3a08:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0a:	81 e0       	ldi	r24, 0x01	; 1
    3a0c:	80 83       	st	Z, r24
    3a0e:	e0 c0       	rjmp	.+448    	; 0x3bd0 <LCD_Send_Command+0x4b6>
	else if (__tmp > 255)
    3a10:	fe 01       	movw	r30, r28
    3a12:	e1 5b       	subi	r30, 0xB1	; 177
    3a14:	ff 4f       	sbci	r31, 0xFF	; 255
    3a16:	60 81       	ld	r22, Z
    3a18:	71 81       	ldd	r23, Z+1	; 0x01
    3a1a:	82 81       	ldd	r24, Z+2	; 0x02
    3a1c:	93 81       	ldd	r25, Z+3	; 0x03
    3a1e:	20 e0       	ldi	r18, 0x00	; 0
    3a20:	30 e0       	ldi	r19, 0x00	; 0
    3a22:	4f e7       	ldi	r20, 0x7F	; 127
    3a24:	53 e4       	ldi	r21, 0x43	; 67
    3a26:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3a2a:	18 16       	cp	r1, r24
    3a2c:	0c f0       	brlt	.+2      	; 0x3a30 <LCD_Send_Command+0x316>
    3a2e:	c0 c0       	rjmp	.+384    	; 0x3bb0 <LCD_Send_Command+0x496>
	{
		_delay_ms(__us / 1000.0);
    3a30:	fe 01       	movw	r30, r28
    3a32:	ed 5a       	subi	r30, 0xAD	; 173
    3a34:	ff 4f       	sbci	r31, 0xFF	; 255
    3a36:	60 81       	ld	r22, Z
    3a38:	71 81       	ldd	r23, Z+1	; 0x01
    3a3a:	82 81       	ldd	r24, Z+2	; 0x02
    3a3c:	93 81       	ldd	r25, Z+3	; 0x03
    3a3e:	20 e0       	ldi	r18, 0x00	; 0
    3a40:	30 e0       	ldi	r19, 0x00	; 0
    3a42:	4a e7       	ldi	r20, 0x7A	; 122
    3a44:	54 e4       	ldi	r21, 0x44	; 68
    3a46:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    3a4a:	dc 01       	movw	r26, r24
    3a4c:	cb 01       	movw	r24, r22
    3a4e:	fe 01       	movw	r30, r28
    3a50:	e6 5b       	subi	r30, 0xB6	; 182
    3a52:	ff 4f       	sbci	r31, 0xFF	; 255
    3a54:	80 83       	st	Z, r24
    3a56:	91 83       	std	Z+1, r25	; 0x01
    3a58:	a2 83       	std	Z+2, r26	; 0x02
    3a5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a5c:	8e 01       	movw	r16, r28
    3a5e:	0a 5b       	subi	r16, 0xBA	; 186
    3a60:	1f 4f       	sbci	r17, 0xFF	; 255
    3a62:	fe 01       	movw	r30, r28
    3a64:	e6 5b       	subi	r30, 0xB6	; 182
    3a66:	ff 4f       	sbci	r31, 0xFF	; 255
    3a68:	60 81       	ld	r22, Z
    3a6a:	71 81       	ldd	r23, Z+1	; 0x01
    3a6c:	82 81       	ldd	r24, Z+2	; 0x02
    3a6e:	93 81       	ldd	r25, Z+3	; 0x03
    3a70:	20 e0       	ldi	r18, 0x00	; 0
    3a72:	30 e0       	ldi	r19, 0x00	; 0
    3a74:	4a ef       	ldi	r20, 0xFA	; 250
    3a76:	54 e4       	ldi	r21, 0x44	; 68
    3a78:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3a7c:	dc 01       	movw	r26, r24
    3a7e:	cb 01       	movw	r24, r22
    3a80:	f8 01       	movw	r30, r16
    3a82:	80 83       	st	Z, r24
    3a84:	91 83       	std	Z+1, r25	; 0x01
    3a86:	a2 83       	std	Z+2, r26	; 0x02
    3a88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a8a:	fe 01       	movw	r30, r28
    3a8c:	ea 5b       	subi	r30, 0xBA	; 186
    3a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a90:	60 81       	ld	r22, Z
    3a92:	71 81       	ldd	r23, Z+1	; 0x01
    3a94:	82 81       	ldd	r24, Z+2	; 0x02
    3a96:	93 81       	ldd	r25, Z+3	; 0x03
    3a98:	20 e0       	ldi	r18, 0x00	; 0
    3a9a:	30 e0       	ldi	r19, 0x00	; 0
    3a9c:	40 e8       	ldi	r20, 0x80	; 128
    3a9e:	5f e3       	ldi	r21, 0x3F	; 63
    3aa0:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3aa4:	88 23       	and	r24, r24
    3aa6:	44 f4       	brge	.+16     	; 0x3ab8 <LCD_Send_Command+0x39e>
		__ticks = 1;
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	ec 5b       	subi	r30, 0xBC	; 188
    3aac:	ff 4f       	sbci	r31, 0xFF	; 255
    3aae:	81 e0       	ldi	r24, 0x01	; 1
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	91 83       	std	Z+1, r25	; 0x01
    3ab4:	80 83       	st	Z, r24
    3ab6:	64 c0       	rjmp	.+200    	; 0x3b80 <LCD_Send_Command+0x466>
	else if (__tmp > 65535)
    3ab8:	fe 01       	movw	r30, r28
    3aba:	ea 5b       	subi	r30, 0xBA	; 186
    3abc:	ff 4f       	sbci	r31, 0xFF	; 255
    3abe:	60 81       	ld	r22, Z
    3ac0:	71 81       	ldd	r23, Z+1	; 0x01
    3ac2:	82 81       	ldd	r24, Z+2	; 0x02
    3ac4:	93 81       	ldd	r25, Z+3	; 0x03
    3ac6:	20 e0       	ldi	r18, 0x00	; 0
    3ac8:	3f ef       	ldi	r19, 0xFF	; 255
    3aca:	4f e7       	ldi	r20, 0x7F	; 127
    3acc:	57 e4       	ldi	r21, 0x47	; 71
    3ace:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3ad2:	18 16       	cp	r1, r24
    3ad4:	0c f0       	brlt	.+2      	; 0x3ad8 <LCD_Send_Command+0x3be>
    3ad6:	43 c0       	rjmp	.+134    	; 0x3b5e <LCD_Send_Command+0x444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ad8:	fe 01       	movw	r30, r28
    3ada:	e6 5b       	subi	r30, 0xB6	; 182
    3adc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ade:	60 81       	ld	r22, Z
    3ae0:	71 81       	ldd	r23, Z+1	; 0x01
    3ae2:	82 81       	ldd	r24, Z+2	; 0x02
    3ae4:	93 81       	ldd	r25, Z+3	; 0x03
    3ae6:	20 e0       	ldi	r18, 0x00	; 0
    3ae8:	30 e0       	ldi	r19, 0x00	; 0
    3aea:	40 e2       	ldi	r20, 0x20	; 32
    3aec:	51 e4       	ldi	r21, 0x41	; 65
    3aee:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3af2:	dc 01       	movw	r26, r24
    3af4:	cb 01       	movw	r24, r22
    3af6:	8e 01       	movw	r16, r28
    3af8:	0c 5b       	subi	r16, 0xBC	; 188
    3afa:	1f 4f       	sbci	r17, 0xFF	; 255
    3afc:	bc 01       	movw	r22, r24
    3afe:	cd 01       	movw	r24, r26
    3b00:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3b04:	dc 01       	movw	r26, r24
    3b06:	cb 01       	movw	r24, r22
    3b08:	f8 01       	movw	r30, r16
    3b0a:	91 83       	std	Z+1, r25	; 0x01
    3b0c:	80 83       	st	Z, r24
    3b0e:	1f c0       	rjmp	.+62     	; 0x3b4e <LCD_Send_Command+0x434>
    3b10:	fe 01       	movw	r30, r28
    3b12:	ee 5b       	subi	r30, 0xBE	; 190
    3b14:	ff 4f       	sbci	r31, 0xFF	; 255
    3b16:	88 ec       	ldi	r24, 0xC8	; 200
    3b18:	90 e0       	ldi	r25, 0x00	; 0
    3b1a:	91 83       	std	Z+1, r25	; 0x01
    3b1c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3b1e:	fe 01       	movw	r30, r28
    3b20:	ee 5b       	subi	r30, 0xBE	; 190
    3b22:	ff 4f       	sbci	r31, 0xFF	; 255
    3b24:	80 81       	ld	r24, Z
    3b26:	91 81       	ldd	r25, Z+1	; 0x01
    3b28:	01 97       	sbiw	r24, 0x01	; 1
    3b2a:	f1 f7       	brne	.-4      	; 0x3b28 <LCD_Send_Command+0x40e>
    3b2c:	fe 01       	movw	r30, r28
    3b2e:	ee 5b       	subi	r30, 0xBE	; 190
    3b30:	ff 4f       	sbci	r31, 0xFF	; 255
    3b32:	91 83       	std	Z+1, r25	; 0x01
    3b34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b36:	de 01       	movw	r26, r28
    3b38:	ac 5b       	subi	r26, 0xBC	; 188
    3b3a:	bf 4f       	sbci	r27, 0xFF	; 255
    3b3c:	fe 01       	movw	r30, r28
    3b3e:	ec 5b       	subi	r30, 0xBC	; 188
    3b40:	ff 4f       	sbci	r31, 0xFF	; 255
    3b42:	80 81       	ld	r24, Z
    3b44:	91 81       	ldd	r25, Z+1	; 0x01
    3b46:	01 97       	sbiw	r24, 0x01	; 1
    3b48:	11 96       	adiw	r26, 0x01	; 1
    3b4a:	9c 93       	st	X, r25
    3b4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b4e:	fe 01       	movw	r30, r28
    3b50:	ec 5b       	subi	r30, 0xBC	; 188
    3b52:	ff 4f       	sbci	r31, 0xFF	; 255
    3b54:	80 81       	ld	r24, Z
    3b56:	91 81       	ldd	r25, Z+1	; 0x01
    3b58:	00 97       	sbiw	r24, 0x00	; 0
    3b5a:	d1 f6       	brne	.-76     	; 0x3b10 <LCD_Send_Command+0x3f6>
    3b5c:	42 c0       	rjmp	.+132    	; 0x3be2 <LCD_Send_Command+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b5e:	8e 01       	movw	r16, r28
    3b60:	0c 5b       	subi	r16, 0xBC	; 188
    3b62:	1f 4f       	sbci	r17, 0xFF	; 255
    3b64:	fe 01       	movw	r30, r28
    3b66:	ea 5b       	subi	r30, 0xBA	; 186
    3b68:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6a:	60 81       	ld	r22, Z
    3b6c:	71 81       	ldd	r23, Z+1	; 0x01
    3b6e:	82 81       	ldd	r24, Z+2	; 0x02
    3b70:	93 81       	ldd	r25, Z+3	; 0x03
    3b72:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3b76:	dc 01       	movw	r26, r24
    3b78:	cb 01       	movw	r24, r22
    3b7a:	f8 01       	movw	r30, r16
    3b7c:	91 83       	std	Z+1, r25	; 0x01
    3b7e:	80 83       	st	Z, r24
    3b80:	de 01       	movw	r26, r28
    3b82:	a0 5c       	subi	r26, 0xC0	; 192
    3b84:	bf 4f       	sbci	r27, 0xFF	; 255
    3b86:	fe 01       	movw	r30, r28
    3b88:	ec 5b       	subi	r30, 0xBC	; 188
    3b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b8c:	80 81       	ld	r24, Z
    3b8e:	91 81       	ldd	r25, Z+1	; 0x01
    3b90:	11 96       	adiw	r26, 0x01	; 1
    3b92:	9c 93       	st	X, r25
    3b94:	8e 93       	st	-X, r24
    3b96:	fe 01       	movw	r30, r28
    3b98:	e0 5c       	subi	r30, 0xC0	; 192
    3b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9c:	80 81       	ld	r24, Z
    3b9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ba0:	01 97       	sbiw	r24, 0x01	; 1
    3ba2:	f1 f7       	brne	.-4      	; 0x3ba0 <LCD_Send_Command+0x486>
    3ba4:	fe 01       	movw	r30, r28
    3ba6:	e0 5c       	subi	r30, 0xC0	; 192
    3ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    3baa:	91 83       	std	Z+1, r25	; 0x01
    3bac:	80 83       	st	Z, r24
    3bae:	19 c0       	rjmp	.+50     	; 0x3be2 <LCD_Send_Command+0x4c8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3bb0:	8e 01       	movw	r16, r28
    3bb2:	02 5b       	subi	r16, 0xB2	; 178
    3bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb6:	fe 01       	movw	r30, r28
    3bb8:	e1 5b       	subi	r30, 0xB1	; 177
    3bba:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbc:	60 81       	ld	r22, Z
    3bbe:	71 81       	ldd	r23, Z+1	; 0x01
    3bc0:	82 81       	ldd	r24, Z+2	; 0x02
    3bc2:	93 81       	ldd	r25, Z+3	; 0x03
    3bc4:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	f8 01       	movw	r30, r16
    3bce:	80 83       	st	Z, r24
    3bd0:	fe 01       	movw	r30, r28
    3bd2:	e2 5b       	subi	r30, 0xB2	; 178
    3bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd6:	80 81       	ld	r24, Z
    3bd8:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3bda:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bdc:	8a 95       	dec	r24
    3bde:	f1 f7       	brne	.-4      	; 0x3bdc <LCD_Send_Command+0x4c2>
    3be0:	8f af       	std	Y+63, r24	; 0x3f
	_delay_us(1);
	DIO_SetGroupValue(LCD_GROUP_DATA, command);
    3be2:	fe 01       	movw	r30, r28
    3be4:	e1 59       	subi	r30, 0x91	; 145
    3be6:	ff 4f       	sbci	r31, 0xFF	; 255
    3be8:	81 e0       	ldi	r24, 0x01	; 1
    3bea:	60 81       	ld	r22, Z
    3bec:	0e 94 99 17 	call	0x2f32	; 0x2f32 <DIO_SetGroupValue>
    3bf0:	80 e0       	ldi	r24, 0x00	; 0
    3bf2:	90 e0       	ldi	r25, 0x00	; 0
    3bf4:	a0 e8       	ldi	r26, 0x80	; 128
    3bf6:	bf e3       	ldi	r27, 0x3F	; 63
    3bf8:	8b af       	std	Y+59, r24	; 0x3b
    3bfa:	9c af       	std	Y+60, r25	; 0x3c
    3bfc:	ad af       	std	Y+61, r26	; 0x3d
    3bfe:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3c00:	6b ad       	ldd	r22, Y+59	; 0x3b
    3c02:	7c ad       	ldd	r23, Y+60	; 0x3c
    3c04:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c06:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c08:	2b ea       	ldi	r18, 0xAB	; 171
    3c0a:	3a ea       	ldi	r19, 0xAA	; 170
    3c0c:	4a e2       	ldi	r20, 0x2A	; 42
    3c0e:	50 e4       	ldi	r21, 0x40	; 64
    3c10:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3c14:	dc 01       	movw	r26, r24
    3c16:	cb 01       	movw	r24, r22
    3c18:	8f ab       	std	Y+55, r24	; 0x37
    3c1a:	98 af       	std	Y+56, r25	; 0x38
    3c1c:	a9 af       	std	Y+57, r26	; 0x39
    3c1e:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    3c20:	6f a9       	ldd	r22, Y+55	; 0x37
    3c22:	78 ad       	ldd	r23, Y+56	; 0x38
    3c24:	89 ad       	ldd	r24, Y+57	; 0x39
    3c26:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c28:	20 e0       	ldi	r18, 0x00	; 0
    3c2a:	30 e0       	ldi	r19, 0x00	; 0
    3c2c:	40 e8       	ldi	r20, 0x80	; 128
    3c2e:	5f e3       	ldi	r21, 0x3F	; 63
    3c30:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3c34:	88 23       	and	r24, r24
    3c36:	1c f4       	brge	.+6      	; 0x3c3e <LCD_Send_Command+0x524>
		__ticks = 1;
    3c38:	81 e0       	ldi	r24, 0x01	; 1
    3c3a:	8e ab       	std	Y+54, r24	; 0x36
    3c3c:	91 c0       	rjmp	.+290    	; 0x3d60 <LCD_Send_Command+0x646>
	else if (__tmp > 255)
    3c3e:	6f a9       	ldd	r22, Y+55	; 0x37
    3c40:	78 ad       	ldd	r23, Y+56	; 0x38
    3c42:	89 ad       	ldd	r24, Y+57	; 0x39
    3c44:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c46:	20 e0       	ldi	r18, 0x00	; 0
    3c48:	30 e0       	ldi	r19, 0x00	; 0
    3c4a:	4f e7       	ldi	r20, 0x7F	; 127
    3c4c:	53 e4       	ldi	r21, 0x43	; 67
    3c4e:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3c52:	18 16       	cp	r1, r24
    3c54:	0c f0       	brlt	.+2      	; 0x3c58 <LCD_Send_Command+0x53e>
    3c56:	7b c0       	rjmp	.+246    	; 0x3d4e <LCD_Send_Command+0x634>
	{
		_delay_ms(__us / 1000.0);
    3c58:	6b ad       	ldd	r22, Y+59	; 0x3b
    3c5a:	7c ad       	ldd	r23, Y+60	; 0x3c
    3c5c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c5e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c60:	20 e0       	ldi	r18, 0x00	; 0
    3c62:	30 e0       	ldi	r19, 0x00	; 0
    3c64:	4a e7       	ldi	r20, 0x7A	; 122
    3c66:	54 e4       	ldi	r21, 0x44	; 68
    3c68:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    3c6c:	dc 01       	movw	r26, r24
    3c6e:	cb 01       	movw	r24, r22
    3c70:	8a ab       	std	Y+50, r24	; 0x32
    3c72:	9b ab       	std	Y+51, r25	; 0x33
    3c74:	ac ab       	std	Y+52, r26	; 0x34
    3c76:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c78:	6a a9       	ldd	r22, Y+50	; 0x32
    3c7a:	7b a9       	ldd	r23, Y+51	; 0x33
    3c7c:	8c a9       	ldd	r24, Y+52	; 0x34
    3c7e:	9d a9       	ldd	r25, Y+53	; 0x35
    3c80:	20 e0       	ldi	r18, 0x00	; 0
    3c82:	30 e0       	ldi	r19, 0x00	; 0
    3c84:	4a ef       	ldi	r20, 0xFA	; 250
    3c86:	54 e4       	ldi	r21, 0x44	; 68
    3c88:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3c8c:	dc 01       	movw	r26, r24
    3c8e:	cb 01       	movw	r24, r22
    3c90:	8e a7       	std	Y+46, r24	; 0x2e
    3c92:	9f a7       	std	Y+47, r25	; 0x2f
    3c94:	a8 ab       	std	Y+48, r26	; 0x30
    3c96:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    3c98:	6e a5       	ldd	r22, Y+46	; 0x2e
    3c9a:	7f a5       	ldd	r23, Y+47	; 0x2f
    3c9c:	88 a9       	ldd	r24, Y+48	; 0x30
    3c9e:	99 a9       	ldd	r25, Y+49	; 0x31
    3ca0:	20 e0       	ldi	r18, 0x00	; 0
    3ca2:	30 e0       	ldi	r19, 0x00	; 0
    3ca4:	40 e8       	ldi	r20, 0x80	; 128
    3ca6:	5f e3       	ldi	r21, 0x3F	; 63
    3ca8:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3cac:	88 23       	and	r24, r24
    3cae:	2c f4       	brge	.+10     	; 0x3cba <LCD_Send_Command+0x5a0>
		__ticks = 1;
    3cb0:	81 e0       	ldi	r24, 0x01	; 1
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	9d a7       	std	Y+45, r25	; 0x2d
    3cb6:	8c a7       	std	Y+44, r24	; 0x2c
    3cb8:	3f c0       	rjmp	.+126    	; 0x3d38 <LCD_Send_Command+0x61e>
	else if (__tmp > 65535)
    3cba:	6e a5       	ldd	r22, Y+46	; 0x2e
    3cbc:	7f a5       	ldd	r23, Y+47	; 0x2f
    3cbe:	88 a9       	ldd	r24, Y+48	; 0x30
    3cc0:	99 a9       	ldd	r25, Y+49	; 0x31
    3cc2:	20 e0       	ldi	r18, 0x00	; 0
    3cc4:	3f ef       	ldi	r19, 0xFF	; 255
    3cc6:	4f e7       	ldi	r20, 0x7F	; 127
    3cc8:	57 e4       	ldi	r21, 0x47	; 71
    3cca:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3cce:	18 16       	cp	r1, r24
    3cd0:	4c f5       	brge	.+82     	; 0x3d24 <LCD_Send_Command+0x60a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cd2:	6a a9       	ldd	r22, Y+50	; 0x32
    3cd4:	7b a9       	ldd	r23, Y+51	; 0x33
    3cd6:	8c a9       	ldd	r24, Y+52	; 0x34
    3cd8:	9d a9       	ldd	r25, Y+53	; 0x35
    3cda:	20 e0       	ldi	r18, 0x00	; 0
    3cdc:	30 e0       	ldi	r19, 0x00	; 0
    3cde:	40 e2       	ldi	r20, 0x20	; 32
    3ce0:	51 e4       	ldi	r21, 0x41	; 65
    3ce2:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3ce6:	dc 01       	movw	r26, r24
    3ce8:	cb 01       	movw	r24, r22
    3cea:	bc 01       	movw	r22, r24
    3cec:	cd 01       	movw	r24, r26
    3cee:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3cf2:	dc 01       	movw	r26, r24
    3cf4:	cb 01       	movw	r24, r22
    3cf6:	9d a7       	std	Y+45, r25	; 0x2d
    3cf8:	8c a7       	std	Y+44, r24	; 0x2c
    3cfa:	0f c0       	rjmp	.+30     	; 0x3d1a <LCD_Send_Command+0x600>
    3cfc:	88 ec       	ldi	r24, 0xC8	; 200
    3cfe:	90 e0       	ldi	r25, 0x00	; 0
    3d00:	9b a7       	std	Y+43, r25	; 0x2b
    3d02:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3d04:	8a a5       	ldd	r24, Y+42	; 0x2a
    3d06:	9b a5       	ldd	r25, Y+43	; 0x2b
    3d08:	01 97       	sbiw	r24, 0x01	; 1
    3d0a:	f1 f7       	brne	.-4      	; 0x3d08 <LCD_Send_Command+0x5ee>
    3d0c:	9b a7       	std	Y+43, r25	; 0x2b
    3d0e:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d10:	8c a5       	ldd	r24, Y+44	; 0x2c
    3d12:	9d a5       	ldd	r25, Y+45	; 0x2d
    3d14:	01 97       	sbiw	r24, 0x01	; 1
    3d16:	9d a7       	std	Y+45, r25	; 0x2d
    3d18:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d1a:	8c a5       	ldd	r24, Y+44	; 0x2c
    3d1c:	9d a5       	ldd	r25, Y+45	; 0x2d
    3d1e:	00 97       	sbiw	r24, 0x00	; 0
    3d20:	69 f7       	brne	.-38     	; 0x3cfc <LCD_Send_Command+0x5e2>
    3d22:	24 c0       	rjmp	.+72     	; 0x3d6c <LCD_Send_Command+0x652>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d24:	6e a5       	ldd	r22, Y+46	; 0x2e
    3d26:	7f a5       	ldd	r23, Y+47	; 0x2f
    3d28:	88 a9       	ldd	r24, Y+48	; 0x30
    3d2a:	99 a9       	ldd	r25, Y+49	; 0x31
    3d2c:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3d30:	dc 01       	movw	r26, r24
    3d32:	cb 01       	movw	r24, r22
    3d34:	9d a7       	std	Y+45, r25	; 0x2d
    3d36:	8c a7       	std	Y+44, r24	; 0x2c
    3d38:	8c a5       	ldd	r24, Y+44	; 0x2c
    3d3a:	9d a5       	ldd	r25, Y+45	; 0x2d
    3d3c:	99 a7       	std	Y+41, r25	; 0x29
    3d3e:	88 a7       	std	Y+40, r24	; 0x28
    3d40:	88 a5       	ldd	r24, Y+40	; 0x28
    3d42:	99 a5       	ldd	r25, Y+41	; 0x29
    3d44:	01 97       	sbiw	r24, 0x01	; 1
    3d46:	f1 f7       	brne	.-4      	; 0x3d44 <LCD_Send_Command+0x62a>
    3d48:	99 a7       	std	Y+41, r25	; 0x29
    3d4a:	88 a7       	std	Y+40, r24	; 0x28
    3d4c:	0f c0       	rjmp	.+30     	; 0x3d6c <LCD_Send_Command+0x652>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3d4e:	6f a9       	ldd	r22, Y+55	; 0x37
    3d50:	78 ad       	ldd	r23, Y+56	; 0x38
    3d52:	89 ad       	ldd	r24, Y+57	; 0x39
    3d54:	9a ad       	ldd	r25, Y+58	; 0x3a
    3d56:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3d5a:	dc 01       	movw	r26, r24
    3d5c:	cb 01       	movw	r24, r22
    3d5e:	8e ab       	std	Y+54, r24	; 0x36
    3d60:	8e a9       	ldd	r24, Y+54	; 0x36
    3d62:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3d64:	8f a1       	ldd	r24, Y+39	; 0x27
    3d66:	8a 95       	dec	r24
    3d68:	f1 f7       	brne	.-4      	; 0x3d66 <LCD_Send_Command+0x64c>
    3d6a:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, LOW);
    3d6c:	83 e0       	ldi	r24, 0x03	; 3
    3d6e:	65 e0       	ldi	r22, 0x05	; 5
    3d70:	40 e0       	ldi	r20, 0x00	; 0
    3d72:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    3d76:	80 e0       	ldi	r24, 0x00	; 0
    3d78:	90 e0       	ldi	r25, 0x00	; 0
    3d7a:	a0 ea       	ldi	r26, 0xA0	; 160
    3d7c:	b0 e4       	ldi	r27, 0x40	; 64
    3d7e:	8b a3       	std	Y+35, r24	; 0x23
    3d80:	9c a3       	std	Y+36, r25	; 0x24
    3d82:	ad a3       	std	Y+37, r26	; 0x25
    3d84:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3d86:	6b a1       	ldd	r22, Y+35	; 0x23
    3d88:	7c a1       	ldd	r23, Y+36	; 0x24
    3d8a:	8d a1       	ldd	r24, Y+37	; 0x25
    3d8c:	9e a1       	ldd	r25, Y+38	; 0x26
    3d8e:	2b ea       	ldi	r18, 0xAB	; 171
    3d90:	3a ea       	ldi	r19, 0xAA	; 170
    3d92:	4a e2       	ldi	r20, 0x2A	; 42
    3d94:	50 e4       	ldi	r21, 0x40	; 64
    3d96:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3d9a:	dc 01       	movw	r26, r24
    3d9c:	cb 01       	movw	r24, r22
    3d9e:	8f 8f       	std	Y+31, r24	; 0x1f
    3da0:	98 a3       	std	Y+32, r25	; 0x20
    3da2:	a9 a3       	std	Y+33, r26	; 0x21
    3da4:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    3da6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3da8:	78 a1       	ldd	r23, Y+32	; 0x20
    3daa:	89 a1       	ldd	r24, Y+33	; 0x21
    3dac:	9a a1       	ldd	r25, Y+34	; 0x22
    3dae:	20 e0       	ldi	r18, 0x00	; 0
    3db0:	30 e0       	ldi	r19, 0x00	; 0
    3db2:	40 e8       	ldi	r20, 0x80	; 128
    3db4:	5f e3       	ldi	r21, 0x3F	; 63
    3db6:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3dba:	88 23       	and	r24, r24
    3dbc:	1c f4       	brge	.+6      	; 0x3dc4 <LCD_Send_Command+0x6aa>
		__ticks = 1;
    3dbe:	81 e0       	ldi	r24, 0x01	; 1
    3dc0:	8e 8f       	std	Y+30, r24	; 0x1e
    3dc2:	91 c0       	rjmp	.+290    	; 0x3ee6 <LCD_Send_Command+0x7cc>
	else if (__tmp > 255)
    3dc4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3dc6:	78 a1       	ldd	r23, Y+32	; 0x20
    3dc8:	89 a1       	ldd	r24, Y+33	; 0x21
    3dca:	9a a1       	ldd	r25, Y+34	; 0x22
    3dcc:	20 e0       	ldi	r18, 0x00	; 0
    3dce:	30 e0       	ldi	r19, 0x00	; 0
    3dd0:	4f e7       	ldi	r20, 0x7F	; 127
    3dd2:	53 e4       	ldi	r21, 0x43	; 67
    3dd4:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3dd8:	18 16       	cp	r1, r24
    3dda:	0c f0       	brlt	.+2      	; 0x3dde <LCD_Send_Command+0x6c4>
    3ddc:	7b c0       	rjmp	.+246    	; 0x3ed4 <LCD_Send_Command+0x7ba>
	{
		_delay_ms(__us / 1000.0);
    3dde:	6b a1       	ldd	r22, Y+35	; 0x23
    3de0:	7c a1       	ldd	r23, Y+36	; 0x24
    3de2:	8d a1       	ldd	r24, Y+37	; 0x25
    3de4:	9e a1       	ldd	r25, Y+38	; 0x26
    3de6:	20 e0       	ldi	r18, 0x00	; 0
    3de8:	30 e0       	ldi	r19, 0x00	; 0
    3dea:	4a e7       	ldi	r20, 0x7A	; 122
    3dec:	54 e4       	ldi	r21, 0x44	; 68
    3dee:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    3df2:	dc 01       	movw	r26, r24
    3df4:	cb 01       	movw	r24, r22
    3df6:	8a 8f       	std	Y+26, r24	; 0x1a
    3df8:	9b 8f       	std	Y+27, r25	; 0x1b
    3dfa:	ac 8f       	std	Y+28, r26	; 0x1c
    3dfc:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dfe:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3e00:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3e02:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3e04:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3e06:	20 e0       	ldi	r18, 0x00	; 0
    3e08:	30 e0       	ldi	r19, 0x00	; 0
    3e0a:	4a ef       	ldi	r20, 0xFA	; 250
    3e0c:	54 e4       	ldi	r21, 0x44	; 68
    3e0e:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3e12:	dc 01       	movw	r26, r24
    3e14:	cb 01       	movw	r24, r22
    3e16:	8e 8b       	std	Y+22, r24	; 0x16
    3e18:	9f 8b       	std	Y+23, r25	; 0x17
    3e1a:	a8 8f       	std	Y+24, r26	; 0x18
    3e1c:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3e1e:	6e 89       	ldd	r22, Y+22	; 0x16
    3e20:	7f 89       	ldd	r23, Y+23	; 0x17
    3e22:	88 8d       	ldd	r24, Y+24	; 0x18
    3e24:	99 8d       	ldd	r25, Y+25	; 0x19
    3e26:	20 e0       	ldi	r18, 0x00	; 0
    3e28:	30 e0       	ldi	r19, 0x00	; 0
    3e2a:	40 e8       	ldi	r20, 0x80	; 128
    3e2c:	5f e3       	ldi	r21, 0x3F	; 63
    3e2e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3e32:	88 23       	and	r24, r24
    3e34:	2c f4       	brge	.+10     	; 0x3e40 <LCD_Send_Command+0x726>
		__ticks = 1;
    3e36:	81 e0       	ldi	r24, 0x01	; 1
    3e38:	90 e0       	ldi	r25, 0x00	; 0
    3e3a:	9d 8b       	std	Y+21, r25	; 0x15
    3e3c:	8c 8b       	std	Y+20, r24	; 0x14
    3e3e:	3f c0       	rjmp	.+126    	; 0x3ebe <LCD_Send_Command+0x7a4>
	else if (__tmp > 65535)
    3e40:	6e 89       	ldd	r22, Y+22	; 0x16
    3e42:	7f 89       	ldd	r23, Y+23	; 0x17
    3e44:	88 8d       	ldd	r24, Y+24	; 0x18
    3e46:	99 8d       	ldd	r25, Y+25	; 0x19
    3e48:	20 e0       	ldi	r18, 0x00	; 0
    3e4a:	3f ef       	ldi	r19, 0xFF	; 255
    3e4c:	4f e7       	ldi	r20, 0x7F	; 127
    3e4e:	57 e4       	ldi	r21, 0x47	; 71
    3e50:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3e54:	18 16       	cp	r1, r24
    3e56:	4c f5       	brge	.+82     	; 0x3eaa <LCD_Send_Command+0x790>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e58:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3e5a:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3e5c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3e5e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3e60:	20 e0       	ldi	r18, 0x00	; 0
    3e62:	30 e0       	ldi	r19, 0x00	; 0
    3e64:	40 e2       	ldi	r20, 0x20	; 32
    3e66:	51 e4       	ldi	r21, 0x41	; 65
    3e68:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3e6c:	dc 01       	movw	r26, r24
    3e6e:	cb 01       	movw	r24, r22
    3e70:	bc 01       	movw	r22, r24
    3e72:	cd 01       	movw	r24, r26
    3e74:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3e78:	dc 01       	movw	r26, r24
    3e7a:	cb 01       	movw	r24, r22
    3e7c:	9d 8b       	std	Y+21, r25	; 0x15
    3e7e:	8c 8b       	std	Y+20, r24	; 0x14
    3e80:	0f c0       	rjmp	.+30     	; 0x3ea0 <LCD_Send_Command+0x786>
    3e82:	88 ec       	ldi	r24, 0xC8	; 200
    3e84:	90 e0       	ldi	r25, 0x00	; 0
    3e86:	9b 8b       	std	Y+19, r25	; 0x13
    3e88:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3e8a:	8a 89       	ldd	r24, Y+18	; 0x12
    3e8c:	9b 89       	ldd	r25, Y+19	; 0x13
    3e8e:	01 97       	sbiw	r24, 0x01	; 1
    3e90:	f1 f7       	brne	.-4      	; 0x3e8e <LCD_Send_Command+0x774>
    3e92:	9b 8b       	std	Y+19, r25	; 0x13
    3e94:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e96:	8c 89       	ldd	r24, Y+20	; 0x14
    3e98:	9d 89       	ldd	r25, Y+21	; 0x15
    3e9a:	01 97       	sbiw	r24, 0x01	; 1
    3e9c:	9d 8b       	std	Y+21, r25	; 0x15
    3e9e:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ea0:	8c 89       	ldd	r24, Y+20	; 0x14
    3ea2:	9d 89       	ldd	r25, Y+21	; 0x15
    3ea4:	00 97       	sbiw	r24, 0x00	; 0
    3ea6:	69 f7       	brne	.-38     	; 0x3e82 <LCD_Send_Command+0x768>
    3ea8:	24 c0       	rjmp	.+72     	; 0x3ef2 <LCD_Send_Command+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eaa:	6e 89       	ldd	r22, Y+22	; 0x16
    3eac:	7f 89       	ldd	r23, Y+23	; 0x17
    3eae:	88 8d       	ldd	r24, Y+24	; 0x18
    3eb0:	99 8d       	ldd	r25, Y+25	; 0x19
    3eb2:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3eb6:	dc 01       	movw	r26, r24
    3eb8:	cb 01       	movw	r24, r22
    3eba:	9d 8b       	std	Y+21, r25	; 0x15
    3ebc:	8c 8b       	std	Y+20, r24	; 0x14
    3ebe:	8c 89       	ldd	r24, Y+20	; 0x14
    3ec0:	9d 89       	ldd	r25, Y+21	; 0x15
    3ec2:	99 8b       	std	Y+17, r25	; 0x11
    3ec4:	88 8b       	std	Y+16, r24	; 0x10
    3ec6:	88 89       	ldd	r24, Y+16	; 0x10
    3ec8:	99 89       	ldd	r25, Y+17	; 0x11
    3eca:	01 97       	sbiw	r24, 0x01	; 1
    3ecc:	f1 f7       	brne	.-4      	; 0x3eca <LCD_Send_Command+0x7b0>
    3ece:	99 8b       	std	Y+17, r25	; 0x11
    3ed0:	88 8b       	std	Y+16, r24	; 0x10
    3ed2:	0f c0       	rjmp	.+30     	; 0x3ef2 <LCD_Send_Command+0x7d8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3ed4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3ed6:	78 a1       	ldd	r23, Y+32	; 0x20
    3ed8:	89 a1       	ldd	r24, Y+33	; 0x21
    3eda:	9a a1       	ldd	r25, Y+34	; 0x22
    3edc:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3ee0:	dc 01       	movw	r26, r24
    3ee2:	cb 01       	movw	r24, r22
    3ee4:	8e 8f       	std	Y+30, r24	; 0x1e
    3ee6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ee8:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3eea:	8f 85       	ldd	r24, Y+15	; 0x0f
    3eec:	8a 95       	dec	r24
    3eee:	f1 f7       	brne	.-4      	; 0x3eec <LCD_Send_Command+0x7d2>
    3ef0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(5);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    3ef2:	83 e0       	ldi	r24, 0x03	; 3
    3ef4:	65 e0       	ldi	r22, 0x05	; 5
    3ef6:	41 e0       	ldi	r20, 0x01	; 1
    3ef8:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    3efc:	80 e0       	ldi	r24, 0x00	; 0
    3efe:	90 e0       	ldi	r25, 0x00	; 0
    3f00:	a0 e2       	ldi	r26, 0x20	; 32
    3f02:	b1 e4       	ldi	r27, 0x41	; 65
    3f04:	8b 87       	std	Y+11, r24	; 0x0b
    3f06:	9c 87       	std	Y+12, r25	; 0x0c
    3f08:	ad 87       	std	Y+13, r26	; 0x0d
    3f0a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f0c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f0e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f10:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f12:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f14:	20 e0       	ldi	r18, 0x00	; 0
    3f16:	30 e0       	ldi	r19, 0x00	; 0
    3f18:	4a ef       	ldi	r20, 0xFA	; 250
    3f1a:	54 e4       	ldi	r21, 0x44	; 68
    3f1c:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3f20:	dc 01       	movw	r26, r24
    3f22:	cb 01       	movw	r24, r22
    3f24:	8f 83       	std	Y+7, r24	; 0x07
    3f26:	98 87       	std	Y+8, r25	; 0x08
    3f28:	a9 87       	std	Y+9, r26	; 0x09
    3f2a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3f2c:	6f 81       	ldd	r22, Y+7	; 0x07
    3f2e:	78 85       	ldd	r23, Y+8	; 0x08
    3f30:	89 85       	ldd	r24, Y+9	; 0x09
    3f32:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f34:	20 e0       	ldi	r18, 0x00	; 0
    3f36:	30 e0       	ldi	r19, 0x00	; 0
    3f38:	40 e8       	ldi	r20, 0x80	; 128
    3f3a:	5f e3       	ldi	r21, 0x3F	; 63
    3f3c:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    3f40:	88 23       	and	r24, r24
    3f42:	2c f4       	brge	.+10     	; 0x3f4e <LCD_Send_Command+0x834>
		__ticks = 1;
    3f44:	81 e0       	ldi	r24, 0x01	; 1
    3f46:	90 e0       	ldi	r25, 0x00	; 0
    3f48:	9e 83       	std	Y+6, r25	; 0x06
    3f4a:	8d 83       	std	Y+5, r24	; 0x05
    3f4c:	3f c0       	rjmp	.+126    	; 0x3fcc <LCD_Send_Command+0x8b2>
	else if (__tmp > 65535)
    3f4e:	6f 81       	ldd	r22, Y+7	; 0x07
    3f50:	78 85       	ldd	r23, Y+8	; 0x08
    3f52:	89 85       	ldd	r24, Y+9	; 0x09
    3f54:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f56:	20 e0       	ldi	r18, 0x00	; 0
    3f58:	3f ef       	ldi	r19, 0xFF	; 255
    3f5a:	4f e7       	ldi	r20, 0x7F	; 127
    3f5c:	57 e4       	ldi	r21, 0x47	; 71
    3f5e:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    3f62:	18 16       	cp	r1, r24
    3f64:	4c f5       	brge	.+82     	; 0x3fb8 <LCD_Send_Command+0x89e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f66:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f68:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	40 e2       	ldi	r20, 0x20	; 32
    3f74:	51 e4       	ldi	r21, 0x41	; 65
    3f76:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    3f7a:	dc 01       	movw	r26, r24
    3f7c:	cb 01       	movw	r24, r22
    3f7e:	bc 01       	movw	r22, r24
    3f80:	cd 01       	movw	r24, r26
    3f82:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3f86:	dc 01       	movw	r26, r24
    3f88:	cb 01       	movw	r24, r22
    3f8a:	9e 83       	std	Y+6, r25	; 0x06
    3f8c:	8d 83       	std	Y+5, r24	; 0x05
    3f8e:	0f c0       	rjmp	.+30     	; 0x3fae <LCD_Send_Command+0x894>
    3f90:	88 ec       	ldi	r24, 0xC8	; 200
    3f92:	90 e0       	ldi	r25, 0x00	; 0
    3f94:	9c 83       	std	Y+4, r25	; 0x04
    3f96:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3f98:	8b 81       	ldd	r24, Y+3	; 0x03
    3f9a:	9c 81       	ldd	r25, Y+4	; 0x04
    3f9c:	01 97       	sbiw	r24, 0x01	; 1
    3f9e:	f1 f7       	brne	.-4      	; 0x3f9c <LCD_Send_Command+0x882>
    3fa0:	9c 83       	std	Y+4, r25	; 0x04
    3fa2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fa4:	8d 81       	ldd	r24, Y+5	; 0x05
    3fa6:	9e 81       	ldd	r25, Y+6	; 0x06
    3fa8:	01 97       	sbiw	r24, 0x01	; 1
    3faa:	9e 83       	std	Y+6, r25	; 0x06
    3fac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fae:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb0:	9e 81       	ldd	r25, Y+6	; 0x06
    3fb2:	00 97       	sbiw	r24, 0x00	; 0
    3fb4:	69 f7       	brne	.-38     	; 0x3f90 <LCD_Send_Command+0x876>
    3fb6:	14 c0       	rjmp	.+40     	; 0x3fe0 <LCD_Send_Command+0x8c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fb8:	6f 81       	ldd	r22, Y+7	; 0x07
    3fba:	78 85       	ldd	r23, Y+8	; 0x08
    3fbc:	89 85       	ldd	r24, Y+9	; 0x09
    3fbe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fc0:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    3fc4:	dc 01       	movw	r26, r24
    3fc6:	cb 01       	movw	r24, r22
    3fc8:	9e 83       	std	Y+6, r25	; 0x06
    3fca:	8d 83       	std	Y+5, r24	; 0x05
    3fcc:	8d 81       	ldd	r24, Y+5	; 0x05
    3fce:	9e 81       	ldd	r25, Y+6	; 0x06
    3fd0:	9a 83       	std	Y+2, r25	; 0x02
    3fd2:	89 83       	std	Y+1, r24	; 0x01
    3fd4:	89 81       	ldd	r24, Y+1	; 0x01
    3fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    3fd8:	01 97       	sbiw	r24, 0x01	; 1
    3fda:	f1 f7       	brne	.-4      	; 0x3fd8 <LCD_Send_Command+0x8be>
    3fdc:	9a 83       	std	Y+2, r25	; 0x02
    3fde:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    3fe0:	c1 59       	subi	r28, 0x91	; 145
    3fe2:	df 4f       	sbci	r29, 0xFF	; 255
    3fe4:	0f b6       	in	r0, 0x3f	; 63
    3fe6:	f8 94       	cli
    3fe8:	de bf       	out	0x3e, r29	; 62
    3fea:	0f be       	out	0x3f, r0	; 63
    3fec:	cd bf       	out	0x3d, r28	; 61
    3fee:	cf 91       	pop	r28
    3ff0:	df 91       	pop	r29
    3ff2:	1f 91       	pop	r17
    3ff4:	0f 91       	pop	r16
    3ff6:	08 95       	ret

00003ff8 <LCD_Send_Data>:

void LCD_Send_Data(u8 data) {
    3ff8:	0f 93       	push	r16
    3ffa:	1f 93       	push	r17
    3ffc:	df 93       	push	r29
    3ffe:	cf 93       	push	r28
    4000:	cd b7       	in	r28, 0x3d	; 61
    4002:	de b7       	in	r29, 0x3e	; 62
    4004:	cf 56       	subi	r28, 0x6F	; 111
    4006:	d0 40       	sbci	r29, 0x00	; 0
    4008:	0f b6       	in	r0, 0x3f	; 63
    400a:	f8 94       	cli
    400c:	de bf       	out	0x3e, r29	; 62
    400e:	0f be       	out	0x3f, r0	; 63
    4010:	cd bf       	out	0x3d, r28	; 61
    4012:	fe 01       	movw	r30, r28
    4014:	e1 59       	subi	r30, 0x91	; 145
    4016:	ff 4f       	sbci	r31, 0xFF	; 255
    4018:	80 83       	st	Z, r24
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_RS_PIN, HIGH);
    401a:	83 e0       	ldi	r24, 0x03	; 3
    401c:	64 e0       	ldi	r22, 0x04	; 4
    401e:	41 e0       	ldi	r20, 0x01	; 1
    4020:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    4024:	fe 01       	movw	r30, r28
    4026:	e5 59       	subi	r30, 0x95	; 149
    4028:	ff 4f       	sbci	r31, 0xFF	; 255
    402a:	80 e0       	ldi	r24, 0x00	; 0
    402c:	90 e0       	ldi	r25, 0x00	; 0
    402e:	a0 e8       	ldi	r26, 0x80	; 128
    4030:	bf e3       	ldi	r27, 0x3F	; 63
    4032:	80 83       	st	Z, r24
    4034:	91 83       	std	Z+1, r25	; 0x01
    4036:	a2 83       	std	Z+2, r26	; 0x02
    4038:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    403a:	8e 01       	movw	r16, r28
    403c:	09 59       	subi	r16, 0x99	; 153
    403e:	1f 4f       	sbci	r17, 0xFF	; 255
    4040:	fe 01       	movw	r30, r28
    4042:	e5 59       	subi	r30, 0x95	; 149
    4044:	ff 4f       	sbci	r31, 0xFF	; 255
    4046:	60 81       	ld	r22, Z
    4048:	71 81       	ldd	r23, Z+1	; 0x01
    404a:	82 81       	ldd	r24, Z+2	; 0x02
    404c:	93 81       	ldd	r25, Z+3	; 0x03
    404e:	2b ea       	ldi	r18, 0xAB	; 171
    4050:	3a ea       	ldi	r19, 0xAA	; 170
    4052:	4a e2       	ldi	r20, 0x2A	; 42
    4054:	50 e4       	ldi	r21, 0x40	; 64
    4056:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    405a:	dc 01       	movw	r26, r24
    405c:	cb 01       	movw	r24, r22
    405e:	f8 01       	movw	r30, r16
    4060:	80 83       	st	Z, r24
    4062:	91 83       	std	Z+1, r25	; 0x01
    4064:	a2 83       	std	Z+2, r26	; 0x02
    4066:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4068:	fe 01       	movw	r30, r28
    406a:	e9 59       	subi	r30, 0x99	; 153
    406c:	ff 4f       	sbci	r31, 0xFF	; 255
    406e:	60 81       	ld	r22, Z
    4070:	71 81       	ldd	r23, Z+1	; 0x01
    4072:	82 81       	ldd	r24, Z+2	; 0x02
    4074:	93 81       	ldd	r25, Z+3	; 0x03
    4076:	20 e0       	ldi	r18, 0x00	; 0
    4078:	30 e0       	ldi	r19, 0x00	; 0
    407a:	40 e8       	ldi	r20, 0x80	; 128
    407c:	5f e3       	ldi	r21, 0x3F	; 63
    407e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4082:	88 23       	and	r24, r24
    4084:	34 f4       	brge	.+12     	; 0x4092 <LCD_Send_Data+0x9a>
		__ticks = 1;
    4086:	fe 01       	movw	r30, r28
    4088:	ea 59       	subi	r30, 0x9A	; 154
    408a:	ff 4f       	sbci	r31, 0xFF	; 255
    408c:	81 e0       	ldi	r24, 0x01	; 1
    408e:	80 83       	st	Z, r24
    4090:	e0 c0       	rjmp	.+448    	; 0x4252 <LCD_Send_Data+0x25a>
	else if (__tmp > 255)
    4092:	fe 01       	movw	r30, r28
    4094:	e9 59       	subi	r30, 0x99	; 153
    4096:	ff 4f       	sbci	r31, 0xFF	; 255
    4098:	60 81       	ld	r22, Z
    409a:	71 81       	ldd	r23, Z+1	; 0x01
    409c:	82 81       	ldd	r24, Z+2	; 0x02
    409e:	93 81       	ldd	r25, Z+3	; 0x03
    40a0:	20 e0       	ldi	r18, 0x00	; 0
    40a2:	30 e0       	ldi	r19, 0x00	; 0
    40a4:	4f e7       	ldi	r20, 0x7F	; 127
    40a6:	53 e4       	ldi	r21, 0x43	; 67
    40a8:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    40ac:	18 16       	cp	r1, r24
    40ae:	0c f0       	brlt	.+2      	; 0x40b2 <LCD_Send_Data+0xba>
    40b0:	c0 c0       	rjmp	.+384    	; 0x4232 <LCD_Send_Data+0x23a>
	{
		_delay_ms(__us / 1000.0);
    40b2:	fe 01       	movw	r30, r28
    40b4:	e5 59       	subi	r30, 0x95	; 149
    40b6:	ff 4f       	sbci	r31, 0xFF	; 255
    40b8:	60 81       	ld	r22, Z
    40ba:	71 81       	ldd	r23, Z+1	; 0x01
    40bc:	82 81       	ldd	r24, Z+2	; 0x02
    40be:	93 81       	ldd	r25, Z+3	; 0x03
    40c0:	20 e0       	ldi	r18, 0x00	; 0
    40c2:	30 e0       	ldi	r19, 0x00	; 0
    40c4:	4a e7       	ldi	r20, 0x7A	; 122
    40c6:	54 e4       	ldi	r21, 0x44	; 68
    40c8:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    40cc:	dc 01       	movw	r26, r24
    40ce:	cb 01       	movw	r24, r22
    40d0:	fe 01       	movw	r30, r28
    40d2:	ee 59       	subi	r30, 0x9E	; 158
    40d4:	ff 4f       	sbci	r31, 0xFF	; 255
    40d6:	80 83       	st	Z, r24
    40d8:	91 83       	std	Z+1, r25	; 0x01
    40da:	a2 83       	std	Z+2, r26	; 0x02
    40dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40de:	8e 01       	movw	r16, r28
    40e0:	02 5a       	subi	r16, 0xA2	; 162
    40e2:	1f 4f       	sbci	r17, 0xFF	; 255
    40e4:	fe 01       	movw	r30, r28
    40e6:	ee 59       	subi	r30, 0x9E	; 158
    40e8:	ff 4f       	sbci	r31, 0xFF	; 255
    40ea:	60 81       	ld	r22, Z
    40ec:	71 81       	ldd	r23, Z+1	; 0x01
    40ee:	82 81       	ldd	r24, Z+2	; 0x02
    40f0:	93 81       	ldd	r25, Z+3	; 0x03
    40f2:	20 e0       	ldi	r18, 0x00	; 0
    40f4:	30 e0       	ldi	r19, 0x00	; 0
    40f6:	4a ef       	ldi	r20, 0xFA	; 250
    40f8:	54 e4       	ldi	r21, 0x44	; 68
    40fa:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    40fe:	dc 01       	movw	r26, r24
    4100:	cb 01       	movw	r24, r22
    4102:	f8 01       	movw	r30, r16
    4104:	80 83       	st	Z, r24
    4106:	91 83       	std	Z+1, r25	; 0x01
    4108:	a2 83       	std	Z+2, r26	; 0x02
    410a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    410c:	fe 01       	movw	r30, r28
    410e:	e2 5a       	subi	r30, 0xA2	; 162
    4110:	ff 4f       	sbci	r31, 0xFF	; 255
    4112:	60 81       	ld	r22, Z
    4114:	71 81       	ldd	r23, Z+1	; 0x01
    4116:	82 81       	ldd	r24, Z+2	; 0x02
    4118:	93 81       	ldd	r25, Z+3	; 0x03
    411a:	20 e0       	ldi	r18, 0x00	; 0
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	40 e8       	ldi	r20, 0x80	; 128
    4120:	5f e3       	ldi	r21, 0x3F	; 63
    4122:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4126:	88 23       	and	r24, r24
    4128:	44 f4       	brge	.+16     	; 0x413a <LCD_Send_Data+0x142>
		__ticks = 1;
    412a:	fe 01       	movw	r30, r28
    412c:	e4 5a       	subi	r30, 0xA4	; 164
    412e:	ff 4f       	sbci	r31, 0xFF	; 255
    4130:	81 e0       	ldi	r24, 0x01	; 1
    4132:	90 e0       	ldi	r25, 0x00	; 0
    4134:	91 83       	std	Z+1, r25	; 0x01
    4136:	80 83       	st	Z, r24
    4138:	64 c0       	rjmp	.+200    	; 0x4202 <LCD_Send_Data+0x20a>
	else if (__tmp > 65535)
    413a:	fe 01       	movw	r30, r28
    413c:	e2 5a       	subi	r30, 0xA2	; 162
    413e:	ff 4f       	sbci	r31, 0xFF	; 255
    4140:	60 81       	ld	r22, Z
    4142:	71 81       	ldd	r23, Z+1	; 0x01
    4144:	82 81       	ldd	r24, Z+2	; 0x02
    4146:	93 81       	ldd	r25, Z+3	; 0x03
    4148:	20 e0       	ldi	r18, 0x00	; 0
    414a:	3f ef       	ldi	r19, 0xFF	; 255
    414c:	4f e7       	ldi	r20, 0x7F	; 127
    414e:	57 e4       	ldi	r21, 0x47	; 71
    4150:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    4154:	18 16       	cp	r1, r24
    4156:	0c f0       	brlt	.+2      	; 0x415a <LCD_Send_Data+0x162>
    4158:	43 c0       	rjmp	.+134    	; 0x41e0 <LCD_Send_Data+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    415a:	fe 01       	movw	r30, r28
    415c:	ee 59       	subi	r30, 0x9E	; 158
    415e:	ff 4f       	sbci	r31, 0xFF	; 255
    4160:	60 81       	ld	r22, Z
    4162:	71 81       	ldd	r23, Z+1	; 0x01
    4164:	82 81       	ldd	r24, Z+2	; 0x02
    4166:	93 81       	ldd	r25, Z+3	; 0x03
    4168:	20 e0       	ldi	r18, 0x00	; 0
    416a:	30 e0       	ldi	r19, 0x00	; 0
    416c:	40 e2       	ldi	r20, 0x20	; 32
    416e:	51 e4       	ldi	r21, 0x41	; 65
    4170:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    4174:	dc 01       	movw	r26, r24
    4176:	cb 01       	movw	r24, r22
    4178:	8e 01       	movw	r16, r28
    417a:	04 5a       	subi	r16, 0xA4	; 164
    417c:	1f 4f       	sbci	r17, 0xFF	; 255
    417e:	bc 01       	movw	r22, r24
    4180:	cd 01       	movw	r24, r26
    4182:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4186:	dc 01       	movw	r26, r24
    4188:	cb 01       	movw	r24, r22
    418a:	f8 01       	movw	r30, r16
    418c:	91 83       	std	Z+1, r25	; 0x01
    418e:	80 83       	st	Z, r24
    4190:	1f c0       	rjmp	.+62     	; 0x41d0 <LCD_Send_Data+0x1d8>
    4192:	fe 01       	movw	r30, r28
    4194:	e6 5a       	subi	r30, 0xA6	; 166
    4196:	ff 4f       	sbci	r31, 0xFF	; 255
    4198:	88 ec       	ldi	r24, 0xC8	; 200
    419a:	90 e0       	ldi	r25, 0x00	; 0
    419c:	91 83       	std	Z+1, r25	; 0x01
    419e:	80 83       	st	Z, r24
    41a0:	fe 01       	movw	r30, r28
    41a2:	e6 5a       	subi	r30, 0xA6	; 166
    41a4:	ff 4f       	sbci	r31, 0xFF	; 255
    41a6:	80 81       	ld	r24, Z
    41a8:	91 81       	ldd	r25, Z+1	; 0x01
    41aa:	01 97       	sbiw	r24, 0x01	; 1
    41ac:	f1 f7       	brne	.-4      	; 0x41aa <LCD_Send_Data+0x1b2>
    41ae:	fe 01       	movw	r30, r28
    41b0:	e6 5a       	subi	r30, 0xA6	; 166
    41b2:	ff 4f       	sbci	r31, 0xFF	; 255
    41b4:	91 83       	std	Z+1, r25	; 0x01
    41b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41b8:	de 01       	movw	r26, r28
    41ba:	a4 5a       	subi	r26, 0xA4	; 164
    41bc:	bf 4f       	sbci	r27, 0xFF	; 255
    41be:	fe 01       	movw	r30, r28
    41c0:	e4 5a       	subi	r30, 0xA4	; 164
    41c2:	ff 4f       	sbci	r31, 0xFF	; 255
    41c4:	80 81       	ld	r24, Z
    41c6:	91 81       	ldd	r25, Z+1	; 0x01
    41c8:	01 97       	sbiw	r24, 0x01	; 1
    41ca:	11 96       	adiw	r26, 0x01	; 1
    41cc:	9c 93       	st	X, r25
    41ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41d0:	fe 01       	movw	r30, r28
    41d2:	e4 5a       	subi	r30, 0xA4	; 164
    41d4:	ff 4f       	sbci	r31, 0xFF	; 255
    41d6:	80 81       	ld	r24, Z
    41d8:	91 81       	ldd	r25, Z+1	; 0x01
    41da:	00 97       	sbiw	r24, 0x00	; 0
    41dc:	d1 f6       	brne	.-76     	; 0x4192 <LCD_Send_Data+0x19a>
    41de:	4b c0       	rjmp	.+150    	; 0x4276 <LCD_Send_Data+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41e0:	8e 01       	movw	r16, r28
    41e2:	04 5a       	subi	r16, 0xA4	; 164
    41e4:	1f 4f       	sbci	r17, 0xFF	; 255
    41e6:	fe 01       	movw	r30, r28
    41e8:	e2 5a       	subi	r30, 0xA2	; 162
    41ea:	ff 4f       	sbci	r31, 0xFF	; 255
    41ec:	60 81       	ld	r22, Z
    41ee:	71 81       	ldd	r23, Z+1	; 0x01
    41f0:	82 81       	ldd	r24, Z+2	; 0x02
    41f2:	93 81       	ldd	r25, Z+3	; 0x03
    41f4:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    41f8:	dc 01       	movw	r26, r24
    41fa:	cb 01       	movw	r24, r22
    41fc:	f8 01       	movw	r30, r16
    41fe:	91 83       	std	Z+1, r25	; 0x01
    4200:	80 83       	st	Z, r24
    4202:	de 01       	movw	r26, r28
    4204:	a8 5a       	subi	r26, 0xA8	; 168
    4206:	bf 4f       	sbci	r27, 0xFF	; 255
    4208:	fe 01       	movw	r30, r28
    420a:	e4 5a       	subi	r30, 0xA4	; 164
    420c:	ff 4f       	sbci	r31, 0xFF	; 255
    420e:	80 81       	ld	r24, Z
    4210:	91 81       	ldd	r25, Z+1	; 0x01
    4212:	11 96       	adiw	r26, 0x01	; 1
    4214:	9c 93       	st	X, r25
    4216:	8e 93       	st	-X, r24
    4218:	fe 01       	movw	r30, r28
    421a:	e8 5a       	subi	r30, 0xA8	; 168
    421c:	ff 4f       	sbci	r31, 0xFF	; 255
    421e:	80 81       	ld	r24, Z
    4220:	91 81       	ldd	r25, Z+1	; 0x01
    4222:	01 97       	sbiw	r24, 0x01	; 1
    4224:	f1 f7       	brne	.-4      	; 0x4222 <LCD_Send_Data+0x22a>
    4226:	fe 01       	movw	r30, r28
    4228:	e8 5a       	subi	r30, 0xA8	; 168
    422a:	ff 4f       	sbci	r31, 0xFF	; 255
    422c:	91 83       	std	Z+1, r25	; 0x01
    422e:	80 83       	st	Z, r24
    4230:	22 c0       	rjmp	.+68     	; 0x4276 <LCD_Send_Data+0x27e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4232:	8e 01       	movw	r16, r28
    4234:	0a 59       	subi	r16, 0x9A	; 154
    4236:	1f 4f       	sbci	r17, 0xFF	; 255
    4238:	fe 01       	movw	r30, r28
    423a:	e9 59       	subi	r30, 0x99	; 153
    423c:	ff 4f       	sbci	r31, 0xFF	; 255
    423e:	60 81       	ld	r22, Z
    4240:	71 81       	ldd	r23, Z+1	; 0x01
    4242:	82 81       	ldd	r24, Z+2	; 0x02
    4244:	93 81       	ldd	r25, Z+3	; 0x03
    4246:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    424a:	dc 01       	movw	r26, r24
    424c:	cb 01       	movw	r24, r22
    424e:	f8 01       	movw	r30, r16
    4250:	80 83       	st	Z, r24
    4252:	de 01       	movw	r26, r28
    4254:	a9 5a       	subi	r26, 0xA9	; 169
    4256:	bf 4f       	sbci	r27, 0xFF	; 255
    4258:	fe 01       	movw	r30, r28
    425a:	ea 59       	subi	r30, 0x9A	; 154
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	80 81       	ld	r24, Z
    4260:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4262:	fe 01       	movw	r30, r28
    4264:	e9 5a       	subi	r30, 0xA9	; 169
    4266:	ff 4f       	sbci	r31, 0xFF	; 255
    4268:	80 81       	ld	r24, Z
    426a:	8a 95       	dec	r24
    426c:	f1 f7       	brne	.-4      	; 0x426a <LCD_Send_Data+0x272>
    426e:	fe 01       	movw	r30, r28
    4270:	e9 5a       	subi	r30, 0xA9	; 169
    4272:	ff 4f       	sbci	r31, 0xFF	; 255
    4274:	80 83       	st	Z, r24
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    4276:	83 e0       	ldi	r24, 0x03	; 3
    4278:	65 e0       	ldi	r22, 0x05	; 5
    427a:	41 e0       	ldi	r20, 0x01	; 1
    427c:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    4280:	fe 01       	movw	r30, r28
    4282:	ed 5a       	subi	r30, 0xAD	; 173
    4284:	ff 4f       	sbci	r31, 0xFF	; 255
    4286:	80 e0       	ldi	r24, 0x00	; 0
    4288:	90 e0       	ldi	r25, 0x00	; 0
    428a:	a0 e8       	ldi	r26, 0x80	; 128
    428c:	bf e3       	ldi	r27, 0x3F	; 63
    428e:	80 83       	st	Z, r24
    4290:	91 83       	std	Z+1, r25	; 0x01
    4292:	a2 83       	std	Z+2, r26	; 0x02
    4294:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4296:	8e 01       	movw	r16, r28
    4298:	01 5b       	subi	r16, 0xB1	; 177
    429a:	1f 4f       	sbci	r17, 0xFF	; 255
    429c:	fe 01       	movw	r30, r28
    429e:	ed 5a       	subi	r30, 0xAD	; 173
    42a0:	ff 4f       	sbci	r31, 0xFF	; 255
    42a2:	60 81       	ld	r22, Z
    42a4:	71 81       	ldd	r23, Z+1	; 0x01
    42a6:	82 81       	ldd	r24, Z+2	; 0x02
    42a8:	93 81       	ldd	r25, Z+3	; 0x03
    42aa:	2b ea       	ldi	r18, 0xAB	; 171
    42ac:	3a ea       	ldi	r19, 0xAA	; 170
    42ae:	4a e2       	ldi	r20, 0x2A	; 42
    42b0:	50 e4       	ldi	r21, 0x40	; 64
    42b2:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    42b6:	dc 01       	movw	r26, r24
    42b8:	cb 01       	movw	r24, r22
    42ba:	f8 01       	movw	r30, r16
    42bc:	80 83       	st	Z, r24
    42be:	91 83       	std	Z+1, r25	; 0x01
    42c0:	a2 83       	std	Z+2, r26	; 0x02
    42c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    42c4:	fe 01       	movw	r30, r28
    42c6:	e1 5b       	subi	r30, 0xB1	; 177
    42c8:	ff 4f       	sbci	r31, 0xFF	; 255
    42ca:	60 81       	ld	r22, Z
    42cc:	71 81       	ldd	r23, Z+1	; 0x01
    42ce:	82 81       	ldd	r24, Z+2	; 0x02
    42d0:	93 81       	ldd	r25, Z+3	; 0x03
    42d2:	20 e0       	ldi	r18, 0x00	; 0
    42d4:	30 e0       	ldi	r19, 0x00	; 0
    42d6:	40 e8       	ldi	r20, 0x80	; 128
    42d8:	5f e3       	ldi	r21, 0x3F	; 63
    42da:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    42de:	88 23       	and	r24, r24
    42e0:	34 f4       	brge	.+12     	; 0x42ee <LCD_Send_Data+0x2f6>
		__ticks = 1;
    42e2:	fe 01       	movw	r30, r28
    42e4:	e2 5b       	subi	r30, 0xB2	; 178
    42e6:	ff 4f       	sbci	r31, 0xFF	; 255
    42e8:	81 e0       	ldi	r24, 0x01	; 1
    42ea:	80 83       	st	Z, r24
    42ec:	e0 c0       	rjmp	.+448    	; 0x44ae <LCD_Send_Data+0x4b6>
	else if (__tmp > 255)
    42ee:	fe 01       	movw	r30, r28
    42f0:	e1 5b       	subi	r30, 0xB1	; 177
    42f2:	ff 4f       	sbci	r31, 0xFF	; 255
    42f4:	60 81       	ld	r22, Z
    42f6:	71 81       	ldd	r23, Z+1	; 0x01
    42f8:	82 81       	ldd	r24, Z+2	; 0x02
    42fa:	93 81       	ldd	r25, Z+3	; 0x03
    42fc:	20 e0       	ldi	r18, 0x00	; 0
    42fe:	30 e0       	ldi	r19, 0x00	; 0
    4300:	4f e7       	ldi	r20, 0x7F	; 127
    4302:	53 e4       	ldi	r21, 0x43	; 67
    4304:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    4308:	18 16       	cp	r1, r24
    430a:	0c f0       	brlt	.+2      	; 0x430e <LCD_Send_Data+0x316>
    430c:	c0 c0       	rjmp	.+384    	; 0x448e <LCD_Send_Data+0x496>
	{
		_delay_ms(__us / 1000.0);
    430e:	fe 01       	movw	r30, r28
    4310:	ed 5a       	subi	r30, 0xAD	; 173
    4312:	ff 4f       	sbci	r31, 0xFF	; 255
    4314:	60 81       	ld	r22, Z
    4316:	71 81       	ldd	r23, Z+1	; 0x01
    4318:	82 81       	ldd	r24, Z+2	; 0x02
    431a:	93 81       	ldd	r25, Z+3	; 0x03
    431c:	20 e0       	ldi	r18, 0x00	; 0
    431e:	30 e0       	ldi	r19, 0x00	; 0
    4320:	4a e7       	ldi	r20, 0x7A	; 122
    4322:	54 e4       	ldi	r21, 0x44	; 68
    4324:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    4328:	dc 01       	movw	r26, r24
    432a:	cb 01       	movw	r24, r22
    432c:	fe 01       	movw	r30, r28
    432e:	e6 5b       	subi	r30, 0xB6	; 182
    4330:	ff 4f       	sbci	r31, 0xFF	; 255
    4332:	80 83       	st	Z, r24
    4334:	91 83       	std	Z+1, r25	; 0x01
    4336:	a2 83       	std	Z+2, r26	; 0x02
    4338:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    433a:	8e 01       	movw	r16, r28
    433c:	0a 5b       	subi	r16, 0xBA	; 186
    433e:	1f 4f       	sbci	r17, 0xFF	; 255
    4340:	fe 01       	movw	r30, r28
    4342:	e6 5b       	subi	r30, 0xB6	; 182
    4344:	ff 4f       	sbci	r31, 0xFF	; 255
    4346:	60 81       	ld	r22, Z
    4348:	71 81       	ldd	r23, Z+1	; 0x01
    434a:	82 81       	ldd	r24, Z+2	; 0x02
    434c:	93 81       	ldd	r25, Z+3	; 0x03
    434e:	20 e0       	ldi	r18, 0x00	; 0
    4350:	30 e0       	ldi	r19, 0x00	; 0
    4352:	4a ef       	ldi	r20, 0xFA	; 250
    4354:	54 e4       	ldi	r21, 0x44	; 68
    4356:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    435a:	dc 01       	movw	r26, r24
    435c:	cb 01       	movw	r24, r22
    435e:	f8 01       	movw	r30, r16
    4360:	80 83       	st	Z, r24
    4362:	91 83       	std	Z+1, r25	; 0x01
    4364:	a2 83       	std	Z+2, r26	; 0x02
    4366:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4368:	fe 01       	movw	r30, r28
    436a:	ea 5b       	subi	r30, 0xBA	; 186
    436c:	ff 4f       	sbci	r31, 0xFF	; 255
    436e:	60 81       	ld	r22, Z
    4370:	71 81       	ldd	r23, Z+1	; 0x01
    4372:	82 81       	ldd	r24, Z+2	; 0x02
    4374:	93 81       	ldd	r25, Z+3	; 0x03
    4376:	20 e0       	ldi	r18, 0x00	; 0
    4378:	30 e0       	ldi	r19, 0x00	; 0
    437a:	40 e8       	ldi	r20, 0x80	; 128
    437c:	5f e3       	ldi	r21, 0x3F	; 63
    437e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4382:	88 23       	and	r24, r24
    4384:	44 f4       	brge	.+16     	; 0x4396 <LCD_Send_Data+0x39e>
		__ticks = 1;
    4386:	fe 01       	movw	r30, r28
    4388:	ec 5b       	subi	r30, 0xBC	; 188
    438a:	ff 4f       	sbci	r31, 0xFF	; 255
    438c:	81 e0       	ldi	r24, 0x01	; 1
    438e:	90 e0       	ldi	r25, 0x00	; 0
    4390:	91 83       	std	Z+1, r25	; 0x01
    4392:	80 83       	st	Z, r24
    4394:	64 c0       	rjmp	.+200    	; 0x445e <LCD_Send_Data+0x466>
	else if (__tmp > 65535)
    4396:	fe 01       	movw	r30, r28
    4398:	ea 5b       	subi	r30, 0xBA	; 186
    439a:	ff 4f       	sbci	r31, 0xFF	; 255
    439c:	60 81       	ld	r22, Z
    439e:	71 81       	ldd	r23, Z+1	; 0x01
    43a0:	82 81       	ldd	r24, Z+2	; 0x02
    43a2:	93 81       	ldd	r25, Z+3	; 0x03
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	3f ef       	ldi	r19, 0xFF	; 255
    43a8:	4f e7       	ldi	r20, 0x7F	; 127
    43aa:	57 e4       	ldi	r21, 0x47	; 71
    43ac:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    43b0:	18 16       	cp	r1, r24
    43b2:	0c f0       	brlt	.+2      	; 0x43b6 <LCD_Send_Data+0x3be>
    43b4:	43 c0       	rjmp	.+134    	; 0x443c <LCD_Send_Data+0x444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43b6:	fe 01       	movw	r30, r28
    43b8:	e6 5b       	subi	r30, 0xB6	; 182
    43ba:	ff 4f       	sbci	r31, 0xFF	; 255
    43bc:	60 81       	ld	r22, Z
    43be:	71 81       	ldd	r23, Z+1	; 0x01
    43c0:	82 81       	ldd	r24, Z+2	; 0x02
    43c2:	93 81       	ldd	r25, Z+3	; 0x03
    43c4:	20 e0       	ldi	r18, 0x00	; 0
    43c6:	30 e0       	ldi	r19, 0x00	; 0
    43c8:	40 e2       	ldi	r20, 0x20	; 32
    43ca:	51 e4       	ldi	r21, 0x41	; 65
    43cc:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    43d0:	dc 01       	movw	r26, r24
    43d2:	cb 01       	movw	r24, r22
    43d4:	8e 01       	movw	r16, r28
    43d6:	0c 5b       	subi	r16, 0xBC	; 188
    43d8:	1f 4f       	sbci	r17, 0xFF	; 255
    43da:	bc 01       	movw	r22, r24
    43dc:	cd 01       	movw	r24, r26
    43de:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    43e2:	dc 01       	movw	r26, r24
    43e4:	cb 01       	movw	r24, r22
    43e6:	f8 01       	movw	r30, r16
    43e8:	91 83       	std	Z+1, r25	; 0x01
    43ea:	80 83       	st	Z, r24
    43ec:	1f c0       	rjmp	.+62     	; 0x442c <LCD_Send_Data+0x434>
    43ee:	fe 01       	movw	r30, r28
    43f0:	ee 5b       	subi	r30, 0xBE	; 190
    43f2:	ff 4f       	sbci	r31, 0xFF	; 255
    43f4:	88 ec       	ldi	r24, 0xC8	; 200
    43f6:	90 e0       	ldi	r25, 0x00	; 0
    43f8:	91 83       	std	Z+1, r25	; 0x01
    43fa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    43fc:	fe 01       	movw	r30, r28
    43fe:	ee 5b       	subi	r30, 0xBE	; 190
    4400:	ff 4f       	sbci	r31, 0xFF	; 255
    4402:	80 81       	ld	r24, Z
    4404:	91 81       	ldd	r25, Z+1	; 0x01
    4406:	01 97       	sbiw	r24, 0x01	; 1
    4408:	f1 f7       	brne	.-4      	; 0x4406 <LCD_Send_Data+0x40e>
    440a:	fe 01       	movw	r30, r28
    440c:	ee 5b       	subi	r30, 0xBE	; 190
    440e:	ff 4f       	sbci	r31, 0xFF	; 255
    4410:	91 83       	std	Z+1, r25	; 0x01
    4412:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4414:	de 01       	movw	r26, r28
    4416:	ac 5b       	subi	r26, 0xBC	; 188
    4418:	bf 4f       	sbci	r27, 0xFF	; 255
    441a:	fe 01       	movw	r30, r28
    441c:	ec 5b       	subi	r30, 0xBC	; 188
    441e:	ff 4f       	sbci	r31, 0xFF	; 255
    4420:	80 81       	ld	r24, Z
    4422:	91 81       	ldd	r25, Z+1	; 0x01
    4424:	01 97       	sbiw	r24, 0x01	; 1
    4426:	11 96       	adiw	r26, 0x01	; 1
    4428:	9c 93       	st	X, r25
    442a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    442c:	fe 01       	movw	r30, r28
    442e:	ec 5b       	subi	r30, 0xBC	; 188
    4430:	ff 4f       	sbci	r31, 0xFF	; 255
    4432:	80 81       	ld	r24, Z
    4434:	91 81       	ldd	r25, Z+1	; 0x01
    4436:	00 97       	sbiw	r24, 0x00	; 0
    4438:	d1 f6       	brne	.-76     	; 0x43ee <LCD_Send_Data+0x3f6>
    443a:	42 c0       	rjmp	.+132    	; 0x44c0 <LCD_Send_Data+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    443c:	8e 01       	movw	r16, r28
    443e:	0c 5b       	subi	r16, 0xBC	; 188
    4440:	1f 4f       	sbci	r17, 0xFF	; 255
    4442:	fe 01       	movw	r30, r28
    4444:	ea 5b       	subi	r30, 0xBA	; 186
    4446:	ff 4f       	sbci	r31, 0xFF	; 255
    4448:	60 81       	ld	r22, Z
    444a:	71 81       	ldd	r23, Z+1	; 0x01
    444c:	82 81       	ldd	r24, Z+2	; 0x02
    444e:	93 81       	ldd	r25, Z+3	; 0x03
    4450:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4454:	dc 01       	movw	r26, r24
    4456:	cb 01       	movw	r24, r22
    4458:	f8 01       	movw	r30, r16
    445a:	91 83       	std	Z+1, r25	; 0x01
    445c:	80 83       	st	Z, r24
    445e:	de 01       	movw	r26, r28
    4460:	a0 5c       	subi	r26, 0xC0	; 192
    4462:	bf 4f       	sbci	r27, 0xFF	; 255
    4464:	fe 01       	movw	r30, r28
    4466:	ec 5b       	subi	r30, 0xBC	; 188
    4468:	ff 4f       	sbci	r31, 0xFF	; 255
    446a:	80 81       	ld	r24, Z
    446c:	91 81       	ldd	r25, Z+1	; 0x01
    446e:	11 96       	adiw	r26, 0x01	; 1
    4470:	9c 93       	st	X, r25
    4472:	8e 93       	st	-X, r24
    4474:	fe 01       	movw	r30, r28
    4476:	e0 5c       	subi	r30, 0xC0	; 192
    4478:	ff 4f       	sbci	r31, 0xFF	; 255
    447a:	80 81       	ld	r24, Z
    447c:	91 81       	ldd	r25, Z+1	; 0x01
    447e:	01 97       	sbiw	r24, 0x01	; 1
    4480:	f1 f7       	brne	.-4      	; 0x447e <LCD_Send_Data+0x486>
    4482:	fe 01       	movw	r30, r28
    4484:	e0 5c       	subi	r30, 0xC0	; 192
    4486:	ff 4f       	sbci	r31, 0xFF	; 255
    4488:	91 83       	std	Z+1, r25	; 0x01
    448a:	80 83       	st	Z, r24
    448c:	19 c0       	rjmp	.+50     	; 0x44c0 <LCD_Send_Data+0x4c8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    448e:	8e 01       	movw	r16, r28
    4490:	02 5b       	subi	r16, 0xB2	; 178
    4492:	1f 4f       	sbci	r17, 0xFF	; 255
    4494:	fe 01       	movw	r30, r28
    4496:	e1 5b       	subi	r30, 0xB1	; 177
    4498:	ff 4f       	sbci	r31, 0xFF	; 255
    449a:	60 81       	ld	r22, Z
    449c:	71 81       	ldd	r23, Z+1	; 0x01
    449e:	82 81       	ldd	r24, Z+2	; 0x02
    44a0:	93 81       	ldd	r25, Z+3	; 0x03
    44a2:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    44a6:	dc 01       	movw	r26, r24
    44a8:	cb 01       	movw	r24, r22
    44aa:	f8 01       	movw	r30, r16
    44ac:	80 83       	st	Z, r24
    44ae:	fe 01       	movw	r30, r28
    44b0:	e2 5b       	subi	r30, 0xB2	; 178
    44b2:	ff 4f       	sbci	r31, 0xFF	; 255
    44b4:	80 81       	ld	r24, Z
    44b6:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    44b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    44ba:	8a 95       	dec	r24
    44bc:	f1 f7       	brne	.-4      	; 0x44ba <LCD_Send_Data+0x4c2>
    44be:	8f af       	std	Y+63, r24	; 0x3f
	_delay_us(1);
	DIO_SetGroupValue(LCD_GROUP_DATA, data);
    44c0:	fe 01       	movw	r30, r28
    44c2:	e1 59       	subi	r30, 0x91	; 145
    44c4:	ff 4f       	sbci	r31, 0xFF	; 255
    44c6:	81 e0       	ldi	r24, 0x01	; 1
    44c8:	60 81       	ld	r22, Z
    44ca:	0e 94 99 17 	call	0x2f32	; 0x2f32 <DIO_SetGroupValue>
    44ce:	80 e0       	ldi	r24, 0x00	; 0
    44d0:	90 e0       	ldi	r25, 0x00	; 0
    44d2:	a0 e8       	ldi	r26, 0x80	; 128
    44d4:	bf e3       	ldi	r27, 0x3F	; 63
    44d6:	8b af       	std	Y+59, r24	; 0x3b
    44d8:	9c af       	std	Y+60, r25	; 0x3c
    44da:	ad af       	std	Y+61, r26	; 0x3d
    44dc:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    44de:	6b ad       	ldd	r22, Y+59	; 0x3b
    44e0:	7c ad       	ldd	r23, Y+60	; 0x3c
    44e2:	8d ad       	ldd	r24, Y+61	; 0x3d
    44e4:	9e ad       	ldd	r25, Y+62	; 0x3e
    44e6:	2b ea       	ldi	r18, 0xAB	; 171
    44e8:	3a ea       	ldi	r19, 0xAA	; 170
    44ea:	4a e2       	ldi	r20, 0x2A	; 42
    44ec:	50 e4       	ldi	r21, 0x40	; 64
    44ee:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    44f2:	dc 01       	movw	r26, r24
    44f4:	cb 01       	movw	r24, r22
    44f6:	8f ab       	std	Y+55, r24	; 0x37
    44f8:	98 af       	std	Y+56, r25	; 0x38
    44fa:	a9 af       	std	Y+57, r26	; 0x39
    44fc:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    44fe:	6f a9       	ldd	r22, Y+55	; 0x37
    4500:	78 ad       	ldd	r23, Y+56	; 0x38
    4502:	89 ad       	ldd	r24, Y+57	; 0x39
    4504:	9a ad       	ldd	r25, Y+58	; 0x3a
    4506:	20 e0       	ldi	r18, 0x00	; 0
    4508:	30 e0       	ldi	r19, 0x00	; 0
    450a:	40 e8       	ldi	r20, 0x80	; 128
    450c:	5f e3       	ldi	r21, 0x3F	; 63
    450e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4512:	88 23       	and	r24, r24
    4514:	1c f4       	brge	.+6      	; 0x451c <LCD_Send_Data+0x524>
		__ticks = 1;
    4516:	81 e0       	ldi	r24, 0x01	; 1
    4518:	8e ab       	std	Y+54, r24	; 0x36
    451a:	91 c0       	rjmp	.+290    	; 0x463e <LCD_Send_Data+0x646>
	else if (__tmp > 255)
    451c:	6f a9       	ldd	r22, Y+55	; 0x37
    451e:	78 ad       	ldd	r23, Y+56	; 0x38
    4520:	89 ad       	ldd	r24, Y+57	; 0x39
    4522:	9a ad       	ldd	r25, Y+58	; 0x3a
    4524:	20 e0       	ldi	r18, 0x00	; 0
    4526:	30 e0       	ldi	r19, 0x00	; 0
    4528:	4f e7       	ldi	r20, 0x7F	; 127
    452a:	53 e4       	ldi	r21, 0x43	; 67
    452c:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    4530:	18 16       	cp	r1, r24
    4532:	0c f0       	brlt	.+2      	; 0x4536 <LCD_Send_Data+0x53e>
    4534:	7b c0       	rjmp	.+246    	; 0x462c <LCD_Send_Data+0x634>
	{
		_delay_ms(__us / 1000.0);
    4536:	6b ad       	ldd	r22, Y+59	; 0x3b
    4538:	7c ad       	ldd	r23, Y+60	; 0x3c
    453a:	8d ad       	ldd	r24, Y+61	; 0x3d
    453c:	9e ad       	ldd	r25, Y+62	; 0x3e
    453e:	20 e0       	ldi	r18, 0x00	; 0
    4540:	30 e0       	ldi	r19, 0x00	; 0
    4542:	4a e7       	ldi	r20, 0x7A	; 122
    4544:	54 e4       	ldi	r21, 0x44	; 68
    4546:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    454a:	dc 01       	movw	r26, r24
    454c:	cb 01       	movw	r24, r22
    454e:	8a ab       	std	Y+50, r24	; 0x32
    4550:	9b ab       	std	Y+51, r25	; 0x33
    4552:	ac ab       	std	Y+52, r26	; 0x34
    4554:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4556:	6a a9       	ldd	r22, Y+50	; 0x32
    4558:	7b a9       	ldd	r23, Y+51	; 0x33
    455a:	8c a9       	ldd	r24, Y+52	; 0x34
    455c:	9d a9       	ldd	r25, Y+53	; 0x35
    455e:	20 e0       	ldi	r18, 0x00	; 0
    4560:	30 e0       	ldi	r19, 0x00	; 0
    4562:	4a ef       	ldi	r20, 0xFA	; 250
    4564:	54 e4       	ldi	r21, 0x44	; 68
    4566:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    456a:	dc 01       	movw	r26, r24
    456c:	cb 01       	movw	r24, r22
    456e:	8e a7       	std	Y+46, r24	; 0x2e
    4570:	9f a7       	std	Y+47, r25	; 0x2f
    4572:	a8 ab       	std	Y+48, r26	; 0x30
    4574:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    4576:	6e a5       	ldd	r22, Y+46	; 0x2e
    4578:	7f a5       	ldd	r23, Y+47	; 0x2f
    457a:	88 a9       	ldd	r24, Y+48	; 0x30
    457c:	99 a9       	ldd	r25, Y+49	; 0x31
    457e:	20 e0       	ldi	r18, 0x00	; 0
    4580:	30 e0       	ldi	r19, 0x00	; 0
    4582:	40 e8       	ldi	r20, 0x80	; 128
    4584:	5f e3       	ldi	r21, 0x3F	; 63
    4586:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    458a:	88 23       	and	r24, r24
    458c:	2c f4       	brge	.+10     	; 0x4598 <LCD_Send_Data+0x5a0>
		__ticks = 1;
    458e:	81 e0       	ldi	r24, 0x01	; 1
    4590:	90 e0       	ldi	r25, 0x00	; 0
    4592:	9d a7       	std	Y+45, r25	; 0x2d
    4594:	8c a7       	std	Y+44, r24	; 0x2c
    4596:	3f c0       	rjmp	.+126    	; 0x4616 <LCD_Send_Data+0x61e>
	else if (__tmp > 65535)
    4598:	6e a5       	ldd	r22, Y+46	; 0x2e
    459a:	7f a5       	ldd	r23, Y+47	; 0x2f
    459c:	88 a9       	ldd	r24, Y+48	; 0x30
    459e:	99 a9       	ldd	r25, Y+49	; 0x31
    45a0:	20 e0       	ldi	r18, 0x00	; 0
    45a2:	3f ef       	ldi	r19, 0xFF	; 255
    45a4:	4f e7       	ldi	r20, 0x7F	; 127
    45a6:	57 e4       	ldi	r21, 0x47	; 71
    45a8:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    45ac:	18 16       	cp	r1, r24
    45ae:	4c f5       	brge	.+82     	; 0x4602 <LCD_Send_Data+0x60a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45b0:	6a a9       	ldd	r22, Y+50	; 0x32
    45b2:	7b a9       	ldd	r23, Y+51	; 0x33
    45b4:	8c a9       	ldd	r24, Y+52	; 0x34
    45b6:	9d a9       	ldd	r25, Y+53	; 0x35
    45b8:	20 e0       	ldi	r18, 0x00	; 0
    45ba:	30 e0       	ldi	r19, 0x00	; 0
    45bc:	40 e2       	ldi	r20, 0x20	; 32
    45be:	51 e4       	ldi	r21, 0x41	; 65
    45c0:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    45c4:	dc 01       	movw	r26, r24
    45c6:	cb 01       	movw	r24, r22
    45c8:	bc 01       	movw	r22, r24
    45ca:	cd 01       	movw	r24, r26
    45cc:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    45d0:	dc 01       	movw	r26, r24
    45d2:	cb 01       	movw	r24, r22
    45d4:	9d a7       	std	Y+45, r25	; 0x2d
    45d6:	8c a7       	std	Y+44, r24	; 0x2c
    45d8:	0f c0       	rjmp	.+30     	; 0x45f8 <LCD_Send_Data+0x600>
    45da:	88 ec       	ldi	r24, 0xC8	; 200
    45dc:	90 e0       	ldi	r25, 0x00	; 0
    45de:	9b a7       	std	Y+43, r25	; 0x2b
    45e0:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    45e2:	8a a5       	ldd	r24, Y+42	; 0x2a
    45e4:	9b a5       	ldd	r25, Y+43	; 0x2b
    45e6:	01 97       	sbiw	r24, 0x01	; 1
    45e8:	f1 f7       	brne	.-4      	; 0x45e6 <LCD_Send_Data+0x5ee>
    45ea:	9b a7       	std	Y+43, r25	; 0x2b
    45ec:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45ee:	8c a5       	ldd	r24, Y+44	; 0x2c
    45f0:	9d a5       	ldd	r25, Y+45	; 0x2d
    45f2:	01 97       	sbiw	r24, 0x01	; 1
    45f4:	9d a7       	std	Y+45, r25	; 0x2d
    45f6:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45f8:	8c a5       	ldd	r24, Y+44	; 0x2c
    45fa:	9d a5       	ldd	r25, Y+45	; 0x2d
    45fc:	00 97       	sbiw	r24, 0x00	; 0
    45fe:	69 f7       	brne	.-38     	; 0x45da <LCD_Send_Data+0x5e2>
    4600:	24 c0       	rjmp	.+72     	; 0x464a <LCD_Send_Data+0x652>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4602:	6e a5       	ldd	r22, Y+46	; 0x2e
    4604:	7f a5       	ldd	r23, Y+47	; 0x2f
    4606:	88 a9       	ldd	r24, Y+48	; 0x30
    4608:	99 a9       	ldd	r25, Y+49	; 0x31
    460a:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    460e:	dc 01       	movw	r26, r24
    4610:	cb 01       	movw	r24, r22
    4612:	9d a7       	std	Y+45, r25	; 0x2d
    4614:	8c a7       	std	Y+44, r24	; 0x2c
    4616:	8c a5       	ldd	r24, Y+44	; 0x2c
    4618:	9d a5       	ldd	r25, Y+45	; 0x2d
    461a:	99 a7       	std	Y+41, r25	; 0x29
    461c:	88 a7       	std	Y+40, r24	; 0x28
    461e:	88 a5       	ldd	r24, Y+40	; 0x28
    4620:	99 a5       	ldd	r25, Y+41	; 0x29
    4622:	01 97       	sbiw	r24, 0x01	; 1
    4624:	f1 f7       	brne	.-4      	; 0x4622 <LCD_Send_Data+0x62a>
    4626:	99 a7       	std	Y+41, r25	; 0x29
    4628:	88 a7       	std	Y+40, r24	; 0x28
    462a:	0f c0       	rjmp	.+30     	; 0x464a <LCD_Send_Data+0x652>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    462c:	6f a9       	ldd	r22, Y+55	; 0x37
    462e:	78 ad       	ldd	r23, Y+56	; 0x38
    4630:	89 ad       	ldd	r24, Y+57	; 0x39
    4632:	9a ad       	ldd	r25, Y+58	; 0x3a
    4634:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4638:	dc 01       	movw	r26, r24
    463a:	cb 01       	movw	r24, r22
    463c:	8e ab       	std	Y+54, r24	; 0x36
    463e:	8e a9       	ldd	r24, Y+54	; 0x36
    4640:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4642:	8f a1       	ldd	r24, Y+39	; 0x27
    4644:	8a 95       	dec	r24
    4646:	f1 f7       	brne	.-4      	; 0x4644 <LCD_Send_Data+0x64c>
    4648:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, LOW);
    464a:	83 e0       	ldi	r24, 0x03	; 3
    464c:	65 e0       	ldi	r22, 0x05	; 5
    464e:	40 e0       	ldi	r20, 0x00	; 0
    4650:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    4654:	80 e0       	ldi	r24, 0x00	; 0
    4656:	90 e0       	ldi	r25, 0x00	; 0
    4658:	a0 ea       	ldi	r26, 0xA0	; 160
    465a:	b0 e4       	ldi	r27, 0x40	; 64
    465c:	8b a3       	std	Y+35, r24	; 0x23
    465e:	9c a3       	std	Y+36, r25	; 0x24
    4660:	ad a3       	std	Y+37, r26	; 0x25
    4662:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4664:	6b a1       	ldd	r22, Y+35	; 0x23
    4666:	7c a1       	ldd	r23, Y+36	; 0x24
    4668:	8d a1       	ldd	r24, Y+37	; 0x25
    466a:	9e a1       	ldd	r25, Y+38	; 0x26
    466c:	2b ea       	ldi	r18, 0xAB	; 171
    466e:	3a ea       	ldi	r19, 0xAA	; 170
    4670:	4a e2       	ldi	r20, 0x2A	; 42
    4672:	50 e4       	ldi	r21, 0x40	; 64
    4674:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    4678:	dc 01       	movw	r26, r24
    467a:	cb 01       	movw	r24, r22
    467c:	8f 8f       	std	Y+31, r24	; 0x1f
    467e:	98 a3       	std	Y+32, r25	; 0x20
    4680:	a9 a3       	std	Y+33, r26	; 0x21
    4682:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    4684:	6f 8d       	ldd	r22, Y+31	; 0x1f
    4686:	78 a1       	ldd	r23, Y+32	; 0x20
    4688:	89 a1       	ldd	r24, Y+33	; 0x21
    468a:	9a a1       	ldd	r25, Y+34	; 0x22
    468c:	20 e0       	ldi	r18, 0x00	; 0
    468e:	30 e0       	ldi	r19, 0x00	; 0
    4690:	40 e8       	ldi	r20, 0x80	; 128
    4692:	5f e3       	ldi	r21, 0x3F	; 63
    4694:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4698:	88 23       	and	r24, r24
    469a:	1c f4       	brge	.+6      	; 0x46a2 <LCD_Send_Data+0x6aa>
		__ticks = 1;
    469c:	81 e0       	ldi	r24, 0x01	; 1
    469e:	8e 8f       	std	Y+30, r24	; 0x1e
    46a0:	91 c0       	rjmp	.+290    	; 0x47c4 <LCD_Send_Data+0x7cc>
	else if (__tmp > 255)
    46a2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    46a4:	78 a1       	ldd	r23, Y+32	; 0x20
    46a6:	89 a1       	ldd	r24, Y+33	; 0x21
    46a8:	9a a1       	ldd	r25, Y+34	; 0x22
    46aa:	20 e0       	ldi	r18, 0x00	; 0
    46ac:	30 e0       	ldi	r19, 0x00	; 0
    46ae:	4f e7       	ldi	r20, 0x7F	; 127
    46b0:	53 e4       	ldi	r21, 0x43	; 67
    46b2:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    46b6:	18 16       	cp	r1, r24
    46b8:	0c f0       	brlt	.+2      	; 0x46bc <LCD_Send_Data+0x6c4>
    46ba:	7b c0       	rjmp	.+246    	; 0x47b2 <LCD_Send_Data+0x7ba>
	{
		_delay_ms(__us / 1000.0);
    46bc:	6b a1       	ldd	r22, Y+35	; 0x23
    46be:	7c a1       	ldd	r23, Y+36	; 0x24
    46c0:	8d a1       	ldd	r24, Y+37	; 0x25
    46c2:	9e a1       	ldd	r25, Y+38	; 0x26
    46c4:	20 e0       	ldi	r18, 0x00	; 0
    46c6:	30 e0       	ldi	r19, 0x00	; 0
    46c8:	4a e7       	ldi	r20, 0x7A	; 122
    46ca:	54 e4       	ldi	r21, 0x44	; 68
    46cc:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    46d0:	dc 01       	movw	r26, r24
    46d2:	cb 01       	movw	r24, r22
    46d4:	8a 8f       	std	Y+26, r24	; 0x1a
    46d6:	9b 8f       	std	Y+27, r25	; 0x1b
    46d8:	ac 8f       	std	Y+28, r26	; 0x1c
    46da:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46dc:	6a 8d       	ldd	r22, Y+26	; 0x1a
    46de:	7b 8d       	ldd	r23, Y+27	; 0x1b
    46e0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    46e2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    46e4:	20 e0       	ldi	r18, 0x00	; 0
    46e6:	30 e0       	ldi	r19, 0x00	; 0
    46e8:	4a ef       	ldi	r20, 0xFA	; 250
    46ea:	54 e4       	ldi	r21, 0x44	; 68
    46ec:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    46f0:	dc 01       	movw	r26, r24
    46f2:	cb 01       	movw	r24, r22
    46f4:	8e 8b       	std	Y+22, r24	; 0x16
    46f6:	9f 8b       	std	Y+23, r25	; 0x17
    46f8:	a8 8f       	std	Y+24, r26	; 0x18
    46fa:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    46fc:	6e 89       	ldd	r22, Y+22	; 0x16
    46fe:	7f 89       	ldd	r23, Y+23	; 0x17
    4700:	88 8d       	ldd	r24, Y+24	; 0x18
    4702:	99 8d       	ldd	r25, Y+25	; 0x19
    4704:	20 e0       	ldi	r18, 0x00	; 0
    4706:	30 e0       	ldi	r19, 0x00	; 0
    4708:	40 e8       	ldi	r20, 0x80	; 128
    470a:	5f e3       	ldi	r21, 0x3F	; 63
    470c:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    4710:	88 23       	and	r24, r24
    4712:	2c f4       	brge	.+10     	; 0x471e <LCD_Send_Data+0x726>
		__ticks = 1;
    4714:	81 e0       	ldi	r24, 0x01	; 1
    4716:	90 e0       	ldi	r25, 0x00	; 0
    4718:	9d 8b       	std	Y+21, r25	; 0x15
    471a:	8c 8b       	std	Y+20, r24	; 0x14
    471c:	3f c0       	rjmp	.+126    	; 0x479c <LCD_Send_Data+0x7a4>
	else if (__tmp > 65535)
    471e:	6e 89       	ldd	r22, Y+22	; 0x16
    4720:	7f 89       	ldd	r23, Y+23	; 0x17
    4722:	88 8d       	ldd	r24, Y+24	; 0x18
    4724:	99 8d       	ldd	r25, Y+25	; 0x19
    4726:	20 e0       	ldi	r18, 0x00	; 0
    4728:	3f ef       	ldi	r19, 0xFF	; 255
    472a:	4f e7       	ldi	r20, 0x7F	; 127
    472c:	57 e4       	ldi	r21, 0x47	; 71
    472e:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    4732:	18 16       	cp	r1, r24
    4734:	4c f5       	brge	.+82     	; 0x4788 <LCD_Send_Data+0x790>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4736:	6a 8d       	ldd	r22, Y+26	; 0x1a
    4738:	7b 8d       	ldd	r23, Y+27	; 0x1b
    473a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    473c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    473e:	20 e0       	ldi	r18, 0x00	; 0
    4740:	30 e0       	ldi	r19, 0x00	; 0
    4742:	40 e2       	ldi	r20, 0x20	; 32
    4744:	51 e4       	ldi	r21, 0x41	; 65
    4746:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    474a:	dc 01       	movw	r26, r24
    474c:	cb 01       	movw	r24, r22
    474e:	bc 01       	movw	r22, r24
    4750:	cd 01       	movw	r24, r26
    4752:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4756:	dc 01       	movw	r26, r24
    4758:	cb 01       	movw	r24, r22
    475a:	9d 8b       	std	Y+21, r25	; 0x15
    475c:	8c 8b       	std	Y+20, r24	; 0x14
    475e:	0f c0       	rjmp	.+30     	; 0x477e <LCD_Send_Data+0x786>
    4760:	88 ec       	ldi	r24, 0xC8	; 200
    4762:	90 e0       	ldi	r25, 0x00	; 0
    4764:	9b 8b       	std	Y+19, r25	; 0x13
    4766:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4768:	8a 89       	ldd	r24, Y+18	; 0x12
    476a:	9b 89       	ldd	r25, Y+19	; 0x13
    476c:	01 97       	sbiw	r24, 0x01	; 1
    476e:	f1 f7       	brne	.-4      	; 0x476c <LCD_Send_Data+0x774>
    4770:	9b 8b       	std	Y+19, r25	; 0x13
    4772:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4774:	8c 89       	ldd	r24, Y+20	; 0x14
    4776:	9d 89       	ldd	r25, Y+21	; 0x15
    4778:	01 97       	sbiw	r24, 0x01	; 1
    477a:	9d 8b       	std	Y+21, r25	; 0x15
    477c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    477e:	8c 89       	ldd	r24, Y+20	; 0x14
    4780:	9d 89       	ldd	r25, Y+21	; 0x15
    4782:	00 97       	sbiw	r24, 0x00	; 0
    4784:	69 f7       	brne	.-38     	; 0x4760 <LCD_Send_Data+0x768>
    4786:	24 c0       	rjmp	.+72     	; 0x47d0 <LCD_Send_Data+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4788:	6e 89       	ldd	r22, Y+22	; 0x16
    478a:	7f 89       	ldd	r23, Y+23	; 0x17
    478c:	88 8d       	ldd	r24, Y+24	; 0x18
    478e:	99 8d       	ldd	r25, Y+25	; 0x19
    4790:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4794:	dc 01       	movw	r26, r24
    4796:	cb 01       	movw	r24, r22
    4798:	9d 8b       	std	Y+21, r25	; 0x15
    479a:	8c 8b       	std	Y+20, r24	; 0x14
    479c:	8c 89       	ldd	r24, Y+20	; 0x14
    479e:	9d 89       	ldd	r25, Y+21	; 0x15
    47a0:	99 8b       	std	Y+17, r25	; 0x11
    47a2:	88 8b       	std	Y+16, r24	; 0x10
    47a4:	88 89       	ldd	r24, Y+16	; 0x10
    47a6:	99 89       	ldd	r25, Y+17	; 0x11
    47a8:	01 97       	sbiw	r24, 0x01	; 1
    47aa:	f1 f7       	brne	.-4      	; 0x47a8 <LCD_Send_Data+0x7b0>
    47ac:	99 8b       	std	Y+17, r25	; 0x11
    47ae:	88 8b       	std	Y+16, r24	; 0x10
    47b0:	0f c0       	rjmp	.+30     	; 0x47d0 <LCD_Send_Data+0x7d8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    47b2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    47b4:	78 a1       	ldd	r23, Y+32	; 0x20
    47b6:	89 a1       	ldd	r24, Y+33	; 0x21
    47b8:	9a a1       	ldd	r25, Y+34	; 0x22
    47ba:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    47be:	dc 01       	movw	r26, r24
    47c0:	cb 01       	movw	r24, r22
    47c2:	8e 8f       	std	Y+30, r24	; 0x1e
    47c4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    47c6:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    47c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    47ca:	8a 95       	dec	r24
    47cc:	f1 f7       	brne	.-4      	; 0x47ca <LCD_Send_Data+0x7d2>
    47ce:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(5);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    47d0:	83 e0       	ldi	r24, 0x03	; 3
    47d2:	65 e0       	ldi	r22, 0x05	; 5
    47d4:	41 e0       	ldi	r20, 0x01	; 1
    47d6:	0e 94 dd 15 	call	0x2bba	; 0x2bba <DIO_SetPinValue>
    47da:	80 e0       	ldi	r24, 0x00	; 0
    47dc:	90 e0       	ldi	r25, 0x00	; 0
    47de:	a0 e2       	ldi	r26, 0x20	; 32
    47e0:	b1 e4       	ldi	r27, 0x41	; 65
    47e2:	8b 87       	std	Y+11, r24	; 0x0b
    47e4:	9c 87       	std	Y+12, r25	; 0x0c
    47e6:	ad 87       	std	Y+13, r26	; 0x0d
    47e8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    47ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    47ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    47f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    47f2:	20 e0       	ldi	r18, 0x00	; 0
    47f4:	30 e0       	ldi	r19, 0x00	; 0
    47f6:	4a ef       	ldi	r20, 0xFA	; 250
    47f8:	54 e4       	ldi	r21, 0x44	; 68
    47fa:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    47fe:	dc 01       	movw	r26, r24
    4800:	cb 01       	movw	r24, r22
    4802:	8f 83       	std	Y+7, r24	; 0x07
    4804:	98 87       	std	Y+8, r25	; 0x08
    4806:	a9 87       	std	Y+9, r26	; 0x09
    4808:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    480a:	6f 81       	ldd	r22, Y+7	; 0x07
    480c:	78 85       	ldd	r23, Y+8	; 0x08
    480e:	89 85       	ldd	r24, Y+9	; 0x09
    4810:	9a 85       	ldd	r25, Y+10	; 0x0a
    4812:	20 e0       	ldi	r18, 0x00	; 0
    4814:	30 e0       	ldi	r19, 0x00	; 0
    4816:	40 e8       	ldi	r20, 0x80	; 128
    4818:	5f e3       	ldi	r21, 0x3F	; 63
    481a:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    481e:	88 23       	and	r24, r24
    4820:	2c f4       	brge	.+10     	; 0x482c <LCD_Send_Data+0x834>
		__ticks = 1;
    4822:	81 e0       	ldi	r24, 0x01	; 1
    4824:	90 e0       	ldi	r25, 0x00	; 0
    4826:	9e 83       	std	Y+6, r25	; 0x06
    4828:	8d 83       	std	Y+5, r24	; 0x05
    482a:	3f c0       	rjmp	.+126    	; 0x48aa <LCD_Send_Data+0x8b2>
	else if (__tmp > 65535)
    482c:	6f 81       	ldd	r22, Y+7	; 0x07
    482e:	78 85       	ldd	r23, Y+8	; 0x08
    4830:	89 85       	ldd	r24, Y+9	; 0x09
    4832:	9a 85       	ldd	r25, Y+10	; 0x0a
    4834:	20 e0       	ldi	r18, 0x00	; 0
    4836:	3f ef       	ldi	r19, 0xFF	; 255
    4838:	4f e7       	ldi	r20, 0x7F	; 127
    483a:	57 e4       	ldi	r21, 0x47	; 71
    483c:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    4840:	18 16       	cp	r1, r24
    4842:	4c f5       	brge	.+82     	; 0x4896 <LCD_Send_Data+0x89e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4844:	6b 85       	ldd	r22, Y+11	; 0x0b
    4846:	7c 85       	ldd	r23, Y+12	; 0x0c
    4848:	8d 85       	ldd	r24, Y+13	; 0x0d
    484a:	9e 85       	ldd	r25, Y+14	; 0x0e
    484c:	20 e0       	ldi	r18, 0x00	; 0
    484e:	30 e0       	ldi	r19, 0x00	; 0
    4850:	40 e2       	ldi	r20, 0x20	; 32
    4852:	51 e4       	ldi	r21, 0x41	; 65
    4854:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    4858:	dc 01       	movw	r26, r24
    485a:	cb 01       	movw	r24, r22
    485c:	bc 01       	movw	r22, r24
    485e:	cd 01       	movw	r24, r26
    4860:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4864:	dc 01       	movw	r26, r24
    4866:	cb 01       	movw	r24, r22
    4868:	9e 83       	std	Y+6, r25	; 0x06
    486a:	8d 83       	std	Y+5, r24	; 0x05
    486c:	0f c0       	rjmp	.+30     	; 0x488c <LCD_Send_Data+0x894>
    486e:	88 ec       	ldi	r24, 0xC8	; 200
    4870:	90 e0       	ldi	r25, 0x00	; 0
    4872:	9c 83       	std	Y+4, r25	; 0x04
    4874:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4876:	8b 81       	ldd	r24, Y+3	; 0x03
    4878:	9c 81       	ldd	r25, Y+4	; 0x04
    487a:	01 97       	sbiw	r24, 0x01	; 1
    487c:	f1 f7       	brne	.-4      	; 0x487a <LCD_Send_Data+0x882>
    487e:	9c 83       	std	Y+4, r25	; 0x04
    4880:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4882:	8d 81       	ldd	r24, Y+5	; 0x05
    4884:	9e 81       	ldd	r25, Y+6	; 0x06
    4886:	01 97       	sbiw	r24, 0x01	; 1
    4888:	9e 83       	std	Y+6, r25	; 0x06
    488a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    488c:	8d 81       	ldd	r24, Y+5	; 0x05
    488e:	9e 81       	ldd	r25, Y+6	; 0x06
    4890:	00 97       	sbiw	r24, 0x00	; 0
    4892:	69 f7       	brne	.-38     	; 0x486e <LCD_Send_Data+0x876>
    4894:	14 c0       	rjmp	.+40     	; 0x48be <LCD_Send_Data+0x8c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4896:	6f 81       	ldd	r22, Y+7	; 0x07
    4898:	78 85       	ldd	r23, Y+8	; 0x08
    489a:	89 85       	ldd	r24, Y+9	; 0x09
    489c:	9a 85       	ldd	r25, Y+10	; 0x0a
    489e:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    48a2:	dc 01       	movw	r26, r24
    48a4:	cb 01       	movw	r24, r22
    48a6:	9e 83       	std	Y+6, r25	; 0x06
    48a8:	8d 83       	std	Y+5, r24	; 0x05
    48aa:	8d 81       	ldd	r24, Y+5	; 0x05
    48ac:	9e 81       	ldd	r25, Y+6	; 0x06
    48ae:	9a 83       	std	Y+2, r25	; 0x02
    48b0:	89 83       	std	Y+1, r24	; 0x01
    48b2:	89 81       	ldd	r24, Y+1	; 0x01
    48b4:	9a 81       	ldd	r25, Y+2	; 0x02
    48b6:	01 97       	sbiw	r24, 0x01	; 1
    48b8:	f1 f7       	brne	.-4      	; 0x48b6 <LCD_Send_Data+0x8be>
    48ba:	9a 83       	std	Y+2, r25	; 0x02
    48bc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    48be:	c1 59       	subi	r28, 0x91	; 145
    48c0:	df 4f       	sbci	r29, 0xFF	; 255
    48c2:	0f b6       	in	r0, 0x3f	; 63
    48c4:	f8 94       	cli
    48c6:	de bf       	out	0x3e, r29	; 62
    48c8:	0f be       	out	0x3f, r0	; 63
    48ca:	cd bf       	out	0x3d, r28	; 61
    48cc:	cf 91       	pop	r28
    48ce:	df 91       	pop	r29
    48d0:	1f 91       	pop	r17
    48d2:	0f 91       	pop	r16
    48d4:	08 95       	ret

000048d6 <LCD_Send_string>:

void LCD_Send_string(u8 *ptr) {
    48d6:	df 93       	push	r29
    48d8:	cf 93       	push	r28
    48da:	00 d0       	rcall	.+0      	; 0x48dc <LCD_Send_string+0x6>
    48dc:	0f 92       	push	r0
    48de:	cd b7       	in	r28, 0x3d	; 61
    48e0:	de b7       	in	r29, 0x3e	; 62
    48e2:	9b 83       	std	Y+3, r25	; 0x03
    48e4:	8a 83       	std	Y+2, r24	; 0x02
	u8 index = 0;
    48e6:	19 82       	std	Y+1, r1	; 0x01
    48e8:	0e c0       	rjmp	.+28     	; 0x4906 <LCD_Send_string+0x30>
	while (ptr[index] != '\0') {
		LCD_Send_Data(ptr[index]);
    48ea:	89 81       	ldd	r24, Y+1	; 0x01
    48ec:	28 2f       	mov	r18, r24
    48ee:	30 e0       	ldi	r19, 0x00	; 0
    48f0:	8a 81       	ldd	r24, Y+2	; 0x02
    48f2:	9b 81       	ldd	r25, Y+3	; 0x03
    48f4:	fc 01       	movw	r30, r24
    48f6:	e2 0f       	add	r30, r18
    48f8:	f3 1f       	adc	r31, r19
    48fa:	80 81       	ld	r24, Z
    48fc:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <LCD_Send_Data>
		index++;
    4900:	89 81       	ldd	r24, Y+1	; 0x01
    4902:	8f 5f       	subi	r24, 0xFF	; 255
    4904:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}

void LCD_Send_string(u8 *ptr) {
	u8 index = 0;
	while (ptr[index] != '\0') {
    4906:	89 81       	ldd	r24, Y+1	; 0x01
    4908:	28 2f       	mov	r18, r24
    490a:	30 e0       	ldi	r19, 0x00	; 0
    490c:	8a 81       	ldd	r24, Y+2	; 0x02
    490e:	9b 81       	ldd	r25, Y+3	; 0x03
    4910:	fc 01       	movw	r30, r24
    4912:	e2 0f       	add	r30, r18
    4914:	f3 1f       	adc	r31, r19
    4916:	80 81       	ld	r24, Z
    4918:	88 23       	and	r24, r24
    491a:	39 f7       	brne	.-50     	; 0x48ea <LCD_Send_string+0x14>
		LCD_Send_Data(ptr[index]);
		index++;
	}

}
    491c:	0f 90       	pop	r0
    491e:	0f 90       	pop	r0
    4920:	0f 90       	pop	r0
    4922:	cf 91       	pop	r28
    4924:	df 91       	pop	r29
    4926:	08 95       	ret

00004928 <LCD_Clear>:

void LCD_Clear(void) {
    4928:	df 93       	push	r29
    492a:	cf 93       	push	r28
    492c:	cd b7       	in	r28, 0x3d	; 61
    492e:	de b7       	in	r29, 0x3e	; 62
	LCD_Send_Command(LCD_CLEAR);
    4930:	81 e0       	ldi	r24, 0x01	; 1
    4932:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
}
    4936:	cf 91       	pop	r28
    4938:	df 91       	pop	r29
    493a:	08 95       	ret

0000493c <LCD_GOTOXY>:

void LCD_GOTOXY(u8 raw, u8 col) {
    493c:	df 93       	push	r29
    493e:	cf 93       	push	r28
    4940:	00 d0       	rcall	.+0      	; 0x4942 <LCD_GOTOXY+0x6>
    4942:	00 d0       	rcall	.+0      	; 0x4944 <LCD_GOTOXY+0x8>
    4944:	cd b7       	in	r28, 0x3d	; 61
    4946:	de b7       	in	r29, 0x3e	; 62
    4948:	89 83       	std	Y+1, r24	; 0x01
    494a:	6a 83       	std	Y+2, r22	; 0x02

	switch (raw) {
    494c:	89 81       	ldd	r24, Y+1	; 0x01
    494e:	28 2f       	mov	r18, r24
    4950:	30 e0       	ldi	r19, 0x00	; 0
    4952:	3c 83       	std	Y+4, r19	; 0x04
    4954:	2b 83       	std	Y+3, r18	; 0x03
    4956:	8b 81       	ldd	r24, Y+3	; 0x03
    4958:	9c 81       	ldd	r25, Y+4	; 0x04
    495a:	81 30       	cpi	r24, 0x01	; 1
    495c:	91 05       	cpc	r25, r1
    495e:	31 f0       	breq	.+12     	; 0x496c <LCD_GOTOXY+0x30>
    4960:	2b 81       	ldd	r18, Y+3	; 0x03
    4962:	3c 81       	ldd	r19, Y+4	; 0x04
    4964:	22 30       	cpi	r18, 0x02	; 2
    4966:	31 05       	cpc	r19, r1
    4968:	31 f0       	breq	.+12     	; 0x4976 <LCD_GOTOXY+0x3a>
    496a:	0a c0       	rjmp	.+20     	; 0x4980 <LCD_GOTOXY+0x44>
	case 1:
		LCD_Send_Command((0x00 + col) | (0x80));
    496c:	8a 81       	ldd	r24, Y+2	; 0x02
    496e:	80 68       	ori	r24, 0x80	; 128
    4970:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
    4974:	05 c0       	rjmp	.+10     	; 0x4980 <LCD_GOTOXY+0x44>
		break;
	case 2:
		LCD_Send_Command((0x40 + col) | (0x80));
    4976:	8a 81       	ldd	r24, Y+2	; 0x02
    4978:	80 5c       	subi	r24, 0xC0	; 192
    497a:	80 68       	ori	r24, 0x80	; 128
    497c:	0e 94 8d 1b 	call	0x371a	; 0x371a <LCD_Send_Command>
		break;
	default:
		break;
	}

}
    4980:	0f 90       	pop	r0
    4982:	0f 90       	pop	r0
    4984:	0f 90       	pop	r0
    4986:	0f 90       	pop	r0
    4988:	cf 91       	pop	r28
    498a:	df 91       	pop	r29
    498c:	08 95       	ret

0000498e <CLCD_voidSendFloatNumber>:
///////////////////////////////////////////////////
void CLCD_voidSendFloatNumber(f32 Copy_u64Number)
{
    498e:	af 92       	push	r10
    4990:	bf 92       	push	r11
    4992:	cf 92       	push	r12
    4994:	df 92       	push	r13
    4996:	ef 92       	push	r14
    4998:	ff 92       	push	r15
    499a:	0f 93       	push	r16
    499c:	1f 93       	push	r17
    499e:	df 93       	push	r29
    49a0:	cf 93       	push	r28
    49a2:	00 d0       	rcall	.+0      	; 0x49a4 <CLCD_voidSendFloatNumber+0x16>
    49a4:	00 d0       	rcall	.+0      	; 0x49a6 <CLCD_voidSendFloatNumber+0x18>
    49a6:	00 d0       	rcall	.+0      	; 0x49a8 <CLCD_voidSendFloatNumber+0x1a>
    49a8:	cd b7       	in	r28, 0x3d	; 61
    49aa:	de b7       	in	r29, 0x3e	; 62
    49ac:	6b 83       	std	Y+3, r22	; 0x03
    49ae:	7c 83       	std	Y+4, r23	; 0x04
    49b0:	8d 83       	std	Y+5, r24	; 0x05
    49b2:	9e 83       	std	Y+6, r25	; 0x06
	s32 LOC_s32IntNum=Copy_u64Number;
    49b4:	6b 81       	ldd	r22, Y+3	; 0x03
    49b6:	7c 81       	ldd	r23, Y+4	; 0x04
    49b8:	8d 81       	ldd	r24, Y+5	; 0x05
    49ba:	9e 81       	ldd	r25, Y+6	; 0x06
    49bc:	0e 94 94 12 	call	0x2528	; 0x2528 <__fixsfsi>
    49c0:	dc 01       	movw	r26, r24
    49c2:	cb 01       	movw	r24, r22
    49c4:	9a 83       	std	Y+2, r25	; 0x02
    49c6:	89 83       	std	Y+1, r24	; 0x01
	Copy_u64Number=Copy_u64Number-LOC_s32IntNum;
    49c8:	89 81       	ldd	r24, Y+1	; 0x01
    49ca:	9a 81       	ldd	r25, Y+2	; 0x02
    49cc:	aa 27       	eor	r26, r26
    49ce:	97 fd       	sbrc	r25, 7
    49d0:	a0 95       	com	r26
    49d2:	ba 2f       	mov	r27, r26
    49d4:	bc 01       	movw	r22, r24
    49d6:	cd 01       	movw	r24, r26
    49d8:	0e 94 36 12 	call	0x246c	; 0x246c <__floatsisf>
    49dc:	9b 01       	movw	r18, r22
    49de:	ac 01       	movw	r20, r24
    49e0:	6b 81       	ldd	r22, Y+3	; 0x03
    49e2:	7c 81       	ldd	r23, Y+4	; 0x04
    49e4:	8d 81       	ldd	r24, Y+5	; 0x05
    49e6:	9e 81       	ldd	r25, Y+6	; 0x06
    49e8:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <__subsf3>
    49ec:	dc 01       	movw	r26, r24
    49ee:	cb 01       	movw	r24, r22
    49f0:	8b 83       	std	Y+3, r24	; 0x03
    49f2:	9c 83       	std	Y+4, r25	; 0x04
    49f4:	ad 83       	std	Y+5, r26	; 0x05
    49f6:	be 83       	std	Y+6, r27	; 0x06
	Copy_u64Number*=100;
    49f8:	6b 81       	ldd	r22, Y+3	; 0x03
    49fa:	7c 81       	ldd	r23, Y+4	; 0x04
    49fc:	8d 81       	ldd	r24, Y+5	; 0x05
    49fe:	9e 81       	ldd	r25, Y+6	; 0x06
    4a00:	20 e0       	ldi	r18, 0x00	; 0
    4a02:	30 e0       	ldi	r19, 0x00	; 0
    4a04:	48 ec       	ldi	r20, 0xC8	; 200
    4a06:	52 e4       	ldi	r21, 0x42	; 66
    4a08:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    4a0c:	dc 01       	movw	r26, r24
    4a0e:	cb 01       	movw	r24, r22
    4a10:	8b 83       	std	Y+3, r24	; 0x03
    4a12:	9c 83       	std	Y+4, r25	; 0x04
    4a14:	ad 83       	std	Y+5, r26	; 0x05
    4a16:	be 83       	std	Y+6, r27	; 0x06
	CLCD_voidSendNumber(LOC_s32IntNum);
    4a18:	89 81       	ldd	r24, Y+1	; 0x01
    4a1a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a1c:	99 0f       	add	r25, r25
    4a1e:	88 0b       	sbc	r24, r24
    4a20:	98 2f       	mov	r25, r24
    4a22:	a9 80       	ldd	r10, Y+1	; 0x01
    4a24:	ba 80       	ldd	r11, Y+2	; 0x02
    4a26:	c8 2e       	mov	r12, r24
    4a28:	d8 2e       	mov	r13, r24
    4a2a:	e8 2e       	mov	r14, r24
    4a2c:	f8 2e       	mov	r15, r24
    4a2e:	08 2f       	mov	r16, r24
    4a30:	18 2f       	mov	r17, r24
    4a32:	2a 2d       	mov	r18, r10
    4a34:	3b 2d       	mov	r19, r11
    4a36:	4c 2d       	mov	r20, r12
    4a38:	5d 2d       	mov	r21, r13
    4a3a:	6e 2d       	mov	r22, r14
    4a3c:	7f 2d       	mov	r23, r15
    4a3e:	80 2f       	mov	r24, r16
    4a40:	91 2f       	mov	r25, r17
    4a42:	0e 94 4f 25 	call	0x4a9e	; 0x4a9e <CLCD_voidSendNumber>
	LCD_Send_Data('.');
    4a46:	8e e2       	ldi	r24, 0x2E	; 46
    4a48:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <LCD_Send_Data>
	CLCD_voidSendNumber((u32)Copy_u64Number );
    4a4c:	6b 81       	ldd	r22, Y+3	; 0x03
    4a4e:	7c 81       	ldd	r23, Y+4	; 0x04
    4a50:	8d 81       	ldd	r24, Y+5	; 0x05
    4a52:	9e 81       	ldd	r25, Y+6	; 0x06
    4a54:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    4a58:	dc 01       	movw	r26, r24
    4a5a:	cb 01       	movw	r24, r22
    4a5c:	5c 01       	movw	r10, r24
    4a5e:	cc 24       	eor	r12, r12
    4a60:	dd 24       	eor	r13, r13
    4a62:	ee 24       	eor	r14, r14
    4a64:	ff 24       	eor	r15, r15
    4a66:	87 01       	movw	r16, r14
    4a68:	2a 2d       	mov	r18, r10
    4a6a:	3b 2d       	mov	r19, r11
    4a6c:	4c 2d       	mov	r20, r12
    4a6e:	5d 2d       	mov	r21, r13
    4a70:	6e 2d       	mov	r22, r14
    4a72:	7f 2d       	mov	r23, r15
    4a74:	80 2f       	mov	r24, r16
    4a76:	91 2f       	mov	r25, r17
    4a78:	0e 94 4f 25 	call	0x4a9e	; 0x4a9e <CLCD_voidSendNumber>

}
    4a7c:	26 96       	adiw	r28, 0x06	; 6
    4a7e:	0f b6       	in	r0, 0x3f	; 63
    4a80:	f8 94       	cli
    4a82:	de bf       	out	0x3e, r29	; 62
    4a84:	0f be       	out	0x3f, r0	; 63
    4a86:	cd bf       	out	0x3d, r28	; 61
    4a88:	cf 91       	pop	r28
    4a8a:	df 91       	pop	r29
    4a8c:	1f 91       	pop	r17
    4a8e:	0f 91       	pop	r16
    4a90:	ff 90       	pop	r15
    4a92:	ef 90       	pop	r14
    4a94:	df 90       	pop	r13
    4a96:	cf 90       	pop	r12
    4a98:	bf 90       	pop	r11
    4a9a:	af 90       	pop	r10
    4a9c:	08 95       	ret

00004a9e <CLCD_voidSendNumber>:
void CLCD_voidSendNumber(u64 Copy_u64Number)
{
    4a9e:	af 92       	push	r10
    4aa0:	bf 92       	push	r11
    4aa2:	cf 92       	push	r12
    4aa4:	df 92       	push	r13
    4aa6:	ef 92       	push	r14
    4aa8:	ff 92       	push	r15
    4aaa:	0f 93       	push	r16
    4aac:	1f 93       	push	r17
    4aae:	df 93       	push	r29
    4ab0:	cf 93       	push	r28
    4ab2:	cd b7       	in	r28, 0x3d	; 61
    4ab4:	de b7       	in	r29, 0x3e	; 62
    4ab6:	c6 56       	subi	r28, 0x66	; 102
    4ab8:	d0 40       	sbci	r29, 0x00	; 0
    4aba:	0f b6       	in	r0, 0x3f	; 63
    4abc:	f8 94       	cli
    4abe:	de bf       	out	0x3e, r29	; 62
    4ac0:	0f be       	out	0x3f, r0	; 63
    4ac2:	cd bf       	out	0x3d, r28	; 61
    4ac4:	29 87       	std	Y+9, r18	; 0x09
    4ac6:	3a 87       	std	Y+10, r19	; 0x0a
    4ac8:	4b 87       	std	Y+11, r20	; 0x0b
    4aca:	5c 87       	std	Y+12, r21	; 0x0c
    4acc:	6d 87       	std	Y+13, r22	; 0x0d
    4ace:	7e 87       	std	Y+14, r23	; 0x0e
    4ad0:	8f 87       	std	Y+15, r24	; 0x0f
    4ad2:	98 8b       	std	Y+16, r25	; 0x10
	u64 LOC_u64Reversed=1;
    4ad4:	81 e0       	ldi	r24, 0x01	; 1
    4ad6:	89 83       	std	Y+1, r24	; 0x01
    4ad8:	1a 82       	std	Y+2, r1	; 0x02
    4ada:	1b 82       	std	Y+3, r1	; 0x03
    4adc:	1c 82       	std	Y+4, r1	; 0x04
    4ade:	1d 82       	std	Y+5, r1	; 0x05
    4ae0:	1e 82       	std	Y+6, r1	; 0x06
    4ae2:	1f 82       	std	Y+7, r1	; 0x07
    4ae4:	18 86       	std	Y+8, r1	; 0x08
    4ae6:	5e c3       	rjmp	.+1724   	; 0x51a4 <CLCD_voidSendNumber+0x706>
	while (Copy_u64Number!=0)
	{
		LOC_u64Reversed=(LOC_u64Reversed*10)+(Copy_u64Number%10);
    4ae8:	29 81       	ldd	r18, Y+1	; 0x01
    4aea:	3a 81       	ldd	r19, Y+2	; 0x02
    4aec:	4b 81       	ldd	r20, Y+3	; 0x03
    4aee:	5c 81       	ldd	r21, Y+4	; 0x04
    4af0:	6d 81       	ldd	r22, Y+5	; 0x05
    4af2:	7e 81       	ldd	r23, Y+6	; 0x06
    4af4:	8f 81       	ldd	r24, Y+7	; 0x07
    4af6:	98 85       	ldd	r25, Y+8	; 0x08
    4af8:	a2 2e       	mov	r10, r18
    4afa:	b3 2e       	mov	r11, r19
    4afc:	c4 2e       	mov	r12, r20
    4afe:	d5 2e       	mov	r13, r21
    4b00:	e6 2e       	mov	r14, r22
    4b02:	f7 2e       	mov	r15, r23
    4b04:	08 2f       	mov	r16, r24
    4b06:	19 2f       	mov	r17, r25
    4b08:	2a 2d       	mov	r18, r10
    4b0a:	3b 2d       	mov	r19, r11
    4b0c:	4c 2d       	mov	r20, r12
    4b0e:	5d 2d       	mov	r21, r13
    4b10:	6e 2d       	mov	r22, r14
    4b12:	7f 2d       	mov	r23, r15
    4b14:	80 2f       	mov	r24, r16
    4b16:	91 2f       	mov	r25, r17
    4b18:	01 e0       	ldi	r16, 0x01	; 1
    4b1a:	0e 94 c6 00 	call	0x18c	; 0x18c <__ashldi3>
    4b1e:	29 a3       	std	Y+33, r18	; 0x21
    4b20:	3a a3       	std	Y+34, r19	; 0x22
    4b22:	4b a3       	std	Y+35, r20	; 0x23
    4b24:	5c a3       	std	Y+36, r21	; 0x24
    4b26:	6d a3       	std	Y+37, r22	; 0x25
    4b28:	7e a3       	std	Y+38, r23	; 0x26
    4b2a:	8f a3       	std	Y+39, r24	; 0x27
    4b2c:	98 a7       	std	Y+40, r25	; 0x28
    4b2e:	29 a1       	ldd	r18, Y+33	; 0x21
    4b30:	3a a1       	ldd	r19, Y+34	; 0x22
    4b32:	4b a1       	ldd	r20, Y+35	; 0x23
    4b34:	5c a1       	ldd	r21, Y+36	; 0x24
    4b36:	6d a1       	ldd	r22, Y+37	; 0x25
    4b38:	7e a1       	ldd	r23, Y+38	; 0x26
    4b3a:	8f a1       	ldd	r24, Y+39	; 0x27
    4b3c:	98 a5       	ldd	r25, Y+40	; 0x28
    4b3e:	02 e0       	ldi	r16, 0x02	; 2
    4b40:	0e 94 c6 00 	call	0x18c	; 0x18c <__ashldi3>
    4b44:	29 a7       	std	Y+41, r18	; 0x29
    4b46:	3a a7       	std	Y+42, r19	; 0x2a
    4b48:	4b a7       	std	Y+43, r20	; 0x2b
    4b4a:	5c a7       	std	Y+44, r21	; 0x2c
    4b4c:	6d a7       	std	Y+45, r22	; 0x2d
    4b4e:	7e a7       	std	Y+46, r23	; 0x2e
    4b50:	8f a7       	std	Y+47, r24	; 0x2f
    4b52:	98 ab       	std	Y+48, r25	; 0x30
    4b54:	89 a1       	ldd	r24, Y+33	; 0x21
    4b56:	99 a5       	ldd	r25, Y+41	; 0x29
    4b58:	89 0f       	add	r24, r25
    4b5a:	89 ab       	std	Y+49, r24	; 0x31
    4b5c:	81 e0       	ldi	r24, 0x01	; 1
    4b5e:	89 af       	std	Y+57, r24	; 0x39
    4b60:	99 a9       	ldd	r25, Y+49	; 0x31
    4b62:	89 a1       	ldd	r24, Y+33	; 0x21
    4b64:	98 17       	cp	r25, r24
    4b66:	08 f0       	brcs	.+2      	; 0x4b6a <CLCD_voidSendNumber+0xcc>
    4b68:	19 ae       	std	Y+57, r1	; 0x39
    4b6a:	9a a1       	ldd	r25, Y+34	; 0x22
    4b6c:	8a a5       	ldd	r24, Y+42	; 0x2a
    4b6e:	98 0f       	add	r25, r24
    4b70:	9a ab       	std	Y+50, r25	; 0x32
    4b72:	91 e0       	ldi	r25, 0x01	; 1
    4b74:	9a af       	std	Y+58, r25	; 0x3a
    4b76:	8a a9       	ldd	r24, Y+50	; 0x32
    4b78:	9a a1       	ldd	r25, Y+34	; 0x22
    4b7a:	89 17       	cp	r24, r25
    4b7c:	08 f0       	brcs	.+2      	; 0x4b80 <CLCD_voidSendNumber+0xe2>
    4b7e:	1a ae       	std	Y+58, r1	; 0x3a
    4b80:	89 ad       	ldd	r24, Y+57	; 0x39
    4b82:	9a a9       	ldd	r25, Y+50	; 0x32
    4b84:	89 0f       	add	r24, r25
    4b86:	8b af       	std	Y+59, r24	; 0x3b
    4b88:	81 e0       	ldi	r24, 0x01	; 1
    4b8a:	8c af       	std	Y+60, r24	; 0x3c
    4b8c:	9b ad       	ldd	r25, Y+59	; 0x3b
    4b8e:	8a a9       	ldd	r24, Y+50	; 0x32
    4b90:	98 17       	cp	r25, r24
    4b92:	08 f0       	brcs	.+2      	; 0x4b96 <CLCD_voidSendNumber+0xf8>
    4b94:	1c ae       	std	Y+60, r1	; 0x3c
    4b96:	9a ad       	ldd	r25, Y+58	; 0x3a
    4b98:	8c ad       	ldd	r24, Y+60	; 0x3c
    4b9a:	98 2b       	or	r25, r24
    4b9c:	9a af       	std	Y+58, r25	; 0x3a
    4b9e:	9b ad       	ldd	r25, Y+59	; 0x3b
    4ba0:	9a ab       	std	Y+50, r25	; 0x32
    4ba2:	8b a1       	ldd	r24, Y+35	; 0x23
    4ba4:	9b a5       	ldd	r25, Y+43	; 0x2b
    4ba6:	89 0f       	add	r24, r25
    4ba8:	8b ab       	std	Y+51, r24	; 0x33
    4baa:	81 e0       	ldi	r24, 0x01	; 1
    4bac:	8d af       	std	Y+61, r24	; 0x3d
    4bae:	9b a9       	ldd	r25, Y+51	; 0x33
    4bb0:	8b a1       	ldd	r24, Y+35	; 0x23
    4bb2:	98 17       	cp	r25, r24
    4bb4:	08 f0       	brcs	.+2      	; 0x4bb8 <CLCD_voidSendNumber+0x11a>
    4bb6:	1d ae       	std	Y+61, r1	; 0x3d
    4bb8:	9a ad       	ldd	r25, Y+58	; 0x3a
    4bba:	8b a9       	ldd	r24, Y+51	; 0x33
    4bbc:	98 0f       	add	r25, r24
    4bbe:	9e af       	std	Y+62, r25	; 0x3e
    4bc0:	91 e0       	ldi	r25, 0x01	; 1
    4bc2:	9f af       	std	Y+63, r25	; 0x3f
    4bc4:	8e ad       	ldd	r24, Y+62	; 0x3e
    4bc6:	9b a9       	ldd	r25, Y+51	; 0x33
    4bc8:	89 17       	cp	r24, r25
    4bca:	08 f0       	brcs	.+2      	; 0x4bce <CLCD_voidSendNumber+0x130>
    4bcc:	1f ae       	std	Y+63, r1	; 0x3f
    4bce:	8d ad       	ldd	r24, Y+61	; 0x3d
    4bd0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4bd2:	89 2b       	or	r24, r25
    4bd4:	8d af       	std	Y+61, r24	; 0x3d
    4bd6:	8e ad       	ldd	r24, Y+62	; 0x3e
    4bd8:	8b ab       	std	Y+51, r24	; 0x33
    4bda:	9c a1       	ldd	r25, Y+36	; 0x24
    4bdc:	8c a5       	ldd	r24, Y+44	; 0x2c
    4bde:	98 0f       	add	r25, r24
    4be0:	9c ab       	std	Y+52, r25	; 0x34
    4be2:	91 e0       	ldi	r25, 0x01	; 1
    4be4:	21 96       	adiw	r28, 0x01	; 1
    4be6:	9f af       	std	Y+63, r25	; 0x3f
    4be8:	21 97       	sbiw	r28, 0x01	; 1
    4bea:	8c a9       	ldd	r24, Y+52	; 0x34
    4bec:	9c a1       	ldd	r25, Y+36	; 0x24
    4bee:	89 17       	cp	r24, r25
    4bf0:	18 f0       	brcs	.+6      	; 0x4bf8 <CLCD_voidSendNumber+0x15a>
    4bf2:	21 96       	adiw	r28, 0x01	; 1
    4bf4:	1f ae       	std	Y+63, r1	; 0x3f
    4bf6:	21 97       	sbiw	r28, 0x01	; 1
    4bf8:	8d ad       	ldd	r24, Y+61	; 0x3d
    4bfa:	9c a9       	ldd	r25, Y+52	; 0x34
    4bfc:	89 0f       	add	r24, r25
    4bfe:	22 96       	adiw	r28, 0x02	; 2
    4c00:	8f af       	std	Y+63, r24	; 0x3f
    4c02:	22 97       	sbiw	r28, 0x02	; 2
    4c04:	81 e0       	ldi	r24, 0x01	; 1
    4c06:	23 96       	adiw	r28, 0x03	; 3
    4c08:	8f af       	std	Y+63, r24	; 0x3f
    4c0a:	23 97       	sbiw	r28, 0x03	; 3
    4c0c:	22 96       	adiw	r28, 0x02	; 2
    4c0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c10:	22 97       	sbiw	r28, 0x02	; 2
    4c12:	8c a9       	ldd	r24, Y+52	; 0x34
    4c14:	98 17       	cp	r25, r24
    4c16:	18 f0       	brcs	.+6      	; 0x4c1e <CLCD_voidSendNumber+0x180>
    4c18:	23 96       	adiw	r28, 0x03	; 3
    4c1a:	1f ae       	std	Y+63, r1	; 0x3f
    4c1c:	23 97       	sbiw	r28, 0x03	; 3
    4c1e:	21 96       	adiw	r28, 0x01	; 1
    4c20:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c22:	21 97       	sbiw	r28, 0x01	; 1
    4c24:	23 96       	adiw	r28, 0x03	; 3
    4c26:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c28:	23 97       	sbiw	r28, 0x03	; 3
    4c2a:	98 2b       	or	r25, r24
    4c2c:	21 96       	adiw	r28, 0x01	; 1
    4c2e:	9f af       	std	Y+63, r25	; 0x3f
    4c30:	21 97       	sbiw	r28, 0x01	; 1
    4c32:	22 96       	adiw	r28, 0x02	; 2
    4c34:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c36:	22 97       	sbiw	r28, 0x02	; 2
    4c38:	9c ab       	std	Y+52, r25	; 0x34
    4c3a:	8d a1       	ldd	r24, Y+37	; 0x25
    4c3c:	9d a5       	ldd	r25, Y+45	; 0x2d
    4c3e:	89 0f       	add	r24, r25
    4c40:	8d ab       	std	Y+53, r24	; 0x35
    4c42:	81 e0       	ldi	r24, 0x01	; 1
    4c44:	24 96       	adiw	r28, 0x04	; 4
    4c46:	8f af       	std	Y+63, r24	; 0x3f
    4c48:	24 97       	sbiw	r28, 0x04	; 4
    4c4a:	9d a9       	ldd	r25, Y+53	; 0x35
    4c4c:	8d a1       	ldd	r24, Y+37	; 0x25
    4c4e:	98 17       	cp	r25, r24
    4c50:	18 f0       	brcs	.+6      	; 0x4c58 <CLCD_voidSendNumber+0x1ba>
    4c52:	24 96       	adiw	r28, 0x04	; 4
    4c54:	1f ae       	std	Y+63, r1	; 0x3f
    4c56:	24 97       	sbiw	r28, 0x04	; 4
    4c58:	21 96       	adiw	r28, 0x01	; 1
    4c5a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c5c:	21 97       	sbiw	r28, 0x01	; 1
    4c5e:	8d a9       	ldd	r24, Y+53	; 0x35
    4c60:	98 0f       	add	r25, r24
    4c62:	25 96       	adiw	r28, 0x05	; 5
    4c64:	9f af       	std	Y+63, r25	; 0x3f
    4c66:	25 97       	sbiw	r28, 0x05	; 5
    4c68:	91 e0       	ldi	r25, 0x01	; 1
    4c6a:	26 96       	adiw	r28, 0x06	; 6
    4c6c:	9f af       	std	Y+63, r25	; 0x3f
    4c6e:	26 97       	sbiw	r28, 0x06	; 6
    4c70:	25 96       	adiw	r28, 0x05	; 5
    4c72:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c74:	25 97       	sbiw	r28, 0x05	; 5
    4c76:	9d a9       	ldd	r25, Y+53	; 0x35
    4c78:	89 17       	cp	r24, r25
    4c7a:	18 f0       	brcs	.+6      	; 0x4c82 <CLCD_voidSendNumber+0x1e4>
    4c7c:	26 96       	adiw	r28, 0x06	; 6
    4c7e:	1f ae       	std	Y+63, r1	; 0x3f
    4c80:	26 97       	sbiw	r28, 0x06	; 6
    4c82:	24 96       	adiw	r28, 0x04	; 4
    4c84:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c86:	24 97       	sbiw	r28, 0x04	; 4
    4c88:	26 96       	adiw	r28, 0x06	; 6
    4c8a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c8c:	26 97       	sbiw	r28, 0x06	; 6
    4c8e:	89 2b       	or	r24, r25
    4c90:	24 96       	adiw	r28, 0x04	; 4
    4c92:	8f af       	std	Y+63, r24	; 0x3f
    4c94:	24 97       	sbiw	r28, 0x04	; 4
    4c96:	25 96       	adiw	r28, 0x05	; 5
    4c98:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c9a:	25 97       	sbiw	r28, 0x05	; 5
    4c9c:	8d ab       	std	Y+53, r24	; 0x35
    4c9e:	9e a1       	ldd	r25, Y+38	; 0x26
    4ca0:	8e a5       	ldd	r24, Y+46	; 0x2e
    4ca2:	98 0f       	add	r25, r24
    4ca4:	9e ab       	std	Y+54, r25	; 0x36
    4ca6:	91 e0       	ldi	r25, 0x01	; 1
    4ca8:	27 96       	adiw	r28, 0x07	; 7
    4caa:	9f af       	std	Y+63, r25	; 0x3f
    4cac:	27 97       	sbiw	r28, 0x07	; 7
    4cae:	8e a9       	ldd	r24, Y+54	; 0x36
    4cb0:	9e a1       	ldd	r25, Y+38	; 0x26
    4cb2:	89 17       	cp	r24, r25
    4cb4:	18 f0       	brcs	.+6      	; 0x4cbc <CLCD_voidSendNumber+0x21e>
    4cb6:	27 96       	adiw	r28, 0x07	; 7
    4cb8:	1f ae       	std	Y+63, r1	; 0x3f
    4cba:	27 97       	sbiw	r28, 0x07	; 7
    4cbc:	24 96       	adiw	r28, 0x04	; 4
    4cbe:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cc0:	24 97       	sbiw	r28, 0x04	; 4
    4cc2:	9e a9       	ldd	r25, Y+54	; 0x36
    4cc4:	89 0f       	add	r24, r25
    4cc6:	28 96       	adiw	r28, 0x08	; 8
    4cc8:	8f af       	std	Y+63, r24	; 0x3f
    4cca:	28 97       	sbiw	r28, 0x08	; 8
    4ccc:	81 e0       	ldi	r24, 0x01	; 1
    4cce:	29 96       	adiw	r28, 0x09	; 9
    4cd0:	8f af       	std	Y+63, r24	; 0x3f
    4cd2:	29 97       	sbiw	r28, 0x09	; 9
    4cd4:	28 96       	adiw	r28, 0x08	; 8
    4cd6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4cd8:	28 97       	sbiw	r28, 0x08	; 8
    4cda:	8e a9       	ldd	r24, Y+54	; 0x36
    4cdc:	98 17       	cp	r25, r24
    4cde:	18 f0       	brcs	.+6      	; 0x4ce6 <CLCD_voidSendNumber+0x248>
    4ce0:	29 96       	adiw	r28, 0x09	; 9
    4ce2:	1f ae       	std	Y+63, r1	; 0x3f
    4ce4:	29 97       	sbiw	r28, 0x09	; 9
    4ce6:	27 96       	adiw	r28, 0x07	; 7
    4ce8:	9f ad       	ldd	r25, Y+63	; 0x3f
    4cea:	27 97       	sbiw	r28, 0x07	; 7
    4cec:	29 96       	adiw	r28, 0x09	; 9
    4cee:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cf0:	29 97       	sbiw	r28, 0x09	; 9
    4cf2:	98 2b       	or	r25, r24
    4cf4:	27 96       	adiw	r28, 0x07	; 7
    4cf6:	9f af       	std	Y+63, r25	; 0x3f
    4cf8:	27 97       	sbiw	r28, 0x07	; 7
    4cfa:	28 96       	adiw	r28, 0x08	; 8
    4cfc:	9f ad       	ldd	r25, Y+63	; 0x3f
    4cfe:	28 97       	sbiw	r28, 0x08	; 8
    4d00:	9e ab       	std	Y+54, r25	; 0x36
    4d02:	8f a1       	ldd	r24, Y+39	; 0x27
    4d04:	9f a5       	ldd	r25, Y+47	; 0x2f
    4d06:	89 0f       	add	r24, r25
    4d08:	8f ab       	std	Y+55, r24	; 0x37
    4d0a:	81 e0       	ldi	r24, 0x01	; 1
    4d0c:	2a 96       	adiw	r28, 0x0a	; 10
    4d0e:	8f af       	std	Y+63, r24	; 0x3f
    4d10:	2a 97       	sbiw	r28, 0x0a	; 10
    4d12:	9f a9       	ldd	r25, Y+55	; 0x37
    4d14:	8f a1       	ldd	r24, Y+39	; 0x27
    4d16:	98 17       	cp	r25, r24
    4d18:	18 f0       	brcs	.+6      	; 0x4d20 <CLCD_voidSendNumber+0x282>
    4d1a:	2a 96       	adiw	r28, 0x0a	; 10
    4d1c:	1f ae       	std	Y+63, r1	; 0x3f
    4d1e:	2a 97       	sbiw	r28, 0x0a	; 10
    4d20:	27 96       	adiw	r28, 0x07	; 7
    4d22:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d24:	27 97       	sbiw	r28, 0x07	; 7
    4d26:	8f a9       	ldd	r24, Y+55	; 0x37
    4d28:	98 0f       	add	r25, r24
    4d2a:	2b 96       	adiw	r28, 0x0b	; 11
    4d2c:	9f af       	std	Y+63, r25	; 0x3f
    4d2e:	2b 97       	sbiw	r28, 0x0b	; 11
    4d30:	91 e0       	ldi	r25, 0x01	; 1
    4d32:	2c 96       	adiw	r28, 0x0c	; 12
    4d34:	9f af       	std	Y+63, r25	; 0x3f
    4d36:	2c 97       	sbiw	r28, 0x0c	; 12
    4d38:	2b 96       	adiw	r28, 0x0b	; 11
    4d3a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d3c:	2b 97       	sbiw	r28, 0x0b	; 11
    4d3e:	9f a9       	ldd	r25, Y+55	; 0x37
    4d40:	89 17       	cp	r24, r25
    4d42:	18 f0       	brcs	.+6      	; 0x4d4a <CLCD_voidSendNumber+0x2ac>
    4d44:	2c 96       	adiw	r28, 0x0c	; 12
    4d46:	1f ae       	std	Y+63, r1	; 0x3f
    4d48:	2c 97       	sbiw	r28, 0x0c	; 12
    4d4a:	2a 96       	adiw	r28, 0x0a	; 10
    4d4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d4e:	2a 97       	sbiw	r28, 0x0a	; 10
    4d50:	2c 96       	adiw	r28, 0x0c	; 12
    4d52:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d54:	2c 97       	sbiw	r28, 0x0c	; 12
    4d56:	89 2b       	or	r24, r25
    4d58:	2a 96       	adiw	r28, 0x0a	; 10
    4d5a:	8f af       	std	Y+63, r24	; 0x3f
    4d5c:	2a 97       	sbiw	r28, 0x0a	; 10
    4d5e:	2b 96       	adiw	r28, 0x0b	; 11
    4d60:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d62:	2b 97       	sbiw	r28, 0x0b	; 11
    4d64:	8f ab       	std	Y+55, r24	; 0x37
    4d66:	98 a5       	ldd	r25, Y+40	; 0x28
    4d68:	88 a9       	ldd	r24, Y+48	; 0x30
    4d6a:	98 0f       	add	r25, r24
    4d6c:	98 af       	std	Y+56, r25	; 0x38
    4d6e:	2a 96       	adiw	r28, 0x0a	; 10
    4d70:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d72:	2a 97       	sbiw	r28, 0x0a	; 10
    4d74:	98 ad       	ldd	r25, Y+56	; 0x38
    4d76:	89 0f       	add	r24, r25
    4d78:	88 af       	std	Y+56, r24	; 0x38
    4d7a:	89 a9       	ldd	r24, Y+49	; 0x31
    4d7c:	89 8f       	std	Y+25, r24	; 0x19
    4d7e:	9a a9       	ldd	r25, Y+50	; 0x32
    4d80:	9a 8f       	std	Y+26, r25	; 0x1a
    4d82:	8b a9       	ldd	r24, Y+51	; 0x33
    4d84:	8b 8f       	std	Y+27, r24	; 0x1b
    4d86:	9c a9       	ldd	r25, Y+52	; 0x34
    4d88:	9c 8f       	std	Y+28, r25	; 0x1c
    4d8a:	8d a9       	ldd	r24, Y+53	; 0x35
    4d8c:	8d 8f       	std	Y+29, r24	; 0x1d
    4d8e:	9e a9       	ldd	r25, Y+54	; 0x36
    4d90:	9e 8f       	std	Y+30, r25	; 0x1e
    4d92:	8f a9       	ldd	r24, Y+55	; 0x37
    4d94:	8f 8f       	std	Y+31, r24	; 0x1f
    4d96:	98 ad       	ldd	r25, Y+56	; 0x38
    4d98:	98 a3       	std	Y+32, r25	; 0x20
    4d9a:	a9 84       	ldd	r10, Y+9	; 0x09
    4d9c:	ba 84       	ldd	r11, Y+10	; 0x0a
    4d9e:	cb 84       	ldd	r12, Y+11	; 0x0b
    4da0:	dc 84       	ldd	r13, Y+12	; 0x0c
    4da2:	ed 84       	ldd	r14, Y+13	; 0x0d
    4da4:	fe 84       	ldd	r15, Y+14	; 0x0e
    4da6:	0f 85       	ldd	r16, Y+15	; 0x0f
    4da8:	18 89       	ldd	r17, Y+16	; 0x10
    4daa:	2a 2d       	mov	r18, r10
    4dac:	3b 2d       	mov	r19, r11
    4dae:	4c 2d       	mov	r20, r12
    4db0:	5d 2d       	mov	r21, r13
    4db2:	6e 2d       	mov	r22, r14
    4db4:	7f 2d       	mov	r23, r15
    4db6:	80 2f       	mov	r24, r16
    4db8:	91 2f       	mov	r25, r17
    4dba:	0f 2e       	mov	r0, r31
    4dbc:	fa e0       	ldi	r31, 0x0A	; 10
    4dbe:	af 2e       	mov	r10, r31
    4dc0:	f0 2d       	mov	r31, r0
    4dc2:	bb 24       	eor	r11, r11
    4dc4:	cc 24       	eor	r12, r12
    4dc6:	dd 24       	eor	r13, r13
    4dc8:	ee 24       	eor	r14, r14
    4dca:	ff 24       	eor	r15, r15
    4dcc:	00 e0       	ldi	r16, 0x00	; 0
    4dce:	10 e0       	ldi	r17, 0x00	; 0
    4dd0:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__umoddi3>
    4dd4:	a2 2e       	mov	r10, r18
    4dd6:	b3 2e       	mov	r11, r19
    4dd8:	c4 2e       	mov	r12, r20
    4dda:	d5 2e       	mov	r13, r21
    4ddc:	e6 2e       	mov	r14, r22
    4dde:	f7 2e       	mov	r15, r23
    4de0:	08 2f       	mov	r16, r24
    4de2:	19 2f       	mov	r17, r25
    4de4:	a9 8a       	std	Y+17, r10	; 0x11
    4de6:	ba 8a       	std	Y+18, r11	; 0x12
    4de8:	cb 8a       	std	Y+19, r12	; 0x13
    4dea:	dc 8a       	std	Y+20, r13	; 0x14
    4dec:	ed 8a       	std	Y+21, r14	; 0x15
    4dee:	fe 8a       	std	Y+22, r15	; 0x16
    4df0:	0f 8b       	std	Y+23, r16	; 0x17
    4df2:	18 8f       	std	Y+24, r17	; 0x18
    4df4:	89 8d       	ldd	r24, Y+25	; 0x19
    4df6:	99 89       	ldd	r25, Y+17	; 0x11
    4df8:	89 0f       	add	r24, r25
    4dfa:	2d 96       	adiw	r28, 0x0d	; 13
    4dfc:	8f af       	std	Y+63, r24	; 0x3f
    4dfe:	2d 97       	sbiw	r28, 0x0d	; 13
    4e00:	81 e0       	ldi	r24, 0x01	; 1
    4e02:	65 96       	adiw	r28, 0x15	; 21
    4e04:	8f af       	std	Y+63, r24	; 0x3f
    4e06:	65 97       	sbiw	r28, 0x15	; 21
    4e08:	2d 96       	adiw	r28, 0x0d	; 13
    4e0a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e0c:	2d 97       	sbiw	r28, 0x0d	; 13
    4e0e:	89 8d       	ldd	r24, Y+25	; 0x19
    4e10:	98 17       	cp	r25, r24
    4e12:	18 f0       	brcs	.+6      	; 0x4e1a <CLCD_voidSendNumber+0x37c>
    4e14:	65 96       	adiw	r28, 0x15	; 21
    4e16:	1f ae       	std	Y+63, r1	; 0x3f
    4e18:	65 97       	sbiw	r28, 0x15	; 21
    4e1a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4e1c:	8a 89       	ldd	r24, Y+18	; 0x12
    4e1e:	98 0f       	add	r25, r24
    4e20:	2e 96       	adiw	r28, 0x0e	; 14
    4e22:	9f af       	std	Y+63, r25	; 0x3f
    4e24:	2e 97       	sbiw	r28, 0x0e	; 14
    4e26:	91 e0       	ldi	r25, 0x01	; 1
    4e28:	66 96       	adiw	r28, 0x16	; 22
    4e2a:	9f af       	std	Y+63, r25	; 0x3f
    4e2c:	66 97       	sbiw	r28, 0x16	; 22
    4e2e:	2e 96       	adiw	r28, 0x0e	; 14
    4e30:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e32:	2e 97       	sbiw	r28, 0x0e	; 14
    4e34:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4e36:	89 17       	cp	r24, r25
    4e38:	18 f0       	brcs	.+6      	; 0x4e40 <CLCD_voidSendNumber+0x3a2>
    4e3a:	66 96       	adiw	r28, 0x16	; 22
    4e3c:	1f ae       	std	Y+63, r1	; 0x3f
    4e3e:	66 97       	sbiw	r28, 0x16	; 22
    4e40:	65 96       	adiw	r28, 0x15	; 21
    4e42:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e44:	65 97       	sbiw	r28, 0x15	; 21
    4e46:	2e 96       	adiw	r28, 0x0e	; 14
    4e48:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e4a:	2e 97       	sbiw	r28, 0x0e	; 14
    4e4c:	89 0f       	add	r24, r25
    4e4e:	67 96       	adiw	r28, 0x17	; 23
    4e50:	8f af       	std	Y+63, r24	; 0x3f
    4e52:	67 97       	sbiw	r28, 0x17	; 23
    4e54:	81 e0       	ldi	r24, 0x01	; 1
    4e56:	68 96       	adiw	r28, 0x18	; 24
    4e58:	8f af       	std	Y+63, r24	; 0x3f
    4e5a:	68 97       	sbiw	r28, 0x18	; 24
    4e5c:	67 96       	adiw	r28, 0x17	; 23
    4e5e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e60:	67 97       	sbiw	r28, 0x17	; 23
    4e62:	2e 96       	adiw	r28, 0x0e	; 14
    4e64:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e66:	2e 97       	sbiw	r28, 0x0e	; 14
    4e68:	98 17       	cp	r25, r24
    4e6a:	18 f0       	brcs	.+6      	; 0x4e72 <CLCD_voidSendNumber+0x3d4>
    4e6c:	68 96       	adiw	r28, 0x18	; 24
    4e6e:	1f ae       	std	Y+63, r1	; 0x3f
    4e70:	68 97       	sbiw	r28, 0x18	; 24
    4e72:	66 96       	adiw	r28, 0x16	; 22
    4e74:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e76:	66 97       	sbiw	r28, 0x16	; 22
    4e78:	68 96       	adiw	r28, 0x18	; 24
    4e7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e7c:	68 97       	sbiw	r28, 0x18	; 24
    4e7e:	98 2b       	or	r25, r24
    4e80:	66 96       	adiw	r28, 0x16	; 22
    4e82:	9f af       	std	Y+63, r25	; 0x3f
    4e84:	66 97       	sbiw	r28, 0x16	; 22
    4e86:	67 96       	adiw	r28, 0x17	; 23
    4e88:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e8a:	67 97       	sbiw	r28, 0x17	; 23
    4e8c:	2e 96       	adiw	r28, 0x0e	; 14
    4e8e:	9f af       	std	Y+63, r25	; 0x3f
    4e90:	2e 97       	sbiw	r28, 0x0e	; 14
    4e92:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4e94:	9b 89       	ldd	r25, Y+19	; 0x13
    4e96:	89 0f       	add	r24, r25
    4e98:	2f 96       	adiw	r28, 0x0f	; 15
    4e9a:	8f af       	std	Y+63, r24	; 0x3f
    4e9c:	2f 97       	sbiw	r28, 0x0f	; 15
    4e9e:	81 e0       	ldi	r24, 0x01	; 1
    4ea0:	69 96       	adiw	r28, 0x19	; 25
    4ea2:	8f af       	std	Y+63, r24	; 0x3f
    4ea4:	69 97       	sbiw	r28, 0x19	; 25
    4ea6:	2f 96       	adiw	r28, 0x0f	; 15
    4ea8:	9f ad       	ldd	r25, Y+63	; 0x3f
    4eaa:	2f 97       	sbiw	r28, 0x0f	; 15
    4eac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4eae:	98 17       	cp	r25, r24
    4eb0:	18 f0       	brcs	.+6      	; 0x4eb8 <CLCD_voidSendNumber+0x41a>
    4eb2:	69 96       	adiw	r28, 0x19	; 25
    4eb4:	1f ae       	std	Y+63, r1	; 0x3f
    4eb6:	69 97       	sbiw	r28, 0x19	; 25
    4eb8:	66 96       	adiw	r28, 0x16	; 22
    4eba:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ebc:	66 97       	sbiw	r28, 0x16	; 22
    4ebe:	2f 96       	adiw	r28, 0x0f	; 15
    4ec0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ec2:	2f 97       	sbiw	r28, 0x0f	; 15
    4ec4:	98 0f       	add	r25, r24
    4ec6:	6a 96       	adiw	r28, 0x1a	; 26
    4ec8:	9f af       	std	Y+63, r25	; 0x3f
    4eca:	6a 97       	sbiw	r28, 0x1a	; 26
    4ecc:	91 e0       	ldi	r25, 0x01	; 1
    4ece:	6b 96       	adiw	r28, 0x1b	; 27
    4ed0:	9f af       	std	Y+63, r25	; 0x3f
    4ed2:	6b 97       	sbiw	r28, 0x1b	; 27
    4ed4:	6a 96       	adiw	r28, 0x1a	; 26
    4ed6:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ed8:	6a 97       	sbiw	r28, 0x1a	; 26
    4eda:	2f 96       	adiw	r28, 0x0f	; 15
    4edc:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ede:	2f 97       	sbiw	r28, 0x0f	; 15
    4ee0:	89 17       	cp	r24, r25
    4ee2:	18 f0       	brcs	.+6      	; 0x4eea <CLCD_voidSendNumber+0x44c>
    4ee4:	6b 96       	adiw	r28, 0x1b	; 27
    4ee6:	1f ae       	std	Y+63, r1	; 0x3f
    4ee8:	6b 97       	sbiw	r28, 0x1b	; 27
    4eea:	69 96       	adiw	r28, 0x19	; 25
    4eec:	8f ad       	ldd	r24, Y+63	; 0x3f
    4eee:	69 97       	sbiw	r28, 0x19	; 25
    4ef0:	6b 96       	adiw	r28, 0x1b	; 27
    4ef2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ef4:	6b 97       	sbiw	r28, 0x1b	; 27
    4ef6:	89 2b       	or	r24, r25
    4ef8:	69 96       	adiw	r28, 0x19	; 25
    4efa:	8f af       	std	Y+63, r24	; 0x3f
    4efc:	69 97       	sbiw	r28, 0x19	; 25
    4efe:	6a 96       	adiw	r28, 0x1a	; 26
    4f00:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f02:	6a 97       	sbiw	r28, 0x1a	; 26
    4f04:	2f 96       	adiw	r28, 0x0f	; 15
    4f06:	8f af       	std	Y+63, r24	; 0x3f
    4f08:	2f 97       	sbiw	r28, 0x0f	; 15
    4f0a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f0c:	8c 89       	ldd	r24, Y+20	; 0x14
    4f0e:	98 0f       	add	r25, r24
    4f10:	60 96       	adiw	r28, 0x10	; 16
    4f12:	9f af       	std	Y+63, r25	; 0x3f
    4f14:	60 97       	sbiw	r28, 0x10	; 16
    4f16:	91 e0       	ldi	r25, 0x01	; 1
    4f18:	6c 96       	adiw	r28, 0x1c	; 28
    4f1a:	9f af       	std	Y+63, r25	; 0x3f
    4f1c:	6c 97       	sbiw	r28, 0x1c	; 28
    4f1e:	60 96       	adiw	r28, 0x10	; 16
    4f20:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f22:	60 97       	sbiw	r28, 0x10	; 16
    4f24:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f26:	89 17       	cp	r24, r25
    4f28:	18 f0       	brcs	.+6      	; 0x4f30 <CLCD_voidSendNumber+0x492>
    4f2a:	6c 96       	adiw	r28, 0x1c	; 28
    4f2c:	1f ae       	std	Y+63, r1	; 0x3f
    4f2e:	6c 97       	sbiw	r28, 0x1c	; 28
    4f30:	69 96       	adiw	r28, 0x19	; 25
    4f32:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f34:	69 97       	sbiw	r28, 0x19	; 25
    4f36:	60 96       	adiw	r28, 0x10	; 16
    4f38:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f3a:	60 97       	sbiw	r28, 0x10	; 16
    4f3c:	89 0f       	add	r24, r25
    4f3e:	6d 96       	adiw	r28, 0x1d	; 29
    4f40:	8f af       	std	Y+63, r24	; 0x3f
    4f42:	6d 97       	sbiw	r28, 0x1d	; 29
    4f44:	81 e0       	ldi	r24, 0x01	; 1
    4f46:	6e 96       	adiw	r28, 0x1e	; 30
    4f48:	8f af       	std	Y+63, r24	; 0x3f
    4f4a:	6e 97       	sbiw	r28, 0x1e	; 30
    4f4c:	6d 96       	adiw	r28, 0x1d	; 29
    4f4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f50:	6d 97       	sbiw	r28, 0x1d	; 29
    4f52:	60 96       	adiw	r28, 0x10	; 16
    4f54:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f56:	60 97       	sbiw	r28, 0x10	; 16
    4f58:	98 17       	cp	r25, r24
    4f5a:	18 f0       	brcs	.+6      	; 0x4f62 <CLCD_voidSendNumber+0x4c4>
    4f5c:	6e 96       	adiw	r28, 0x1e	; 30
    4f5e:	1f ae       	std	Y+63, r1	; 0x3f
    4f60:	6e 97       	sbiw	r28, 0x1e	; 30
    4f62:	6c 96       	adiw	r28, 0x1c	; 28
    4f64:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f66:	6c 97       	sbiw	r28, 0x1c	; 28
    4f68:	6e 96       	adiw	r28, 0x1e	; 30
    4f6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f6c:	6e 97       	sbiw	r28, 0x1e	; 30
    4f6e:	98 2b       	or	r25, r24
    4f70:	6c 96       	adiw	r28, 0x1c	; 28
    4f72:	9f af       	std	Y+63, r25	; 0x3f
    4f74:	6c 97       	sbiw	r28, 0x1c	; 28
    4f76:	6d 96       	adiw	r28, 0x1d	; 29
    4f78:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f7a:	6d 97       	sbiw	r28, 0x1d	; 29
    4f7c:	60 96       	adiw	r28, 0x10	; 16
    4f7e:	9f af       	std	Y+63, r25	; 0x3f
    4f80:	60 97       	sbiw	r28, 0x10	; 16
    4f82:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f84:	9d 89       	ldd	r25, Y+21	; 0x15
    4f86:	89 0f       	add	r24, r25
    4f88:	61 96       	adiw	r28, 0x11	; 17
    4f8a:	8f af       	std	Y+63, r24	; 0x3f
    4f8c:	61 97       	sbiw	r28, 0x11	; 17
    4f8e:	81 e0       	ldi	r24, 0x01	; 1
    4f90:	6f 96       	adiw	r28, 0x1f	; 31
    4f92:	8f af       	std	Y+63, r24	; 0x3f
    4f94:	6f 97       	sbiw	r28, 0x1f	; 31
    4f96:	61 96       	adiw	r28, 0x11	; 17
    4f98:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f9a:	61 97       	sbiw	r28, 0x11	; 17
    4f9c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f9e:	98 17       	cp	r25, r24
    4fa0:	18 f0       	brcs	.+6      	; 0x4fa8 <CLCD_voidSendNumber+0x50a>
    4fa2:	6f 96       	adiw	r28, 0x1f	; 31
    4fa4:	1f ae       	std	Y+63, r1	; 0x3f
    4fa6:	6f 97       	sbiw	r28, 0x1f	; 31
    4fa8:	6c 96       	adiw	r28, 0x1c	; 28
    4faa:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fac:	6c 97       	sbiw	r28, 0x1c	; 28
    4fae:	61 96       	adiw	r28, 0x11	; 17
    4fb0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fb2:	61 97       	sbiw	r28, 0x11	; 17
    4fb4:	98 0f       	add	r25, r24
    4fb6:	a0 96       	adiw	r28, 0x20	; 32
    4fb8:	9f af       	std	Y+63, r25	; 0x3f
    4fba:	a0 97       	sbiw	r28, 0x20	; 32
    4fbc:	91 e0       	ldi	r25, 0x01	; 1
    4fbe:	a1 96       	adiw	r28, 0x21	; 33
    4fc0:	9f af       	std	Y+63, r25	; 0x3f
    4fc2:	a1 97       	sbiw	r28, 0x21	; 33
    4fc4:	a0 96       	adiw	r28, 0x20	; 32
    4fc6:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fc8:	a0 97       	sbiw	r28, 0x20	; 32
    4fca:	61 96       	adiw	r28, 0x11	; 17
    4fcc:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fce:	61 97       	sbiw	r28, 0x11	; 17
    4fd0:	89 17       	cp	r24, r25
    4fd2:	18 f0       	brcs	.+6      	; 0x4fda <CLCD_voidSendNumber+0x53c>
    4fd4:	a1 96       	adiw	r28, 0x21	; 33
    4fd6:	1f ae       	std	Y+63, r1	; 0x3f
    4fd8:	a1 97       	sbiw	r28, 0x21	; 33
    4fda:	6f 96       	adiw	r28, 0x1f	; 31
    4fdc:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fde:	6f 97       	sbiw	r28, 0x1f	; 31
    4fe0:	a1 96       	adiw	r28, 0x21	; 33
    4fe2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fe4:	a1 97       	sbiw	r28, 0x21	; 33
    4fe6:	89 2b       	or	r24, r25
    4fe8:	6f 96       	adiw	r28, 0x1f	; 31
    4fea:	8f af       	std	Y+63, r24	; 0x3f
    4fec:	6f 97       	sbiw	r28, 0x1f	; 31
    4fee:	a0 96       	adiw	r28, 0x20	; 32
    4ff0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ff2:	a0 97       	sbiw	r28, 0x20	; 32
    4ff4:	61 96       	adiw	r28, 0x11	; 17
    4ff6:	8f af       	std	Y+63, r24	; 0x3f
    4ff8:	61 97       	sbiw	r28, 0x11	; 17
    4ffa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4ffc:	8e 89       	ldd	r24, Y+22	; 0x16
    4ffe:	98 0f       	add	r25, r24
    5000:	62 96       	adiw	r28, 0x12	; 18
    5002:	9f af       	std	Y+63, r25	; 0x3f
    5004:	62 97       	sbiw	r28, 0x12	; 18
    5006:	91 e0       	ldi	r25, 0x01	; 1
    5008:	a2 96       	adiw	r28, 0x22	; 34
    500a:	9f af       	std	Y+63, r25	; 0x3f
    500c:	a2 97       	sbiw	r28, 0x22	; 34
    500e:	62 96       	adiw	r28, 0x12	; 18
    5010:	8f ad       	ldd	r24, Y+63	; 0x3f
    5012:	62 97       	sbiw	r28, 0x12	; 18
    5014:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5016:	89 17       	cp	r24, r25
    5018:	18 f0       	brcs	.+6      	; 0x5020 <CLCD_voidSendNumber+0x582>
    501a:	a2 96       	adiw	r28, 0x22	; 34
    501c:	1f ae       	std	Y+63, r1	; 0x3f
    501e:	a2 97       	sbiw	r28, 0x22	; 34
    5020:	6f 96       	adiw	r28, 0x1f	; 31
    5022:	8f ad       	ldd	r24, Y+63	; 0x3f
    5024:	6f 97       	sbiw	r28, 0x1f	; 31
    5026:	62 96       	adiw	r28, 0x12	; 18
    5028:	9f ad       	ldd	r25, Y+63	; 0x3f
    502a:	62 97       	sbiw	r28, 0x12	; 18
    502c:	89 0f       	add	r24, r25
    502e:	a3 96       	adiw	r28, 0x23	; 35
    5030:	8f af       	std	Y+63, r24	; 0x3f
    5032:	a3 97       	sbiw	r28, 0x23	; 35
    5034:	81 e0       	ldi	r24, 0x01	; 1
    5036:	a4 96       	adiw	r28, 0x24	; 36
    5038:	8f af       	std	Y+63, r24	; 0x3f
    503a:	a4 97       	sbiw	r28, 0x24	; 36
    503c:	a3 96       	adiw	r28, 0x23	; 35
    503e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5040:	a3 97       	sbiw	r28, 0x23	; 35
    5042:	62 96       	adiw	r28, 0x12	; 18
    5044:	8f ad       	ldd	r24, Y+63	; 0x3f
    5046:	62 97       	sbiw	r28, 0x12	; 18
    5048:	98 17       	cp	r25, r24
    504a:	18 f0       	brcs	.+6      	; 0x5052 <CLCD_voidSendNumber+0x5b4>
    504c:	a4 96       	adiw	r28, 0x24	; 36
    504e:	1f ae       	std	Y+63, r1	; 0x3f
    5050:	a4 97       	sbiw	r28, 0x24	; 36
    5052:	a2 96       	adiw	r28, 0x22	; 34
    5054:	9f ad       	ldd	r25, Y+63	; 0x3f
    5056:	a2 97       	sbiw	r28, 0x22	; 34
    5058:	a4 96       	adiw	r28, 0x24	; 36
    505a:	8f ad       	ldd	r24, Y+63	; 0x3f
    505c:	a4 97       	sbiw	r28, 0x24	; 36
    505e:	98 2b       	or	r25, r24
    5060:	a2 96       	adiw	r28, 0x22	; 34
    5062:	9f af       	std	Y+63, r25	; 0x3f
    5064:	a2 97       	sbiw	r28, 0x22	; 34
    5066:	a3 96       	adiw	r28, 0x23	; 35
    5068:	9f ad       	ldd	r25, Y+63	; 0x3f
    506a:	a3 97       	sbiw	r28, 0x23	; 35
    506c:	62 96       	adiw	r28, 0x12	; 18
    506e:	9f af       	std	Y+63, r25	; 0x3f
    5070:	62 97       	sbiw	r28, 0x12	; 18
    5072:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5074:	9f 89       	ldd	r25, Y+23	; 0x17
    5076:	89 0f       	add	r24, r25
    5078:	63 96       	adiw	r28, 0x13	; 19
    507a:	8f af       	std	Y+63, r24	; 0x3f
    507c:	63 97       	sbiw	r28, 0x13	; 19
    507e:	81 e0       	ldi	r24, 0x01	; 1
    5080:	a5 96       	adiw	r28, 0x25	; 37
    5082:	8f af       	std	Y+63, r24	; 0x3f
    5084:	a5 97       	sbiw	r28, 0x25	; 37
    5086:	63 96       	adiw	r28, 0x13	; 19
    5088:	9f ad       	ldd	r25, Y+63	; 0x3f
    508a:	63 97       	sbiw	r28, 0x13	; 19
    508c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    508e:	98 17       	cp	r25, r24
    5090:	18 f0       	brcs	.+6      	; 0x5098 <CLCD_voidSendNumber+0x5fa>
    5092:	a5 96       	adiw	r28, 0x25	; 37
    5094:	1f ae       	std	Y+63, r1	; 0x3f
    5096:	a5 97       	sbiw	r28, 0x25	; 37
    5098:	a2 96       	adiw	r28, 0x22	; 34
    509a:	9f ad       	ldd	r25, Y+63	; 0x3f
    509c:	a2 97       	sbiw	r28, 0x22	; 34
    509e:	63 96       	adiw	r28, 0x13	; 19
    50a0:	8f ad       	ldd	r24, Y+63	; 0x3f
    50a2:	63 97       	sbiw	r28, 0x13	; 19
    50a4:	98 0f       	add	r25, r24
    50a6:	a6 96       	adiw	r28, 0x26	; 38
    50a8:	9f af       	std	Y+63, r25	; 0x3f
    50aa:	a6 97       	sbiw	r28, 0x26	; 38
    50ac:	91 e0       	ldi	r25, 0x01	; 1
    50ae:	a7 96       	adiw	r28, 0x27	; 39
    50b0:	9f af       	std	Y+63, r25	; 0x3f
    50b2:	a7 97       	sbiw	r28, 0x27	; 39
    50b4:	a6 96       	adiw	r28, 0x26	; 38
    50b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    50b8:	a6 97       	sbiw	r28, 0x26	; 38
    50ba:	63 96       	adiw	r28, 0x13	; 19
    50bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    50be:	63 97       	sbiw	r28, 0x13	; 19
    50c0:	89 17       	cp	r24, r25
    50c2:	18 f0       	brcs	.+6      	; 0x50ca <CLCD_voidSendNumber+0x62c>
    50c4:	a7 96       	adiw	r28, 0x27	; 39
    50c6:	1f ae       	std	Y+63, r1	; 0x3f
    50c8:	a7 97       	sbiw	r28, 0x27	; 39
    50ca:	a5 96       	adiw	r28, 0x25	; 37
    50cc:	8f ad       	ldd	r24, Y+63	; 0x3f
    50ce:	a5 97       	sbiw	r28, 0x25	; 37
    50d0:	a7 96       	adiw	r28, 0x27	; 39
    50d2:	9f ad       	ldd	r25, Y+63	; 0x3f
    50d4:	a7 97       	sbiw	r28, 0x27	; 39
    50d6:	89 2b       	or	r24, r25
    50d8:	a5 96       	adiw	r28, 0x25	; 37
    50da:	8f af       	std	Y+63, r24	; 0x3f
    50dc:	a5 97       	sbiw	r28, 0x25	; 37
    50de:	a6 96       	adiw	r28, 0x26	; 38
    50e0:	8f ad       	ldd	r24, Y+63	; 0x3f
    50e2:	a6 97       	sbiw	r28, 0x26	; 38
    50e4:	63 96       	adiw	r28, 0x13	; 19
    50e6:	8f af       	std	Y+63, r24	; 0x3f
    50e8:	63 97       	sbiw	r28, 0x13	; 19
    50ea:	98 a1       	ldd	r25, Y+32	; 0x20
    50ec:	88 8d       	ldd	r24, Y+24	; 0x18
    50ee:	98 0f       	add	r25, r24
    50f0:	64 96       	adiw	r28, 0x14	; 20
    50f2:	9f af       	std	Y+63, r25	; 0x3f
    50f4:	64 97       	sbiw	r28, 0x14	; 20
    50f6:	a5 96       	adiw	r28, 0x25	; 37
    50f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    50fa:	a5 97       	sbiw	r28, 0x25	; 37
    50fc:	64 96       	adiw	r28, 0x14	; 20
    50fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    5100:	64 97       	sbiw	r28, 0x14	; 20
    5102:	89 0f       	add	r24, r25
    5104:	64 96       	adiw	r28, 0x14	; 20
    5106:	8f af       	std	Y+63, r24	; 0x3f
    5108:	64 97       	sbiw	r28, 0x14	; 20
    510a:	2d 96       	adiw	r28, 0x0d	; 13
    510c:	8f ad       	ldd	r24, Y+63	; 0x3f
    510e:	2d 97       	sbiw	r28, 0x0d	; 13
    5110:	89 83       	std	Y+1, r24	; 0x01
    5112:	2e 96       	adiw	r28, 0x0e	; 14
    5114:	9f ad       	ldd	r25, Y+63	; 0x3f
    5116:	2e 97       	sbiw	r28, 0x0e	; 14
    5118:	9a 83       	std	Y+2, r25	; 0x02
    511a:	2f 96       	adiw	r28, 0x0f	; 15
    511c:	8f ad       	ldd	r24, Y+63	; 0x3f
    511e:	2f 97       	sbiw	r28, 0x0f	; 15
    5120:	8b 83       	std	Y+3, r24	; 0x03
    5122:	60 96       	adiw	r28, 0x10	; 16
    5124:	9f ad       	ldd	r25, Y+63	; 0x3f
    5126:	60 97       	sbiw	r28, 0x10	; 16
    5128:	9c 83       	std	Y+4, r25	; 0x04
    512a:	61 96       	adiw	r28, 0x11	; 17
    512c:	8f ad       	ldd	r24, Y+63	; 0x3f
    512e:	61 97       	sbiw	r28, 0x11	; 17
    5130:	8d 83       	std	Y+5, r24	; 0x05
    5132:	62 96       	adiw	r28, 0x12	; 18
    5134:	9f ad       	ldd	r25, Y+63	; 0x3f
    5136:	62 97       	sbiw	r28, 0x12	; 18
    5138:	9e 83       	std	Y+6, r25	; 0x06
    513a:	63 96       	adiw	r28, 0x13	; 19
    513c:	8f ad       	ldd	r24, Y+63	; 0x3f
    513e:	63 97       	sbiw	r28, 0x13	; 19
    5140:	8f 83       	std	Y+7, r24	; 0x07
    5142:	64 96       	adiw	r28, 0x14	; 20
    5144:	9f ad       	ldd	r25, Y+63	; 0x3f
    5146:	64 97       	sbiw	r28, 0x14	; 20
    5148:	98 87       	std	Y+8, r25	; 0x08
		Copy_u64Number/=10;
    514a:	a9 84       	ldd	r10, Y+9	; 0x09
    514c:	ba 84       	ldd	r11, Y+10	; 0x0a
    514e:	cb 84       	ldd	r12, Y+11	; 0x0b
    5150:	dc 84       	ldd	r13, Y+12	; 0x0c
    5152:	ed 84       	ldd	r14, Y+13	; 0x0d
    5154:	fe 84       	ldd	r15, Y+14	; 0x0e
    5156:	0f 85       	ldd	r16, Y+15	; 0x0f
    5158:	18 89       	ldd	r17, Y+16	; 0x10
    515a:	2a 2d       	mov	r18, r10
    515c:	3b 2d       	mov	r19, r11
    515e:	4c 2d       	mov	r20, r12
    5160:	5d 2d       	mov	r21, r13
    5162:	6e 2d       	mov	r22, r14
    5164:	7f 2d       	mov	r23, r15
    5166:	80 2f       	mov	r24, r16
    5168:	91 2f       	mov	r25, r17
    516a:	0f 2e       	mov	r0, r31
    516c:	fa e0       	ldi	r31, 0x0A	; 10
    516e:	af 2e       	mov	r10, r31
    5170:	f0 2d       	mov	r31, r0
    5172:	bb 24       	eor	r11, r11
    5174:	cc 24       	eor	r12, r12
    5176:	dd 24       	eor	r13, r13
    5178:	ee 24       	eor	r14, r14
    517a:	ff 24       	eor	r15, r15
    517c:	00 e0       	ldi	r16, 0x00	; 0
    517e:	10 e0       	ldi	r17, 0x00	; 0
    5180:	0e 94 71 01 	call	0x2e2	; 0x2e2 <__udivdi3>
    5184:	a2 2e       	mov	r10, r18
    5186:	b3 2e       	mov	r11, r19
    5188:	c4 2e       	mov	r12, r20
    518a:	d5 2e       	mov	r13, r21
    518c:	e6 2e       	mov	r14, r22
    518e:	f7 2e       	mov	r15, r23
    5190:	08 2f       	mov	r16, r24
    5192:	19 2f       	mov	r17, r25
    5194:	a9 86       	std	Y+9, r10	; 0x09
    5196:	ba 86       	std	Y+10, r11	; 0x0a
    5198:	cb 86       	std	Y+11, r12	; 0x0b
    519a:	dc 86       	std	Y+12, r13	; 0x0c
    519c:	ed 86       	std	Y+13, r14	; 0x0d
    519e:	fe 86       	std	Y+14, r15	; 0x0e
    51a0:	0f 87       	std	Y+15, r16	; 0x0f
    51a2:	18 8b       	std	Y+16, r17	; 0x10

}
void CLCD_voidSendNumber(u64 Copy_u64Number)
{
	u64 LOC_u64Reversed=1;
	while (Copy_u64Number!=0)
    51a4:	89 85       	ldd	r24, Y+9	; 0x09
    51a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    51a8:	89 2b       	or	r24, r25
    51aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    51ac:	89 2b       	or	r24, r25
    51ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    51b0:	89 2b       	or	r24, r25
    51b2:	9d 85       	ldd	r25, Y+13	; 0x0d
    51b4:	89 2b       	or	r24, r25
    51b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    51b8:	89 2b       	or	r24, r25
    51ba:	9f 85       	ldd	r25, Y+15	; 0x0f
    51bc:	89 2b       	or	r24, r25
    51be:	98 89       	ldd	r25, Y+16	; 0x10
    51c0:	89 2b       	or	r24, r25
    51c2:	88 23       	and	r24, r24
    51c4:	09 f0       	breq	.+2      	; 0x51c8 <CLCD_voidSendNumber+0x72a>
    51c6:	90 cc       	rjmp	.-1760   	; 0x4ae8 <CLCD_voidSendNumber+0x4a>
    51c8:	5e c0       	rjmp	.+188    	; 0x5286 <CLCD_voidSendNumber+0x7e8>
		LOC_u64Reversed=(LOC_u64Reversed*10)+(Copy_u64Number%10);
		Copy_u64Number/=10;
	}
	while (LOC_u64Reversed!=1)
	{
		LCD_Send_Data((LOC_u64Reversed%10)+48);
    51ca:	a9 80       	ldd	r10, Y+1	; 0x01
    51cc:	ba 80       	ldd	r11, Y+2	; 0x02
    51ce:	cb 80       	ldd	r12, Y+3	; 0x03
    51d0:	dc 80       	ldd	r13, Y+4	; 0x04
    51d2:	ed 80       	ldd	r14, Y+5	; 0x05
    51d4:	fe 80       	ldd	r15, Y+6	; 0x06
    51d6:	0f 81       	ldd	r16, Y+7	; 0x07
    51d8:	18 85       	ldd	r17, Y+8	; 0x08
    51da:	2a 2d       	mov	r18, r10
    51dc:	3b 2d       	mov	r19, r11
    51de:	4c 2d       	mov	r20, r12
    51e0:	5d 2d       	mov	r21, r13
    51e2:	6e 2d       	mov	r22, r14
    51e4:	7f 2d       	mov	r23, r15
    51e6:	80 2f       	mov	r24, r16
    51e8:	91 2f       	mov	r25, r17
    51ea:	0f 2e       	mov	r0, r31
    51ec:	fa e0       	ldi	r31, 0x0A	; 10
    51ee:	af 2e       	mov	r10, r31
    51f0:	f0 2d       	mov	r31, r0
    51f2:	bb 24       	eor	r11, r11
    51f4:	cc 24       	eor	r12, r12
    51f6:	dd 24       	eor	r13, r13
    51f8:	ee 24       	eor	r14, r14
    51fa:	ff 24       	eor	r15, r15
    51fc:	00 e0       	ldi	r16, 0x00	; 0
    51fe:	10 e0       	ldi	r17, 0x00	; 0
    5200:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__umoddi3>
    5204:	a2 2e       	mov	r10, r18
    5206:	b3 2e       	mov	r11, r19
    5208:	c4 2e       	mov	r12, r20
    520a:	d5 2e       	mov	r13, r21
    520c:	e6 2e       	mov	r14, r22
    520e:	f7 2e       	mov	r15, r23
    5210:	08 2f       	mov	r16, r24
    5212:	19 2f       	mov	r17, r25
    5214:	2a 2d       	mov	r18, r10
    5216:	3b 2d       	mov	r19, r11
    5218:	4c 2d       	mov	r20, r12
    521a:	5d 2d       	mov	r21, r13
    521c:	6e 2d       	mov	r22, r14
    521e:	7f 2d       	mov	r23, r15
    5220:	80 2f       	mov	r24, r16
    5222:	91 2f       	mov	r25, r17
    5224:	82 2f       	mov	r24, r18
    5226:	80 5d       	subi	r24, 0xD0	; 208
    5228:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <LCD_Send_Data>
		LOC_u64Reversed/=10;
    522c:	a9 80       	ldd	r10, Y+1	; 0x01
    522e:	ba 80       	ldd	r11, Y+2	; 0x02
    5230:	cb 80       	ldd	r12, Y+3	; 0x03
    5232:	dc 80       	ldd	r13, Y+4	; 0x04
    5234:	ed 80       	ldd	r14, Y+5	; 0x05
    5236:	fe 80       	ldd	r15, Y+6	; 0x06
    5238:	0f 81       	ldd	r16, Y+7	; 0x07
    523a:	18 85       	ldd	r17, Y+8	; 0x08
    523c:	2a 2d       	mov	r18, r10
    523e:	3b 2d       	mov	r19, r11
    5240:	4c 2d       	mov	r20, r12
    5242:	5d 2d       	mov	r21, r13
    5244:	6e 2d       	mov	r22, r14
    5246:	7f 2d       	mov	r23, r15
    5248:	80 2f       	mov	r24, r16
    524a:	91 2f       	mov	r25, r17
    524c:	0f 2e       	mov	r0, r31
    524e:	fa e0       	ldi	r31, 0x0A	; 10
    5250:	af 2e       	mov	r10, r31
    5252:	f0 2d       	mov	r31, r0
    5254:	bb 24       	eor	r11, r11
    5256:	cc 24       	eor	r12, r12
    5258:	dd 24       	eor	r13, r13
    525a:	ee 24       	eor	r14, r14
    525c:	ff 24       	eor	r15, r15
    525e:	00 e0       	ldi	r16, 0x00	; 0
    5260:	10 e0       	ldi	r17, 0x00	; 0
    5262:	0e 94 71 01 	call	0x2e2	; 0x2e2 <__udivdi3>
    5266:	a2 2e       	mov	r10, r18
    5268:	b3 2e       	mov	r11, r19
    526a:	c4 2e       	mov	r12, r20
    526c:	d5 2e       	mov	r13, r21
    526e:	e6 2e       	mov	r14, r22
    5270:	f7 2e       	mov	r15, r23
    5272:	08 2f       	mov	r16, r24
    5274:	19 2f       	mov	r17, r25
    5276:	a9 82       	std	Y+1, r10	; 0x01
    5278:	ba 82       	std	Y+2, r11	; 0x02
    527a:	cb 82       	std	Y+3, r12	; 0x03
    527c:	dc 82       	std	Y+4, r13	; 0x04
    527e:	ed 82       	std	Y+5, r14	; 0x05
    5280:	fe 82       	std	Y+6, r15	; 0x06
    5282:	0f 83       	std	Y+7, r16	; 0x07
    5284:	18 87       	std	Y+8, r17	; 0x08
	while (Copy_u64Number!=0)
	{
		LOC_u64Reversed=(LOC_u64Reversed*10)+(Copy_u64Number%10);
		Copy_u64Number/=10;
	}
	while (LOC_u64Reversed!=1)
    5286:	89 81       	ldd	r24, Y+1	; 0x01
    5288:	81 30       	cpi	r24, 0x01	; 1
    528a:	09 f0       	breq	.+2      	; 0x528e <CLCD_voidSendNumber+0x7f0>
    528c:	9e cf       	rjmp	.-196    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    528e:	8a 81       	ldd	r24, Y+2	; 0x02
    5290:	88 23       	and	r24, r24
    5292:	09 f0       	breq	.+2      	; 0x5296 <CLCD_voidSendNumber+0x7f8>
    5294:	9a cf       	rjmp	.-204    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    5296:	8b 81       	ldd	r24, Y+3	; 0x03
    5298:	88 23       	and	r24, r24
    529a:	09 f0       	breq	.+2      	; 0x529e <CLCD_voidSendNumber+0x800>
    529c:	96 cf       	rjmp	.-212    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    529e:	8c 81       	ldd	r24, Y+4	; 0x04
    52a0:	88 23       	and	r24, r24
    52a2:	09 f0       	breq	.+2      	; 0x52a6 <CLCD_voidSendNumber+0x808>
    52a4:	92 cf       	rjmp	.-220    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    52a6:	8d 81       	ldd	r24, Y+5	; 0x05
    52a8:	88 23       	and	r24, r24
    52aa:	09 f0       	breq	.+2      	; 0x52ae <CLCD_voidSendNumber+0x810>
    52ac:	8e cf       	rjmp	.-228    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    52ae:	8e 81       	ldd	r24, Y+6	; 0x06
    52b0:	88 23       	and	r24, r24
    52b2:	09 f0       	breq	.+2      	; 0x52b6 <CLCD_voidSendNumber+0x818>
    52b4:	8a cf       	rjmp	.-236    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    52b6:	8f 81       	ldd	r24, Y+7	; 0x07
    52b8:	88 23       	and	r24, r24
    52ba:	09 f0       	breq	.+2      	; 0x52be <CLCD_voidSendNumber+0x820>
    52bc:	86 cf       	rjmp	.-244    	; 0x51ca <CLCD_voidSendNumber+0x72c>
    52be:	88 85       	ldd	r24, Y+8	; 0x08
    52c0:	88 23       	and	r24, r24
    52c2:	09 f0       	breq	.+2      	; 0x52c6 <CLCD_voidSendNumber+0x828>
    52c4:	82 cf       	rjmp	.-252    	; 0x51ca <CLCD_voidSendNumber+0x72c>
	{
		LCD_Send_Data((LOC_u64Reversed%10)+48);
		LOC_u64Reversed/=10;
	}

}
    52c6:	ca 59       	subi	r28, 0x9A	; 154
    52c8:	df 4f       	sbci	r29, 0xFF	; 255
    52ca:	0f b6       	in	r0, 0x3f	; 63
    52cc:	f8 94       	cli
    52ce:	de bf       	out	0x3e, r29	; 62
    52d0:	0f be       	out	0x3f, r0	; 63
    52d2:	cd bf       	out	0x3d, r28	; 61
    52d4:	cf 91       	pop	r28
    52d6:	df 91       	pop	r29
    52d8:	1f 91       	pop	r17
    52da:	0f 91       	pop	r16
    52dc:	ff 90       	pop	r15
    52de:	ef 90       	pop	r14
    52e0:	df 90       	pop	r13
    52e2:	cf 90       	pop	r12
    52e4:	bf 90       	pop	r11
    52e6:	af 90       	pop	r10
    52e8:	08 95       	ret

000052ea <Get_key_pad_pressed>:
u8 key_pad_arr[4][4] = { { 1, 2, 3, 'A' }, { 4, 5, 6, 'B' }, { 7, 8, 9, 'C' }, {
		'*', 0, '#', 'D' }

};

u8 Get_key_pad_pressed() {
    52ea:	df 93       	push	r29
    52ec:	cf 93       	push	r28
    52ee:	cd b7       	in	r28, 0x3d	; 61
    52f0:	de b7       	in	r29, 0x3e	; 62
    52f2:	60 97       	sbiw	r28, 0x10	; 16
    52f4:	0f b6       	in	r0, 0x3f	; 63
    52f6:	f8 94       	cli
    52f8:	de bf       	out	0x3e, r29	; 62
    52fa:	0f be       	out	0x3f, r0	; 63
    52fc:	cd bf       	out	0x3d, r28	; 61
	while (1) {
		for (u8 i = 0; i < ROW_NO; i++) {
    52fe:	18 8a       	std	Y+16, r1	; 0x10
    5300:	bc c0       	rjmp	.+376    	; 0x547a <Get_key_pad_pressed+0x190>
			DIO_SetGroupDirection(KEY_PAD_GROUP, (0b00010000) << i);
    5302:	88 89       	ldd	r24, Y+16	; 0x10
    5304:	28 2f       	mov	r18, r24
    5306:	30 e0       	ldi	r19, 0x00	; 0
    5308:	80 e1       	ldi	r24, 0x10	; 16
    530a:	90 e0       	ldi	r25, 0x00	; 0
    530c:	02 c0       	rjmp	.+4      	; 0x5312 <Get_key_pad_pressed+0x28>
    530e:	88 0f       	add	r24, r24
    5310:	99 1f       	adc	r25, r25
    5312:	2a 95       	dec	r18
    5314:	e2 f7       	brpl	.-8      	; 0x530e <Get_key_pad_pressed+0x24>
    5316:	98 2f       	mov	r25, r24
    5318:	83 e0       	ldi	r24, 0x03	; 3
    531a:	69 2f       	mov	r22, r25
    531c:	0e 94 58 17 	call	0x2eb0	; 0x2eb0 <DIO_SetGroupDirection>
			DIO_SetGroupValue(KEY_PAD_GROUP, (~((0b00010000) << i)));
    5320:	88 89       	ldd	r24, Y+16	; 0x10
    5322:	28 2f       	mov	r18, r24
    5324:	30 e0       	ldi	r19, 0x00	; 0
    5326:	80 e1       	ldi	r24, 0x10	; 16
    5328:	90 e0       	ldi	r25, 0x00	; 0
    532a:	02 c0       	rjmp	.+4      	; 0x5330 <Get_key_pad_pressed+0x46>
    532c:	88 0f       	add	r24, r24
    532e:	99 1f       	adc	r25, r25
    5330:	2a 95       	dec	r18
    5332:	e2 f7       	brpl	.-8      	; 0x532c <Get_key_pad_pressed+0x42>
    5334:	98 2f       	mov	r25, r24
    5336:	90 95       	com	r25
    5338:	83 e0       	ldi	r24, 0x03	; 3
    533a:	69 2f       	mov	r22, r25
    533c:	0e 94 99 17 	call	0x2f32	; 0x2f32 <DIO_SetGroupValue>
    5340:	80 e0       	ldi	r24, 0x00	; 0
    5342:	90 e0       	ldi	r25, 0x00	; 0
    5344:	a8 e4       	ldi	r26, 0x48	; 72
    5346:	b2 e4       	ldi	r27, 0x42	; 66
    5348:	8b 87       	std	Y+11, r24	; 0x0b
    534a:	9c 87       	std	Y+12, r25	; 0x0c
    534c:	ad 87       	std	Y+13, r26	; 0x0d
    534e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5350:	6b 85       	ldd	r22, Y+11	; 0x0b
    5352:	7c 85       	ldd	r23, Y+12	; 0x0c
    5354:	8d 85       	ldd	r24, Y+13	; 0x0d
    5356:	9e 85       	ldd	r25, Y+14	; 0x0e
    5358:	20 e0       	ldi	r18, 0x00	; 0
    535a:	30 e0       	ldi	r19, 0x00	; 0
    535c:	4a ef       	ldi	r20, 0xFA	; 250
    535e:	54 e4       	ldi	r21, 0x44	; 68
    5360:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    5364:	dc 01       	movw	r26, r24
    5366:	cb 01       	movw	r24, r22
    5368:	8f 83       	std	Y+7, r24	; 0x07
    536a:	98 87       	std	Y+8, r25	; 0x08
    536c:	a9 87       	std	Y+9, r26	; 0x09
    536e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5370:	6f 81       	ldd	r22, Y+7	; 0x07
    5372:	78 85       	ldd	r23, Y+8	; 0x08
    5374:	89 85       	ldd	r24, Y+9	; 0x09
    5376:	9a 85       	ldd	r25, Y+10	; 0x0a
    5378:	20 e0       	ldi	r18, 0x00	; 0
    537a:	30 e0       	ldi	r19, 0x00	; 0
    537c:	40 e8       	ldi	r20, 0x80	; 128
    537e:	5f e3       	ldi	r21, 0x3F	; 63
    5380:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    5384:	88 23       	and	r24, r24
    5386:	2c f4       	brge	.+10     	; 0x5392 <Get_key_pad_pressed+0xa8>
		__ticks = 1;
    5388:	81 e0       	ldi	r24, 0x01	; 1
    538a:	90 e0       	ldi	r25, 0x00	; 0
    538c:	9e 83       	std	Y+6, r25	; 0x06
    538e:	8d 83       	std	Y+5, r24	; 0x05
    5390:	3f c0       	rjmp	.+126    	; 0x5410 <Get_key_pad_pressed+0x126>
	else if (__tmp > 65535)
    5392:	6f 81       	ldd	r22, Y+7	; 0x07
    5394:	78 85       	ldd	r23, Y+8	; 0x08
    5396:	89 85       	ldd	r24, Y+9	; 0x09
    5398:	9a 85       	ldd	r25, Y+10	; 0x0a
    539a:	20 e0       	ldi	r18, 0x00	; 0
    539c:	3f ef       	ldi	r19, 0xFF	; 255
    539e:	4f e7       	ldi	r20, 0x7F	; 127
    53a0:	57 e4       	ldi	r21, 0x47	; 71
    53a2:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    53a6:	18 16       	cp	r1, r24
    53a8:	4c f5       	brge	.+82     	; 0x53fc <Get_key_pad_pressed+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53aa:	6b 85       	ldd	r22, Y+11	; 0x0b
    53ac:	7c 85       	ldd	r23, Y+12	; 0x0c
    53ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    53b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    53b2:	20 e0       	ldi	r18, 0x00	; 0
    53b4:	30 e0       	ldi	r19, 0x00	; 0
    53b6:	40 e2       	ldi	r20, 0x20	; 32
    53b8:	51 e4       	ldi	r21, 0x41	; 65
    53ba:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    53be:	dc 01       	movw	r26, r24
    53c0:	cb 01       	movw	r24, r22
    53c2:	bc 01       	movw	r22, r24
    53c4:	cd 01       	movw	r24, r26
    53c6:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    53ca:	dc 01       	movw	r26, r24
    53cc:	cb 01       	movw	r24, r22
    53ce:	9e 83       	std	Y+6, r25	; 0x06
    53d0:	8d 83       	std	Y+5, r24	; 0x05
    53d2:	0f c0       	rjmp	.+30     	; 0x53f2 <Get_key_pad_pressed+0x108>
    53d4:	88 ec       	ldi	r24, 0xC8	; 200
    53d6:	90 e0       	ldi	r25, 0x00	; 0
    53d8:	9c 83       	std	Y+4, r25	; 0x04
    53da:	8b 83       	std	Y+3, r24	; 0x03
    53dc:	8b 81       	ldd	r24, Y+3	; 0x03
    53de:	9c 81       	ldd	r25, Y+4	; 0x04
    53e0:	01 97       	sbiw	r24, 0x01	; 1
    53e2:	f1 f7       	brne	.-4      	; 0x53e0 <Get_key_pad_pressed+0xf6>
    53e4:	9c 83       	std	Y+4, r25	; 0x04
    53e6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53e8:	8d 81       	ldd	r24, Y+5	; 0x05
    53ea:	9e 81       	ldd	r25, Y+6	; 0x06
    53ec:	01 97       	sbiw	r24, 0x01	; 1
    53ee:	9e 83       	std	Y+6, r25	; 0x06
    53f0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53f2:	8d 81       	ldd	r24, Y+5	; 0x05
    53f4:	9e 81       	ldd	r25, Y+6	; 0x06
    53f6:	00 97       	sbiw	r24, 0x00	; 0
    53f8:	69 f7       	brne	.-38     	; 0x53d4 <Get_key_pad_pressed+0xea>
    53fa:	14 c0       	rjmp	.+40     	; 0x5424 <Get_key_pad_pressed+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53fc:	6f 81       	ldd	r22, Y+7	; 0x07
    53fe:	78 85       	ldd	r23, Y+8	; 0x08
    5400:	89 85       	ldd	r24, Y+9	; 0x09
    5402:	9a 85       	ldd	r25, Y+10	; 0x0a
    5404:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    5408:	dc 01       	movw	r26, r24
    540a:	cb 01       	movw	r24, r22
    540c:	9e 83       	std	Y+6, r25	; 0x06
    540e:	8d 83       	std	Y+5, r24	; 0x05
    5410:	8d 81       	ldd	r24, Y+5	; 0x05
    5412:	9e 81       	ldd	r25, Y+6	; 0x06
    5414:	9a 83       	std	Y+2, r25	; 0x02
    5416:	89 83       	std	Y+1, r24	; 0x01
    5418:	89 81       	ldd	r24, Y+1	; 0x01
    541a:	9a 81       	ldd	r25, Y+2	; 0x02
    541c:	01 97       	sbiw	r24, 0x01	; 1
    541e:	f1 f7       	brne	.-4      	; 0x541c <Get_key_pad_pressed+0x132>
    5420:	9a 83       	std	Y+2, r25	; 0x02
    5422:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(50);

			for (u8 y = 0; y < COL_NO; y++) {
    5424:	1f 86       	std	Y+15, r1	; 0x0f
    5426:	23 c0       	rjmp	.+70     	; 0x546e <Get_key_pad_pressed+0x184>
				if (DIO_GetPinValue(KEY_PAD_GROUP, y) == 0)
    5428:	83 e0       	ldi	r24, 0x03	; 3
    542a:	6f 85       	ldd	r22, Y+15	; 0x0f
    542c:	0e 94 dd 16 	call	0x2dba	; 0x2dba <DIO_GetPinValue>
    5430:	88 23       	and	r24, r24
    5432:	d1 f4       	brne	.+52     	; 0x5468 <Get_key_pad_pressed+0x17e>
					return key_pad_arr[i][y];
    5434:	88 89       	ldd	r24, Y+16	; 0x10
    5436:	48 2f       	mov	r20, r24
    5438:	50 e0       	ldi	r21, 0x00	; 0
    543a:	8f 85       	ldd	r24, Y+15	; 0x0f
    543c:	28 2f       	mov	r18, r24
    543e:	30 e0       	ldi	r19, 0x00	; 0
    5440:	ca 01       	movw	r24, r20
    5442:	88 0f       	add	r24, r24
    5444:	99 1f       	adc	r25, r25
    5446:	88 0f       	add	r24, r24
    5448:	99 1f       	adc	r25, r25
    544a:	82 0f       	add	r24, r18
    544c:	93 1f       	adc	r25, r19
    544e:	fc 01       	movw	r30, r24
    5450:	e3 59       	subi	r30, 0x93	; 147
    5452:	fe 4f       	sbci	r31, 0xFE	; 254
    5454:	80 81       	ld	r24, Z

		}

	}

}
    5456:	60 96       	adiw	r28, 0x10	; 16
    5458:	0f b6       	in	r0, 0x3f	; 63
    545a:	f8 94       	cli
    545c:	de bf       	out	0x3e, r29	; 62
    545e:	0f be       	out	0x3f, r0	; 63
    5460:	cd bf       	out	0x3d, r28	; 61
    5462:	cf 91       	pop	r28
    5464:	df 91       	pop	r29
    5466:	08 95       	ret
		for (u8 i = 0; i < ROW_NO; i++) {
			DIO_SetGroupDirection(KEY_PAD_GROUP, (0b00010000) << i);
			DIO_SetGroupValue(KEY_PAD_GROUP, (~((0b00010000) << i)));
			_delay_ms(50);

			for (u8 y = 0; y < COL_NO; y++) {
    5468:	8f 85       	ldd	r24, Y+15	; 0x0f
    546a:	8f 5f       	subi	r24, 0xFF	; 255
    546c:	8f 87       	std	Y+15, r24	; 0x0f
    546e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5470:	84 30       	cpi	r24, 0x04	; 4
    5472:	d0 f2       	brcs	.-76     	; 0x5428 <Get_key_pad_pressed+0x13e>

};

u8 Get_key_pad_pressed() {
	while (1) {
		for (u8 i = 0; i < ROW_NO; i++) {
    5474:	88 89       	ldd	r24, Y+16	; 0x10
    5476:	8f 5f       	subi	r24, 0xFF	; 255
    5478:	88 8b       	std	Y+16, r24	; 0x10
    547a:	88 89       	ldd	r24, Y+16	; 0x10
    547c:	84 30       	cpi	r24, 0x04	; 4
    547e:	08 f4       	brcc	.+2      	; 0x5482 <Get_key_pad_pressed+0x198>
    5480:	40 cf       	rjmp	.-384    	; 0x5302 <Get_key_pad_pressed+0x18>
    5482:	3d cf       	rjmp	.-390    	; 0x52fe <Get_key_pad_pressed+0x14>

00005484 <ADC_voidInt>:
#include "uitils/std_types.h"
#include "uitils/BIT_MATH.h"
#include "ADC_Private.h"

void ADC_voidInt(void)
{
    5484:	df 93       	push	r29
    5486:	cf 93       	push	r28
    5488:	cd b7       	in	r28, 0x3d	; 61
    548a:	de b7       	in	r29, 0x3e	; 62
	/*AVCC(b2ne hwsl 5v mn 2l controler 3la 2nhom 2l clock)"Vref=5"*/
		SET_BIT(ADMUX_REG,6);
    548c:	a7 e2       	ldi	r26, 0x27	; 39
    548e:	b0 e0       	ldi	r27, 0x00	; 0
    5490:	e7 e2       	ldi	r30, 0x27	; 39
    5492:	f0 e0       	ldi	r31, 0x00	; 0
    5494:	80 81       	ld	r24, Z
    5496:	80 64       	ori	r24, 0x40	; 64
    5498:	8c 93       	st	X, r24
		CLR_BIT(ADMUX_REG,7);//"e3ny hwsl trf mn 2l potion bl gnd w 2l tany bl vcc"
    549a:	a7 e2       	ldi	r26, 0x27	; 39
    549c:	b0 e0       	ldi	r27, 0x00	; 0
    549e:	e7 e2       	ldi	r30, 0x27	; 39
    54a0:	f0 e0       	ldi	r31, 0x00	; 0
    54a2:	80 81       	ld	r24, Z
    54a4:	8f 77       	andi	r24, 0x7F	; 127
    54a6:	8c 93       	st	X, r24
		/*RIGHT ADJUST (34an acuuracy high 2omal 2l left bfked feh b3d 2l reads */
		CLR_BIT(ADMUX_REG,5);
    54a8:	a7 e2       	ldi	r26, 0x27	; 39
    54aa:	b0 e0       	ldi	r27, 0x00	; 0
    54ac:	e7 e2       	ldi	r30, 0x27	; 39
    54ae:	f0 e0       	ldi	r31, 0x00	; 0
    54b0:	80 81       	ld	r24, Z
    54b2:	8f 7d       	andi	r24, 0xDF	; 223
    54b4:	8c 93       	st	X, r24
	    /*single ended(b2ne b4t8l 3la channel w7da bs) on ADC0*/
		CLR_BIT(ADMUX_REG,0);
    54b6:	a7 e2       	ldi	r26, 0x27	; 39
    54b8:	b0 e0       	ldi	r27, 0x00	; 0
    54ba:	e7 e2       	ldi	r30, 0x27	; 39
    54bc:	f0 e0       	ldi	r31, 0x00	; 0
    54be:	80 81       	ld	r24, Z
    54c0:	8e 7f       	andi	r24, 0xFE	; 254
    54c2:	8c 93       	st	X, r24
		CLR_BIT(ADMUX_REG,1);
    54c4:	a7 e2       	ldi	r26, 0x27	; 39
    54c6:	b0 e0       	ldi	r27, 0x00	; 0
    54c8:	e7 e2       	ldi	r30, 0x27	; 39
    54ca:	f0 e0       	ldi	r31, 0x00	; 0
    54cc:	80 81       	ld	r24, Z
    54ce:	8d 7f       	andi	r24, 0xFD	; 253
    54d0:	8c 93       	st	X, r24
		CLR_BIT(ADMUX_REG,2);
    54d2:	a7 e2       	ldi	r26, 0x27	; 39
    54d4:	b0 e0       	ldi	r27, 0x00	; 0
    54d6:	e7 e2       	ldi	r30, 0x27	; 39
    54d8:	f0 e0       	ldi	r31, 0x00	; 0
    54da:	80 81       	ld	r24, Z
    54dc:	8b 7f       	andi	r24, 0xFB	; 251
    54de:	8c 93       	st	X, r24
		CLR_BIT(ADMUX_REG,3);
    54e0:	a7 e2       	ldi	r26, 0x27	; 39
    54e2:	b0 e0       	ldi	r27, 0x00	; 0
    54e4:	e7 e2       	ldi	r30, 0x27	; 39
    54e6:	f0 e0       	ldi	r31, 0x00	; 0
    54e8:	80 81       	ld	r24, Z
    54ea:	87 7f       	andi	r24, 0xF7	; 247
    54ec:	8c 93       	st	X, r24
		CLR_BIT(ADMUX_REG,4);
    54ee:	a7 e2       	ldi	r26, 0x27	; 39
    54f0:	b0 e0       	ldi	r27, 0x00	; 0
    54f2:	e7 e2       	ldi	r30, 0x27	; 39
    54f4:	f0 e0       	ldi	r31, 0x00	; 0
    54f6:	80 81       	ld	r24, Z
    54f8:	8f 7e       	andi	r24, 0xEF	; 239
    54fa:	8c 93       	st	X, r24
		/////

		/*2na h4t8l polying (e3ny disable pie e3ny 2na m4 48ala interupt l2 dah 2na 2wl lma ht3ely 2raya h7wlha 3latol) */

		/*enable ADC (e3ny hst5dmha ll adc m4 DIOpin 3deh)*/
		SET_BIT(ADCSRA_REG,7);
    54fc:	a6 e2       	ldi	r26, 0x26	; 38
    54fe:	b0 e0       	ldi	r27, 0x00	; 0
    5500:	e6 e2       	ldi	r30, 0x26	; 38
    5502:	f0 e0       	ldi	r31, 0x00	; 0
    5504:	80 81       	ld	r24, Z
    5506:	80 68       	ori	r24, 0x80	; 128
    5508:	8c 93       	st	X, r24
	    /*single conversion*/
		SET_BIT(ADCSRA_REG,6);//start conversion (e3ny b3d kl read lazem 23mlha set)
    550a:	a6 e2       	ldi	r26, 0x26	; 38
    550c:	b0 e0       	ldi	r27, 0x00	; 0
    550e:	e6 e2       	ldi	r30, 0x26	; 38
    5510:	f0 e0       	ldi	r31, 0x00	; 0
    5512:	80 81       	ld	r24, Z
    5514:	80 64       	ori	r24, 0x40	; 64
    5516:	8c 93       	st	X, r24
	    /*deh set lw 2na 48ala free runing mode*/
		CLR_BIT(ADCSRA_REG,5);
    5518:	a6 e2       	ldi	r26, 0x26	; 38
    551a:	b0 e0       	ldi	r27, 0x00	; 0
    551c:	e6 e2       	ldi	r30, 0x26	; 38
    551e:	f0 e0       	ldi	r31, 0x00	; 0
    5520:	80 81       	ld	r24, Z
    5522:	8f 7d       	andi	r24, 0xDF	; 223
    5524:	8c 93       	st	X, r24
		/*clear ADC flag*/
		SET_BIT(ADCSRA_REG,4);
    5526:	a6 e2       	ldi	r26, 0x26	; 38
    5528:	b0 e0       	ldi	r27, 0x00	; 0
    552a:	e6 e2       	ldi	r30, 0x26	; 38
    552c:	f0 e0       	ldi	r31, 0x00	; 0
    552e:	80 81       	ld	r24, Z
    5530:	80 61       	ori	r24, 0x10	; 16
    5532:	8c 93       	st	X, r24
		/*enable pie bit 3 (m4 h3mlha set 34an 2na 48ala polying*/

		/*ADC PRE(largest pre 34an 3eza 22l freq)fh5leh /128*/
		SET_BIT(ADCSRA_REG,0);
    5534:	a6 e2       	ldi	r26, 0x26	; 38
    5536:	b0 e0       	ldi	r27, 0x00	; 0
    5538:	e6 e2       	ldi	r30, 0x26	; 38
    553a:	f0 e0       	ldi	r31, 0x00	; 0
    553c:	80 81       	ld	r24, Z
    553e:	81 60       	ori	r24, 0x01	; 1
    5540:	8c 93       	st	X, r24
		SET_BIT(ADCSRA_REG,1);
    5542:	a6 e2       	ldi	r26, 0x26	; 38
    5544:	b0 e0       	ldi	r27, 0x00	; 0
    5546:	e6 e2       	ldi	r30, 0x26	; 38
    5548:	f0 e0       	ldi	r31, 0x00	; 0
    554a:	80 81       	ld	r24, Z
    554c:	82 60       	ori	r24, 0x02	; 2
    554e:	8c 93       	st	X, r24
		SET_BIT(ADCSRA_REG,2);
    5550:	a6 e2       	ldi	r26, 0x26	; 38
    5552:	b0 e0       	ldi	r27, 0x00	; 0
    5554:	e6 e2       	ldi	r30, 0x26	; 38
    5556:	f0 e0       	ldi	r31, 0x00	; 0
    5558:	80 81       	ld	r24, Z
    555a:	84 60       	ori	r24, 0x04	; 4
    555c:	8c 93       	st	X, r24

}
    555e:	cf 91       	pop	r28
    5560:	df 91       	pop	r29
    5562:	08 95       	ret

00005564 <DIO_voidSetPortDirection>:
 * note 27na bn4t8l 3la pull up switch b2ny b5le 2l DDR_reg->input(=0) && PORT_reg==1
 */
void DIO_voidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)//2na m7taga 2grf 2na 48ala 3la 2nhy port mn 2l 4 & 2l pin bt3ty act as input wla output
// fk2n 2dtlo(0(porta,255)2w(1(portb,128(1000 0000)m3naha 2n pin7 output w 2l ba2y input)
//dah fe 7alet 2ny 48ala 3la port kamel
{
    5564:	df 93       	push	r29
    5566:	cf 93       	push	r28
    5568:	00 d0       	rcall	.+0      	; 0x556a <DIO_voidSetPortDirection+0x6>
    556a:	00 d0       	rcall	.+0      	; 0x556c <DIO_voidSetPortDirection+0x8>
    556c:	cd b7       	in	r28, 0x3d	; 61
    556e:	de b7       	in	r29, 0x3e	; 62
    5570:	89 83       	std	Y+1, r24	; 0x01
    5572:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    5574:	89 81       	ldd	r24, Y+1	; 0x01
    5576:	28 2f       	mov	r18, r24
    5578:	30 e0       	ldi	r19, 0x00	; 0
    557a:	3c 83       	std	Y+4, r19	; 0x04
    557c:	2b 83       	std	Y+3, r18	; 0x03
    557e:	8b 81       	ldd	r24, Y+3	; 0x03
    5580:	9c 81       	ldd	r25, Y+4	; 0x04
    5582:	81 30       	cpi	r24, 0x01	; 1
    5584:	91 05       	cpc	r25, r1
    5586:	d1 f0       	breq	.+52     	; 0x55bc <DIO_voidSetPortDirection+0x58>
    5588:	2b 81       	ldd	r18, Y+3	; 0x03
    558a:	3c 81       	ldd	r19, Y+4	; 0x04
    558c:	22 30       	cpi	r18, 0x02	; 2
    558e:	31 05       	cpc	r19, r1
    5590:	2c f4       	brge	.+10     	; 0x559c <DIO_voidSetPortDirection+0x38>
    5592:	8b 81       	ldd	r24, Y+3	; 0x03
    5594:	9c 81       	ldd	r25, Y+4	; 0x04
    5596:	00 97       	sbiw	r24, 0x00	; 0
    5598:	61 f0       	breq	.+24     	; 0x55b2 <DIO_voidSetPortDirection+0x4e>
    559a:	1e c0       	rjmp	.+60     	; 0x55d8 <DIO_voidSetPortDirection+0x74>
    559c:	2b 81       	ldd	r18, Y+3	; 0x03
    559e:	3c 81       	ldd	r19, Y+4	; 0x04
    55a0:	22 30       	cpi	r18, 0x02	; 2
    55a2:	31 05       	cpc	r19, r1
    55a4:	81 f0       	breq	.+32     	; 0x55c6 <DIO_voidSetPortDirection+0x62>
    55a6:	8b 81       	ldd	r24, Y+3	; 0x03
    55a8:	9c 81       	ldd	r25, Y+4	; 0x04
    55aa:	83 30       	cpi	r24, 0x03	; 3
    55ac:	91 05       	cpc	r25, r1
    55ae:	81 f0       	breq	.+32     	; 0x55d0 <DIO_voidSetPortDirection+0x6c>
    55b0:	13 c0       	rjmp	.+38     	; 0x55d8 <DIO_voidSetPortDirection+0x74>
	{
	case DIO_PORTA:DIO_DDRA_REG=Copy_u8Direction;break;
    55b2:	ea e3       	ldi	r30, 0x3A	; 58
    55b4:	f0 e0       	ldi	r31, 0x00	; 0
    55b6:	8a 81       	ldd	r24, Y+2	; 0x02
    55b8:	80 83       	st	Z, r24
    55ba:	0e c0       	rjmp	.+28     	; 0x55d8 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTB:DIO_DDRB_REG=Copy_u8Direction;break;
    55bc:	e7 e3       	ldi	r30, 0x37	; 55
    55be:	f0 e0       	ldi	r31, 0x00	; 0
    55c0:	8a 81       	ldd	r24, Y+2	; 0x02
    55c2:	80 83       	st	Z, r24
    55c4:	09 c0       	rjmp	.+18     	; 0x55d8 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTC:DIO_DDRC_REG=Copy_u8Direction;break;
    55c6:	e4 e3       	ldi	r30, 0x34	; 52
    55c8:	f0 e0       	ldi	r31, 0x00	; 0
    55ca:	8a 81       	ldd	r24, Y+2	; 0x02
    55cc:	80 83       	st	Z, r24
    55ce:	04 c0       	rjmp	.+8      	; 0x55d8 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTD:DIO_DDRD_REG=Copy_u8Direction;break;
    55d0:	e1 e3       	ldi	r30, 0x31	; 49
    55d2:	f0 e0       	ldi	r31, 0x00	; 0
    55d4:	8a 81       	ldd	r24, Y+2	; 0x02
    55d6:	80 83       	st	Z, r24
	default:break;
	}

}
    55d8:	0f 90       	pop	r0
    55da:	0f 90       	pop	r0
    55dc:	0f 90       	pop	r0
    55de:	0f 90       	pop	r0
    55e0:	cf 91       	pop	r28
    55e2:	df 91       	pop	r29
    55e4:	08 95       	ret

000055e6 <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)//value 2l hea high wla low 2l lmba ht2ed wla l2
{
    55e6:	df 93       	push	r29
    55e8:	cf 93       	push	r28
    55ea:	00 d0       	rcall	.+0      	; 0x55ec <DIO_voidSetPortValue+0x6>
    55ec:	00 d0       	rcall	.+0      	; 0x55ee <DIO_voidSetPortValue+0x8>
    55ee:	cd b7       	in	r28, 0x3d	; 61
    55f0:	de b7       	in	r29, 0x3e	; 62
    55f2:	89 83       	std	Y+1, r24	; 0x01
    55f4:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    55f6:	89 81       	ldd	r24, Y+1	; 0x01
    55f8:	28 2f       	mov	r18, r24
    55fa:	30 e0       	ldi	r19, 0x00	; 0
    55fc:	3c 83       	std	Y+4, r19	; 0x04
    55fe:	2b 83       	std	Y+3, r18	; 0x03
    5600:	8b 81       	ldd	r24, Y+3	; 0x03
    5602:	9c 81       	ldd	r25, Y+4	; 0x04
    5604:	81 30       	cpi	r24, 0x01	; 1
    5606:	91 05       	cpc	r25, r1
    5608:	d1 f0       	breq	.+52     	; 0x563e <DIO_voidSetPortValue+0x58>
    560a:	2b 81       	ldd	r18, Y+3	; 0x03
    560c:	3c 81       	ldd	r19, Y+4	; 0x04
    560e:	22 30       	cpi	r18, 0x02	; 2
    5610:	31 05       	cpc	r19, r1
    5612:	2c f4       	brge	.+10     	; 0x561e <DIO_voidSetPortValue+0x38>
    5614:	8b 81       	ldd	r24, Y+3	; 0x03
    5616:	9c 81       	ldd	r25, Y+4	; 0x04
    5618:	00 97       	sbiw	r24, 0x00	; 0
    561a:	61 f0       	breq	.+24     	; 0x5634 <DIO_voidSetPortValue+0x4e>
    561c:	1e c0       	rjmp	.+60     	; 0x565a <DIO_voidSetPortValue+0x74>
    561e:	2b 81       	ldd	r18, Y+3	; 0x03
    5620:	3c 81       	ldd	r19, Y+4	; 0x04
    5622:	22 30       	cpi	r18, 0x02	; 2
    5624:	31 05       	cpc	r19, r1
    5626:	81 f0       	breq	.+32     	; 0x5648 <DIO_voidSetPortValue+0x62>
    5628:	8b 81       	ldd	r24, Y+3	; 0x03
    562a:	9c 81       	ldd	r25, Y+4	; 0x04
    562c:	83 30       	cpi	r24, 0x03	; 3
    562e:	91 05       	cpc	r25, r1
    5630:	81 f0       	breq	.+32     	; 0x5652 <DIO_voidSetPortValue+0x6c>
    5632:	13 c0       	rjmp	.+38     	; 0x565a <DIO_voidSetPortValue+0x74>
	{
    case DIO_PORTA:DIO_PORTA_REG=Copy_u8Value;break;
    5634:	eb e3       	ldi	r30, 0x3B	; 59
    5636:	f0 e0       	ldi	r31, 0x00	; 0
    5638:	8a 81       	ldd	r24, Y+2	; 0x02
    563a:	80 83       	st	Z, r24
    563c:	0e c0       	rjmp	.+28     	; 0x565a <DIO_voidSetPortValue+0x74>
	case DIO_PORTB:DIO_PORTB_REG=Copy_u8Value;break;
    563e:	e8 e3       	ldi	r30, 0x38	; 56
    5640:	f0 e0       	ldi	r31, 0x00	; 0
    5642:	8a 81       	ldd	r24, Y+2	; 0x02
    5644:	80 83       	st	Z, r24
    5646:	09 c0       	rjmp	.+18     	; 0x565a <DIO_voidSetPortValue+0x74>
	case DIO_PORTC:DIO_PORTC_REG=Copy_u8Value;break;
    5648:	e5 e3       	ldi	r30, 0x35	; 53
    564a:	f0 e0       	ldi	r31, 0x00	; 0
    564c:	8a 81       	ldd	r24, Y+2	; 0x02
    564e:	80 83       	st	Z, r24
    5650:	04 c0       	rjmp	.+8      	; 0x565a <DIO_voidSetPortValue+0x74>
	case DIO_PORTD:DIO_PORTD_REG=Copy_u8Value;break;
    5652:	e2 e3       	ldi	r30, 0x32	; 50
    5654:	f0 e0       	ldi	r31, 0x00	; 0
    5656:	8a 81       	ldd	r24, Y+2	; 0x02
    5658:	80 83       	st	Z, r24
	default:break;
	}

}
    565a:	0f 90       	pop	r0
    565c:	0f 90       	pop	r0
    565e:	0f 90       	pop	r0
    5660:	0f 90       	pop	r0
    5662:	cf 91       	pop	r28
    5664:	df 91       	pop	r29
    5666:	08 95       	ret

00005668 <DIO_voidSetPinDirection>:
void DIO_voidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)//(porta,8,output)
{
    5668:	df 93       	push	r29
    566a:	cf 93       	push	r28
    566c:	cd b7       	in	r28, 0x3d	; 61
    566e:	de b7       	in	r29, 0x3e	; 62
    5670:	27 97       	sbiw	r28, 0x07	; 7
    5672:	0f b6       	in	r0, 0x3f	; 63
    5674:	f8 94       	cli
    5676:	de bf       	out	0x3e, r29	; 62
    5678:	0f be       	out	0x3f, r0	; 63
    567a:	cd bf       	out	0x3d, r28	; 61
    567c:	89 83       	std	Y+1, r24	; 0x01
    567e:	6a 83       	std	Y+2, r22	; 0x02
    5680:	4b 83       	std	Y+3, r20	; 0x03
  if(Copy_u8Direction==DIO_OUTPUT)
    5682:	8b 81       	ldd	r24, Y+3	; 0x03
    5684:	81 30       	cpi	r24, 0x01	; 1
    5686:	09 f0       	breq	.+2      	; 0x568a <DIO_voidSetPinDirection+0x22>
    5688:	6f c0       	rjmp	.+222    	; 0x5768 <DIO_voidSetPinDirection+0x100>
  {
	  switch(Copy_u8Port)
    568a:	89 81       	ldd	r24, Y+1	; 0x01
    568c:	28 2f       	mov	r18, r24
    568e:	30 e0       	ldi	r19, 0x00	; 0
    5690:	3f 83       	std	Y+7, r19	; 0x07
    5692:	2e 83       	std	Y+6, r18	; 0x06
    5694:	8e 81       	ldd	r24, Y+6	; 0x06
    5696:	9f 81       	ldd	r25, Y+7	; 0x07
    5698:	81 30       	cpi	r24, 0x01	; 1
    569a:	91 05       	cpc	r25, r1
    569c:	49 f1       	breq	.+82     	; 0x56f0 <DIO_voidSetPinDirection+0x88>
    569e:	2e 81       	ldd	r18, Y+6	; 0x06
    56a0:	3f 81       	ldd	r19, Y+7	; 0x07
    56a2:	22 30       	cpi	r18, 0x02	; 2
    56a4:	31 05       	cpc	r19, r1
    56a6:	2c f4       	brge	.+10     	; 0x56b2 <DIO_voidSetPinDirection+0x4a>
    56a8:	8e 81       	ldd	r24, Y+6	; 0x06
    56aa:	9f 81       	ldd	r25, Y+7	; 0x07
    56ac:	00 97       	sbiw	r24, 0x00	; 0
    56ae:	61 f0       	breq	.+24     	; 0x56c8 <DIO_voidSetPinDirection+0x60>
    56b0:	d2 c0       	rjmp	.+420    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
    56b2:	2e 81       	ldd	r18, Y+6	; 0x06
    56b4:	3f 81       	ldd	r19, Y+7	; 0x07
    56b6:	22 30       	cpi	r18, 0x02	; 2
    56b8:	31 05       	cpc	r19, r1
    56ba:	71 f1       	breq	.+92     	; 0x5718 <DIO_voidSetPinDirection+0xb0>
    56bc:	8e 81       	ldd	r24, Y+6	; 0x06
    56be:	9f 81       	ldd	r25, Y+7	; 0x07
    56c0:	83 30       	cpi	r24, 0x03	; 3
    56c2:	91 05       	cpc	r25, r1
    56c4:	e9 f1       	breq	.+122    	; 0x5740 <DIO_voidSetPinDirection+0xd8>
    56c6:	c7 c0       	rjmp	.+398    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	  {
    case DIO_PORTA:SET_BIT(DIO_DDRA_REG,Copy_u8Pin);break;
    56c8:	aa e3       	ldi	r26, 0x3A	; 58
    56ca:	b0 e0       	ldi	r27, 0x00	; 0
    56cc:	ea e3       	ldi	r30, 0x3A	; 58
    56ce:	f0 e0       	ldi	r31, 0x00	; 0
    56d0:	80 81       	ld	r24, Z
    56d2:	48 2f       	mov	r20, r24
    56d4:	8a 81       	ldd	r24, Y+2	; 0x02
    56d6:	28 2f       	mov	r18, r24
    56d8:	30 e0       	ldi	r19, 0x00	; 0
    56da:	81 e0       	ldi	r24, 0x01	; 1
    56dc:	90 e0       	ldi	r25, 0x00	; 0
    56de:	02 2e       	mov	r0, r18
    56e0:	02 c0       	rjmp	.+4      	; 0x56e6 <DIO_voidSetPinDirection+0x7e>
    56e2:	88 0f       	add	r24, r24
    56e4:	99 1f       	adc	r25, r25
    56e6:	0a 94       	dec	r0
    56e8:	e2 f7       	brpl	.-8      	; 0x56e2 <DIO_voidSetPinDirection+0x7a>
    56ea:	84 2b       	or	r24, r20
    56ec:	8c 93       	st	X, r24
    56ee:	b3 c0       	rjmp	.+358    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTB:SET_BIT(DIO_DDRB_REG,Copy_u8Pin);break;
    56f0:	a7 e3       	ldi	r26, 0x37	; 55
    56f2:	b0 e0       	ldi	r27, 0x00	; 0
    56f4:	e7 e3       	ldi	r30, 0x37	; 55
    56f6:	f0 e0       	ldi	r31, 0x00	; 0
    56f8:	80 81       	ld	r24, Z
    56fa:	48 2f       	mov	r20, r24
    56fc:	8a 81       	ldd	r24, Y+2	; 0x02
    56fe:	28 2f       	mov	r18, r24
    5700:	30 e0       	ldi	r19, 0x00	; 0
    5702:	81 e0       	ldi	r24, 0x01	; 1
    5704:	90 e0       	ldi	r25, 0x00	; 0
    5706:	02 2e       	mov	r0, r18
    5708:	02 c0       	rjmp	.+4      	; 0x570e <DIO_voidSetPinDirection+0xa6>
    570a:	88 0f       	add	r24, r24
    570c:	99 1f       	adc	r25, r25
    570e:	0a 94       	dec	r0
    5710:	e2 f7       	brpl	.-8      	; 0x570a <DIO_voidSetPinDirection+0xa2>
    5712:	84 2b       	or	r24, r20
    5714:	8c 93       	st	X, r24
    5716:	9f c0       	rjmp	.+318    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTC:SET_BIT(DIO_DDRC_REG,Copy_u8Pin);break;
    5718:	a4 e3       	ldi	r26, 0x34	; 52
    571a:	b0 e0       	ldi	r27, 0x00	; 0
    571c:	e4 e3       	ldi	r30, 0x34	; 52
    571e:	f0 e0       	ldi	r31, 0x00	; 0
    5720:	80 81       	ld	r24, Z
    5722:	48 2f       	mov	r20, r24
    5724:	8a 81       	ldd	r24, Y+2	; 0x02
    5726:	28 2f       	mov	r18, r24
    5728:	30 e0       	ldi	r19, 0x00	; 0
    572a:	81 e0       	ldi	r24, 0x01	; 1
    572c:	90 e0       	ldi	r25, 0x00	; 0
    572e:	02 2e       	mov	r0, r18
    5730:	02 c0       	rjmp	.+4      	; 0x5736 <DIO_voidSetPinDirection+0xce>
    5732:	88 0f       	add	r24, r24
    5734:	99 1f       	adc	r25, r25
    5736:	0a 94       	dec	r0
    5738:	e2 f7       	brpl	.-8      	; 0x5732 <DIO_voidSetPinDirection+0xca>
    573a:	84 2b       	or	r24, r20
    573c:	8c 93       	st	X, r24
    573e:	8b c0       	rjmp	.+278    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTD:SET_BIT(DIO_DDRD_REG,Copy_u8Pin);break;
    5740:	a1 e3       	ldi	r26, 0x31	; 49
    5742:	b0 e0       	ldi	r27, 0x00	; 0
    5744:	e1 e3       	ldi	r30, 0x31	; 49
    5746:	f0 e0       	ldi	r31, 0x00	; 0
    5748:	80 81       	ld	r24, Z
    574a:	48 2f       	mov	r20, r24
    574c:	8a 81       	ldd	r24, Y+2	; 0x02
    574e:	28 2f       	mov	r18, r24
    5750:	30 e0       	ldi	r19, 0x00	; 0
    5752:	81 e0       	ldi	r24, 0x01	; 1
    5754:	90 e0       	ldi	r25, 0x00	; 0
    5756:	02 2e       	mov	r0, r18
    5758:	02 c0       	rjmp	.+4      	; 0x575e <DIO_voidSetPinDirection+0xf6>
    575a:	88 0f       	add	r24, r24
    575c:	99 1f       	adc	r25, r25
    575e:	0a 94       	dec	r0
    5760:	e2 f7       	brpl	.-8      	; 0x575a <DIO_voidSetPinDirection+0xf2>
    5762:	84 2b       	or	r24, r20
    5764:	8c 93       	st	X, r24
    5766:	77 c0       	rjmp	.+238    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	default:break;
	  }
  }
  else if(Copy_u8Direction==DIO_INPUT)
    5768:	8b 81       	ldd	r24, Y+3	; 0x03
    576a:	88 23       	and	r24, r24
    576c:	09 f0       	breq	.+2      	; 0x5770 <DIO_voidSetPinDirection+0x108>
    576e:	73 c0       	rjmp	.+230    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
  {
	 switch(Copy_u8Port)
    5770:	89 81       	ldd	r24, Y+1	; 0x01
    5772:	28 2f       	mov	r18, r24
    5774:	30 e0       	ldi	r19, 0x00	; 0
    5776:	3d 83       	std	Y+5, r19	; 0x05
    5778:	2c 83       	std	Y+4, r18	; 0x04
    577a:	8c 81       	ldd	r24, Y+4	; 0x04
    577c:	9d 81       	ldd	r25, Y+5	; 0x05
    577e:	81 30       	cpi	r24, 0x01	; 1
    5780:	91 05       	cpc	r25, r1
    5782:	59 f1       	breq	.+86     	; 0x57da <DIO_voidSetPinDirection+0x172>
    5784:	2c 81       	ldd	r18, Y+4	; 0x04
    5786:	3d 81       	ldd	r19, Y+5	; 0x05
    5788:	22 30       	cpi	r18, 0x02	; 2
    578a:	31 05       	cpc	r19, r1
    578c:	2c f4       	brge	.+10     	; 0x5798 <DIO_voidSetPinDirection+0x130>
    578e:	8c 81       	ldd	r24, Y+4	; 0x04
    5790:	9d 81       	ldd	r25, Y+5	; 0x05
    5792:	00 97       	sbiw	r24, 0x00	; 0
    5794:	69 f0       	breq	.+26     	; 0x57b0 <DIO_voidSetPinDirection+0x148>
    5796:	5f c0       	rjmp	.+190    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
    5798:	2c 81       	ldd	r18, Y+4	; 0x04
    579a:	3d 81       	ldd	r19, Y+5	; 0x05
    579c:	22 30       	cpi	r18, 0x02	; 2
    579e:	31 05       	cpc	r19, r1
    57a0:	89 f1       	breq	.+98     	; 0x5804 <DIO_voidSetPinDirection+0x19c>
    57a2:	8c 81       	ldd	r24, Y+4	; 0x04
    57a4:	9d 81       	ldd	r25, Y+5	; 0x05
    57a6:	83 30       	cpi	r24, 0x03	; 3
    57a8:	91 05       	cpc	r25, r1
    57aa:	09 f4       	brne	.+2      	; 0x57ae <DIO_voidSetPinDirection+0x146>
    57ac:	40 c0       	rjmp	.+128    	; 0x582e <DIO_voidSetPinDirection+0x1c6>
    57ae:	53 c0       	rjmp	.+166    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	 {
    case DIO_PORTA:CLR_BIT(DIO_DDRA_REG,Copy_u8Pin);break;
    57b0:	aa e3       	ldi	r26, 0x3A	; 58
    57b2:	b0 e0       	ldi	r27, 0x00	; 0
    57b4:	ea e3       	ldi	r30, 0x3A	; 58
    57b6:	f0 e0       	ldi	r31, 0x00	; 0
    57b8:	80 81       	ld	r24, Z
    57ba:	48 2f       	mov	r20, r24
    57bc:	8a 81       	ldd	r24, Y+2	; 0x02
    57be:	28 2f       	mov	r18, r24
    57c0:	30 e0       	ldi	r19, 0x00	; 0
    57c2:	81 e0       	ldi	r24, 0x01	; 1
    57c4:	90 e0       	ldi	r25, 0x00	; 0
    57c6:	02 2e       	mov	r0, r18
    57c8:	02 c0       	rjmp	.+4      	; 0x57ce <DIO_voidSetPinDirection+0x166>
    57ca:	88 0f       	add	r24, r24
    57cc:	99 1f       	adc	r25, r25
    57ce:	0a 94       	dec	r0
    57d0:	e2 f7       	brpl	.-8      	; 0x57ca <DIO_voidSetPinDirection+0x162>
    57d2:	80 95       	com	r24
    57d4:	84 23       	and	r24, r20
    57d6:	8c 93       	st	X, r24
    57d8:	3e c0       	rjmp	.+124    	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTB:CLR_BIT(DIO_DDRB_REG,Copy_u8Pin);break;
    57da:	a7 e3       	ldi	r26, 0x37	; 55
    57dc:	b0 e0       	ldi	r27, 0x00	; 0
    57de:	e7 e3       	ldi	r30, 0x37	; 55
    57e0:	f0 e0       	ldi	r31, 0x00	; 0
    57e2:	80 81       	ld	r24, Z
    57e4:	48 2f       	mov	r20, r24
    57e6:	8a 81       	ldd	r24, Y+2	; 0x02
    57e8:	28 2f       	mov	r18, r24
    57ea:	30 e0       	ldi	r19, 0x00	; 0
    57ec:	81 e0       	ldi	r24, 0x01	; 1
    57ee:	90 e0       	ldi	r25, 0x00	; 0
    57f0:	02 2e       	mov	r0, r18
    57f2:	02 c0       	rjmp	.+4      	; 0x57f8 <DIO_voidSetPinDirection+0x190>
    57f4:	88 0f       	add	r24, r24
    57f6:	99 1f       	adc	r25, r25
    57f8:	0a 94       	dec	r0
    57fa:	e2 f7       	brpl	.-8      	; 0x57f4 <DIO_voidSetPinDirection+0x18c>
    57fc:	80 95       	com	r24
    57fe:	84 23       	and	r24, r20
    5800:	8c 93       	st	X, r24
    5802:	29 c0       	rjmp	.+82     	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTC:CLR_BIT(DIO_DDRC_REG,Copy_u8Pin);break;
    5804:	a4 e3       	ldi	r26, 0x34	; 52
    5806:	b0 e0       	ldi	r27, 0x00	; 0
    5808:	e4 e3       	ldi	r30, 0x34	; 52
    580a:	f0 e0       	ldi	r31, 0x00	; 0
    580c:	80 81       	ld	r24, Z
    580e:	48 2f       	mov	r20, r24
    5810:	8a 81       	ldd	r24, Y+2	; 0x02
    5812:	28 2f       	mov	r18, r24
    5814:	30 e0       	ldi	r19, 0x00	; 0
    5816:	81 e0       	ldi	r24, 0x01	; 1
    5818:	90 e0       	ldi	r25, 0x00	; 0
    581a:	02 2e       	mov	r0, r18
    581c:	02 c0       	rjmp	.+4      	; 0x5822 <DIO_voidSetPinDirection+0x1ba>
    581e:	88 0f       	add	r24, r24
    5820:	99 1f       	adc	r25, r25
    5822:	0a 94       	dec	r0
    5824:	e2 f7       	brpl	.-8      	; 0x581e <DIO_voidSetPinDirection+0x1b6>
    5826:	80 95       	com	r24
    5828:	84 23       	and	r24, r20
    582a:	8c 93       	st	X, r24
    582c:	14 c0       	rjmp	.+40     	; 0x5856 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTD:CLR_BIT(DIO_DDRD_REG,Copy_u8Pin);break;
    582e:	a1 e3       	ldi	r26, 0x31	; 49
    5830:	b0 e0       	ldi	r27, 0x00	; 0
    5832:	e1 e3       	ldi	r30, 0x31	; 49
    5834:	f0 e0       	ldi	r31, 0x00	; 0
    5836:	80 81       	ld	r24, Z
    5838:	48 2f       	mov	r20, r24
    583a:	8a 81       	ldd	r24, Y+2	; 0x02
    583c:	28 2f       	mov	r18, r24
    583e:	30 e0       	ldi	r19, 0x00	; 0
    5840:	81 e0       	ldi	r24, 0x01	; 1
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	02 2e       	mov	r0, r18
    5846:	02 c0       	rjmp	.+4      	; 0x584c <DIO_voidSetPinDirection+0x1e4>
    5848:	88 0f       	add	r24, r24
    584a:	99 1f       	adc	r25, r25
    584c:	0a 94       	dec	r0
    584e:	e2 f7       	brpl	.-8      	; 0x5848 <DIO_voidSetPinDirection+0x1e0>
    5850:	80 95       	com	r24
    5852:	84 23       	and	r24, r20
    5854:	8c 93       	st	X, r24
	default:break;
	 }
  }

}
    5856:	27 96       	adiw	r28, 0x07	; 7
    5858:	0f b6       	in	r0, 0x3f	; 63
    585a:	f8 94       	cli
    585c:	de bf       	out	0x3e, r29	; 62
    585e:	0f be       	out	0x3f, r0	; 63
    5860:	cd bf       	out	0x3d, r28	; 61
    5862:	cf 91       	pop	r28
    5864:	df 91       	pop	r29
    5866:	08 95       	ret

00005868 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)//(porta ,7,PORTa=1)

{
    5868:	df 93       	push	r29
    586a:	cf 93       	push	r28
    586c:	cd b7       	in	r28, 0x3d	; 61
    586e:	de b7       	in	r29, 0x3e	; 62
    5870:	27 97       	sbiw	r28, 0x07	; 7
    5872:	0f b6       	in	r0, 0x3f	; 63
    5874:	f8 94       	cli
    5876:	de bf       	out	0x3e, r29	; 62
    5878:	0f be       	out	0x3f, r0	; 63
    587a:	cd bf       	out	0x3d, r28	; 61
    587c:	89 83       	std	Y+1, r24	; 0x01
    587e:	6a 83       	std	Y+2, r22	; 0x02
    5880:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Value==DIO_HIGH)
    5882:	8b 81       	ldd	r24, Y+3	; 0x03
    5884:	81 30       	cpi	r24, 0x01	; 1
    5886:	09 f0       	breq	.+2      	; 0x588a <DIO_voidSetPinValue+0x22>
    5888:	6f c0       	rjmp	.+222    	; 0x5968 <DIO_voidSetPinValue+0x100>
	  {
		  switch(Copy_u8Port)
    588a:	89 81       	ldd	r24, Y+1	; 0x01
    588c:	28 2f       	mov	r18, r24
    588e:	30 e0       	ldi	r19, 0x00	; 0
    5890:	3f 83       	std	Y+7, r19	; 0x07
    5892:	2e 83       	std	Y+6, r18	; 0x06
    5894:	8e 81       	ldd	r24, Y+6	; 0x06
    5896:	9f 81       	ldd	r25, Y+7	; 0x07
    5898:	81 30       	cpi	r24, 0x01	; 1
    589a:	91 05       	cpc	r25, r1
    589c:	49 f1       	breq	.+82     	; 0x58f0 <DIO_voidSetPinValue+0x88>
    589e:	2e 81       	ldd	r18, Y+6	; 0x06
    58a0:	3f 81       	ldd	r19, Y+7	; 0x07
    58a2:	22 30       	cpi	r18, 0x02	; 2
    58a4:	31 05       	cpc	r19, r1
    58a6:	2c f4       	brge	.+10     	; 0x58b2 <DIO_voidSetPinValue+0x4a>
    58a8:	8e 81       	ldd	r24, Y+6	; 0x06
    58aa:	9f 81       	ldd	r25, Y+7	; 0x07
    58ac:	00 97       	sbiw	r24, 0x00	; 0
    58ae:	61 f0       	breq	.+24     	; 0x58c8 <DIO_voidSetPinValue+0x60>
    58b0:	d2 c0       	rjmp	.+420    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
    58b2:	2e 81       	ldd	r18, Y+6	; 0x06
    58b4:	3f 81       	ldd	r19, Y+7	; 0x07
    58b6:	22 30       	cpi	r18, 0x02	; 2
    58b8:	31 05       	cpc	r19, r1
    58ba:	71 f1       	breq	.+92     	; 0x5918 <DIO_voidSetPinValue+0xb0>
    58bc:	8e 81       	ldd	r24, Y+6	; 0x06
    58be:	9f 81       	ldd	r25, Y+7	; 0x07
    58c0:	83 30       	cpi	r24, 0x03	; 3
    58c2:	91 05       	cpc	r25, r1
    58c4:	e9 f1       	breq	.+122    	; 0x5940 <DIO_voidSetPinValue+0xd8>
    58c6:	c7 c0       	rjmp	.+398    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		  {
	    case DIO_PORTA:SET_BIT(DIO_PORTA_REG,Copy_u8Pin);break;
    58c8:	ab e3       	ldi	r26, 0x3B	; 59
    58ca:	b0 e0       	ldi	r27, 0x00	; 0
    58cc:	eb e3       	ldi	r30, 0x3B	; 59
    58ce:	f0 e0       	ldi	r31, 0x00	; 0
    58d0:	80 81       	ld	r24, Z
    58d2:	48 2f       	mov	r20, r24
    58d4:	8a 81       	ldd	r24, Y+2	; 0x02
    58d6:	28 2f       	mov	r18, r24
    58d8:	30 e0       	ldi	r19, 0x00	; 0
    58da:	81 e0       	ldi	r24, 0x01	; 1
    58dc:	90 e0       	ldi	r25, 0x00	; 0
    58de:	02 2e       	mov	r0, r18
    58e0:	02 c0       	rjmp	.+4      	; 0x58e6 <DIO_voidSetPinValue+0x7e>
    58e2:	88 0f       	add	r24, r24
    58e4:	99 1f       	adc	r25, r25
    58e6:	0a 94       	dec	r0
    58e8:	e2 f7       	brpl	.-8      	; 0x58e2 <DIO_voidSetPinValue+0x7a>
    58ea:	84 2b       	or	r24, r20
    58ec:	8c 93       	st	X, r24
    58ee:	b3 c0       	rjmp	.+358    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTB:SET_BIT(DIO_PORTB_REG,Copy_u8Pin);break;
    58f0:	a8 e3       	ldi	r26, 0x38	; 56
    58f2:	b0 e0       	ldi	r27, 0x00	; 0
    58f4:	e8 e3       	ldi	r30, 0x38	; 56
    58f6:	f0 e0       	ldi	r31, 0x00	; 0
    58f8:	80 81       	ld	r24, Z
    58fa:	48 2f       	mov	r20, r24
    58fc:	8a 81       	ldd	r24, Y+2	; 0x02
    58fe:	28 2f       	mov	r18, r24
    5900:	30 e0       	ldi	r19, 0x00	; 0
    5902:	81 e0       	ldi	r24, 0x01	; 1
    5904:	90 e0       	ldi	r25, 0x00	; 0
    5906:	02 2e       	mov	r0, r18
    5908:	02 c0       	rjmp	.+4      	; 0x590e <DIO_voidSetPinValue+0xa6>
    590a:	88 0f       	add	r24, r24
    590c:	99 1f       	adc	r25, r25
    590e:	0a 94       	dec	r0
    5910:	e2 f7       	brpl	.-8      	; 0x590a <DIO_voidSetPinValue+0xa2>
    5912:	84 2b       	or	r24, r20
    5914:	8c 93       	st	X, r24
    5916:	9f c0       	rjmp	.+318    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTC:SET_BIT(DIO_PORTC_REG,Copy_u8Pin);break;
    5918:	a5 e3       	ldi	r26, 0x35	; 53
    591a:	b0 e0       	ldi	r27, 0x00	; 0
    591c:	e5 e3       	ldi	r30, 0x35	; 53
    591e:	f0 e0       	ldi	r31, 0x00	; 0
    5920:	80 81       	ld	r24, Z
    5922:	48 2f       	mov	r20, r24
    5924:	8a 81       	ldd	r24, Y+2	; 0x02
    5926:	28 2f       	mov	r18, r24
    5928:	30 e0       	ldi	r19, 0x00	; 0
    592a:	81 e0       	ldi	r24, 0x01	; 1
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	02 2e       	mov	r0, r18
    5930:	02 c0       	rjmp	.+4      	; 0x5936 <DIO_voidSetPinValue+0xce>
    5932:	88 0f       	add	r24, r24
    5934:	99 1f       	adc	r25, r25
    5936:	0a 94       	dec	r0
    5938:	e2 f7       	brpl	.-8      	; 0x5932 <DIO_voidSetPinValue+0xca>
    593a:	84 2b       	or	r24, r20
    593c:	8c 93       	st	X, r24
    593e:	8b c0       	rjmp	.+278    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTD:SET_BIT(DIO_PORTD_REG,Copy_u8Pin);break;
    5940:	a2 e3       	ldi	r26, 0x32	; 50
    5942:	b0 e0       	ldi	r27, 0x00	; 0
    5944:	e2 e3       	ldi	r30, 0x32	; 50
    5946:	f0 e0       	ldi	r31, 0x00	; 0
    5948:	80 81       	ld	r24, Z
    594a:	48 2f       	mov	r20, r24
    594c:	8a 81       	ldd	r24, Y+2	; 0x02
    594e:	28 2f       	mov	r18, r24
    5950:	30 e0       	ldi	r19, 0x00	; 0
    5952:	81 e0       	ldi	r24, 0x01	; 1
    5954:	90 e0       	ldi	r25, 0x00	; 0
    5956:	02 2e       	mov	r0, r18
    5958:	02 c0       	rjmp	.+4      	; 0x595e <DIO_voidSetPinValue+0xf6>
    595a:	88 0f       	add	r24, r24
    595c:	99 1f       	adc	r25, r25
    595e:	0a 94       	dec	r0
    5960:	e2 f7       	brpl	.-8      	; 0x595a <DIO_voidSetPinValue+0xf2>
    5962:	84 2b       	or	r24, r20
    5964:	8c 93       	st	X, r24
    5966:	77 c0       	rjmp	.+238    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		default:break;
		  }
	  }
	  else if(Copy_u8Value==DIO_LOW)
    5968:	8b 81       	ldd	r24, Y+3	; 0x03
    596a:	88 23       	and	r24, r24
    596c:	09 f0       	breq	.+2      	; 0x5970 <DIO_voidSetPinValue+0x108>
    596e:	73 c0       	rjmp	.+230    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
	  {
		 switch(Copy_u8Port)
    5970:	89 81       	ldd	r24, Y+1	; 0x01
    5972:	28 2f       	mov	r18, r24
    5974:	30 e0       	ldi	r19, 0x00	; 0
    5976:	3d 83       	std	Y+5, r19	; 0x05
    5978:	2c 83       	std	Y+4, r18	; 0x04
    597a:	8c 81       	ldd	r24, Y+4	; 0x04
    597c:	9d 81       	ldd	r25, Y+5	; 0x05
    597e:	81 30       	cpi	r24, 0x01	; 1
    5980:	91 05       	cpc	r25, r1
    5982:	59 f1       	breq	.+86     	; 0x59da <DIO_voidSetPinValue+0x172>
    5984:	2c 81       	ldd	r18, Y+4	; 0x04
    5986:	3d 81       	ldd	r19, Y+5	; 0x05
    5988:	22 30       	cpi	r18, 0x02	; 2
    598a:	31 05       	cpc	r19, r1
    598c:	2c f4       	brge	.+10     	; 0x5998 <DIO_voidSetPinValue+0x130>
    598e:	8c 81       	ldd	r24, Y+4	; 0x04
    5990:	9d 81       	ldd	r25, Y+5	; 0x05
    5992:	00 97       	sbiw	r24, 0x00	; 0
    5994:	69 f0       	breq	.+26     	; 0x59b0 <DIO_voidSetPinValue+0x148>
    5996:	5f c0       	rjmp	.+190    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
    5998:	2c 81       	ldd	r18, Y+4	; 0x04
    599a:	3d 81       	ldd	r19, Y+5	; 0x05
    599c:	22 30       	cpi	r18, 0x02	; 2
    599e:	31 05       	cpc	r19, r1
    59a0:	89 f1       	breq	.+98     	; 0x5a04 <DIO_voidSetPinValue+0x19c>
    59a2:	8c 81       	ldd	r24, Y+4	; 0x04
    59a4:	9d 81       	ldd	r25, Y+5	; 0x05
    59a6:	83 30       	cpi	r24, 0x03	; 3
    59a8:	91 05       	cpc	r25, r1
    59aa:	09 f4       	brne	.+2      	; 0x59ae <DIO_voidSetPinValue+0x146>
    59ac:	40 c0       	rjmp	.+128    	; 0x5a2e <DIO_voidSetPinValue+0x1c6>
    59ae:	53 c0       	rjmp	.+166    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		 {
	    case DIO_PORTA:CLR_BIT(DIO_PORTA_REG,Copy_u8Pin);break;
    59b0:	ab e3       	ldi	r26, 0x3B	; 59
    59b2:	b0 e0       	ldi	r27, 0x00	; 0
    59b4:	eb e3       	ldi	r30, 0x3B	; 59
    59b6:	f0 e0       	ldi	r31, 0x00	; 0
    59b8:	80 81       	ld	r24, Z
    59ba:	48 2f       	mov	r20, r24
    59bc:	8a 81       	ldd	r24, Y+2	; 0x02
    59be:	28 2f       	mov	r18, r24
    59c0:	30 e0       	ldi	r19, 0x00	; 0
    59c2:	81 e0       	ldi	r24, 0x01	; 1
    59c4:	90 e0       	ldi	r25, 0x00	; 0
    59c6:	02 2e       	mov	r0, r18
    59c8:	02 c0       	rjmp	.+4      	; 0x59ce <DIO_voidSetPinValue+0x166>
    59ca:	88 0f       	add	r24, r24
    59cc:	99 1f       	adc	r25, r25
    59ce:	0a 94       	dec	r0
    59d0:	e2 f7       	brpl	.-8      	; 0x59ca <DIO_voidSetPinValue+0x162>
    59d2:	80 95       	com	r24
    59d4:	84 23       	and	r24, r20
    59d6:	8c 93       	st	X, r24
    59d8:	3e c0       	rjmp	.+124    	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTB:CLR_BIT(DIO_PORTB_REG,Copy_u8Pin);break;
    59da:	a8 e3       	ldi	r26, 0x38	; 56
    59dc:	b0 e0       	ldi	r27, 0x00	; 0
    59de:	e8 e3       	ldi	r30, 0x38	; 56
    59e0:	f0 e0       	ldi	r31, 0x00	; 0
    59e2:	80 81       	ld	r24, Z
    59e4:	48 2f       	mov	r20, r24
    59e6:	8a 81       	ldd	r24, Y+2	; 0x02
    59e8:	28 2f       	mov	r18, r24
    59ea:	30 e0       	ldi	r19, 0x00	; 0
    59ec:	81 e0       	ldi	r24, 0x01	; 1
    59ee:	90 e0       	ldi	r25, 0x00	; 0
    59f0:	02 2e       	mov	r0, r18
    59f2:	02 c0       	rjmp	.+4      	; 0x59f8 <DIO_voidSetPinValue+0x190>
    59f4:	88 0f       	add	r24, r24
    59f6:	99 1f       	adc	r25, r25
    59f8:	0a 94       	dec	r0
    59fa:	e2 f7       	brpl	.-8      	; 0x59f4 <DIO_voidSetPinValue+0x18c>
    59fc:	80 95       	com	r24
    59fe:	84 23       	and	r24, r20
    5a00:	8c 93       	st	X, r24
    5a02:	29 c0       	rjmp	.+82     	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTC:CLR_BIT(DIO_PORTC_REG,Copy_u8Pin);break;
    5a04:	a5 e3       	ldi	r26, 0x35	; 53
    5a06:	b0 e0       	ldi	r27, 0x00	; 0
    5a08:	e5 e3       	ldi	r30, 0x35	; 53
    5a0a:	f0 e0       	ldi	r31, 0x00	; 0
    5a0c:	80 81       	ld	r24, Z
    5a0e:	48 2f       	mov	r20, r24
    5a10:	8a 81       	ldd	r24, Y+2	; 0x02
    5a12:	28 2f       	mov	r18, r24
    5a14:	30 e0       	ldi	r19, 0x00	; 0
    5a16:	81 e0       	ldi	r24, 0x01	; 1
    5a18:	90 e0       	ldi	r25, 0x00	; 0
    5a1a:	02 2e       	mov	r0, r18
    5a1c:	02 c0       	rjmp	.+4      	; 0x5a22 <DIO_voidSetPinValue+0x1ba>
    5a1e:	88 0f       	add	r24, r24
    5a20:	99 1f       	adc	r25, r25
    5a22:	0a 94       	dec	r0
    5a24:	e2 f7       	brpl	.-8      	; 0x5a1e <DIO_voidSetPinValue+0x1b6>
    5a26:	80 95       	com	r24
    5a28:	84 23       	and	r24, r20
    5a2a:	8c 93       	st	X, r24
    5a2c:	14 c0       	rjmp	.+40     	; 0x5a56 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTD:CLR_BIT(DIO_PORTD_REG,Copy_u8Pin);break;
    5a2e:	a2 e3       	ldi	r26, 0x32	; 50
    5a30:	b0 e0       	ldi	r27, 0x00	; 0
    5a32:	e2 e3       	ldi	r30, 0x32	; 50
    5a34:	f0 e0       	ldi	r31, 0x00	; 0
    5a36:	80 81       	ld	r24, Z
    5a38:	48 2f       	mov	r20, r24
    5a3a:	8a 81       	ldd	r24, Y+2	; 0x02
    5a3c:	28 2f       	mov	r18, r24
    5a3e:	30 e0       	ldi	r19, 0x00	; 0
    5a40:	81 e0       	ldi	r24, 0x01	; 1
    5a42:	90 e0       	ldi	r25, 0x00	; 0
    5a44:	02 2e       	mov	r0, r18
    5a46:	02 c0       	rjmp	.+4      	; 0x5a4c <DIO_voidSetPinValue+0x1e4>
    5a48:	88 0f       	add	r24, r24
    5a4a:	99 1f       	adc	r25, r25
    5a4c:	0a 94       	dec	r0
    5a4e:	e2 f7       	brpl	.-8      	; 0x5a48 <DIO_voidSetPinValue+0x1e0>
    5a50:	80 95       	com	r24
    5a52:	84 23       	and	r24, r20
    5a54:	8c 93       	st	X, r24
		default:break;
		 }
	  }
}
    5a56:	27 96       	adiw	r28, 0x07	; 7
    5a58:	0f b6       	in	r0, 0x3f	; 63
    5a5a:	f8 94       	cli
    5a5c:	de bf       	out	0x3e, r29	; 62
    5a5e:	0f be       	out	0x3f, r0	; 63
    5a60:	cd bf       	out	0x3d, r28	; 61
    5a62:	cf 91       	pop	r28
    5a64:	df 91       	pop	r29
    5a66:	08 95       	ret

00005a68 <DIO_u8GetPortValue>:
u8 DIO_u8GetPortValue(u8 Copy_u8Port)//pin act as input PORT=1 34an pull up resistance
{
    5a68:	df 93       	push	r29
    5a6a:	cf 93       	push	r28
    5a6c:	00 d0       	rcall	.+0      	; 0x5a6e <DIO_u8GetPortValue+0x6>
    5a6e:	00 d0       	rcall	.+0      	; 0x5a70 <DIO_u8GetPortValue+0x8>
    5a70:	cd b7       	in	r28, 0x3d	; 61
    5a72:	de b7       	in	r29, 0x3e	; 62
    5a74:	8a 83       	std	Y+2, r24	; 0x02
	u8 Loc_u8Result=0;
    5a76:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    5a78:	8a 81       	ldd	r24, Y+2	; 0x02
    5a7a:	28 2f       	mov	r18, r24
    5a7c:	30 e0       	ldi	r19, 0x00	; 0
    5a7e:	3c 83       	std	Y+4, r19	; 0x04
    5a80:	2b 83       	std	Y+3, r18	; 0x03
    5a82:	8b 81       	ldd	r24, Y+3	; 0x03
    5a84:	9c 81       	ldd	r25, Y+4	; 0x04
    5a86:	81 30       	cpi	r24, 0x01	; 1
    5a88:	91 05       	cpc	r25, r1
    5a8a:	d1 f0       	breq	.+52     	; 0x5ac0 <DIO_u8GetPortValue+0x58>
    5a8c:	2b 81       	ldd	r18, Y+3	; 0x03
    5a8e:	3c 81       	ldd	r19, Y+4	; 0x04
    5a90:	22 30       	cpi	r18, 0x02	; 2
    5a92:	31 05       	cpc	r19, r1
    5a94:	2c f4       	brge	.+10     	; 0x5aa0 <DIO_u8GetPortValue+0x38>
    5a96:	8b 81       	ldd	r24, Y+3	; 0x03
    5a98:	9c 81       	ldd	r25, Y+4	; 0x04
    5a9a:	00 97       	sbiw	r24, 0x00	; 0
    5a9c:	61 f0       	breq	.+24     	; 0x5ab6 <DIO_u8GetPortValue+0x4e>
    5a9e:	1e c0       	rjmp	.+60     	; 0x5adc <DIO_u8GetPortValue+0x74>
    5aa0:	2b 81       	ldd	r18, Y+3	; 0x03
    5aa2:	3c 81       	ldd	r19, Y+4	; 0x04
    5aa4:	22 30       	cpi	r18, 0x02	; 2
    5aa6:	31 05       	cpc	r19, r1
    5aa8:	81 f0       	breq	.+32     	; 0x5aca <DIO_u8GetPortValue+0x62>
    5aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    5aac:	9c 81       	ldd	r25, Y+4	; 0x04
    5aae:	83 30       	cpi	r24, 0x03	; 3
    5ab0:	91 05       	cpc	r25, r1
    5ab2:	81 f0       	breq	.+32     	; 0x5ad4 <DIO_u8GetPortValue+0x6c>
    5ab4:	13 c0       	rjmp	.+38     	; 0x5adc <DIO_u8GetPortValue+0x74>
	{
	        case DIO_PORTA:Loc_u8Result=DIO_PINA_REG;break;
    5ab6:	e9 e3       	ldi	r30, 0x39	; 57
    5ab8:	f0 e0       	ldi	r31, 0x00	; 0
    5aba:	80 81       	ld	r24, Z
    5abc:	89 83       	std	Y+1, r24	; 0x01
    5abe:	0e c0       	rjmp	.+28     	; 0x5adc <DIO_u8GetPortValue+0x74>
			case DIO_PORTB:Loc_u8Result=DIO_PINB_REG;break;
    5ac0:	e6 e3       	ldi	r30, 0x36	; 54
    5ac2:	f0 e0       	ldi	r31, 0x00	; 0
    5ac4:	80 81       	ld	r24, Z
    5ac6:	89 83       	std	Y+1, r24	; 0x01
    5ac8:	09 c0       	rjmp	.+18     	; 0x5adc <DIO_u8GetPortValue+0x74>
			case DIO_PORTC:Loc_u8Result=DIO_PINC_REG;break;
    5aca:	e3 e3       	ldi	r30, 0x33	; 51
    5acc:	f0 e0       	ldi	r31, 0x00	; 0
    5ace:	80 81       	ld	r24, Z
    5ad0:	89 83       	std	Y+1, r24	; 0x01
    5ad2:	04 c0       	rjmp	.+8      	; 0x5adc <DIO_u8GetPortValue+0x74>
			case DIO_PORTD:Loc_u8Result=DIO_PIND_REG;break;
    5ad4:	e0 e3       	ldi	r30, 0x30	; 48
    5ad6:	f0 e0       	ldi	r31, 0x00	; 0
    5ad8:	80 81       	ld	r24, Z
    5ada:	89 83       	std	Y+1, r24	; 0x01
	}
	return Loc_u8Result;
    5adc:	89 81       	ldd	r24, Y+1	; 0x01

}
    5ade:	0f 90       	pop	r0
    5ae0:	0f 90       	pop	r0
    5ae2:	0f 90       	pop	r0
    5ae4:	0f 90       	pop	r0
    5ae6:	cf 91       	pop	r28
    5ae8:	df 91       	pop	r29
    5aea:	08 95       	ret

00005aec <DIO_u8GetpinValue>:
u8 DIO_u8GetpinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    5aec:	df 93       	push	r29
    5aee:	cf 93       	push	r28
    5af0:	00 d0       	rcall	.+0      	; 0x5af2 <DIO_u8GetpinValue+0x6>
    5af2:	00 d0       	rcall	.+0      	; 0x5af4 <DIO_u8GetpinValue+0x8>
    5af4:	0f 92       	push	r0
    5af6:	cd b7       	in	r28, 0x3d	; 61
    5af8:	de b7       	in	r29, 0x3e	; 62
    5afa:	8a 83       	std	Y+2, r24	; 0x02
    5afc:	6b 83       	std	Y+3, r22	; 0x03
	u8 Loc_u8Result=0;
    5afe:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    5b00:	8a 81       	ldd	r24, Y+2	; 0x02
    5b02:	28 2f       	mov	r18, r24
    5b04:	30 e0       	ldi	r19, 0x00	; 0
    5b06:	3d 83       	std	Y+5, r19	; 0x05
    5b08:	2c 83       	std	Y+4, r18	; 0x04
    5b0a:	4c 81       	ldd	r20, Y+4	; 0x04
    5b0c:	5d 81       	ldd	r21, Y+5	; 0x05
    5b0e:	41 30       	cpi	r20, 0x01	; 1
    5b10:	51 05       	cpc	r21, r1
    5b12:	41 f1       	breq	.+80     	; 0x5b64 <DIO_u8GetpinValue+0x78>
    5b14:	8c 81       	ldd	r24, Y+4	; 0x04
    5b16:	9d 81       	ldd	r25, Y+5	; 0x05
    5b18:	82 30       	cpi	r24, 0x02	; 2
    5b1a:	91 05       	cpc	r25, r1
    5b1c:	34 f4       	brge	.+12     	; 0x5b2a <DIO_u8GetpinValue+0x3e>
    5b1e:	2c 81       	ldd	r18, Y+4	; 0x04
    5b20:	3d 81       	ldd	r19, Y+5	; 0x05
    5b22:	21 15       	cp	r18, r1
    5b24:	31 05       	cpc	r19, r1
    5b26:	61 f0       	breq	.+24     	; 0x5b40 <DIO_u8GetpinValue+0x54>
    5b28:	52 c0       	rjmp	.+164    	; 0x5bce <DIO_u8GetpinValue+0xe2>
    5b2a:	4c 81       	ldd	r20, Y+4	; 0x04
    5b2c:	5d 81       	ldd	r21, Y+5	; 0x05
    5b2e:	42 30       	cpi	r20, 0x02	; 2
    5b30:	51 05       	cpc	r21, r1
    5b32:	51 f1       	breq	.+84     	; 0x5b88 <DIO_u8GetpinValue+0x9c>
    5b34:	8c 81       	ldd	r24, Y+4	; 0x04
    5b36:	9d 81       	ldd	r25, Y+5	; 0x05
    5b38:	83 30       	cpi	r24, 0x03	; 3
    5b3a:	91 05       	cpc	r25, r1
    5b3c:	b9 f1       	breq	.+110    	; 0x5bac <DIO_u8GetpinValue+0xc0>
    5b3e:	47 c0       	rjmp	.+142    	; 0x5bce <DIO_u8GetpinValue+0xe2>
	{
	case DIO_PORTA:Loc_u8Result=GET_BIT(DIO_PINA_REG,Copy_u8Pin);break;
    5b40:	e9 e3       	ldi	r30, 0x39	; 57
    5b42:	f0 e0       	ldi	r31, 0x00	; 0
    5b44:	80 81       	ld	r24, Z
    5b46:	28 2f       	mov	r18, r24
    5b48:	30 e0       	ldi	r19, 0x00	; 0
    5b4a:	8b 81       	ldd	r24, Y+3	; 0x03
    5b4c:	88 2f       	mov	r24, r24
    5b4e:	90 e0       	ldi	r25, 0x00	; 0
    5b50:	a9 01       	movw	r20, r18
    5b52:	02 c0       	rjmp	.+4      	; 0x5b58 <DIO_u8GetpinValue+0x6c>
    5b54:	55 95       	asr	r21
    5b56:	47 95       	ror	r20
    5b58:	8a 95       	dec	r24
    5b5a:	e2 f7       	brpl	.-8      	; 0x5b54 <DIO_u8GetpinValue+0x68>
    5b5c:	ca 01       	movw	r24, r20
    5b5e:	81 70       	andi	r24, 0x01	; 1
    5b60:	89 83       	std	Y+1, r24	; 0x01
    5b62:	35 c0       	rjmp	.+106    	; 0x5bce <DIO_u8GetpinValue+0xe2>
	case DIO_PORTB:Loc_u8Result=GET_BIT(DIO_PINB_REG,Copy_u8Pin);break;
    5b64:	e6 e3       	ldi	r30, 0x36	; 54
    5b66:	f0 e0       	ldi	r31, 0x00	; 0
    5b68:	80 81       	ld	r24, Z
    5b6a:	28 2f       	mov	r18, r24
    5b6c:	30 e0       	ldi	r19, 0x00	; 0
    5b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    5b70:	88 2f       	mov	r24, r24
    5b72:	90 e0       	ldi	r25, 0x00	; 0
    5b74:	a9 01       	movw	r20, r18
    5b76:	02 c0       	rjmp	.+4      	; 0x5b7c <DIO_u8GetpinValue+0x90>
    5b78:	55 95       	asr	r21
    5b7a:	47 95       	ror	r20
    5b7c:	8a 95       	dec	r24
    5b7e:	e2 f7       	brpl	.-8      	; 0x5b78 <DIO_u8GetpinValue+0x8c>
    5b80:	ca 01       	movw	r24, r20
    5b82:	81 70       	andi	r24, 0x01	; 1
    5b84:	89 83       	std	Y+1, r24	; 0x01
    5b86:	23 c0       	rjmp	.+70     	; 0x5bce <DIO_u8GetpinValue+0xe2>
	case DIO_PORTC:Loc_u8Result=GET_BIT(DIO_PINC_REG,Copy_u8Pin);break;
    5b88:	e3 e3       	ldi	r30, 0x33	; 51
    5b8a:	f0 e0       	ldi	r31, 0x00	; 0
    5b8c:	80 81       	ld	r24, Z
    5b8e:	28 2f       	mov	r18, r24
    5b90:	30 e0       	ldi	r19, 0x00	; 0
    5b92:	8b 81       	ldd	r24, Y+3	; 0x03
    5b94:	88 2f       	mov	r24, r24
    5b96:	90 e0       	ldi	r25, 0x00	; 0
    5b98:	a9 01       	movw	r20, r18
    5b9a:	02 c0       	rjmp	.+4      	; 0x5ba0 <DIO_u8GetpinValue+0xb4>
    5b9c:	55 95       	asr	r21
    5b9e:	47 95       	ror	r20
    5ba0:	8a 95       	dec	r24
    5ba2:	e2 f7       	brpl	.-8      	; 0x5b9c <DIO_u8GetpinValue+0xb0>
    5ba4:	ca 01       	movw	r24, r20
    5ba6:	81 70       	andi	r24, 0x01	; 1
    5ba8:	89 83       	std	Y+1, r24	; 0x01
    5baa:	11 c0       	rjmp	.+34     	; 0x5bce <DIO_u8GetpinValue+0xe2>
	case DIO_PORTD:Loc_u8Result=GET_BIT(DIO_PIND_REG,Copy_u8Pin);;break;
    5bac:	e0 e3       	ldi	r30, 0x30	; 48
    5bae:	f0 e0       	ldi	r31, 0x00	; 0
    5bb0:	80 81       	ld	r24, Z
    5bb2:	28 2f       	mov	r18, r24
    5bb4:	30 e0       	ldi	r19, 0x00	; 0
    5bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    5bb8:	88 2f       	mov	r24, r24
    5bba:	90 e0       	ldi	r25, 0x00	; 0
    5bbc:	a9 01       	movw	r20, r18
    5bbe:	02 c0       	rjmp	.+4      	; 0x5bc4 <DIO_u8GetpinValue+0xd8>
    5bc0:	55 95       	asr	r21
    5bc2:	47 95       	ror	r20
    5bc4:	8a 95       	dec	r24
    5bc6:	e2 f7       	brpl	.-8      	; 0x5bc0 <DIO_u8GetpinValue+0xd4>
    5bc8:	ca 01       	movw	r24, r20
    5bca:	81 70       	andi	r24, 0x01	; 1
    5bcc:	89 83       	std	Y+1, r24	; 0x01
	}
	return Loc_u8Result;
    5bce:	89 81       	ldd	r24, Y+1	; 0x01
}
    5bd0:	0f 90       	pop	r0
    5bd2:	0f 90       	pop	r0
    5bd4:	0f 90       	pop	r0
    5bd6:	0f 90       	pop	r0
    5bd8:	0f 90       	pop	r0
    5bda:	cf 91       	pop	r28
    5bdc:	df 91       	pop	r29
    5bde:	08 95       	ret

00005be0 <__vector_9>:

#define  Trigger_pin	PA2

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect) {
    5be0:	1f 92       	push	r1
    5be2:	0f 92       	push	r0
    5be4:	0f b6       	in	r0, 0x3f	; 63
    5be6:	0f 92       	push	r0
    5be8:	11 24       	eor	r1, r1
    5bea:	8f 93       	push	r24
    5bec:	9f 93       	push	r25
    5bee:	df 93       	push	r29
    5bf0:	cf 93       	push	r28
    5bf2:	cd b7       	in	r28, 0x3d	; 61
    5bf4:	de b7       	in	r29, 0x3e	; 62
	TimerOverflow++;
    5bf6:	80 91 7e 01 	lds	r24, 0x017E
    5bfa:	90 91 7f 01 	lds	r25, 0x017F
    5bfe:	01 96       	adiw	r24, 0x01	; 1
    5c00:	90 93 7f 01 	sts	0x017F, r25
    5c04:	80 93 7e 01 	sts	0x017E, r24
}
    5c08:	cf 91       	pop	r28
    5c0a:	df 91       	pop	r29
    5c0c:	9f 91       	pop	r25
    5c0e:	8f 91       	pop	r24
    5c10:	0f 90       	pop	r0
    5c12:	0f be       	out	0x3f, r0	; 63
    5c14:	0f 90       	pop	r0
    5c16:	1f 90       	pop	r1
    5c18:	18 95       	reti

00005c1a <main>:

int main() {
    5c1a:	ef 92       	push	r14
    5c1c:	ff 92       	push	r15
    5c1e:	0f 93       	push	r16
    5c20:	1f 93       	push	r17
    5c22:	df 93       	push	r29
    5c24:	cf 93       	push	r28
    5c26:	cd b7       	in	r28, 0x3d	; 61
    5c28:	de b7       	in	r29, 0x3e	; 62
    5c2a:	e8 97       	sbiw	r28, 0x38	; 56
    5c2c:	0f b6       	in	r0, 0x3f	; 63
    5c2e:	f8 94       	cli
    5c30:	de bf       	out	0x3e, r29	; 62
    5c32:	0f be       	out	0x3f, r0	; 63
    5c34:	cd bf       	out	0x3d, r28	; 61

	int static x = 0;
	f32 Result=0;
    5c36:	80 e0       	ldi	r24, 0x00	; 0
    5c38:	90 e0       	ldi	r25, 0x00	; 0
    5c3a:	a0 e0       	ldi	r26, 0x00	; 0
    5c3c:	b0 e0       	ldi	r27, 0x00	; 0
    5c3e:	89 a3       	std	Y+33, r24	; 0x21
    5c40:	9a a3       	std	Y+34, r25	; 0x22
    5c42:	ab a3       	std	Y+35, r26	; 0x23
    5c44:	bc a3       	std	Y+36, r27	; 0x24
	ADC_voidInt();
    5c46:	0e 94 42 2a 	call	0x5484	; 0x5484 <ADC_voidInt>
	 while((GET_BIT(ADCSRA_REG,4))==0);
    5c4a:	e6 e2       	ldi	r30, 0x26	; 38
    5c4c:	f0 e0       	ldi	r31, 0x00	; 0
    5c4e:	80 81       	ld	r24, Z
    5c50:	82 95       	swap	r24
    5c52:	8f 70       	andi	r24, 0x0F	; 15
    5c54:	88 2f       	mov	r24, r24
    5c56:	90 e0       	ldi	r25, 0x00	; 0
    5c58:	81 70       	andi	r24, 0x01	; 1
    5c5a:	90 70       	andi	r25, 0x00	; 0
    5c5c:	00 97       	sbiw	r24, 0x00	; 0
    5c5e:	a9 f3       	breq	.-22     	; 0x5c4a <main+0x30>
	 Result=ADCL_REG|(ADCH_REG<<8);
    5c60:	e4 e2       	ldi	r30, 0x24	; 36
    5c62:	f0 e0       	ldi	r31, 0x00	; 0
    5c64:	80 81       	ld	r24, Z
    5c66:	28 2f       	mov	r18, r24
    5c68:	30 e0       	ldi	r19, 0x00	; 0
    5c6a:	e5 e2       	ldi	r30, 0x25	; 37
    5c6c:	f0 e0       	ldi	r31, 0x00	; 0
    5c6e:	80 81       	ld	r24, Z
    5c70:	88 2f       	mov	r24, r24
    5c72:	90 e0       	ldi	r25, 0x00	; 0
    5c74:	98 2f       	mov	r25, r24
    5c76:	88 27       	eor	r24, r24
    5c78:	82 2b       	or	r24, r18
    5c7a:	93 2b       	or	r25, r19
    5c7c:	aa 27       	eor	r26, r26
    5c7e:	97 fd       	sbrc	r25, 7
    5c80:	a0 95       	com	r26
    5c82:	ba 2f       	mov	r27, r26
    5c84:	bc 01       	movw	r22, r24
    5c86:	cd 01       	movw	r24, r26
    5c88:	0e 94 36 12 	call	0x246c	; 0x246c <__floatsisf>
    5c8c:	dc 01       	movw	r26, r24
    5c8e:	cb 01       	movw	r24, r22
    5c90:	89 a3       	std	Y+33, r24	; 0x21
    5c92:	9a a3       	std	Y+34, r25	; 0x22
    5c94:	ab a3       	std	Y+35, r26	; 0x23
    5c96:	bc a3       	std	Y+36, r27	; 0x24

	char string[10];
	long count;
	double distance;

	DDRA = 0b00000100;
    5c98:	ea e3       	ldi	r30, 0x3A	; 58
    5c9a:	f0 e0       	ldi	r31, 0x00	; 0
    5c9c:	84 e0       	ldi	r24, 0x04	; 4
    5c9e:	80 83       	st	Z, r24
	PORTD = 0xFF;
    5ca0:	e2 e3       	ldi	r30, 0x32	; 50
    5ca2:	f0 e0       	ldi	r31, 0x00	; 0
    5ca4:	8f ef       	ldi	r24, 0xFF	; 255
    5ca6:	80 83       	st	Z, r24

	sei();
    5ca8:	78 94       	sei
	TIMSK = (1 << TOIE1);
    5caa:	e9 e5       	ldi	r30, 0x59	; 89
    5cac:	f0 e0       	ldi	r31, 0x00	; 0
    5cae:	84 e0       	ldi	r24, 0x04	; 4
    5cb0:	80 83       	st	Z, r24
	TCCR1A = 0;
    5cb2:	ef e4       	ldi	r30, 0x4F	; 79
    5cb4:	f0 e0       	ldi	r31, 0x00	; 0
    5cb6:	10 82       	st	Z, r1

	while (1)
	{
	 while((GET_BIT(ADCSRA_REG,4))==0);
    5cb8:	e6 e2       	ldi	r30, 0x26	; 38
    5cba:	f0 e0       	ldi	r31, 0x00	; 0
    5cbc:	80 81       	ld	r24, Z
    5cbe:	82 95       	swap	r24
    5cc0:	8f 70       	andi	r24, 0x0F	; 15
    5cc2:	88 2f       	mov	r24, r24
    5cc4:	90 e0       	ldi	r25, 0x00	; 0
    5cc6:	81 70       	andi	r24, 0x01	; 1
    5cc8:	90 70       	andi	r25, 0x00	; 0
    5cca:	00 97       	sbiw	r24, 0x00	; 0
    5ccc:	a9 f3       	breq	.-22     	; 0x5cb8 <main+0x9e>
	 Result=ADCL_REG|(ADCH_REG<<8);
    5cce:	e4 e2       	ldi	r30, 0x24	; 36
    5cd0:	f0 e0       	ldi	r31, 0x00	; 0
    5cd2:	80 81       	ld	r24, Z
    5cd4:	28 2f       	mov	r18, r24
    5cd6:	30 e0       	ldi	r19, 0x00	; 0
    5cd8:	e5 e2       	ldi	r30, 0x25	; 37
    5cda:	f0 e0       	ldi	r31, 0x00	; 0
    5cdc:	80 81       	ld	r24, Z
    5cde:	88 2f       	mov	r24, r24
    5ce0:	90 e0       	ldi	r25, 0x00	; 0
    5ce2:	98 2f       	mov	r25, r24
    5ce4:	88 27       	eor	r24, r24
    5ce6:	82 2b       	or	r24, r18
    5ce8:	93 2b       	or	r25, r19
    5cea:	aa 27       	eor	r26, r26
    5cec:	97 fd       	sbrc	r25, 7
    5cee:	a0 95       	com	r26
    5cf0:	ba 2f       	mov	r27, r26
    5cf2:	bc 01       	movw	r22, r24
    5cf4:	cd 01       	movw	r24, r26
    5cf6:	0e 94 36 12 	call	0x246c	; 0x246c <__floatsisf>
    5cfa:	dc 01       	movw	r26, r24
    5cfc:	cb 01       	movw	r24, r22
    5cfe:	89 a3       	std	Y+33, r24	; 0x21
    5d00:	9a a3       	std	Y+34, r25	; 0x22
    5d02:	ab a3       	std	Y+35, r26	; 0x23
    5d04:	bc a3       	std	Y+36, r27	; 0x24
	 DIO_voidSetPinDirection(GROUPC,PIN_7,OUTPUT);
    5d06:	82 e0       	ldi	r24, 0x02	; 2
    5d08:	67 e0       	ldi	r22, 0x07	; 7
    5d0a:	41 e0       	ldi	r20, 0x01	; 1
    5d0c:	0e 94 34 2b 	call	0x5668	; 0x5668 <DIO_voidSetPinDirection>
		PORTA |= (1 << Trigger_pin);
    5d10:	ab e3       	ldi	r26, 0x3B	; 59
    5d12:	b0 e0       	ldi	r27, 0x00	; 0
    5d14:	eb e3       	ldi	r30, 0x3B	; 59
    5d16:	f0 e0       	ldi	r31, 0x00	; 0
    5d18:	80 81       	ld	r24, Z
    5d1a:	84 60       	ori	r24, 0x04	; 4
    5d1c:	8c 93       	st	X, r24
    5d1e:	80 e0       	ldi	r24, 0x00	; 0
    5d20:	90 e0       	ldi	r25, 0x00	; 0
    5d22:	a0 e2       	ldi	r26, 0x20	; 32
    5d24:	b1 e4       	ldi	r27, 0x41	; 65
    5d26:	8d 8b       	std	Y+21, r24	; 0x15
    5d28:	9e 8b       	std	Y+22, r25	; 0x16
    5d2a:	af 8b       	std	Y+23, r26	; 0x17
    5d2c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    5d2e:	6d 89       	ldd	r22, Y+21	; 0x15
    5d30:	7e 89       	ldd	r23, Y+22	; 0x16
    5d32:	8f 89       	ldd	r24, Y+23	; 0x17
    5d34:	98 8d       	ldd	r25, Y+24	; 0x18
    5d36:	2b ea       	ldi	r18, 0xAB	; 171
    5d38:	3a ea       	ldi	r19, 0xAA	; 170
    5d3a:	4a e2       	ldi	r20, 0x2A	; 42
    5d3c:	50 e4       	ldi	r21, 0x40	; 64
    5d3e:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    5d42:	dc 01       	movw	r26, r24
    5d44:	cb 01       	movw	r24, r22
    5d46:	89 8b       	std	Y+17, r24	; 0x11
    5d48:	9a 8b       	std	Y+18, r25	; 0x12
    5d4a:	ab 8b       	std	Y+19, r26	; 0x13
    5d4c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    5d4e:	69 89       	ldd	r22, Y+17	; 0x11
    5d50:	7a 89       	ldd	r23, Y+18	; 0x12
    5d52:	8b 89       	ldd	r24, Y+19	; 0x13
    5d54:	9c 89       	ldd	r25, Y+20	; 0x14
    5d56:	20 e0       	ldi	r18, 0x00	; 0
    5d58:	30 e0       	ldi	r19, 0x00	; 0
    5d5a:	40 e8       	ldi	r20, 0x80	; 128
    5d5c:	5f e3       	ldi	r21, 0x3F	; 63
    5d5e:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    5d62:	88 23       	and	r24, r24
    5d64:	1c f4       	brge	.+6      	; 0x5d6c <main+0x152>
		__ticks = 1;
    5d66:	81 e0       	ldi	r24, 0x01	; 1
    5d68:	88 8b       	std	Y+16, r24	; 0x10
    5d6a:	91 c0       	rjmp	.+290    	; 0x5e8e <main+0x274>
	else if (__tmp > 255)
    5d6c:	69 89       	ldd	r22, Y+17	; 0x11
    5d6e:	7a 89       	ldd	r23, Y+18	; 0x12
    5d70:	8b 89       	ldd	r24, Y+19	; 0x13
    5d72:	9c 89       	ldd	r25, Y+20	; 0x14
    5d74:	20 e0       	ldi	r18, 0x00	; 0
    5d76:	30 e0       	ldi	r19, 0x00	; 0
    5d78:	4f e7       	ldi	r20, 0x7F	; 127
    5d7a:	53 e4       	ldi	r21, 0x43	; 67
    5d7c:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    5d80:	18 16       	cp	r1, r24
    5d82:	0c f0       	brlt	.+2      	; 0x5d86 <main+0x16c>
    5d84:	7b c0       	rjmp	.+246    	; 0x5e7c <main+0x262>
	{
		_delay_ms(__us / 1000.0);
    5d86:	6d 89       	ldd	r22, Y+21	; 0x15
    5d88:	7e 89       	ldd	r23, Y+22	; 0x16
    5d8a:	8f 89       	ldd	r24, Y+23	; 0x17
    5d8c:	98 8d       	ldd	r25, Y+24	; 0x18
    5d8e:	20 e0       	ldi	r18, 0x00	; 0
    5d90:	30 e0       	ldi	r19, 0x00	; 0
    5d92:	4a e7       	ldi	r20, 0x7A	; 122
    5d94:	54 e4       	ldi	r21, 0x44	; 68
    5d96:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    5d9a:	dc 01       	movw	r26, r24
    5d9c:	cb 01       	movw	r24, r22
    5d9e:	8c 87       	std	Y+12, r24	; 0x0c
    5da0:	9d 87       	std	Y+13, r25	; 0x0d
    5da2:	ae 87       	std	Y+14, r26	; 0x0e
    5da4:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5da6:	6c 85       	ldd	r22, Y+12	; 0x0c
    5da8:	7d 85       	ldd	r23, Y+13	; 0x0d
    5daa:	8e 85       	ldd	r24, Y+14	; 0x0e
    5dac:	9f 85       	ldd	r25, Y+15	; 0x0f
    5dae:	20 e0       	ldi	r18, 0x00	; 0
    5db0:	30 e0       	ldi	r19, 0x00	; 0
    5db2:	4a ef       	ldi	r20, 0xFA	; 250
    5db4:	54 e4       	ldi	r21, 0x44	; 68
    5db6:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    5dba:	dc 01       	movw	r26, r24
    5dbc:	cb 01       	movw	r24, r22
    5dbe:	88 87       	std	Y+8, r24	; 0x08
    5dc0:	99 87       	std	Y+9, r25	; 0x09
    5dc2:	aa 87       	std	Y+10, r26	; 0x0a
    5dc4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    5dc6:	68 85       	ldd	r22, Y+8	; 0x08
    5dc8:	79 85       	ldd	r23, Y+9	; 0x09
    5dca:	8a 85       	ldd	r24, Y+10	; 0x0a
    5dcc:	9b 85       	ldd	r25, Y+11	; 0x0b
    5dce:	20 e0       	ldi	r18, 0x00	; 0
    5dd0:	30 e0       	ldi	r19, 0x00	; 0
    5dd2:	40 e8       	ldi	r20, 0x80	; 128
    5dd4:	5f e3       	ldi	r21, 0x3F	; 63
    5dd6:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    5dda:	88 23       	and	r24, r24
    5ddc:	2c f4       	brge	.+10     	; 0x5de8 <main+0x1ce>
		__ticks = 1;
    5dde:	81 e0       	ldi	r24, 0x01	; 1
    5de0:	90 e0       	ldi	r25, 0x00	; 0
    5de2:	9f 83       	std	Y+7, r25	; 0x07
    5de4:	8e 83       	std	Y+6, r24	; 0x06
    5de6:	3f c0       	rjmp	.+126    	; 0x5e66 <main+0x24c>
	else if (__tmp > 65535)
    5de8:	68 85       	ldd	r22, Y+8	; 0x08
    5dea:	79 85       	ldd	r23, Y+9	; 0x09
    5dec:	8a 85       	ldd	r24, Y+10	; 0x0a
    5dee:	9b 85       	ldd	r25, Y+11	; 0x0b
    5df0:	20 e0       	ldi	r18, 0x00	; 0
    5df2:	3f ef       	ldi	r19, 0xFF	; 255
    5df4:	4f e7       	ldi	r20, 0x7F	; 127
    5df6:	57 e4       	ldi	r21, 0x47	; 71
    5df8:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    5dfc:	18 16       	cp	r1, r24
    5dfe:	4c f5       	brge	.+82     	; 0x5e52 <main+0x238>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e00:	6c 85       	ldd	r22, Y+12	; 0x0c
    5e02:	7d 85       	ldd	r23, Y+13	; 0x0d
    5e04:	8e 85       	ldd	r24, Y+14	; 0x0e
    5e06:	9f 85       	ldd	r25, Y+15	; 0x0f
    5e08:	20 e0       	ldi	r18, 0x00	; 0
    5e0a:	30 e0       	ldi	r19, 0x00	; 0
    5e0c:	40 e2       	ldi	r20, 0x20	; 32
    5e0e:	51 e4       	ldi	r21, 0x41	; 65
    5e10:	0e 94 00 10 	call	0x2000	; 0x2000 <__mulsf3>
    5e14:	dc 01       	movw	r26, r24
    5e16:	cb 01       	movw	r24, r22
    5e18:	bc 01       	movw	r22, r24
    5e1a:	cd 01       	movw	r24, r26
    5e1c:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    5e20:	dc 01       	movw	r26, r24
    5e22:	cb 01       	movw	r24, r22
    5e24:	9f 83       	std	Y+7, r25	; 0x07
    5e26:	8e 83       	std	Y+6, r24	; 0x06
    5e28:	0f c0       	rjmp	.+30     	; 0x5e48 <main+0x22e>
    5e2a:	88 ec       	ldi	r24, 0xC8	; 200
    5e2c:	90 e0       	ldi	r25, 0x00	; 0
    5e2e:	9d 83       	std	Y+5, r25	; 0x05
    5e30:	8c 83       	std	Y+4, r24	; 0x04
    5e32:	8c 81       	ldd	r24, Y+4	; 0x04
    5e34:	9d 81       	ldd	r25, Y+5	; 0x05
    5e36:	01 97       	sbiw	r24, 0x01	; 1
    5e38:	f1 f7       	brne	.-4      	; 0x5e36 <main+0x21c>
    5e3a:	9d 83       	std	Y+5, r25	; 0x05
    5e3c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e3e:	8e 81       	ldd	r24, Y+6	; 0x06
    5e40:	9f 81       	ldd	r25, Y+7	; 0x07
    5e42:	01 97       	sbiw	r24, 0x01	; 1
    5e44:	9f 83       	std	Y+7, r25	; 0x07
    5e46:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e48:	8e 81       	ldd	r24, Y+6	; 0x06
    5e4a:	9f 81       	ldd	r25, Y+7	; 0x07
    5e4c:	00 97       	sbiw	r24, 0x00	; 0
    5e4e:	69 f7       	brne	.-38     	; 0x5e2a <main+0x210>
    5e50:	24 c0       	rjmp	.+72     	; 0x5e9a <main+0x280>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5e52:	68 85       	ldd	r22, Y+8	; 0x08
    5e54:	79 85       	ldd	r23, Y+9	; 0x09
    5e56:	8a 85       	ldd	r24, Y+10	; 0x0a
    5e58:	9b 85       	ldd	r25, Y+11	; 0x0b
    5e5a:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    5e5e:	dc 01       	movw	r26, r24
    5e60:	cb 01       	movw	r24, r22
    5e62:	9f 83       	std	Y+7, r25	; 0x07
    5e64:	8e 83       	std	Y+6, r24	; 0x06
    5e66:	8e 81       	ldd	r24, Y+6	; 0x06
    5e68:	9f 81       	ldd	r25, Y+7	; 0x07
    5e6a:	9b 83       	std	Y+3, r25	; 0x03
    5e6c:	8a 83       	std	Y+2, r24	; 0x02
    5e6e:	8a 81       	ldd	r24, Y+2	; 0x02
    5e70:	9b 81       	ldd	r25, Y+3	; 0x03
    5e72:	01 97       	sbiw	r24, 0x01	; 1
    5e74:	f1 f7       	brne	.-4      	; 0x5e72 <main+0x258>
    5e76:	9b 83       	std	Y+3, r25	; 0x03
    5e78:	8a 83       	std	Y+2, r24	; 0x02
    5e7a:	0f c0       	rjmp	.+30     	; 0x5e9a <main+0x280>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    5e7c:	69 89       	ldd	r22, Y+17	; 0x11
    5e7e:	7a 89       	ldd	r23, Y+18	; 0x12
    5e80:	8b 89       	ldd	r24, Y+19	; 0x13
    5e82:	9c 89       	ldd	r25, Y+20	; 0x14
    5e84:	0e 94 45 01 	call	0x28a	; 0x28a <__fixunssfsi>
    5e88:	dc 01       	movw	r26, r24
    5e8a:	cb 01       	movw	r24, r22
    5e8c:	88 8b       	std	Y+16, r24	; 0x10
    5e8e:	88 89       	ldd	r24, Y+16	; 0x10
    5e90:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    5e92:	89 81       	ldd	r24, Y+1	; 0x01
    5e94:	8a 95       	dec	r24
    5e96:	f1 f7       	brne	.-4      	; 0x5e94 <main+0x27a>
    5e98:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
    5e9a:	ab e3       	ldi	r26, 0x3B	; 59
    5e9c:	b0 e0       	ldi	r27, 0x00	; 0
    5e9e:	eb e3       	ldi	r30, 0x3B	; 59
    5ea0:	f0 e0       	ldi	r31, 0x00	; 0
    5ea2:	80 81       	ld	r24, Z
    5ea4:	8b 7f       	andi	r24, 0xFB	; 251
    5ea6:	8c 93       	st	X, r24

		TCNT1 = 0;
    5ea8:	ec e4       	ldi	r30, 0x4C	; 76
    5eaa:	f0 e0       	ldi	r31, 0x00	; 0
    5eac:	11 82       	std	Z+1, r1	; 0x01
    5eae:	10 82       	st	Z, r1
		TCCR1B = 0x41;
    5eb0:	ee e4       	ldi	r30, 0x4E	; 78
    5eb2:	f0 e0       	ldi	r31, 0x00	; 0
    5eb4:	81 e4       	ldi	r24, 0x41	; 65
    5eb6:	80 83       	st	Z, r24
		TIFR = 1 << ICF1;
    5eb8:	e8 e5       	ldi	r30, 0x58	; 88
    5eba:	f0 e0       	ldi	r31, 0x00	; 0
    5ebc:	80 e2       	ldi	r24, 0x20	; 32
    5ebe:	80 83       	st	Z, r24
		TIFR = 1 << TOV1;
    5ec0:	e8 e5       	ldi	r30, 0x58	; 88
    5ec2:	f0 e0       	ldi	r31, 0x00	; 0
    5ec4:	84 e0       	ldi	r24, 0x04	; 4
    5ec6:	80 83       	st	Z, r24

		while ((TIFR & (1 << ICF1)) == 0)
    5ec8:	e8 e5       	ldi	r30, 0x58	; 88
    5eca:	f0 e0       	ldi	r31, 0x00	; 0
    5ecc:	80 81       	ld	r24, Z
    5ece:	88 2f       	mov	r24, r24
    5ed0:	90 e0       	ldi	r25, 0x00	; 0
    5ed2:	80 72       	andi	r24, 0x20	; 32
    5ed4:	90 70       	andi	r25, 0x00	; 0
    5ed6:	00 97       	sbiw	r24, 0x00	; 0
    5ed8:	b9 f3       	breq	.-18     	; 0x5ec8 <main+0x2ae>
			;

		TCNT1 = 0;
    5eda:	ec e4       	ldi	r30, 0x4C	; 76
    5edc:	f0 e0       	ldi	r31, 0x00	; 0
    5ede:	11 82       	std	Z+1, r1	; 0x01
    5ee0:	10 82       	st	Z, r1
		TCCR1B = 0x01;
    5ee2:	ee e4       	ldi	r30, 0x4E	; 78
    5ee4:	f0 e0       	ldi	r31, 0x00	; 0
    5ee6:	81 e0       	ldi	r24, 0x01	; 1
    5ee8:	80 83       	st	Z, r24
		TIFR = 1 << ICF1;
    5eea:	e8 e5       	ldi	r30, 0x58	; 88
    5eec:	f0 e0       	ldi	r31, 0x00	; 0
    5eee:	80 e2       	ldi	r24, 0x20	; 32
    5ef0:	80 83       	st	Z, r24
		TIFR = 1 << TOV1;
    5ef2:	e8 e5       	ldi	r30, 0x58	; 88
    5ef4:	f0 e0       	ldi	r31, 0x00	; 0
    5ef6:	84 e0       	ldi	r24, 0x04	; 4
    5ef8:	80 83       	st	Z, r24
		TimerOverflow = 0;
    5efa:	10 92 7f 01 	sts	0x017F, r1
    5efe:	10 92 7e 01 	sts	0x017E, r1

		while ((TIFR & (1 << ICF1)) == 0)
    5f02:	e8 e5       	ldi	r30, 0x58	; 88
    5f04:	f0 e0       	ldi	r31, 0x00	; 0
    5f06:	80 81       	ld	r24, Z
    5f08:	88 2f       	mov	r24, r24
    5f0a:	90 e0       	ldi	r25, 0x00	; 0
    5f0c:	80 72       	andi	r24, 0x20	; 32
    5f0e:	90 70       	andi	r25, 0x00	; 0
    5f10:	00 97       	sbiw	r24, 0x00	; 0
    5f12:	b9 f3       	breq	.-18     	; 0x5f02 <main+0x2e8>
			;

		count = ICR1 + (65535 * TimerOverflow);
    5f14:	e6 e4       	ldi	r30, 0x46	; 70
    5f16:	f0 e0       	ldi	r31, 0x00	; 0
    5f18:	80 81       	ld	r24, Z
    5f1a:	91 81       	ldd	r25, Z+1	; 0x01
    5f1c:	7c 01       	movw	r14, r24
    5f1e:	00 e0       	ldi	r16, 0x00	; 0
    5f20:	10 e0       	ldi	r17, 0x00	; 0
    5f22:	80 91 7e 01 	lds	r24, 0x017E
    5f26:	90 91 7f 01 	lds	r25, 0x017F
    5f2a:	aa 27       	eor	r26, r26
    5f2c:	97 fd       	sbrc	r25, 7
    5f2e:	a0 95       	com	r26
    5f30:	ba 2f       	mov	r27, r26
    5f32:	2f ef       	ldi	r18, 0xFF	; 255
    5f34:	3f ef       	ldi	r19, 0xFF	; 255
    5f36:	40 e0       	ldi	r20, 0x00	; 0
    5f38:	50 e0       	ldi	r21, 0x00	; 0
    5f3a:	bc 01       	movw	r22, r24
    5f3c:	cd 01       	movw	r24, r26
    5f3e:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <__mulsi3>
    5f42:	dc 01       	movw	r26, r24
    5f44:	cb 01       	movw	r24, r22
    5f46:	8e 0d       	add	r24, r14
    5f48:	9f 1d       	adc	r25, r15
    5f4a:	a0 1f       	adc	r26, r16
    5f4c:	b1 1f       	adc	r27, r17
    5f4e:	8d 8f       	std	Y+29, r24	; 0x1d
    5f50:	9e 8f       	std	Y+30, r25	; 0x1e
    5f52:	af 8f       	std	Y+31, r26	; 0x1f
    5f54:	b8 a3       	std	Y+32, r27	; 0x20

		distance = (double) count / 466.47;
    5f56:	6d 8d       	ldd	r22, Y+29	; 0x1d
    5f58:	7e 8d       	ldd	r23, Y+30	; 0x1e
    5f5a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5f5c:	98 a1       	ldd	r25, Y+32	; 0x20
    5f5e:	0e 94 36 12 	call	0x246c	; 0x246c <__floatsisf>
    5f62:	dc 01       	movw	r26, r24
    5f64:	cb 01       	movw	r24, r22
    5f66:	bc 01       	movw	r22, r24
    5f68:	cd 01       	movw	r24, r26
    5f6a:	29 e2       	ldi	r18, 0x29	; 41
    5f6c:	3c e3       	ldi	r19, 0x3C	; 60
    5f6e:	49 ee       	ldi	r20, 0xE9	; 233
    5f70:	53 e4       	ldi	r21, 0x43	; 67
    5f72:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__divsf3>
    5f76:	dc 01       	movw	r26, r24
    5f78:	cb 01       	movw	r24, r22
    5f7a:	89 8f       	std	Y+25, r24	; 0x19
    5f7c:	9a 8f       	std	Y+26, r25	; 0x1a
    5f7e:	ab 8f       	std	Y+27, r26	; 0x1b
    5f80:	bc 8f       	std	Y+28, r27	; 0x1c

		dtostrf(distance, 2, 2, string);
    5f82:	89 8d       	ldd	r24, Y+25	; 0x19
    5f84:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5f86:	ab 8d       	ldd	r26, Y+27	; 0x1b
    5f88:	bc 8d       	ldd	r27, Y+28	; 0x1c
    5f8a:	fe 01       	movw	r30, r28
    5f8c:	b5 96       	adiw	r30, 0x25	; 37
    5f8e:	bc 01       	movw	r22, r24
    5f90:	cd 01       	movw	r24, r26
    5f92:	42 e0       	ldi	r20, 0x02	; 2
    5f94:	50 e0       	ldi	r21, 0x00	; 0
    5f96:	22 e0       	ldi	r18, 0x02	; 2
    5f98:	30 e0       	ldi	r19, 0x00	; 0
    5f9a:	8f 01       	movw	r16, r30
    5f9c:	0e 94 d4 30 	call	0x61a8	; 0x61a8 <dtostrf>

		char ar[10];

		if (distance > 3 && distance < 10  )
    5fa0:	69 8d       	ldd	r22, Y+25	; 0x19
    5fa2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5fa4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5fa6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5fa8:	20 e0       	ldi	r18, 0x00	; 0
    5faa:	30 e0       	ldi	r19, 0x00	; 0
    5fac:	40 e4       	ldi	r20, 0x40	; 64
    5fae:	50 e4       	ldi	r21, 0x40	; 64
    5fb0:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    5fb4:	18 16       	cp	r1, r24
    5fb6:	0c f0       	brlt	.+2      	; 0x5fba <main+0x3a0>
    5fb8:	4b c0       	rjmp	.+150    	; 0x6050 <main+0x436>
    5fba:	69 8d       	ldd	r22, Y+25	; 0x19
    5fbc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5fbe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5fc0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5fc2:	20 e0       	ldi	r18, 0x00	; 0
    5fc4:	30 e0       	ldi	r19, 0x00	; 0
    5fc6:	40 e2       	ldi	r20, 0x20	; 32
    5fc8:	51 e4       	ldi	r21, 0x41	; 65
    5fca:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    5fce:	88 23       	and	r24, r24
    5fd0:	0c f0       	brlt	.+2      	; 0x5fd4 <main+0x3ba>
    5fd2:	3e c0       	rjmp	.+124    	; 0x6050 <main+0x436>
		{
			x++;
    5fd4:	80 91 80 01 	lds	r24, 0x0180
    5fd8:	90 91 81 01 	lds	r25, 0x0181
    5fdc:	01 96       	adiw	r24, 0x01	; 1
    5fde:	90 93 81 01 	sts	0x0181, r25
    5fe2:	80 93 80 01 	sts	0x0180, r24
			sprintf(ar, "%d%c", (int) x);
    5fe6:	20 91 80 01 	lds	r18, 0x0180
    5fea:	30 91 81 01 	lds	r19, 0x0181
    5fee:	00 d0       	rcall	.+0      	; 0x5ff0 <main+0x3d6>
    5ff0:	00 d0       	rcall	.+0      	; 0x5ff2 <main+0x3d8>
    5ff2:	00 d0       	rcall	.+0      	; 0x5ff4 <main+0x3da>
    5ff4:	ed b7       	in	r30, 0x3d	; 61
    5ff6:	fe b7       	in	r31, 0x3e	; 62
    5ff8:	31 96       	adiw	r30, 0x01	; 1
    5ffa:	ce 01       	movw	r24, r28
    5ffc:	8f 96       	adiw	r24, 0x2f	; 47
    5ffe:	91 83       	std	Z+1, r25	; 0x01
    6000:	80 83       	st	Z, r24
    6002:	80 e6       	ldi	r24, 0x60	; 96
    6004:	90 e0       	ldi	r25, 0x00	; 0
    6006:	93 83       	std	Z+3, r25	; 0x03
    6008:	82 83       	std	Z+2, r24	; 0x02
    600a:	35 83       	std	Z+5, r19	; 0x05
    600c:	24 83       	std	Z+4, r18	; 0x04
    600e:	0e 94 f5 30 	call	0x61ea	; 0x61ea <sprintf>
    6012:	8d b7       	in	r24, 0x3d	; 61
    6014:	9e b7       	in	r25, 0x3e	; 62
    6016:	06 96       	adiw	r24, 0x06	; 6
    6018:	0f b6       	in	r0, 0x3f	; 63
    601a:	f8 94       	cli
    601c:	9e bf       	out	0x3e, r25	; 62
    601e:	0f be       	out	0x3f, r0	; 63
    6020:	8d bf       	out	0x3d, r24	; 61
			if(Result>500)
    6022:	69 a1       	ldd	r22, Y+33	; 0x21
    6024:	7a a1       	ldd	r23, Y+34	; 0x22
    6026:	8b a1       	ldd	r24, Y+35	; 0x23
    6028:	9c a1       	ldd	r25, Y+36	; 0x24
    602a:	20 e0       	ldi	r18, 0x00	; 0
    602c:	30 e0       	ldi	r19, 0x00	; 0
    602e:	4a ef       	ldi	r20, 0xFA	; 250
    6030:	53 e4       	ldi	r21, 0x43	; 67
    6032:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    6036:	18 16       	cp	r1, r24
    6038:	34 f4       	brge	.+12     	; 0x6046 <main+0x42c>
			 {DIO_voidSetPinValue(GROUPC,PIN_7,HIGH);}
    603a:	82 e0       	ldi	r24, 0x02	; 2
    603c:	67 e0       	ldi	r22, 0x07	; 7
    603e:	41 e0       	ldi	r20, 0x01	; 1
    6040:	0e 94 34 2c 	call	0x5868	; 0x5868 <DIO_voidSetPinValue>
    6044:	05 c0       	rjmp	.+10     	; 0x6050 <main+0x436>
			else
		     {DIO_voidSetPinValue(GROUPC,PIN_7,LOW);}
    6046:	82 e0       	ldi	r24, 0x02	; 2
    6048:	67 e0       	ldi	r22, 0x07	; 7
    604a:	40 e0       	ldi	r20, 0x00	; 0
    604c:	0e 94 34 2c 	call	0x5868	; 0x5868 <DIO_voidSetPinValue>
		}
		if(distance>10 || Result<500)
    6050:	69 8d       	ldd	r22, Y+25	; 0x19
    6052:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6054:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6056:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6058:	20 e0       	ldi	r18, 0x00	; 0
    605a:	30 e0       	ldi	r19, 0x00	; 0
    605c:	40 e2       	ldi	r20, 0x20	; 32
    605e:	51 e4       	ldi	r21, 0x41	; 65
    6060:	0e 94 a6 11 	call	0x234c	; 0x234c <__gtsf2>
    6064:	18 16       	cp	r1, r24
    6066:	64 f0       	brlt	.+24     	; 0x6080 <main+0x466>
    6068:	69 a1       	ldd	r22, Y+33	; 0x21
    606a:	7a a1       	ldd	r23, Y+34	; 0x22
    606c:	8b a1       	ldd	r24, Y+35	; 0x23
    606e:	9c a1       	ldd	r25, Y+36	; 0x24
    6070:	20 e0       	ldi	r18, 0x00	; 0
    6072:	30 e0       	ldi	r19, 0x00	; 0
    6074:	4a ef       	ldi	r20, 0xFA	; 250
    6076:	53 e4       	ldi	r21, 0x43	; 67
    6078:	0e 94 06 12 	call	0x240c	; 0x240c <__ltsf2>
    607c:	88 23       	and	r24, r24
    607e:	2c f4       	brge	.+10     	; 0x608a <main+0x470>
		{
			DIO_voidSetPinValue(GROUPC,PIN_7,LOW);
    6080:	82 e0       	ldi	r24, 0x02	; 2
    6082:	67 e0       	ldi	r22, 0x07	; 7
    6084:	40 e0       	ldi	r20, 0x00	; 0
    6086:	0e 94 34 2c 	call	0x5868	; 0x5868 <DIO_voidSetPinValue>
		}
		     SET_BIT(ADCSRA_REG,4);
    608a:	a6 e2       	ldi	r26, 0x26	; 38
    608c:	b0 e0       	ldi	r27, 0x00	; 0
    608e:	e6 e2       	ldi	r30, 0x26	; 38
    6090:	f0 e0       	ldi	r31, 0x00	; 0
    6092:	80 81       	ld	r24, Z
    6094:	80 61       	ori	r24, 0x10	; 16
    6096:	8c 93       	st	X, r24
			 SET_BIT(ADCSRA_REG,6);
    6098:	a6 e2       	ldi	r26, 0x26	; 38
    609a:	b0 e0       	ldi	r27, 0x00	; 0
    609c:	e6 e2       	ldi	r30, 0x26	; 38
    609e:	f0 e0       	ldi	r31, 0x00	; 0
    60a0:	80 81       	ld	r24, Z
    60a2:	80 64       	ori	r24, 0x40	; 64
    60a4:	8c 93       	st	X, r24
			 Result=0;
    60a6:	80 e0       	ldi	r24, 0x00	; 0
    60a8:	90 e0       	ldi	r25, 0x00	; 0
    60aa:	a0 e0       	ldi	r26, 0x00	; 0
    60ac:	b0 e0       	ldi	r27, 0x00	; 0
    60ae:	89 a3       	std	Y+33, r24	; 0x21
    60b0:	9a a3       	std	Y+34, r25	; 0x22
    60b2:	ab a3       	std	Y+35, r26	; 0x23
    60b4:	bc a3       	std	Y+36, r27	; 0x24
    60b6:	00 ce       	rjmp	.-1024   	; 0x5cb8 <main+0x9e>

000060b8 <__mulsi3>:
    60b8:	62 9f       	mul	r22, r18
    60ba:	d0 01       	movw	r26, r0
    60bc:	73 9f       	mul	r23, r19
    60be:	f0 01       	movw	r30, r0
    60c0:	82 9f       	mul	r24, r18
    60c2:	e0 0d       	add	r30, r0
    60c4:	f1 1d       	adc	r31, r1
    60c6:	64 9f       	mul	r22, r20
    60c8:	e0 0d       	add	r30, r0
    60ca:	f1 1d       	adc	r31, r1
    60cc:	92 9f       	mul	r25, r18
    60ce:	f0 0d       	add	r31, r0
    60d0:	83 9f       	mul	r24, r19
    60d2:	f0 0d       	add	r31, r0
    60d4:	74 9f       	mul	r23, r20
    60d6:	f0 0d       	add	r31, r0
    60d8:	65 9f       	mul	r22, r21
    60da:	f0 0d       	add	r31, r0
    60dc:	99 27       	eor	r25, r25
    60de:	72 9f       	mul	r23, r18
    60e0:	b0 0d       	add	r27, r0
    60e2:	e1 1d       	adc	r30, r1
    60e4:	f9 1f       	adc	r31, r25
    60e6:	63 9f       	mul	r22, r19
    60e8:	b0 0d       	add	r27, r0
    60ea:	e1 1d       	adc	r30, r1
    60ec:	f9 1f       	adc	r31, r25
    60ee:	bd 01       	movw	r22, r26
    60f0:	cf 01       	movw	r24, r30
    60f2:	11 24       	eor	r1, r1
    60f4:	08 95       	ret

000060f6 <__udivmodsi4>:
    60f6:	a1 e2       	ldi	r26, 0x21	; 33
    60f8:	1a 2e       	mov	r1, r26
    60fa:	aa 1b       	sub	r26, r26
    60fc:	bb 1b       	sub	r27, r27
    60fe:	fd 01       	movw	r30, r26
    6100:	0d c0       	rjmp	.+26     	; 0x611c <__udivmodsi4_ep>

00006102 <__udivmodsi4_loop>:
    6102:	aa 1f       	adc	r26, r26
    6104:	bb 1f       	adc	r27, r27
    6106:	ee 1f       	adc	r30, r30
    6108:	ff 1f       	adc	r31, r31
    610a:	a2 17       	cp	r26, r18
    610c:	b3 07       	cpc	r27, r19
    610e:	e4 07       	cpc	r30, r20
    6110:	f5 07       	cpc	r31, r21
    6112:	20 f0       	brcs	.+8      	; 0x611c <__udivmodsi4_ep>
    6114:	a2 1b       	sub	r26, r18
    6116:	b3 0b       	sbc	r27, r19
    6118:	e4 0b       	sbc	r30, r20
    611a:	f5 0b       	sbc	r31, r21

0000611c <__udivmodsi4_ep>:
    611c:	66 1f       	adc	r22, r22
    611e:	77 1f       	adc	r23, r23
    6120:	88 1f       	adc	r24, r24
    6122:	99 1f       	adc	r25, r25
    6124:	1a 94       	dec	r1
    6126:	69 f7       	brne	.-38     	; 0x6102 <__udivmodsi4_loop>
    6128:	60 95       	com	r22
    612a:	70 95       	com	r23
    612c:	80 95       	com	r24
    612e:	90 95       	com	r25
    6130:	9b 01       	movw	r18, r22
    6132:	ac 01       	movw	r20, r24
    6134:	bd 01       	movw	r22, r26
    6136:	cf 01       	movw	r24, r30
    6138:	08 95       	ret

0000613a <__prologue_saves__>:
    613a:	2f 92       	push	r2
    613c:	3f 92       	push	r3
    613e:	4f 92       	push	r4
    6140:	5f 92       	push	r5
    6142:	6f 92       	push	r6
    6144:	7f 92       	push	r7
    6146:	8f 92       	push	r8
    6148:	9f 92       	push	r9
    614a:	af 92       	push	r10
    614c:	bf 92       	push	r11
    614e:	cf 92       	push	r12
    6150:	df 92       	push	r13
    6152:	ef 92       	push	r14
    6154:	ff 92       	push	r15
    6156:	0f 93       	push	r16
    6158:	1f 93       	push	r17
    615a:	cf 93       	push	r28
    615c:	df 93       	push	r29
    615e:	cd b7       	in	r28, 0x3d	; 61
    6160:	de b7       	in	r29, 0x3e	; 62
    6162:	ca 1b       	sub	r28, r26
    6164:	db 0b       	sbc	r29, r27
    6166:	0f b6       	in	r0, 0x3f	; 63
    6168:	f8 94       	cli
    616a:	de bf       	out	0x3e, r29	; 62
    616c:	0f be       	out	0x3f, r0	; 63
    616e:	cd bf       	out	0x3d, r28	; 61
    6170:	09 94       	ijmp

00006172 <__epilogue_restores__>:
    6172:	2a 88       	ldd	r2, Y+18	; 0x12
    6174:	39 88       	ldd	r3, Y+17	; 0x11
    6176:	48 88       	ldd	r4, Y+16	; 0x10
    6178:	5f 84       	ldd	r5, Y+15	; 0x0f
    617a:	6e 84       	ldd	r6, Y+14	; 0x0e
    617c:	7d 84       	ldd	r7, Y+13	; 0x0d
    617e:	8c 84       	ldd	r8, Y+12	; 0x0c
    6180:	9b 84       	ldd	r9, Y+11	; 0x0b
    6182:	aa 84       	ldd	r10, Y+10	; 0x0a
    6184:	b9 84       	ldd	r11, Y+9	; 0x09
    6186:	c8 84       	ldd	r12, Y+8	; 0x08
    6188:	df 80       	ldd	r13, Y+7	; 0x07
    618a:	ee 80       	ldd	r14, Y+6	; 0x06
    618c:	fd 80       	ldd	r15, Y+5	; 0x05
    618e:	0c 81       	ldd	r16, Y+4	; 0x04
    6190:	1b 81       	ldd	r17, Y+3	; 0x03
    6192:	aa 81       	ldd	r26, Y+2	; 0x02
    6194:	b9 81       	ldd	r27, Y+1	; 0x01
    6196:	ce 0f       	add	r28, r30
    6198:	d1 1d       	adc	r29, r1
    619a:	0f b6       	in	r0, 0x3f	; 63
    619c:	f8 94       	cli
    619e:	de bf       	out	0x3e, r29	; 62
    61a0:	0f be       	out	0x3f, r0	; 63
    61a2:	cd bf       	out	0x3d, r28	; 61
    61a4:	ed 01       	movw	r28, r26
    61a6:	08 95       	ret

000061a8 <dtostrf>:
    61a8:	ef 92       	push	r14
    61aa:	ff 92       	push	r15
    61ac:	0f 93       	push	r16
    61ae:	1f 93       	push	r17
    61b0:	f2 2f       	mov	r31, r18
    61b2:	f0 2e       	mov	r15, r16
    61b4:	47 fd       	sbrc	r20, 7
    61b6:	02 c0       	rjmp	.+4      	; 0x61bc <dtostrf+0x14>
    61b8:	e4 e0       	ldi	r30, 0x04	; 4
    61ba:	01 c0       	rjmp	.+2      	; 0x61be <dtostrf+0x16>
    61bc:	e4 e1       	ldi	r30, 0x14	; 20
    61be:	24 2f       	mov	r18, r20
    61c0:	33 27       	eor	r19, r19
    61c2:	27 fd       	sbrc	r18, 7
    61c4:	30 95       	com	r19
    61c6:	37 ff       	sbrs	r19, 7
    61c8:	03 c0       	rjmp	.+6      	; 0x61d0 <dtostrf+0x28>
    61ca:	30 95       	com	r19
    61cc:	21 95       	neg	r18
    61ce:	3f 4f       	sbci	r19, 0xFF	; 255
    61d0:	4f 2d       	mov	r20, r15
    61d2:	51 2f       	mov	r21, r17
    61d4:	0f 2f       	mov	r16, r31
    61d6:	ee 2e       	mov	r14, r30
    61d8:	0e 94 f6 32 	call	0x65ec	; 0x65ec <dtoa_prf>
    61dc:	8f 2d       	mov	r24, r15
    61de:	91 2f       	mov	r25, r17
    61e0:	1f 91       	pop	r17
    61e2:	0f 91       	pop	r16
    61e4:	ff 90       	pop	r15
    61e6:	ef 90       	pop	r14
    61e8:	08 95       	ret

000061ea <sprintf>:
    61ea:	ae e0       	ldi	r26, 0x0E	; 14
    61ec:	b0 e0       	ldi	r27, 0x00	; 0
    61ee:	eb ef       	ldi	r30, 0xFB	; 251
    61f0:	f0 e3       	ldi	r31, 0x30	; 48
    61f2:	0c 94 ab 30 	jmp	0x6156	; 0x6156 <__prologue_saves__+0x1c>
    61f6:	0d 89       	ldd	r16, Y+21	; 0x15
    61f8:	1e 89       	ldd	r17, Y+22	; 0x16
    61fa:	86 e0       	ldi	r24, 0x06	; 6
    61fc:	8c 83       	std	Y+4, r24	; 0x04
    61fe:	1a 83       	std	Y+2, r17	; 0x02
    6200:	09 83       	std	Y+1, r16	; 0x01
    6202:	8f ef       	ldi	r24, 0xFF	; 255
    6204:	9f e7       	ldi	r25, 0x7F	; 127
    6206:	9e 83       	std	Y+6, r25	; 0x06
    6208:	8d 83       	std	Y+5, r24	; 0x05
    620a:	9e 01       	movw	r18, r28
    620c:	27 5e       	subi	r18, 0xE7	; 231
    620e:	3f 4f       	sbci	r19, 0xFF	; 255
    6210:	ce 01       	movw	r24, r28
    6212:	01 96       	adiw	r24, 0x01	; 1
    6214:	6f 89       	ldd	r22, Y+23	; 0x17
    6216:	78 8d       	ldd	r23, Y+24	; 0x18
    6218:	a9 01       	movw	r20, r18
    621a:	0e 94 19 31 	call	0x6232	; 0x6232 <vfprintf>
    621e:	2f 81       	ldd	r18, Y+7	; 0x07
    6220:	38 85       	ldd	r19, Y+8	; 0x08
    6222:	02 0f       	add	r16, r18
    6224:	13 1f       	adc	r17, r19
    6226:	f8 01       	movw	r30, r16
    6228:	10 82       	st	Z, r1
    622a:	2e 96       	adiw	r28, 0x0e	; 14
    622c:	e4 e0       	ldi	r30, 0x04	; 4
    622e:	0c 94 c7 30 	jmp	0x618e	; 0x618e <__epilogue_restores__+0x1c>

00006232 <vfprintf>:
    6232:	ab e0       	ldi	r26, 0x0B	; 11
    6234:	b0 e0       	ldi	r27, 0x00	; 0
    6236:	ef e1       	ldi	r30, 0x1F	; 31
    6238:	f1 e3       	ldi	r31, 0x31	; 49
    623a:	0c 94 9d 30 	jmp	0x613a	; 0x613a <__prologue_saves__>
    623e:	3c 01       	movw	r6, r24
    6240:	2b 01       	movw	r4, r22
    6242:	5a 01       	movw	r10, r20
    6244:	fc 01       	movw	r30, r24
    6246:	17 82       	std	Z+7, r1	; 0x07
    6248:	16 82       	std	Z+6, r1	; 0x06
    624a:	83 81       	ldd	r24, Z+3	; 0x03
    624c:	81 fd       	sbrc	r24, 1
    624e:	03 c0       	rjmp	.+6      	; 0x6256 <vfprintf+0x24>
    6250:	6f ef       	ldi	r22, 0xFF	; 255
    6252:	7f ef       	ldi	r23, 0xFF	; 255
    6254:	c6 c1       	rjmp	.+908    	; 0x65e2 <vfprintf+0x3b0>
    6256:	9a e0       	ldi	r25, 0x0A	; 10
    6258:	89 2e       	mov	r8, r25
    625a:	1e 01       	movw	r2, r28
    625c:	08 94       	sec
    625e:	21 1c       	adc	r2, r1
    6260:	31 1c       	adc	r3, r1
    6262:	f3 01       	movw	r30, r6
    6264:	23 81       	ldd	r18, Z+3	; 0x03
    6266:	f2 01       	movw	r30, r4
    6268:	23 fd       	sbrc	r18, 3
    626a:	85 91       	lpm	r24, Z+
    626c:	23 ff       	sbrs	r18, 3
    626e:	81 91       	ld	r24, Z+
    6270:	2f 01       	movw	r4, r30
    6272:	88 23       	and	r24, r24
    6274:	09 f4       	brne	.+2      	; 0x6278 <vfprintf+0x46>
    6276:	b2 c1       	rjmp	.+868    	; 0x65dc <vfprintf+0x3aa>
    6278:	85 32       	cpi	r24, 0x25	; 37
    627a:	39 f4       	brne	.+14     	; 0x628a <vfprintf+0x58>
    627c:	23 fd       	sbrc	r18, 3
    627e:	85 91       	lpm	r24, Z+
    6280:	23 ff       	sbrs	r18, 3
    6282:	81 91       	ld	r24, Z+
    6284:	2f 01       	movw	r4, r30
    6286:	85 32       	cpi	r24, 0x25	; 37
    6288:	29 f4       	brne	.+10     	; 0x6294 <vfprintf+0x62>
    628a:	90 e0       	ldi	r25, 0x00	; 0
    628c:	b3 01       	movw	r22, r6
    628e:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    6292:	e7 cf       	rjmp	.-50     	; 0x6262 <vfprintf+0x30>
    6294:	98 2f       	mov	r25, r24
    6296:	ff 24       	eor	r15, r15
    6298:	ee 24       	eor	r14, r14
    629a:	99 24       	eor	r9, r9
    629c:	ff e1       	ldi	r31, 0x1F	; 31
    629e:	ff 15       	cp	r31, r15
    62a0:	d0 f0       	brcs	.+52     	; 0x62d6 <vfprintf+0xa4>
    62a2:	9b 32       	cpi	r25, 0x2B	; 43
    62a4:	69 f0       	breq	.+26     	; 0x62c0 <vfprintf+0x8e>
    62a6:	9c 32       	cpi	r25, 0x2C	; 44
    62a8:	28 f4       	brcc	.+10     	; 0x62b4 <vfprintf+0x82>
    62aa:	90 32       	cpi	r25, 0x20	; 32
    62ac:	59 f0       	breq	.+22     	; 0x62c4 <vfprintf+0x92>
    62ae:	93 32       	cpi	r25, 0x23	; 35
    62b0:	91 f4       	brne	.+36     	; 0x62d6 <vfprintf+0xa4>
    62b2:	0e c0       	rjmp	.+28     	; 0x62d0 <vfprintf+0x9e>
    62b4:	9d 32       	cpi	r25, 0x2D	; 45
    62b6:	49 f0       	breq	.+18     	; 0x62ca <vfprintf+0x98>
    62b8:	90 33       	cpi	r25, 0x30	; 48
    62ba:	69 f4       	brne	.+26     	; 0x62d6 <vfprintf+0xa4>
    62bc:	41 e0       	ldi	r20, 0x01	; 1
    62be:	24 c0       	rjmp	.+72     	; 0x6308 <vfprintf+0xd6>
    62c0:	52 e0       	ldi	r21, 0x02	; 2
    62c2:	f5 2a       	or	r15, r21
    62c4:	84 e0       	ldi	r24, 0x04	; 4
    62c6:	f8 2a       	or	r15, r24
    62c8:	28 c0       	rjmp	.+80     	; 0x631a <vfprintf+0xe8>
    62ca:	98 e0       	ldi	r25, 0x08	; 8
    62cc:	f9 2a       	or	r15, r25
    62ce:	25 c0       	rjmp	.+74     	; 0x631a <vfprintf+0xe8>
    62d0:	e0 e1       	ldi	r30, 0x10	; 16
    62d2:	fe 2a       	or	r15, r30
    62d4:	22 c0       	rjmp	.+68     	; 0x631a <vfprintf+0xe8>
    62d6:	f7 fc       	sbrc	r15, 7
    62d8:	29 c0       	rjmp	.+82     	; 0x632c <vfprintf+0xfa>
    62da:	89 2f       	mov	r24, r25
    62dc:	80 53       	subi	r24, 0x30	; 48
    62de:	8a 30       	cpi	r24, 0x0A	; 10
    62e0:	70 f4       	brcc	.+28     	; 0x62fe <vfprintf+0xcc>
    62e2:	f6 fe       	sbrs	r15, 6
    62e4:	05 c0       	rjmp	.+10     	; 0x62f0 <vfprintf+0xbe>
    62e6:	98 9c       	mul	r9, r8
    62e8:	90 2c       	mov	r9, r0
    62ea:	11 24       	eor	r1, r1
    62ec:	98 0e       	add	r9, r24
    62ee:	15 c0       	rjmp	.+42     	; 0x631a <vfprintf+0xe8>
    62f0:	e8 9c       	mul	r14, r8
    62f2:	e0 2c       	mov	r14, r0
    62f4:	11 24       	eor	r1, r1
    62f6:	e8 0e       	add	r14, r24
    62f8:	f0 e2       	ldi	r31, 0x20	; 32
    62fa:	ff 2a       	or	r15, r31
    62fc:	0e c0       	rjmp	.+28     	; 0x631a <vfprintf+0xe8>
    62fe:	9e 32       	cpi	r25, 0x2E	; 46
    6300:	29 f4       	brne	.+10     	; 0x630c <vfprintf+0xda>
    6302:	f6 fc       	sbrc	r15, 6
    6304:	6b c1       	rjmp	.+726    	; 0x65dc <vfprintf+0x3aa>
    6306:	40 e4       	ldi	r20, 0x40	; 64
    6308:	f4 2a       	or	r15, r20
    630a:	07 c0       	rjmp	.+14     	; 0x631a <vfprintf+0xe8>
    630c:	9c 36       	cpi	r25, 0x6C	; 108
    630e:	19 f4       	brne	.+6      	; 0x6316 <vfprintf+0xe4>
    6310:	50 e8       	ldi	r21, 0x80	; 128
    6312:	f5 2a       	or	r15, r21
    6314:	02 c0       	rjmp	.+4      	; 0x631a <vfprintf+0xe8>
    6316:	98 36       	cpi	r25, 0x68	; 104
    6318:	49 f4       	brne	.+18     	; 0x632c <vfprintf+0xfa>
    631a:	f2 01       	movw	r30, r4
    631c:	23 fd       	sbrc	r18, 3
    631e:	95 91       	lpm	r25, Z+
    6320:	23 ff       	sbrs	r18, 3
    6322:	91 91       	ld	r25, Z+
    6324:	2f 01       	movw	r4, r30
    6326:	99 23       	and	r25, r25
    6328:	09 f0       	breq	.+2      	; 0x632c <vfprintf+0xfa>
    632a:	b8 cf       	rjmp	.-144    	; 0x629c <vfprintf+0x6a>
    632c:	89 2f       	mov	r24, r25
    632e:	85 54       	subi	r24, 0x45	; 69
    6330:	83 30       	cpi	r24, 0x03	; 3
    6332:	18 f0       	brcs	.+6      	; 0x633a <vfprintf+0x108>
    6334:	80 52       	subi	r24, 0x20	; 32
    6336:	83 30       	cpi	r24, 0x03	; 3
    6338:	38 f4       	brcc	.+14     	; 0x6348 <vfprintf+0x116>
    633a:	44 e0       	ldi	r20, 0x04	; 4
    633c:	50 e0       	ldi	r21, 0x00	; 0
    633e:	a4 0e       	add	r10, r20
    6340:	b5 1e       	adc	r11, r21
    6342:	5f e3       	ldi	r21, 0x3F	; 63
    6344:	59 83       	std	Y+1, r21	; 0x01
    6346:	0f c0       	rjmp	.+30     	; 0x6366 <vfprintf+0x134>
    6348:	93 36       	cpi	r25, 0x63	; 99
    634a:	31 f0       	breq	.+12     	; 0x6358 <vfprintf+0x126>
    634c:	93 37       	cpi	r25, 0x73	; 115
    634e:	79 f0       	breq	.+30     	; 0x636e <vfprintf+0x13c>
    6350:	93 35       	cpi	r25, 0x53	; 83
    6352:	09 f0       	breq	.+2      	; 0x6356 <vfprintf+0x124>
    6354:	56 c0       	rjmp	.+172    	; 0x6402 <vfprintf+0x1d0>
    6356:	20 c0       	rjmp	.+64     	; 0x6398 <vfprintf+0x166>
    6358:	f5 01       	movw	r30, r10
    635a:	80 81       	ld	r24, Z
    635c:	89 83       	std	Y+1, r24	; 0x01
    635e:	42 e0       	ldi	r20, 0x02	; 2
    6360:	50 e0       	ldi	r21, 0x00	; 0
    6362:	a4 0e       	add	r10, r20
    6364:	b5 1e       	adc	r11, r21
    6366:	61 01       	movw	r12, r2
    6368:	01 e0       	ldi	r16, 0x01	; 1
    636a:	10 e0       	ldi	r17, 0x00	; 0
    636c:	12 c0       	rjmp	.+36     	; 0x6392 <vfprintf+0x160>
    636e:	f5 01       	movw	r30, r10
    6370:	c0 80       	ld	r12, Z
    6372:	d1 80       	ldd	r13, Z+1	; 0x01
    6374:	f6 fc       	sbrc	r15, 6
    6376:	03 c0       	rjmp	.+6      	; 0x637e <vfprintf+0x14c>
    6378:	6f ef       	ldi	r22, 0xFF	; 255
    637a:	7f ef       	ldi	r23, 0xFF	; 255
    637c:	02 c0       	rjmp	.+4      	; 0x6382 <vfprintf+0x150>
    637e:	69 2d       	mov	r22, r9
    6380:	70 e0       	ldi	r23, 0x00	; 0
    6382:	42 e0       	ldi	r20, 0x02	; 2
    6384:	50 e0       	ldi	r21, 0x00	; 0
    6386:	a4 0e       	add	r10, r20
    6388:	b5 1e       	adc	r11, r21
    638a:	c6 01       	movw	r24, r12
    638c:	0e 94 3b 35 	call	0x6a76	; 0x6a76 <strnlen>
    6390:	8c 01       	movw	r16, r24
    6392:	5f e7       	ldi	r21, 0x7F	; 127
    6394:	f5 22       	and	r15, r21
    6396:	14 c0       	rjmp	.+40     	; 0x63c0 <vfprintf+0x18e>
    6398:	f5 01       	movw	r30, r10
    639a:	c0 80       	ld	r12, Z
    639c:	d1 80       	ldd	r13, Z+1	; 0x01
    639e:	f6 fc       	sbrc	r15, 6
    63a0:	03 c0       	rjmp	.+6      	; 0x63a8 <vfprintf+0x176>
    63a2:	6f ef       	ldi	r22, 0xFF	; 255
    63a4:	7f ef       	ldi	r23, 0xFF	; 255
    63a6:	02 c0       	rjmp	.+4      	; 0x63ac <vfprintf+0x17a>
    63a8:	69 2d       	mov	r22, r9
    63aa:	70 e0       	ldi	r23, 0x00	; 0
    63ac:	42 e0       	ldi	r20, 0x02	; 2
    63ae:	50 e0       	ldi	r21, 0x00	; 0
    63b0:	a4 0e       	add	r10, r20
    63b2:	b5 1e       	adc	r11, r21
    63b4:	c6 01       	movw	r24, r12
    63b6:	0e 94 30 35 	call	0x6a60	; 0x6a60 <strnlen_P>
    63ba:	8c 01       	movw	r16, r24
    63bc:	50 e8       	ldi	r21, 0x80	; 128
    63be:	f5 2a       	or	r15, r21
    63c0:	f3 fe       	sbrs	r15, 3
    63c2:	07 c0       	rjmp	.+14     	; 0x63d2 <vfprintf+0x1a0>
    63c4:	1a c0       	rjmp	.+52     	; 0x63fa <vfprintf+0x1c8>
    63c6:	80 e2       	ldi	r24, 0x20	; 32
    63c8:	90 e0       	ldi	r25, 0x00	; 0
    63ca:	b3 01       	movw	r22, r6
    63cc:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    63d0:	ea 94       	dec	r14
    63d2:	8e 2d       	mov	r24, r14
    63d4:	90 e0       	ldi	r25, 0x00	; 0
    63d6:	08 17       	cp	r16, r24
    63d8:	19 07       	cpc	r17, r25
    63da:	a8 f3       	brcs	.-22     	; 0x63c6 <vfprintf+0x194>
    63dc:	0e c0       	rjmp	.+28     	; 0x63fa <vfprintf+0x1c8>
    63de:	f6 01       	movw	r30, r12
    63e0:	f7 fc       	sbrc	r15, 7
    63e2:	85 91       	lpm	r24, Z+
    63e4:	f7 fe       	sbrs	r15, 7
    63e6:	81 91       	ld	r24, Z+
    63e8:	6f 01       	movw	r12, r30
    63ea:	90 e0       	ldi	r25, 0x00	; 0
    63ec:	b3 01       	movw	r22, r6
    63ee:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    63f2:	e1 10       	cpse	r14, r1
    63f4:	ea 94       	dec	r14
    63f6:	01 50       	subi	r16, 0x01	; 1
    63f8:	10 40       	sbci	r17, 0x00	; 0
    63fa:	01 15       	cp	r16, r1
    63fc:	11 05       	cpc	r17, r1
    63fe:	79 f7       	brne	.-34     	; 0x63de <vfprintf+0x1ac>
    6400:	ea c0       	rjmp	.+468    	; 0x65d6 <vfprintf+0x3a4>
    6402:	94 36       	cpi	r25, 0x64	; 100
    6404:	11 f0       	breq	.+4      	; 0x640a <vfprintf+0x1d8>
    6406:	99 36       	cpi	r25, 0x69	; 105
    6408:	69 f5       	brne	.+90     	; 0x6464 <vfprintf+0x232>
    640a:	f7 fe       	sbrs	r15, 7
    640c:	08 c0       	rjmp	.+16     	; 0x641e <vfprintf+0x1ec>
    640e:	f5 01       	movw	r30, r10
    6410:	20 81       	ld	r18, Z
    6412:	31 81       	ldd	r19, Z+1	; 0x01
    6414:	42 81       	ldd	r20, Z+2	; 0x02
    6416:	53 81       	ldd	r21, Z+3	; 0x03
    6418:	84 e0       	ldi	r24, 0x04	; 4
    641a:	90 e0       	ldi	r25, 0x00	; 0
    641c:	0a c0       	rjmp	.+20     	; 0x6432 <vfprintf+0x200>
    641e:	f5 01       	movw	r30, r10
    6420:	80 81       	ld	r24, Z
    6422:	91 81       	ldd	r25, Z+1	; 0x01
    6424:	9c 01       	movw	r18, r24
    6426:	44 27       	eor	r20, r20
    6428:	37 fd       	sbrc	r19, 7
    642a:	40 95       	com	r20
    642c:	54 2f       	mov	r21, r20
    642e:	82 e0       	ldi	r24, 0x02	; 2
    6430:	90 e0       	ldi	r25, 0x00	; 0
    6432:	a8 0e       	add	r10, r24
    6434:	b9 1e       	adc	r11, r25
    6436:	9f e6       	ldi	r25, 0x6F	; 111
    6438:	f9 22       	and	r15, r25
    643a:	57 ff       	sbrs	r21, 7
    643c:	09 c0       	rjmp	.+18     	; 0x6450 <vfprintf+0x21e>
    643e:	50 95       	com	r21
    6440:	40 95       	com	r20
    6442:	30 95       	com	r19
    6444:	21 95       	neg	r18
    6446:	3f 4f       	sbci	r19, 0xFF	; 255
    6448:	4f 4f       	sbci	r20, 0xFF	; 255
    644a:	5f 4f       	sbci	r21, 0xFF	; 255
    644c:	e0 e8       	ldi	r30, 0x80	; 128
    644e:	fe 2a       	or	r15, r30
    6450:	ca 01       	movw	r24, r20
    6452:	b9 01       	movw	r22, r18
    6454:	a1 01       	movw	r20, r2
    6456:	2a e0       	ldi	r18, 0x0A	; 10
    6458:	30 e0       	ldi	r19, 0x00	; 0
    645a:	0e 94 72 35 	call	0x6ae4	; 0x6ae4 <__ultoa_invert>
    645e:	d8 2e       	mov	r13, r24
    6460:	d2 18       	sub	r13, r2
    6462:	40 c0       	rjmp	.+128    	; 0x64e4 <vfprintf+0x2b2>
    6464:	95 37       	cpi	r25, 0x75	; 117
    6466:	29 f4       	brne	.+10     	; 0x6472 <vfprintf+0x240>
    6468:	1f 2d       	mov	r17, r15
    646a:	1f 7e       	andi	r17, 0xEF	; 239
    646c:	2a e0       	ldi	r18, 0x0A	; 10
    646e:	30 e0       	ldi	r19, 0x00	; 0
    6470:	1d c0       	rjmp	.+58     	; 0x64ac <vfprintf+0x27a>
    6472:	1f 2d       	mov	r17, r15
    6474:	19 7f       	andi	r17, 0xF9	; 249
    6476:	9f 36       	cpi	r25, 0x6F	; 111
    6478:	61 f0       	breq	.+24     	; 0x6492 <vfprintf+0x260>
    647a:	90 37       	cpi	r25, 0x70	; 112
    647c:	20 f4       	brcc	.+8      	; 0x6486 <vfprintf+0x254>
    647e:	98 35       	cpi	r25, 0x58	; 88
    6480:	09 f0       	breq	.+2      	; 0x6484 <vfprintf+0x252>
    6482:	ac c0       	rjmp	.+344    	; 0x65dc <vfprintf+0x3aa>
    6484:	0f c0       	rjmp	.+30     	; 0x64a4 <vfprintf+0x272>
    6486:	90 37       	cpi	r25, 0x70	; 112
    6488:	39 f0       	breq	.+14     	; 0x6498 <vfprintf+0x266>
    648a:	98 37       	cpi	r25, 0x78	; 120
    648c:	09 f0       	breq	.+2      	; 0x6490 <vfprintf+0x25e>
    648e:	a6 c0       	rjmp	.+332    	; 0x65dc <vfprintf+0x3aa>
    6490:	04 c0       	rjmp	.+8      	; 0x649a <vfprintf+0x268>
    6492:	28 e0       	ldi	r18, 0x08	; 8
    6494:	30 e0       	ldi	r19, 0x00	; 0
    6496:	0a c0       	rjmp	.+20     	; 0x64ac <vfprintf+0x27a>
    6498:	10 61       	ori	r17, 0x10	; 16
    649a:	14 fd       	sbrc	r17, 4
    649c:	14 60       	ori	r17, 0x04	; 4
    649e:	20 e1       	ldi	r18, 0x10	; 16
    64a0:	30 e0       	ldi	r19, 0x00	; 0
    64a2:	04 c0       	rjmp	.+8      	; 0x64ac <vfprintf+0x27a>
    64a4:	14 fd       	sbrc	r17, 4
    64a6:	16 60       	ori	r17, 0x06	; 6
    64a8:	20 e1       	ldi	r18, 0x10	; 16
    64aa:	32 e0       	ldi	r19, 0x02	; 2
    64ac:	17 ff       	sbrs	r17, 7
    64ae:	08 c0       	rjmp	.+16     	; 0x64c0 <vfprintf+0x28e>
    64b0:	f5 01       	movw	r30, r10
    64b2:	60 81       	ld	r22, Z
    64b4:	71 81       	ldd	r23, Z+1	; 0x01
    64b6:	82 81       	ldd	r24, Z+2	; 0x02
    64b8:	93 81       	ldd	r25, Z+3	; 0x03
    64ba:	44 e0       	ldi	r20, 0x04	; 4
    64bc:	50 e0       	ldi	r21, 0x00	; 0
    64be:	08 c0       	rjmp	.+16     	; 0x64d0 <vfprintf+0x29e>
    64c0:	f5 01       	movw	r30, r10
    64c2:	80 81       	ld	r24, Z
    64c4:	91 81       	ldd	r25, Z+1	; 0x01
    64c6:	bc 01       	movw	r22, r24
    64c8:	80 e0       	ldi	r24, 0x00	; 0
    64ca:	90 e0       	ldi	r25, 0x00	; 0
    64cc:	42 e0       	ldi	r20, 0x02	; 2
    64ce:	50 e0       	ldi	r21, 0x00	; 0
    64d0:	a4 0e       	add	r10, r20
    64d2:	b5 1e       	adc	r11, r21
    64d4:	a1 01       	movw	r20, r2
    64d6:	0e 94 72 35 	call	0x6ae4	; 0x6ae4 <__ultoa_invert>
    64da:	d8 2e       	mov	r13, r24
    64dc:	d2 18       	sub	r13, r2
    64de:	8f e7       	ldi	r24, 0x7F	; 127
    64e0:	f8 2e       	mov	r15, r24
    64e2:	f1 22       	and	r15, r17
    64e4:	f6 fe       	sbrs	r15, 6
    64e6:	0b c0       	rjmp	.+22     	; 0x64fe <vfprintf+0x2cc>
    64e8:	5e ef       	ldi	r21, 0xFE	; 254
    64ea:	f5 22       	and	r15, r21
    64ec:	d9 14       	cp	r13, r9
    64ee:	38 f4       	brcc	.+14     	; 0x64fe <vfprintf+0x2cc>
    64f0:	f4 fe       	sbrs	r15, 4
    64f2:	07 c0       	rjmp	.+14     	; 0x6502 <vfprintf+0x2d0>
    64f4:	f2 fc       	sbrc	r15, 2
    64f6:	05 c0       	rjmp	.+10     	; 0x6502 <vfprintf+0x2d0>
    64f8:	8f ee       	ldi	r24, 0xEF	; 239
    64fa:	f8 22       	and	r15, r24
    64fc:	02 c0       	rjmp	.+4      	; 0x6502 <vfprintf+0x2d0>
    64fe:	1d 2d       	mov	r17, r13
    6500:	01 c0       	rjmp	.+2      	; 0x6504 <vfprintf+0x2d2>
    6502:	19 2d       	mov	r17, r9
    6504:	f4 fe       	sbrs	r15, 4
    6506:	0d c0       	rjmp	.+26     	; 0x6522 <vfprintf+0x2f0>
    6508:	fe 01       	movw	r30, r28
    650a:	ed 0d       	add	r30, r13
    650c:	f1 1d       	adc	r31, r1
    650e:	80 81       	ld	r24, Z
    6510:	80 33       	cpi	r24, 0x30	; 48
    6512:	19 f4       	brne	.+6      	; 0x651a <vfprintf+0x2e8>
    6514:	99 ee       	ldi	r25, 0xE9	; 233
    6516:	f9 22       	and	r15, r25
    6518:	08 c0       	rjmp	.+16     	; 0x652a <vfprintf+0x2f8>
    651a:	1f 5f       	subi	r17, 0xFF	; 255
    651c:	f2 fe       	sbrs	r15, 2
    651e:	05 c0       	rjmp	.+10     	; 0x652a <vfprintf+0x2f8>
    6520:	03 c0       	rjmp	.+6      	; 0x6528 <vfprintf+0x2f6>
    6522:	8f 2d       	mov	r24, r15
    6524:	86 78       	andi	r24, 0x86	; 134
    6526:	09 f0       	breq	.+2      	; 0x652a <vfprintf+0x2f8>
    6528:	1f 5f       	subi	r17, 0xFF	; 255
    652a:	0f 2d       	mov	r16, r15
    652c:	f3 fc       	sbrc	r15, 3
    652e:	14 c0       	rjmp	.+40     	; 0x6558 <vfprintf+0x326>
    6530:	f0 fe       	sbrs	r15, 0
    6532:	0f c0       	rjmp	.+30     	; 0x6552 <vfprintf+0x320>
    6534:	1e 15       	cp	r17, r14
    6536:	10 f0       	brcs	.+4      	; 0x653c <vfprintf+0x30a>
    6538:	9d 2c       	mov	r9, r13
    653a:	0b c0       	rjmp	.+22     	; 0x6552 <vfprintf+0x320>
    653c:	9d 2c       	mov	r9, r13
    653e:	9e 0c       	add	r9, r14
    6540:	91 1a       	sub	r9, r17
    6542:	1e 2d       	mov	r17, r14
    6544:	06 c0       	rjmp	.+12     	; 0x6552 <vfprintf+0x320>
    6546:	80 e2       	ldi	r24, 0x20	; 32
    6548:	90 e0       	ldi	r25, 0x00	; 0
    654a:	b3 01       	movw	r22, r6
    654c:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    6550:	1f 5f       	subi	r17, 0xFF	; 255
    6552:	1e 15       	cp	r17, r14
    6554:	c0 f3       	brcs	.-16     	; 0x6546 <vfprintf+0x314>
    6556:	04 c0       	rjmp	.+8      	; 0x6560 <vfprintf+0x32e>
    6558:	1e 15       	cp	r17, r14
    655a:	10 f4       	brcc	.+4      	; 0x6560 <vfprintf+0x32e>
    655c:	e1 1a       	sub	r14, r17
    655e:	01 c0       	rjmp	.+2      	; 0x6562 <vfprintf+0x330>
    6560:	ee 24       	eor	r14, r14
    6562:	04 ff       	sbrs	r16, 4
    6564:	0f c0       	rjmp	.+30     	; 0x6584 <vfprintf+0x352>
    6566:	80 e3       	ldi	r24, 0x30	; 48
    6568:	90 e0       	ldi	r25, 0x00	; 0
    656a:	b3 01       	movw	r22, r6
    656c:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    6570:	02 ff       	sbrs	r16, 2
    6572:	1d c0       	rjmp	.+58     	; 0x65ae <vfprintf+0x37c>
    6574:	01 fd       	sbrc	r16, 1
    6576:	03 c0       	rjmp	.+6      	; 0x657e <vfprintf+0x34c>
    6578:	88 e7       	ldi	r24, 0x78	; 120
    657a:	90 e0       	ldi	r25, 0x00	; 0
    657c:	0e c0       	rjmp	.+28     	; 0x659a <vfprintf+0x368>
    657e:	88 e5       	ldi	r24, 0x58	; 88
    6580:	90 e0       	ldi	r25, 0x00	; 0
    6582:	0b c0       	rjmp	.+22     	; 0x659a <vfprintf+0x368>
    6584:	80 2f       	mov	r24, r16
    6586:	86 78       	andi	r24, 0x86	; 134
    6588:	91 f0       	breq	.+36     	; 0x65ae <vfprintf+0x37c>
    658a:	01 ff       	sbrs	r16, 1
    658c:	02 c0       	rjmp	.+4      	; 0x6592 <vfprintf+0x360>
    658e:	8b e2       	ldi	r24, 0x2B	; 43
    6590:	01 c0       	rjmp	.+2      	; 0x6594 <vfprintf+0x362>
    6592:	80 e2       	ldi	r24, 0x20	; 32
    6594:	f7 fc       	sbrc	r15, 7
    6596:	8d e2       	ldi	r24, 0x2D	; 45
    6598:	90 e0       	ldi	r25, 0x00	; 0
    659a:	b3 01       	movw	r22, r6
    659c:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    65a0:	06 c0       	rjmp	.+12     	; 0x65ae <vfprintf+0x37c>
    65a2:	80 e3       	ldi	r24, 0x30	; 48
    65a4:	90 e0       	ldi	r25, 0x00	; 0
    65a6:	b3 01       	movw	r22, r6
    65a8:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    65ac:	9a 94       	dec	r9
    65ae:	d9 14       	cp	r13, r9
    65b0:	c0 f3       	brcs	.-16     	; 0x65a2 <vfprintf+0x370>
    65b2:	da 94       	dec	r13
    65b4:	f1 01       	movw	r30, r2
    65b6:	ed 0d       	add	r30, r13
    65b8:	f1 1d       	adc	r31, r1
    65ba:	80 81       	ld	r24, Z
    65bc:	90 e0       	ldi	r25, 0x00	; 0
    65be:	b3 01       	movw	r22, r6
    65c0:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    65c4:	dd 20       	and	r13, r13
    65c6:	a9 f7       	brne	.-22     	; 0x65b2 <vfprintf+0x380>
    65c8:	06 c0       	rjmp	.+12     	; 0x65d6 <vfprintf+0x3a4>
    65ca:	80 e2       	ldi	r24, 0x20	; 32
    65cc:	90 e0       	ldi	r25, 0x00	; 0
    65ce:	b3 01       	movw	r22, r6
    65d0:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <fputc>
    65d4:	ea 94       	dec	r14
    65d6:	ee 20       	and	r14, r14
    65d8:	c1 f7       	brne	.-16     	; 0x65ca <vfprintf+0x398>
    65da:	43 ce       	rjmp	.-890    	; 0x6262 <vfprintf+0x30>
    65dc:	f3 01       	movw	r30, r6
    65de:	66 81       	ldd	r22, Z+6	; 0x06
    65e0:	77 81       	ldd	r23, Z+7	; 0x07
    65e2:	cb 01       	movw	r24, r22
    65e4:	2b 96       	adiw	r28, 0x0b	; 11
    65e6:	e2 e1       	ldi	r30, 0x12	; 18
    65e8:	0c 94 b9 30 	jmp	0x6172	; 0x6172 <__epilogue_restores__>

000065ec <dtoa_prf>:
    65ec:	a9 e0       	ldi	r26, 0x09	; 9
    65ee:	b0 e0       	ldi	r27, 0x00	; 0
    65f0:	ec ef       	ldi	r30, 0xFC	; 252
    65f2:	f2 e3       	ldi	r31, 0x32	; 50
    65f4:	0c 94 a1 30 	jmp	0x6142	; 0x6142 <__prologue_saves__+0x8>
    65f8:	6a 01       	movw	r12, r20
    65fa:	12 2f       	mov	r17, r18
    65fc:	a0 2e       	mov	r10, r16
    65fe:	be 2c       	mov	r11, r14
    6600:	2b e3       	ldi	r18, 0x3B	; 59
    6602:	20 17       	cp	r18, r16
    6604:	18 f4       	brcc	.+6      	; 0x660c <dtoa_prf+0x20>
    6606:	2c e3       	ldi	r18, 0x3C	; 60
    6608:	92 2e       	mov	r9, r18
    660a:	02 c0       	rjmp	.+4      	; 0x6610 <dtoa_prf+0x24>
    660c:	90 2e       	mov	r9, r16
    660e:	93 94       	inc	r9
    6610:	ae 01       	movw	r20, r28
    6612:	4f 5f       	subi	r20, 0xFF	; 255
    6614:	5f 4f       	sbci	r21, 0xFF	; 255
    6616:	27 e0       	ldi	r18, 0x07	; 7
    6618:	09 2d       	mov	r16, r9
    661a:	0e 94 58 34 	call	0x68b0	; 0x68b0 <__ftoa_engine>
    661e:	bc 01       	movw	r22, r24
    6620:	89 81       	ldd	r24, Y+1	; 0x01
    6622:	e8 2e       	mov	r14, r24
    6624:	ff 24       	eor	r15, r15
    6626:	c7 01       	movw	r24, r14
    6628:	89 70       	andi	r24, 0x09	; 9
    662a:	90 70       	andi	r25, 0x00	; 0
    662c:	01 97       	sbiw	r24, 0x01	; 1
    662e:	11 f4       	brne	.+4      	; 0x6634 <dtoa_prf+0x48>
    6630:	ad e2       	ldi	r26, 0x2D	; 45
    6632:	09 c0       	rjmp	.+18     	; 0x6646 <dtoa_prf+0x5a>
    6634:	b1 fe       	sbrs	r11, 1
    6636:	02 c0       	rjmp	.+4      	; 0x663c <dtoa_prf+0x50>
    6638:	ab e2       	ldi	r26, 0x2B	; 43
    663a:	05 c0       	rjmp	.+10     	; 0x6646 <dtoa_prf+0x5a>
    663c:	b0 fc       	sbrc	r11, 0
    663e:	02 c0       	rjmp	.+4      	; 0x6644 <dtoa_prf+0x58>
    6640:	a0 e0       	ldi	r26, 0x00	; 0
    6642:	01 c0       	rjmp	.+2      	; 0x6646 <dtoa_prf+0x5a>
    6644:	a0 e2       	ldi	r26, 0x20	; 32
    6646:	e3 fe       	sbrs	r14, 3
    6648:	3b c0       	rjmp	.+118    	; 0x66c0 <dtoa_prf+0xd4>
    664a:	aa 23       	and	r26, r26
    664c:	11 f4       	brne	.+4      	; 0x6652 <dtoa_prf+0x66>
    664e:	23 e0       	ldi	r18, 0x03	; 3
    6650:	01 c0       	rjmp	.+2      	; 0x6654 <dtoa_prf+0x68>
    6652:	24 e0       	ldi	r18, 0x04	; 4
    6654:	21 17       	cp	r18, r17
    6656:	10 f0       	brcs	.+4      	; 0x665c <dtoa_prf+0x70>
    6658:	20 e0       	ldi	r18, 0x00	; 0
    665a:	02 c0       	rjmp	.+4      	; 0x6660 <dtoa_prf+0x74>
    665c:	12 1b       	sub	r17, r18
    665e:	21 2f       	mov	r18, r17
    6660:	eb 2c       	mov	r14, r11
    6662:	b4 fe       	sbrs	r11, 4
    6664:	02 c0       	rjmp	.+4      	; 0x666a <dtoa_prf+0x7e>
    6666:	32 2f       	mov	r19, r18
    6668:	0a c0       	rjmp	.+20     	; 0x667e <dtoa_prf+0x92>
    666a:	f6 01       	movw	r30, r12
    666c:	32 2f       	mov	r19, r18
    666e:	80 e2       	ldi	r24, 0x20	; 32
    6670:	02 c0       	rjmp	.+4      	; 0x6676 <dtoa_prf+0x8a>
    6672:	81 93       	st	Z+, r24
    6674:	31 50       	subi	r19, 0x01	; 1
    6676:	33 23       	and	r19, r19
    6678:	e1 f7       	brne	.-8      	; 0x6672 <dtoa_prf+0x86>
    667a:	c2 0e       	add	r12, r18
    667c:	d1 1c       	adc	r13, r1
    667e:	aa 23       	and	r26, r26
    6680:	19 f0       	breq	.+6      	; 0x6688 <dtoa_prf+0x9c>
    6682:	f6 01       	movw	r30, r12
    6684:	a1 93       	st	Z+, r26
    6686:	6f 01       	movw	r12, r30
    6688:	f6 01       	movw	r30, r12
    668a:	31 96       	adiw	r30, 0x01	; 1
    668c:	e2 fe       	sbrs	r14, 2
    668e:	05 c0       	rjmp	.+10     	; 0x669a <dtoa_prf+0xae>
    6690:	9e e4       	ldi	r25, 0x4E	; 78
    6692:	d6 01       	movw	r26, r12
    6694:	9c 93       	st	X, r25
    6696:	81 e4       	ldi	r24, 0x41	; 65
    6698:	04 c0       	rjmp	.+8      	; 0x66a2 <dtoa_prf+0xb6>
    669a:	9e e6       	ldi	r25, 0x6E	; 110
    669c:	d6 01       	movw	r26, r12
    669e:	9c 93       	st	X, r25
    66a0:	81 e6       	ldi	r24, 0x61	; 97
    66a2:	11 96       	adiw	r26, 0x01	; 1
    66a4:	8c 93       	st	X, r24
    66a6:	91 83       	std	Z+1, r25	; 0x01
    66a8:	32 96       	adiw	r30, 0x02	; 2
    66aa:	df 01       	movw	r26, r30
    66ac:	83 2f       	mov	r24, r19
    66ae:	90 e2       	ldi	r25, 0x20	; 32
    66b0:	02 c0       	rjmp	.+4      	; 0x66b6 <dtoa_prf+0xca>
    66b2:	9d 93       	st	X+, r25
    66b4:	81 50       	subi	r24, 0x01	; 1
    66b6:	88 23       	and	r24, r24
    66b8:	e1 f7       	brne	.-8      	; 0x66b2 <dtoa_prf+0xc6>
    66ba:	e3 0f       	add	r30, r19
    66bc:	f1 1d       	adc	r31, r1
    66be:	40 c0       	rjmp	.+128    	; 0x6740 <dtoa_prf+0x154>
    66c0:	e2 fe       	sbrs	r14, 2
    66c2:	42 c0       	rjmp	.+132    	; 0x6748 <dtoa_prf+0x15c>
    66c4:	aa 23       	and	r26, r26
    66c6:	11 f4       	brne	.+4      	; 0x66cc <dtoa_prf+0xe0>
    66c8:	23 e0       	ldi	r18, 0x03	; 3
    66ca:	01 c0       	rjmp	.+2      	; 0x66ce <dtoa_prf+0xe2>
    66cc:	24 e0       	ldi	r18, 0x04	; 4
    66ce:	21 17       	cp	r18, r17
    66d0:	10 f0       	brcs	.+4      	; 0x66d6 <dtoa_prf+0xea>
    66d2:	20 e0       	ldi	r18, 0x00	; 0
    66d4:	02 c0       	rjmp	.+4      	; 0x66da <dtoa_prf+0xee>
    66d6:	12 1b       	sub	r17, r18
    66d8:	21 2f       	mov	r18, r17
    66da:	eb 2c       	mov	r14, r11
    66dc:	b4 fe       	sbrs	r11, 4
    66de:	02 c0       	rjmp	.+4      	; 0x66e4 <dtoa_prf+0xf8>
    66e0:	92 2f       	mov	r25, r18
    66e2:	0a c0       	rjmp	.+20     	; 0x66f8 <dtoa_prf+0x10c>
    66e4:	f6 01       	movw	r30, r12
    66e6:	92 2f       	mov	r25, r18
    66e8:	80 e2       	ldi	r24, 0x20	; 32
    66ea:	02 c0       	rjmp	.+4      	; 0x66f0 <dtoa_prf+0x104>
    66ec:	81 93       	st	Z+, r24
    66ee:	91 50       	subi	r25, 0x01	; 1
    66f0:	99 23       	and	r25, r25
    66f2:	e1 f7       	brne	.-8      	; 0x66ec <dtoa_prf+0x100>
    66f4:	c2 0e       	add	r12, r18
    66f6:	d1 1c       	adc	r13, r1
    66f8:	aa 23       	and	r26, r26
    66fa:	19 f0       	breq	.+6      	; 0x6702 <dtoa_prf+0x116>
    66fc:	f6 01       	movw	r30, r12
    66fe:	a1 93       	st	Z+, r26
    6700:	6f 01       	movw	r12, r30
    6702:	f6 01       	movw	r30, r12
    6704:	31 96       	adiw	r30, 0x01	; 1
    6706:	e2 fe       	sbrs	r14, 2
    6708:	08 c0       	rjmp	.+16     	; 0x671a <dtoa_prf+0x12e>
    670a:	89 e4       	ldi	r24, 0x49	; 73
    670c:	d6 01       	movw	r26, r12
    670e:	8c 93       	st	X, r24
    6710:	8e e4       	ldi	r24, 0x4E	; 78
    6712:	11 96       	adiw	r26, 0x01	; 1
    6714:	8c 93       	st	X, r24
    6716:	86 e4       	ldi	r24, 0x46	; 70
    6718:	07 c0       	rjmp	.+14     	; 0x6728 <dtoa_prf+0x13c>
    671a:	89 e6       	ldi	r24, 0x69	; 105
    671c:	d6 01       	movw	r26, r12
    671e:	8c 93       	st	X, r24
    6720:	8e e6       	ldi	r24, 0x6E	; 110
    6722:	11 96       	adiw	r26, 0x01	; 1
    6724:	8c 93       	st	X, r24
    6726:	86 e6       	ldi	r24, 0x66	; 102
    6728:	81 83       	std	Z+1, r24	; 0x01
    672a:	32 96       	adiw	r30, 0x02	; 2
    672c:	df 01       	movw	r26, r30
    672e:	89 2f       	mov	r24, r25
    6730:	20 e2       	ldi	r18, 0x20	; 32
    6732:	02 c0       	rjmp	.+4      	; 0x6738 <dtoa_prf+0x14c>
    6734:	2d 93       	st	X+, r18
    6736:	81 50       	subi	r24, 0x01	; 1
    6738:	88 23       	and	r24, r24
    673a:	e1 f7       	brne	.-8      	; 0x6734 <dtoa_prf+0x148>
    673c:	e9 0f       	add	r30, r25
    673e:	f1 1d       	adc	r31, r1
    6740:	10 82       	st	Z, r1
    6742:	2e ef       	ldi	r18, 0xFE	; 254
    6744:	3f ef       	ldi	r19, 0xFF	; 255
    6746:	af c0       	rjmp	.+350    	; 0x68a6 <dtoa_prf+0x2ba>
    6748:	16 16       	cp	r1, r22
    674a:	17 06       	cpc	r1, r23
    674c:	1c f0       	brlt	.+6      	; 0x6754 <dtoa_prf+0x168>
    674e:	41 e0       	ldi	r20, 0x01	; 1
    6750:	50 e0       	ldi	r21, 0x00	; 0
    6752:	03 c0       	rjmp	.+6      	; 0x675a <dtoa_prf+0x16e>
    6754:	ab 01       	movw	r20, r22
    6756:	4f 5f       	subi	r20, 0xFF	; 255
    6758:	5f 4f       	sbci	r21, 0xFF	; 255
    675a:	aa 20       	and	r10, r10
    675c:	19 f4       	brne	.+6      	; 0x6764 <dtoa_prf+0x178>
    675e:	80 e0       	ldi	r24, 0x00	; 0
    6760:	90 e0       	ldi	r25, 0x00	; 0
    6762:	03 c0       	rjmp	.+6      	; 0x676a <dtoa_prf+0x17e>
    6764:	8a 2d       	mov	r24, r10
    6766:	90 e0       	ldi	r25, 0x00	; 0
    6768:	01 96       	adiw	r24, 0x01	; 1
    676a:	20 e0       	ldi	r18, 0x00	; 0
    676c:	30 e0       	ldi	r19, 0x00	; 0
    676e:	aa 23       	and	r26, r26
    6770:	11 f0       	breq	.+4      	; 0x6776 <dtoa_prf+0x18a>
    6772:	21 e0       	ldi	r18, 0x01	; 1
    6774:	30 e0       	ldi	r19, 0x00	; 0
    6776:	24 0f       	add	r18, r20
    6778:	35 1f       	adc	r19, r21
    677a:	28 0f       	add	r18, r24
    677c:	39 1f       	adc	r19, r25
    677e:	81 2f       	mov	r24, r17
    6780:	90 e0       	ldi	r25, 0x00	; 0
    6782:	28 17       	cp	r18, r24
    6784:	39 07       	cpc	r19, r25
    6786:	14 f0       	brlt	.+4      	; 0x678c <dtoa_prf+0x1a0>
    6788:	20 e0       	ldi	r18, 0x00	; 0
    678a:	02 c0       	rjmp	.+4      	; 0x6790 <dtoa_prf+0x1a4>
    678c:	12 1b       	sub	r17, r18
    678e:	21 2f       	mov	r18, r17
    6790:	4b 2d       	mov	r20, r11
    6792:	50 e0       	ldi	r21, 0x00	; 0
    6794:	ca 01       	movw	r24, r20
    6796:	80 71       	andi	r24, 0x10	; 16
    6798:	90 70       	andi	r25, 0x00	; 0
    679a:	b4 fc       	sbrc	r11, 4
    679c:	0d c0       	rjmp	.+26     	; 0x67b8 <dtoa_prf+0x1cc>
    679e:	b3 fc       	sbrc	r11, 3
    67a0:	0b c0       	rjmp	.+22     	; 0x67b8 <dtoa_prf+0x1cc>
    67a2:	f6 01       	movw	r30, r12
    67a4:	32 2f       	mov	r19, r18
    67a6:	40 e2       	ldi	r20, 0x20	; 32
    67a8:	02 c0       	rjmp	.+4      	; 0x67ae <dtoa_prf+0x1c2>
    67aa:	41 93       	st	Z+, r20
    67ac:	31 50       	subi	r19, 0x01	; 1
    67ae:	33 23       	and	r19, r19
    67b0:	e1 f7       	brne	.-8      	; 0x67aa <dtoa_prf+0x1be>
    67b2:	c2 0e       	add	r12, r18
    67b4:	d1 1c       	adc	r13, r1
    67b6:	01 c0       	rjmp	.+2      	; 0x67ba <dtoa_prf+0x1ce>
    67b8:	32 2f       	mov	r19, r18
    67ba:	aa 23       	and	r26, r26
    67bc:	19 f0       	breq	.+6      	; 0x67c4 <dtoa_prf+0x1d8>
    67be:	f6 01       	movw	r30, r12
    67c0:	a1 93       	st	Z+, r26
    67c2:	6f 01       	movw	r12, r30
    67c4:	89 2b       	or	r24, r25
    67c6:	11 f0       	breq	.+4      	; 0x67cc <dtoa_prf+0x1e0>
    67c8:	13 2f       	mov	r17, r19
    67ca:	0a c0       	rjmp	.+20     	; 0x67e0 <dtoa_prf+0x1f4>
    67cc:	f6 01       	movw	r30, r12
    67ce:	13 2f       	mov	r17, r19
    67d0:	80 e3       	ldi	r24, 0x30	; 48
    67d2:	02 c0       	rjmp	.+4      	; 0x67d8 <dtoa_prf+0x1ec>
    67d4:	81 93       	st	Z+, r24
    67d6:	11 50       	subi	r17, 0x01	; 1
    67d8:	11 23       	and	r17, r17
    67da:	e1 f7       	brne	.-8      	; 0x67d4 <dtoa_prf+0x1e8>
    67dc:	c3 0e       	add	r12, r19
    67de:	d1 1c       	adc	r13, r1
    67e0:	09 2d       	mov	r16, r9
    67e2:	06 0f       	add	r16, r22
    67e4:	ba 80       	ldd	r11, Y+2	; 0x02
    67e6:	90 e1       	ldi	r25, 0x10	; 16
    67e8:	89 2e       	mov	r8, r25
    67ea:	91 2c       	mov	r9, r1
    67ec:	8e 20       	and	r8, r14
    67ee:	9f 20       	and	r9, r15
    67f0:	e4 fe       	sbrs	r14, 4
    67f2:	04 c0       	rjmp	.+8      	; 0x67fc <dtoa_prf+0x210>
    67f4:	f1 e3       	ldi	r31, 0x31	; 49
    67f6:	bf 16       	cp	r11, r31
    67f8:	09 f4       	brne	.+2      	; 0x67fc <dtoa_prf+0x210>
    67fa:	01 50       	subi	r16, 0x01	; 1
    67fc:	10 16       	cp	r1, r16
    67fe:	14 f0       	brlt	.+4      	; 0x6804 <dtoa_prf+0x218>
    6800:	01 e0       	ldi	r16, 0x01	; 1
    6802:	03 c0       	rjmp	.+6      	; 0x680a <dtoa_prf+0x21e>
    6804:	09 30       	cpi	r16, 0x09	; 9
    6806:	08 f0       	brcs	.+2      	; 0x680a <dtoa_prf+0x21e>
    6808:	08 e0       	ldi	r16, 0x08	; 8
    680a:	9b 01       	movw	r18, r22
    680c:	77 ff       	sbrs	r23, 7
    680e:	02 c0       	rjmp	.+4      	; 0x6814 <dtoa_prf+0x228>
    6810:	20 e0       	ldi	r18, 0x00	; 0
    6812:	30 e0       	ldi	r19, 0x00	; 0
    6814:	cb 01       	movw	r24, r22
    6816:	01 96       	adiw	r24, 0x01	; 1
    6818:	82 1b       	sub	r24, r18
    681a:	93 0b       	sbc	r25, r19
    681c:	fe 01       	movw	r30, r28
    681e:	31 96       	adiw	r30, 0x01	; 1
    6820:	e8 0f       	add	r30, r24
    6822:	f9 1f       	adc	r31, r25
    6824:	8e e2       	ldi	r24, 0x2E	; 46
    6826:	f8 2e       	mov	r15, r24
    6828:	3b 01       	movw	r6, r22
    682a:	60 1a       	sub	r6, r16
    682c:	71 08       	sbc	r7, r1
    682e:	8a 2d       	mov	r24, r10
    6830:	90 e0       	ldi	r25, 0x00	; 0
    6832:	44 27       	eor	r20, r20
    6834:	55 27       	eor	r21, r21
    6836:	48 1b       	sub	r20, r24
    6838:	59 0b       	sbc	r21, r25
    683a:	8f ef       	ldi	r24, 0xFF	; 255
    683c:	2f 3f       	cpi	r18, 0xFF	; 255
    683e:	38 07       	cpc	r19, r24
    6840:	19 f4       	brne	.+6      	; 0x6848 <dtoa_prf+0x25c>
    6842:	d6 01       	movw	r26, r12
    6844:	fd 92       	st	X+, r15
    6846:	6d 01       	movw	r12, r26
    6848:	62 17       	cp	r22, r18
    684a:	73 07       	cpc	r23, r19
    684c:	2c f0       	brlt	.+10     	; 0x6858 <dtoa_prf+0x26c>
    684e:	62 16       	cp	r6, r18
    6850:	73 06       	cpc	r7, r19
    6852:	14 f4       	brge	.+4      	; 0x6858 <dtoa_prf+0x26c>
    6854:	80 81       	ld	r24, Z
    6856:	01 c0       	rjmp	.+2      	; 0x685a <dtoa_prf+0x26e>
    6858:	80 e3       	ldi	r24, 0x30	; 48
    685a:	21 50       	subi	r18, 0x01	; 1
    685c:	30 40       	sbci	r19, 0x00	; 0
    685e:	31 96       	adiw	r30, 0x01	; 1
    6860:	24 17       	cp	r18, r20
    6862:	35 07       	cpc	r19, r21
    6864:	24 f0       	brlt	.+8      	; 0x686e <dtoa_prf+0x282>
    6866:	d6 01       	movw	r26, r12
    6868:	8d 93       	st	X+, r24
    686a:	6d 01       	movw	r12, r26
    686c:	e6 cf       	rjmp	.-52     	; 0x683a <dtoa_prf+0x24e>
    686e:	26 17       	cp	r18, r22
    6870:	37 07       	cpc	r19, r23
    6872:	49 f4       	brne	.+18     	; 0x6886 <dtoa_prf+0x29a>
    6874:	b5 e3       	ldi	r27, 0x35	; 53
    6876:	bb 15       	cp	r27, r11
    6878:	28 f0       	brcs	.+10     	; 0x6884 <dtoa_prf+0x298>
    687a:	bb 16       	cp	r11, r27
    687c:	21 f4       	brne	.+8      	; 0x6886 <dtoa_prf+0x29a>
    687e:	81 14       	cp	r8, r1
    6880:	91 04       	cpc	r9, r1
    6882:	09 f4       	brne	.+2      	; 0x6886 <dtoa_prf+0x29a>
    6884:	81 e3       	ldi	r24, 0x31	; 49
    6886:	f6 01       	movw	r30, r12
    6888:	81 93       	st	Z+, r24
    688a:	d6 01       	movw	r26, r12
    688c:	81 2f       	mov	r24, r17
    688e:	90 e2       	ldi	r25, 0x20	; 32
    6890:	02 c0       	rjmp	.+4      	; 0x6896 <dtoa_prf+0x2aa>
    6892:	9c 93       	st	X, r25
    6894:	81 50       	subi	r24, 0x01	; 1
    6896:	11 96       	adiw	r26, 0x01	; 1
    6898:	88 23       	and	r24, r24
    689a:	d9 f7       	brne	.-10     	; 0x6892 <dtoa_prf+0x2a6>
    689c:	e1 0f       	add	r30, r17
    689e:	f1 1d       	adc	r31, r1
    68a0:	10 82       	st	Z, r1
    68a2:	20 e0       	ldi	r18, 0x00	; 0
    68a4:	30 e0       	ldi	r19, 0x00	; 0
    68a6:	c9 01       	movw	r24, r18
    68a8:	29 96       	adiw	r28, 0x09	; 9
    68aa:	ee e0       	ldi	r30, 0x0E	; 14
    68ac:	0c 94 bd 30 	jmp	0x617a	; 0x617a <__epilogue_restores__+0x8>

000068b0 <__ftoa_engine>:
    68b0:	28 30       	cpi	r18, 0x08	; 8
    68b2:	08 f0       	brcs	.+2      	; 0x68b6 <__ftoa_engine+0x6>
    68b4:	27 e0       	ldi	r18, 0x07	; 7
    68b6:	33 27       	eor	r19, r19
    68b8:	da 01       	movw	r26, r20
    68ba:	99 0f       	add	r25, r25
    68bc:	31 1d       	adc	r19, r1
    68be:	87 fd       	sbrc	r24, 7
    68c0:	91 60       	ori	r25, 0x01	; 1
    68c2:	00 96       	adiw	r24, 0x00	; 0
    68c4:	61 05       	cpc	r22, r1
    68c6:	71 05       	cpc	r23, r1
    68c8:	39 f4       	brne	.+14     	; 0x68d8 <__ftoa_engine+0x28>
    68ca:	32 60       	ori	r19, 0x02	; 2
    68cc:	2e 5f       	subi	r18, 0xFE	; 254
    68ce:	3d 93       	st	X+, r19
    68d0:	30 e3       	ldi	r19, 0x30	; 48
    68d2:	2a 95       	dec	r18
    68d4:	e1 f7       	brne	.-8      	; 0x68ce <__ftoa_engine+0x1e>
    68d6:	08 95       	ret
    68d8:	9f 3f       	cpi	r25, 0xFF	; 255
    68da:	30 f0       	brcs	.+12     	; 0x68e8 <__ftoa_engine+0x38>
    68dc:	80 38       	cpi	r24, 0x80	; 128
    68de:	71 05       	cpc	r23, r1
    68e0:	61 05       	cpc	r22, r1
    68e2:	09 f0       	breq	.+2      	; 0x68e6 <__ftoa_engine+0x36>
    68e4:	3c 5f       	subi	r19, 0xFC	; 252
    68e6:	3c 5f       	subi	r19, 0xFC	; 252
    68e8:	3d 93       	st	X+, r19
    68ea:	91 30       	cpi	r25, 0x01	; 1
    68ec:	08 f0       	brcs	.+2      	; 0x68f0 <__ftoa_engine+0x40>
    68ee:	80 68       	ori	r24, 0x80	; 128
    68f0:	91 1d       	adc	r25, r1
    68f2:	df 93       	push	r29
    68f4:	cf 93       	push	r28
    68f6:	1f 93       	push	r17
    68f8:	0f 93       	push	r16
    68fa:	ff 92       	push	r15
    68fc:	ef 92       	push	r14
    68fe:	19 2f       	mov	r17, r25
    6900:	98 7f       	andi	r25, 0xF8	; 248
    6902:	96 95       	lsr	r25
    6904:	e9 2f       	mov	r30, r25
    6906:	96 95       	lsr	r25
    6908:	96 95       	lsr	r25
    690a:	e9 0f       	add	r30, r25
    690c:	ff 27       	eor	r31, r31
    690e:	e2 55       	subi	r30, 0x52	; 82
    6910:	ff 4f       	sbci	r31, 0xFF	; 255
    6912:	99 27       	eor	r25, r25
    6914:	33 27       	eor	r19, r19
    6916:	ee 24       	eor	r14, r14
    6918:	ff 24       	eor	r15, r15
    691a:	a7 01       	movw	r20, r14
    691c:	e7 01       	movw	r28, r14
    691e:	05 90       	lpm	r0, Z+
    6920:	08 94       	sec
    6922:	07 94       	ror	r0
    6924:	28 f4       	brcc	.+10     	; 0x6930 <__ftoa_engine+0x80>
    6926:	36 0f       	add	r19, r22
    6928:	e7 1e       	adc	r14, r23
    692a:	f8 1e       	adc	r15, r24
    692c:	49 1f       	adc	r20, r25
    692e:	51 1d       	adc	r21, r1
    6930:	66 0f       	add	r22, r22
    6932:	77 1f       	adc	r23, r23
    6934:	88 1f       	adc	r24, r24
    6936:	99 1f       	adc	r25, r25
    6938:	06 94       	lsr	r0
    693a:	a1 f7       	brne	.-24     	; 0x6924 <__ftoa_engine+0x74>
    693c:	05 90       	lpm	r0, Z+
    693e:	07 94       	ror	r0
    6940:	28 f4       	brcc	.+10     	; 0x694c <__ftoa_engine+0x9c>
    6942:	e7 0e       	add	r14, r23
    6944:	f8 1e       	adc	r15, r24
    6946:	49 1f       	adc	r20, r25
    6948:	56 1f       	adc	r21, r22
    694a:	c1 1d       	adc	r28, r1
    694c:	77 0f       	add	r23, r23
    694e:	88 1f       	adc	r24, r24
    6950:	99 1f       	adc	r25, r25
    6952:	66 1f       	adc	r22, r22
    6954:	06 94       	lsr	r0
    6956:	a1 f7       	brne	.-24     	; 0x6940 <__ftoa_engine+0x90>
    6958:	05 90       	lpm	r0, Z+
    695a:	07 94       	ror	r0
    695c:	28 f4       	brcc	.+10     	; 0x6968 <__ftoa_engine+0xb8>
    695e:	f8 0e       	add	r15, r24
    6960:	49 1f       	adc	r20, r25
    6962:	56 1f       	adc	r21, r22
    6964:	c7 1f       	adc	r28, r23
    6966:	d1 1d       	adc	r29, r1
    6968:	88 0f       	add	r24, r24
    696a:	99 1f       	adc	r25, r25
    696c:	66 1f       	adc	r22, r22
    696e:	77 1f       	adc	r23, r23
    6970:	06 94       	lsr	r0
    6972:	a1 f7       	brne	.-24     	; 0x695c <__ftoa_engine+0xac>
    6974:	05 90       	lpm	r0, Z+
    6976:	07 94       	ror	r0
    6978:	20 f4       	brcc	.+8      	; 0x6982 <__ftoa_engine+0xd2>
    697a:	49 0f       	add	r20, r25
    697c:	56 1f       	adc	r21, r22
    697e:	c7 1f       	adc	r28, r23
    6980:	d8 1f       	adc	r29, r24
    6982:	99 0f       	add	r25, r25
    6984:	66 1f       	adc	r22, r22
    6986:	77 1f       	adc	r23, r23
    6988:	88 1f       	adc	r24, r24
    698a:	06 94       	lsr	r0
    698c:	a9 f7       	brne	.-22     	; 0x6978 <__ftoa_engine+0xc8>
    698e:	84 91       	lpm	r24, Z+
    6990:	10 95       	com	r17
    6992:	17 70       	andi	r17, 0x07	; 7
    6994:	41 f0       	breq	.+16     	; 0x69a6 <__ftoa_engine+0xf6>
    6996:	d6 95       	lsr	r29
    6998:	c7 95       	ror	r28
    699a:	57 95       	ror	r21
    699c:	47 95       	ror	r20
    699e:	f7 94       	ror	r15
    69a0:	e7 94       	ror	r14
    69a2:	1a 95       	dec	r17
    69a4:	c1 f7       	brne	.-16     	; 0x6996 <__ftoa_engine+0xe6>
    69a6:	e4 e5       	ldi	r30, 0x54	; 84
    69a8:	f0 e0       	ldi	r31, 0x00	; 0
    69aa:	68 94       	set
    69ac:	15 90       	lpm	r1, Z+
    69ae:	15 91       	lpm	r17, Z+
    69b0:	35 91       	lpm	r19, Z+
    69b2:	65 91       	lpm	r22, Z+
    69b4:	95 91       	lpm	r25, Z+
    69b6:	05 90       	lpm	r0, Z+
    69b8:	7f e2       	ldi	r23, 0x2F	; 47
    69ba:	73 95       	inc	r23
    69bc:	e1 18       	sub	r14, r1
    69be:	f1 0a       	sbc	r15, r17
    69c0:	43 0b       	sbc	r20, r19
    69c2:	56 0b       	sbc	r21, r22
    69c4:	c9 0b       	sbc	r28, r25
    69c6:	d0 09       	sbc	r29, r0
    69c8:	c0 f7       	brcc	.-16     	; 0x69ba <__ftoa_engine+0x10a>
    69ca:	e1 0c       	add	r14, r1
    69cc:	f1 1e       	adc	r15, r17
    69ce:	43 1f       	adc	r20, r19
    69d0:	56 1f       	adc	r21, r22
    69d2:	c9 1f       	adc	r28, r25
    69d4:	d0 1d       	adc	r29, r0
    69d6:	7e f4       	brtc	.+30     	; 0x69f6 <__ftoa_engine+0x146>
    69d8:	70 33       	cpi	r23, 0x30	; 48
    69da:	11 f4       	brne	.+4      	; 0x69e0 <__ftoa_engine+0x130>
    69dc:	8a 95       	dec	r24
    69de:	e6 cf       	rjmp	.-52     	; 0x69ac <__ftoa_engine+0xfc>
    69e0:	e8 94       	clt
    69e2:	01 50       	subi	r16, 0x01	; 1
    69e4:	30 f0       	brcs	.+12     	; 0x69f2 <__ftoa_engine+0x142>
    69e6:	08 0f       	add	r16, r24
    69e8:	0a f4       	brpl	.+2      	; 0x69ec <__ftoa_engine+0x13c>
    69ea:	00 27       	eor	r16, r16
    69ec:	02 17       	cp	r16, r18
    69ee:	08 f4       	brcc	.+2      	; 0x69f2 <__ftoa_engine+0x142>
    69f0:	20 2f       	mov	r18, r16
    69f2:	23 95       	inc	r18
    69f4:	02 2f       	mov	r16, r18
    69f6:	7a 33       	cpi	r23, 0x3A	; 58
    69f8:	28 f0       	brcs	.+10     	; 0x6a04 <__ftoa_engine+0x154>
    69fa:	79 e3       	ldi	r23, 0x39	; 57
    69fc:	7d 93       	st	X+, r23
    69fe:	2a 95       	dec	r18
    6a00:	e9 f7       	brne	.-6      	; 0x69fc <__ftoa_engine+0x14c>
    6a02:	10 c0       	rjmp	.+32     	; 0x6a24 <__ftoa_engine+0x174>
    6a04:	7d 93       	st	X+, r23
    6a06:	2a 95       	dec	r18
    6a08:	89 f6       	brne	.-94     	; 0x69ac <__ftoa_engine+0xfc>
    6a0a:	06 94       	lsr	r0
    6a0c:	97 95       	ror	r25
    6a0e:	67 95       	ror	r22
    6a10:	37 95       	ror	r19
    6a12:	17 95       	ror	r17
    6a14:	17 94       	ror	r1
    6a16:	e1 18       	sub	r14, r1
    6a18:	f1 0a       	sbc	r15, r17
    6a1a:	43 0b       	sbc	r20, r19
    6a1c:	56 0b       	sbc	r21, r22
    6a1e:	c9 0b       	sbc	r28, r25
    6a20:	d0 09       	sbc	r29, r0
    6a22:	98 f0       	brcs	.+38     	; 0x6a4a <__ftoa_engine+0x19a>
    6a24:	23 95       	inc	r18
    6a26:	7e 91       	ld	r23, -X
    6a28:	73 95       	inc	r23
    6a2a:	7a 33       	cpi	r23, 0x3A	; 58
    6a2c:	08 f0       	brcs	.+2      	; 0x6a30 <__ftoa_engine+0x180>
    6a2e:	70 e3       	ldi	r23, 0x30	; 48
    6a30:	7c 93       	st	X, r23
    6a32:	20 13       	cpse	r18, r16
    6a34:	b8 f7       	brcc	.-18     	; 0x6a24 <__ftoa_engine+0x174>
    6a36:	7e 91       	ld	r23, -X
    6a38:	70 61       	ori	r23, 0x10	; 16
    6a3a:	7d 93       	st	X+, r23
    6a3c:	30 f0       	brcs	.+12     	; 0x6a4a <__ftoa_engine+0x19a>
    6a3e:	83 95       	inc	r24
    6a40:	71 e3       	ldi	r23, 0x31	; 49
    6a42:	7d 93       	st	X+, r23
    6a44:	70 e3       	ldi	r23, 0x30	; 48
    6a46:	2a 95       	dec	r18
    6a48:	e1 f7       	brne	.-8      	; 0x6a42 <__ftoa_engine+0x192>
    6a4a:	11 24       	eor	r1, r1
    6a4c:	ef 90       	pop	r14
    6a4e:	ff 90       	pop	r15
    6a50:	0f 91       	pop	r16
    6a52:	1f 91       	pop	r17
    6a54:	cf 91       	pop	r28
    6a56:	df 91       	pop	r29
    6a58:	99 27       	eor	r25, r25
    6a5a:	87 fd       	sbrc	r24, 7
    6a5c:	90 95       	com	r25
    6a5e:	08 95       	ret

00006a60 <strnlen_P>:
    6a60:	fc 01       	movw	r30, r24
    6a62:	05 90       	lpm	r0, Z+
    6a64:	61 50       	subi	r22, 0x01	; 1
    6a66:	70 40       	sbci	r23, 0x00	; 0
    6a68:	01 10       	cpse	r0, r1
    6a6a:	d8 f7       	brcc	.-10     	; 0x6a62 <strnlen_P+0x2>
    6a6c:	80 95       	com	r24
    6a6e:	90 95       	com	r25
    6a70:	8e 0f       	add	r24, r30
    6a72:	9f 1f       	adc	r25, r31
    6a74:	08 95       	ret

00006a76 <strnlen>:
    6a76:	fc 01       	movw	r30, r24
    6a78:	61 50       	subi	r22, 0x01	; 1
    6a7a:	70 40       	sbci	r23, 0x00	; 0
    6a7c:	01 90       	ld	r0, Z+
    6a7e:	01 10       	cpse	r0, r1
    6a80:	d8 f7       	brcc	.-10     	; 0x6a78 <strnlen+0x2>
    6a82:	80 95       	com	r24
    6a84:	90 95       	com	r25
    6a86:	8e 0f       	add	r24, r30
    6a88:	9f 1f       	adc	r25, r31
    6a8a:	08 95       	ret

00006a8c <fputc>:
    6a8c:	0f 93       	push	r16
    6a8e:	1f 93       	push	r17
    6a90:	cf 93       	push	r28
    6a92:	df 93       	push	r29
    6a94:	8c 01       	movw	r16, r24
    6a96:	eb 01       	movw	r28, r22
    6a98:	8b 81       	ldd	r24, Y+3	; 0x03
    6a9a:	81 ff       	sbrs	r24, 1
    6a9c:	1b c0       	rjmp	.+54     	; 0x6ad4 <fputc+0x48>
    6a9e:	82 ff       	sbrs	r24, 2
    6aa0:	0d c0       	rjmp	.+26     	; 0x6abc <fputc+0x30>
    6aa2:	2e 81       	ldd	r18, Y+6	; 0x06
    6aa4:	3f 81       	ldd	r19, Y+7	; 0x07
    6aa6:	8c 81       	ldd	r24, Y+4	; 0x04
    6aa8:	9d 81       	ldd	r25, Y+5	; 0x05
    6aaa:	28 17       	cp	r18, r24
    6aac:	39 07       	cpc	r19, r25
    6aae:	64 f4       	brge	.+24     	; 0x6ac8 <fputc+0x3c>
    6ab0:	e8 81       	ld	r30, Y
    6ab2:	f9 81       	ldd	r31, Y+1	; 0x01
    6ab4:	01 93       	st	Z+, r16
    6ab6:	f9 83       	std	Y+1, r31	; 0x01
    6ab8:	e8 83       	st	Y, r30
    6aba:	06 c0       	rjmp	.+12     	; 0x6ac8 <fputc+0x3c>
    6abc:	e8 85       	ldd	r30, Y+8	; 0x08
    6abe:	f9 85       	ldd	r31, Y+9	; 0x09
    6ac0:	80 2f       	mov	r24, r16
    6ac2:	09 95       	icall
    6ac4:	89 2b       	or	r24, r25
    6ac6:	31 f4       	brne	.+12     	; 0x6ad4 <fputc+0x48>
    6ac8:	8e 81       	ldd	r24, Y+6	; 0x06
    6aca:	9f 81       	ldd	r25, Y+7	; 0x07
    6acc:	01 96       	adiw	r24, 0x01	; 1
    6ace:	9f 83       	std	Y+7, r25	; 0x07
    6ad0:	8e 83       	std	Y+6, r24	; 0x06
    6ad2:	02 c0       	rjmp	.+4      	; 0x6ad8 <fputc+0x4c>
    6ad4:	0f ef       	ldi	r16, 0xFF	; 255
    6ad6:	1f ef       	ldi	r17, 0xFF	; 255
    6ad8:	c8 01       	movw	r24, r16
    6ada:	df 91       	pop	r29
    6adc:	cf 91       	pop	r28
    6ade:	1f 91       	pop	r17
    6ae0:	0f 91       	pop	r16
    6ae2:	08 95       	ret

00006ae4 <__ultoa_invert>:
    6ae4:	fa 01       	movw	r30, r20
    6ae6:	aa 27       	eor	r26, r26
    6ae8:	28 30       	cpi	r18, 0x08	; 8
    6aea:	51 f1       	breq	.+84     	; 0x6b40 <__ultoa_invert+0x5c>
    6aec:	20 31       	cpi	r18, 0x10	; 16
    6aee:	81 f1       	breq	.+96     	; 0x6b50 <__ultoa_invert+0x6c>
    6af0:	e8 94       	clt
    6af2:	6f 93       	push	r22
    6af4:	6e 7f       	andi	r22, 0xFE	; 254
    6af6:	6e 5f       	subi	r22, 0xFE	; 254
    6af8:	7f 4f       	sbci	r23, 0xFF	; 255
    6afa:	8f 4f       	sbci	r24, 0xFF	; 255
    6afc:	9f 4f       	sbci	r25, 0xFF	; 255
    6afe:	af 4f       	sbci	r26, 0xFF	; 255
    6b00:	b1 e0       	ldi	r27, 0x01	; 1
    6b02:	3e d0       	rcall	.+124    	; 0x6b80 <__ultoa_invert+0x9c>
    6b04:	b4 e0       	ldi	r27, 0x04	; 4
    6b06:	3c d0       	rcall	.+120    	; 0x6b80 <__ultoa_invert+0x9c>
    6b08:	67 0f       	add	r22, r23
    6b0a:	78 1f       	adc	r23, r24
    6b0c:	89 1f       	adc	r24, r25
    6b0e:	9a 1f       	adc	r25, r26
    6b10:	a1 1d       	adc	r26, r1
    6b12:	68 0f       	add	r22, r24
    6b14:	79 1f       	adc	r23, r25
    6b16:	8a 1f       	adc	r24, r26
    6b18:	91 1d       	adc	r25, r1
    6b1a:	a1 1d       	adc	r26, r1
    6b1c:	6a 0f       	add	r22, r26
    6b1e:	71 1d       	adc	r23, r1
    6b20:	81 1d       	adc	r24, r1
    6b22:	91 1d       	adc	r25, r1
    6b24:	a1 1d       	adc	r26, r1
    6b26:	20 d0       	rcall	.+64     	; 0x6b68 <__ultoa_invert+0x84>
    6b28:	09 f4       	brne	.+2      	; 0x6b2c <__ultoa_invert+0x48>
    6b2a:	68 94       	set
    6b2c:	3f 91       	pop	r19
    6b2e:	2a e0       	ldi	r18, 0x0A	; 10
    6b30:	26 9f       	mul	r18, r22
    6b32:	11 24       	eor	r1, r1
    6b34:	30 19       	sub	r19, r0
    6b36:	30 5d       	subi	r19, 0xD0	; 208
    6b38:	31 93       	st	Z+, r19
    6b3a:	de f6       	brtc	.-74     	; 0x6af2 <__ultoa_invert+0xe>
    6b3c:	cf 01       	movw	r24, r30
    6b3e:	08 95       	ret
    6b40:	46 2f       	mov	r20, r22
    6b42:	47 70       	andi	r20, 0x07	; 7
    6b44:	40 5d       	subi	r20, 0xD0	; 208
    6b46:	41 93       	st	Z+, r20
    6b48:	b3 e0       	ldi	r27, 0x03	; 3
    6b4a:	0f d0       	rcall	.+30     	; 0x6b6a <__ultoa_invert+0x86>
    6b4c:	c9 f7       	brne	.-14     	; 0x6b40 <__ultoa_invert+0x5c>
    6b4e:	f6 cf       	rjmp	.-20     	; 0x6b3c <__ultoa_invert+0x58>
    6b50:	46 2f       	mov	r20, r22
    6b52:	4f 70       	andi	r20, 0x0F	; 15
    6b54:	40 5d       	subi	r20, 0xD0	; 208
    6b56:	4a 33       	cpi	r20, 0x3A	; 58
    6b58:	18 f0       	brcs	.+6      	; 0x6b60 <__ultoa_invert+0x7c>
    6b5a:	49 5d       	subi	r20, 0xD9	; 217
    6b5c:	31 fd       	sbrc	r19, 1
    6b5e:	40 52       	subi	r20, 0x20	; 32
    6b60:	41 93       	st	Z+, r20
    6b62:	02 d0       	rcall	.+4      	; 0x6b68 <__ultoa_invert+0x84>
    6b64:	a9 f7       	brne	.-22     	; 0x6b50 <__ultoa_invert+0x6c>
    6b66:	ea cf       	rjmp	.-44     	; 0x6b3c <__ultoa_invert+0x58>
    6b68:	b4 e0       	ldi	r27, 0x04	; 4
    6b6a:	a6 95       	lsr	r26
    6b6c:	97 95       	ror	r25
    6b6e:	87 95       	ror	r24
    6b70:	77 95       	ror	r23
    6b72:	67 95       	ror	r22
    6b74:	ba 95       	dec	r27
    6b76:	c9 f7       	brne	.-14     	; 0x6b6a <__ultoa_invert+0x86>
    6b78:	00 97       	sbiw	r24, 0x00	; 0
    6b7a:	61 05       	cpc	r22, r1
    6b7c:	71 05       	cpc	r23, r1
    6b7e:	08 95       	ret
    6b80:	9b 01       	movw	r18, r22
    6b82:	ac 01       	movw	r20, r24
    6b84:	0a 2e       	mov	r0, r26
    6b86:	06 94       	lsr	r0
    6b88:	57 95       	ror	r21
    6b8a:	47 95       	ror	r20
    6b8c:	37 95       	ror	r19
    6b8e:	27 95       	ror	r18
    6b90:	ba 95       	dec	r27
    6b92:	c9 f7       	brne	.-14     	; 0x6b86 <__ultoa_invert+0xa2>
    6b94:	62 0f       	add	r22, r18
    6b96:	73 1f       	adc	r23, r19
    6b98:	84 1f       	adc	r24, r20
    6b9a:	95 1f       	adc	r25, r21
    6b9c:	a0 1d       	adc	r26, r0
    6b9e:	08 95       	ret

00006ba0 <_exit>:
    6ba0:	f8 94       	cli

00006ba2 <__stop_program>:
    6ba2:	ff cf       	rjmp	.-2      	; 0x6ba2 <__stop_program>
