
SmartCityTraficlights.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006cbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000072  00800060  00006cbe  00006d52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  008000d2  008000d2  00006dc4  2**0
                  ALLOC
  3 .stab         0000477c  00000000  00000000  00006dc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f8b  00000000  00000000  0000b540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  0000c4cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  0000c62b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  0000c7ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  0000e7ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  0000f900  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00010884  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00010a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  00010cc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00011554  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 2a 25 	jmp	0x4a54	; 0x4a54 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee eb       	ldi	r30, 0xBE	; 190
      68:	fc e6       	ldi	r31, 0x6C	; 108
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3d       	cpi	r26, 0xD2	; 210
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 ed       	ldi	r26, 0xD2	; 210
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a3 3d       	cpi	r26, 0xD3	; 211
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f6 1c 	call	0x39ec	; 0x39ec <main>
      8a:	0c 94 5d 36 	jmp	0x6cba	; 0x6cba <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 26 36 	jmp	0x6c4c	; 0x6c4c <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a2 e9       	ldi	r26, 0x92	; 146
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 42 36 	jmp	0x6c84	; 0x6c84 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 32 36 	jmp	0x6c64	; 0x6c64 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 4e 36 	jmp	0x6c9c	; 0x6c9c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 32 36 	jmp	0x6c64	; 0x6c64 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 4e 36 	jmp	0x6c9c	; 0x6c9c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 26 36 	jmp	0x6c4c	; 0x6c4c <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	82 e9       	ldi	r24, 0x92	; 146
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 42 36 	jmp	0x6c84	; 0x6c84 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 2e 36 	jmp	0x6c5c	; 0x6c5c <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	62 e9       	ldi	r22, 0x92	; 146
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 4a 36 	jmp	0x6c94	; 0x6c94 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 32 36 	jmp	0x6c64	; 0x6c64 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 4e 36 	jmp	0x6c9c	; 0x6c9c <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 32 36 	jmp	0x6c64	; 0x6c64 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 4e 36 	jmp	0x6c9c	; 0x6c9c <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 32 36 	jmp	0x6c64	; 0x6c64 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 4e 36 	jmp	0x6c9c	; 0x6c9c <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 36 36 	jmp	0x6c6c	; 0x6c6c <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 52 36 	jmp	0x6ca4	; 0x6ca4 <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <DIO_SetPinDirection>:
#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include "DIO.h"

void DIO_SetPinDirection(u8 GropuIDcopy, u8 PinIDcopy, u8 DirId)
{
     c9e:	df 93       	push	r29
     ca0:	cf 93       	push	r28
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	27 97       	sbiw	r28, 0x07	; 7
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	89 83       	std	Y+1, r24	; 0x01
     cb4:	6a 83       	std	Y+2, r22	; 0x02
     cb6:	4b 83       	std	Y+3, r20	; 0x03
    if (DirId == INPUT)
     cb8:	8b 81       	ldd	r24, Y+3	; 0x03
     cba:	88 23       	and	r24, r24
     cbc:	09 f0       	breq	.+2      	; 0xcc0 <DIO_SetPinDirection+0x22>
     cbe:	74 c0       	rjmp	.+232    	; 0xda8 <DIO_SetPinDirection+0x10a>
    {
        switch (GropuIDcopy)
     cc0:	89 81       	ldd	r24, Y+1	; 0x01
     cc2:	28 2f       	mov	r18, r24
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	3f 83       	std	Y+7, r19	; 0x07
     cc8:	2e 83       	std	Y+6, r18	; 0x06
     cca:	8e 81       	ldd	r24, Y+6	; 0x06
     ccc:	9f 81       	ldd	r25, Y+7	; 0x07
     cce:	81 30       	cpi	r24, 0x01	; 1
     cd0:	91 05       	cpc	r25, r1
     cd2:	59 f1       	breq	.+86     	; 0xd2a <DIO_SetPinDirection+0x8c>
     cd4:	2e 81       	ldd	r18, Y+6	; 0x06
     cd6:	3f 81       	ldd	r19, Y+7	; 0x07
     cd8:	22 30       	cpi	r18, 0x02	; 2
     cda:	31 05       	cpc	r19, r1
     cdc:	2c f4       	brge	.+10     	; 0xce8 <DIO_SetPinDirection+0x4a>
     cde:	8e 81       	ldd	r24, Y+6	; 0x06
     ce0:	9f 81       	ldd	r25, Y+7	; 0x07
     ce2:	00 97       	sbiw	r24, 0x00	; 0
     ce4:	69 f0       	breq	.+26     	; 0xd00 <DIO_SetPinDirection+0x62>
     ce6:	d2 c0       	rjmp	.+420    	; 0xe8c <DIO_SetPinDirection+0x1ee>
     ce8:	2e 81       	ldd	r18, Y+6	; 0x06
     cea:	3f 81       	ldd	r19, Y+7	; 0x07
     cec:	22 30       	cpi	r18, 0x02	; 2
     cee:	31 05       	cpc	r19, r1
     cf0:	89 f1       	breq	.+98     	; 0xd54 <DIO_SetPinDirection+0xb6>
     cf2:	8e 81       	ldd	r24, Y+6	; 0x06
     cf4:	9f 81       	ldd	r25, Y+7	; 0x07
     cf6:	83 30       	cpi	r24, 0x03	; 3
     cf8:	91 05       	cpc	r25, r1
     cfa:	09 f4       	brne	.+2      	; 0xcfe <DIO_SetPinDirection+0x60>
     cfc:	40 c0       	rjmp	.+128    	; 0xd7e <DIO_SetPinDirection+0xe0>
     cfe:	c6 c0       	rjmp	.+396    	; 0xe8c <DIO_SetPinDirection+0x1ee>
        {
        case GROUPA:
            CLR_BIT(DDRA_Register, PinIDcopy);
     d00:	aa e3       	ldi	r26, 0x3A	; 58
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	ea e3       	ldi	r30, 0x3A	; 58
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 81       	ld	r24, Z
     d0a:	48 2f       	mov	r20, r24
     d0c:	8a 81       	ldd	r24, Y+2	; 0x02
     d0e:	28 2f       	mov	r18, r24
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	02 2e       	mov	r0, r18
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <DIO_SetPinDirection+0x80>
     d1a:	88 0f       	add	r24, r24
     d1c:	99 1f       	adc	r25, r25
     d1e:	0a 94       	dec	r0
     d20:	e2 f7       	brpl	.-8      	; 0xd1a <DIO_SetPinDirection+0x7c>
     d22:	80 95       	com	r24
     d24:	84 23       	and	r24, r20
     d26:	8c 93       	st	X, r24
     d28:	b1 c0       	rjmp	.+354    	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPB:
            CLR_BIT(DDRB_Register, PinIDcopy);
     d2a:	a7 e3       	ldi	r26, 0x37	; 55
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	e7 e3       	ldi	r30, 0x37	; 55
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	80 81       	ld	r24, Z
     d34:	48 2f       	mov	r20, r24
     d36:	8a 81       	ldd	r24, Y+2	; 0x02
     d38:	28 2f       	mov	r18, r24
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	02 2e       	mov	r0, r18
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <DIO_SetPinDirection+0xaa>
     d44:	88 0f       	add	r24, r24
     d46:	99 1f       	adc	r25, r25
     d48:	0a 94       	dec	r0
     d4a:	e2 f7       	brpl	.-8      	; 0xd44 <DIO_SetPinDirection+0xa6>
     d4c:	80 95       	com	r24
     d4e:	84 23       	and	r24, r20
     d50:	8c 93       	st	X, r24
     d52:	9c c0       	rjmp	.+312    	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPC:
            CLR_BIT(DDRC_Register, PinIDcopy);
     d54:	a4 e3       	ldi	r26, 0x34	; 52
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	e4 e3       	ldi	r30, 0x34	; 52
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	48 2f       	mov	r20, r24
     d60:	8a 81       	ldd	r24, Y+2	; 0x02
     d62:	28 2f       	mov	r18, r24
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	02 2e       	mov	r0, r18
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <DIO_SetPinDirection+0xd4>
     d6e:	88 0f       	add	r24, r24
     d70:	99 1f       	adc	r25, r25
     d72:	0a 94       	dec	r0
     d74:	e2 f7       	brpl	.-8      	; 0xd6e <DIO_SetPinDirection+0xd0>
     d76:	80 95       	com	r24
     d78:	84 23       	and	r24, r20
     d7a:	8c 93       	st	X, r24
     d7c:	87 c0       	rjmp	.+270    	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPD:
            CLR_BIT(DDRD_Register, PinIDcopy);
     d7e:	a1 e3       	ldi	r26, 0x31	; 49
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e1 e3       	ldi	r30, 0x31	; 49
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 81       	ld	r24, Z
     d88:	48 2f       	mov	r20, r24
     d8a:	8a 81       	ldd	r24, Y+2	; 0x02
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	02 2e       	mov	r0, r18
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <DIO_SetPinDirection+0xfe>
     d98:	88 0f       	add	r24, r24
     d9a:	99 1f       	adc	r25, r25
     d9c:	0a 94       	dec	r0
     d9e:	e2 f7       	brpl	.-8      	; 0xd98 <DIO_SetPinDirection+0xfa>
     da0:	80 95       	com	r24
     da2:	84 23       	and	r24, r20
     da4:	8c 93       	st	X, r24
     da6:	72 c0       	rjmp	.+228    	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        }
    }
    else if (DirId == OUTPUT)
     da8:	8b 81       	ldd	r24, Y+3	; 0x03
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	09 f0       	breq	.+2      	; 0xdb0 <DIO_SetPinDirection+0x112>
     dae:	6e c0       	rjmp	.+220    	; 0xe8c <DIO_SetPinDirection+0x1ee>
    {
        switch (GropuIDcopy)
     db0:	89 81       	ldd	r24, Y+1	; 0x01
     db2:	28 2f       	mov	r18, r24
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	3d 83       	std	Y+5, r19	; 0x05
     db8:	2c 83       	std	Y+4, r18	; 0x04
     dba:	8c 81       	ldd	r24, Y+4	; 0x04
     dbc:	9d 81       	ldd	r25, Y+5	; 0x05
     dbe:	81 30       	cpi	r24, 0x01	; 1
     dc0:	91 05       	cpc	r25, r1
     dc2:	49 f1       	breq	.+82     	; 0xe16 <DIO_SetPinDirection+0x178>
     dc4:	2c 81       	ldd	r18, Y+4	; 0x04
     dc6:	3d 81       	ldd	r19, Y+5	; 0x05
     dc8:	22 30       	cpi	r18, 0x02	; 2
     dca:	31 05       	cpc	r19, r1
     dcc:	2c f4       	brge	.+10     	; 0xdd8 <DIO_SetPinDirection+0x13a>
     dce:	8c 81       	ldd	r24, Y+4	; 0x04
     dd0:	9d 81       	ldd	r25, Y+5	; 0x05
     dd2:	00 97       	sbiw	r24, 0x00	; 0
     dd4:	61 f0       	breq	.+24     	; 0xdee <DIO_SetPinDirection+0x150>
     dd6:	5a c0       	rjmp	.+180    	; 0xe8c <DIO_SetPinDirection+0x1ee>
     dd8:	2c 81       	ldd	r18, Y+4	; 0x04
     dda:	3d 81       	ldd	r19, Y+5	; 0x05
     ddc:	22 30       	cpi	r18, 0x02	; 2
     dde:	31 05       	cpc	r19, r1
     de0:	71 f1       	breq	.+92     	; 0xe3e <DIO_SetPinDirection+0x1a0>
     de2:	8c 81       	ldd	r24, Y+4	; 0x04
     de4:	9d 81       	ldd	r25, Y+5	; 0x05
     de6:	83 30       	cpi	r24, 0x03	; 3
     de8:	91 05       	cpc	r25, r1
     dea:	e9 f1       	breq	.+122    	; 0xe66 <DIO_SetPinDirection+0x1c8>
     dec:	4f c0       	rjmp	.+158    	; 0xe8c <DIO_SetPinDirection+0x1ee>
        {
        case GROUPA:
            SET_BIT(DDRA_Register, PinIDcopy);
     dee:	aa e3       	ldi	r26, 0x3A	; 58
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	ea e3       	ldi	r30, 0x3A	; 58
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	80 81       	ld	r24, Z
     df8:	48 2f       	mov	r20, r24
     dfa:	8a 81       	ldd	r24, Y+2	; 0x02
     dfc:	28 2f       	mov	r18, r24
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	02 2e       	mov	r0, r18
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <DIO_SetPinDirection+0x16e>
     e08:	88 0f       	add	r24, r24
     e0a:	99 1f       	adc	r25, r25
     e0c:	0a 94       	dec	r0
     e0e:	e2 f7       	brpl	.-8      	; 0xe08 <DIO_SetPinDirection+0x16a>
     e10:	84 2b       	or	r24, r20
     e12:	8c 93       	st	X, r24
     e14:	3b c0       	rjmp	.+118    	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPB:
            SET_BIT(DDRB_Register, PinIDcopy);
     e16:	a7 e3       	ldi	r26, 0x37	; 55
     e18:	b0 e0       	ldi	r27, 0x00	; 0
     e1a:	e7 e3       	ldi	r30, 0x37	; 55
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	80 81       	ld	r24, Z
     e20:	48 2f       	mov	r20, r24
     e22:	8a 81       	ldd	r24, Y+2	; 0x02
     e24:	28 2f       	mov	r18, r24
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	02 2e       	mov	r0, r18
     e2e:	02 c0       	rjmp	.+4      	; 0xe34 <DIO_SetPinDirection+0x196>
     e30:	88 0f       	add	r24, r24
     e32:	99 1f       	adc	r25, r25
     e34:	0a 94       	dec	r0
     e36:	e2 f7       	brpl	.-8      	; 0xe30 <DIO_SetPinDirection+0x192>
     e38:	84 2b       	or	r24, r20
     e3a:	8c 93       	st	X, r24
     e3c:	27 c0       	rjmp	.+78     	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPC:
            SET_BIT(DDRC_Register, PinIDcopy);
     e3e:	a4 e3       	ldi	r26, 0x34	; 52
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	e4 e3       	ldi	r30, 0x34	; 52
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	48 2f       	mov	r20, r24
     e4a:	8a 81       	ldd	r24, Y+2	; 0x02
     e4c:	28 2f       	mov	r18, r24
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	02 2e       	mov	r0, r18
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <DIO_SetPinDirection+0x1be>
     e58:	88 0f       	add	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	0a 94       	dec	r0
     e5e:	e2 f7       	brpl	.-8      	; 0xe58 <DIO_SetPinDirection+0x1ba>
     e60:	84 2b       	or	r24, r20
     e62:	8c 93       	st	X, r24
     e64:	13 c0       	rjmp	.+38     	; 0xe8c <DIO_SetPinDirection+0x1ee>
            break;
        case GROUPD:
            SET_BIT(DDRD_Register, PinIDcopy);
     e66:	a1 e3       	ldi	r26, 0x31	; 49
     e68:	b0 e0       	ldi	r27, 0x00	; 0
     e6a:	e1 e3       	ldi	r30, 0x31	; 49
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	48 2f       	mov	r20, r24
     e72:	8a 81       	ldd	r24, Y+2	; 0x02
     e74:	28 2f       	mov	r18, r24
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	02 2e       	mov	r0, r18
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <DIO_SetPinDirection+0x1e6>
     e80:	88 0f       	add	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	0a 94       	dec	r0
     e86:	e2 f7       	brpl	.-8      	; 0xe80 <DIO_SetPinDirection+0x1e2>
     e88:	84 2b       	or	r24, r20
     e8a:	8c 93       	st	X, r24
    }
    else
    {

    }
}
     e8c:	27 96       	adiw	r28, 0x07	; 7
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli
     e92:	de bf       	out	0x3e, r29	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	cd bf       	out	0x3d, r28	; 61
     e98:	cf 91       	pop	r28
     e9a:	df 91       	pop	r29
     e9c:	08 95       	ret

00000e9e <DIO_SetPinValue>:

void DIO_SetPinValue(u8 GropuIDcopy, u8 PinIDcopy, u8 ValueId)
{
     e9e:	df 93       	push	r29
     ea0:	cf 93       	push	r28
     ea2:	cd b7       	in	r28, 0x3d	; 61
     ea4:	de b7       	in	r29, 0x3e	; 62
     ea6:	27 97       	sbiw	r28, 0x07	; 7
     ea8:	0f b6       	in	r0, 0x3f	; 63
     eaa:	f8 94       	cli
     eac:	de bf       	out	0x3e, r29	; 62
     eae:	0f be       	out	0x3f, r0	; 63
     eb0:	cd bf       	out	0x3d, r28	; 61
     eb2:	89 83       	std	Y+1, r24	; 0x01
     eb4:	6a 83       	std	Y+2, r22	; 0x02
     eb6:	4b 83       	std	Y+3, r20	; 0x03
    if (ValueId == LOW)
     eb8:	8b 81       	ldd	r24, Y+3	; 0x03
     eba:	88 23       	and	r24, r24
     ebc:	09 f0       	breq	.+2      	; 0xec0 <DIO_SetPinValue+0x22>
     ebe:	74 c0       	rjmp	.+232    	; 0xfa8 <DIO_SetPinValue+0x10a>
    {
        switch (GropuIDcopy)
     ec0:	89 81       	ldd	r24, Y+1	; 0x01
     ec2:	28 2f       	mov	r18, r24
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	3f 83       	std	Y+7, r19	; 0x07
     ec8:	2e 83       	std	Y+6, r18	; 0x06
     eca:	8e 81       	ldd	r24, Y+6	; 0x06
     ecc:	9f 81       	ldd	r25, Y+7	; 0x07
     ece:	81 30       	cpi	r24, 0x01	; 1
     ed0:	91 05       	cpc	r25, r1
     ed2:	59 f1       	breq	.+86     	; 0xf2a <DIO_SetPinValue+0x8c>
     ed4:	2e 81       	ldd	r18, Y+6	; 0x06
     ed6:	3f 81       	ldd	r19, Y+7	; 0x07
     ed8:	22 30       	cpi	r18, 0x02	; 2
     eda:	31 05       	cpc	r19, r1
     edc:	2c f4       	brge	.+10     	; 0xee8 <DIO_SetPinValue+0x4a>
     ede:	8e 81       	ldd	r24, Y+6	; 0x06
     ee0:	9f 81       	ldd	r25, Y+7	; 0x07
     ee2:	00 97       	sbiw	r24, 0x00	; 0
     ee4:	69 f0       	breq	.+26     	; 0xf00 <DIO_SetPinValue+0x62>
     ee6:	d2 c0       	rjmp	.+420    	; 0x108c <DIO_SetPinValue+0x1ee>
     ee8:	2e 81       	ldd	r18, Y+6	; 0x06
     eea:	3f 81       	ldd	r19, Y+7	; 0x07
     eec:	22 30       	cpi	r18, 0x02	; 2
     eee:	31 05       	cpc	r19, r1
     ef0:	89 f1       	breq	.+98     	; 0xf54 <DIO_SetPinValue+0xb6>
     ef2:	8e 81       	ldd	r24, Y+6	; 0x06
     ef4:	9f 81       	ldd	r25, Y+7	; 0x07
     ef6:	83 30       	cpi	r24, 0x03	; 3
     ef8:	91 05       	cpc	r25, r1
     efa:	09 f4       	brne	.+2      	; 0xefe <DIO_SetPinValue+0x60>
     efc:	40 c0       	rjmp	.+128    	; 0xf7e <DIO_SetPinValue+0xe0>
     efe:	c6 c0       	rjmp	.+396    	; 0x108c <DIO_SetPinValue+0x1ee>
        {
        case GROUPA:
            CLR_BIT(PORTA_Register, PinIDcopy);
     f00:	ab e3       	ldi	r26, 0x3B	; 59
     f02:	b0 e0       	ldi	r27, 0x00	; 0
     f04:	eb e3       	ldi	r30, 0x3B	; 59
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	80 81       	ld	r24, Z
     f0a:	48 2f       	mov	r20, r24
     f0c:	8a 81       	ldd	r24, Y+2	; 0x02
     f0e:	28 2f       	mov	r18, r24
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	02 2e       	mov	r0, r18
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <DIO_SetPinValue+0x80>
     f1a:	88 0f       	add	r24, r24
     f1c:	99 1f       	adc	r25, r25
     f1e:	0a 94       	dec	r0
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <DIO_SetPinValue+0x7c>
     f22:	80 95       	com	r24
     f24:	84 23       	and	r24, r20
     f26:	8c 93       	st	X, r24
     f28:	b1 c0       	rjmp	.+354    	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPB:
            CLR_BIT(PORTB_Register, PinIDcopy);
     f2a:	a8 e3       	ldi	r26, 0x38	; 56
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	e8 e3       	ldi	r30, 0x38	; 56
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	48 2f       	mov	r20, r24
     f36:	8a 81       	ldd	r24, Y+2	; 0x02
     f38:	28 2f       	mov	r18, r24
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 2e       	mov	r0, r18
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <DIO_SetPinValue+0xaa>
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	0a 94       	dec	r0
     f4a:	e2 f7       	brpl	.-8      	; 0xf44 <DIO_SetPinValue+0xa6>
     f4c:	80 95       	com	r24
     f4e:	84 23       	and	r24, r20
     f50:	8c 93       	st	X, r24
     f52:	9c c0       	rjmp	.+312    	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPC:
            CLR_BIT(PORTC_Register, PinIDcopy);
     f54:	a5 e3       	ldi	r26, 0x35	; 53
     f56:	b0 e0       	ldi	r27, 0x00	; 0
     f58:	e5 e3       	ldi	r30, 0x35	; 53
     f5a:	f0 e0       	ldi	r31, 0x00	; 0
     f5c:	80 81       	ld	r24, Z
     f5e:	48 2f       	mov	r20, r24
     f60:	8a 81       	ldd	r24, Y+2	; 0x02
     f62:	28 2f       	mov	r18, r24
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	81 e0       	ldi	r24, 0x01	; 1
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	02 2e       	mov	r0, r18
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <DIO_SetPinValue+0xd4>
     f6e:	88 0f       	add	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	0a 94       	dec	r0
     f74:	e2 f7       	brpl	.-8      	; 0xf6e <DIO_SetPinValue+0xd0>
     f76:	80 95       	com	r24
     f78:	84 23       	and	r24, r20
     f7a:	8c 93       	st	X, r24
     f7c:	87 c0       	rjmp	.+270    	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPD:
            CLR_BIT(PORTD_Register, PinIDcopy);
     f7e:	a2 e3       	ldi	r26, 0x32	; 50
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	e2 e3       	ldi	r30, 0x32	; 50
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	80 81       	ld	r24, Z
     f88:	48 2f       	mov	r20, r24
     f8a:	8a 81       	ldd	r24, Y+2	; 0x02
     f8c:	28 2f       	mov	r18, r24
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	02 2e       	mov	r0, r18
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <DIO_SetPinValue+0xfe>
     f98:	88 0f       	add	r24, r24
     f9a:	99 1f       	adc	r25, r25
     f9c:	0a 94       	dec	r0
     f9e:	e2 f7       	brpl	.-8      	; 0xf98 <DIO_SetPinValue+0xfa>
     fa0:	80 95       	com	r24
     fa2:	84 23       	and	r24, r20
     fa4:	8c 93       	st	X, r24
     fa6:	72 c0       	rjmp	.+228    	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        }
    }
    else if (ValueId == HIGH)
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	81 30       	cpi	r24, 0x01	; 1
     fac:	09 f0       	breq	.+2      	; 0xfb0 <DIO_SetPinValue+0x112>
     fae:	6e c0       	rjmp	.+220    	; 0x108c <DIO_SetPinValue+0x1ee>
    {
        switch (GropuIDcopy)
     fb0:	89 81       	ldd	r24, Y+1	; 0x01
     fb2:	28 2f       	mov	r18, r24
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	3d 83       	std	Y+5, r19	; 0x05
     fb8:	2c 83       	std	Y+4, r18	; 0x04
     fba:	8c 81       	ldd	r24, Y+4	; 0x04
     fbc:	9d 81       	ldd	r25, Y+5	; 0x05
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	91 05       	cpc	r25, r1
     fc2:	49 f1       	breq	.+82     	; 0x1016 <DIO_SetPinValue+0x178>
     fc4:	2c 81       	ldd	r18, Y+4	; 0x04
     fc6:	3d 81       	ldd	r19, Y+5	; 0x05
     fc8:	22 30       	cpi	r18, 0x02	; 2
     fca:	31 05       	cpc	r19, r1
     fcc:	2c f4       	brge	.+10     	; 0xfd8 <DIO_SetPinValue+0x13a>
     fce:	8c 81       	ldd	r24, Y+4	; 0x04
     fd0:	9d 81       	ldd	r25, Y+5	; 0x05
     fd2:	00 97       	sbiw	r24, 0x00	; 0
     fd4:	61 f0       	breq	.+24     	; 0xfee <DIO_SetPinValue+0x150>
     fd6:	5a c0       	rjmp	.+180    	; 0x108c <DIO_SetPinValue+0x1ee>
     fd8:	2c 81       	ldd	r18, Y+4	; 0x04
     fda:	3d 81       	ldd	r19, Y+5	; 0x05
     fdc:	22 30       	cpi	r18, 0x02	; 2
     fde:	31 05       	cpc	r19, r1
     fe0:	71 f1       	breq	.+92     	; 0x103e <DIO_SetPinValue+0x1a0>
     fe2:	8c 81       	ldd	r24, Y+4	; 0x04
     fe4:	9d 81       	ldd	r25, Y+5	; 0x05
     fe6:	83 30       	cpi	r24, 0x03	; 3
     fe8:	91 05       	cpc	r25, r1
     fea:	e9 f1       	breq	.+122    	; 0x1066 <DIO_SetPinValue+0x1c8>
     fec:	4f c0       	rjmp	.+158    	; 0x108c <DIO_SetPinValue+0x1ee>
        {
        case GROUPA:
            SET_BIT(PORTA_Register, PinIDcopy);
     fee:	ab e3       	ldi	r26, 0x3B	; 59
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	eb e3       	ldi	r30, 0x3B	; 59
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	80 81       	ld	r24, Z
     ff8:	48 2f       	mov	r20, r24
     ffa:	8a 81       	ldd	r24, Y+2	; 0x02
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	81 e0       	ldi	r24, 0x01	; 1
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	02 2e       	mov	r0, r18
    1006:	02 c0       	rjmp	.+4      	; 0x100c <DIO_SetPinValue+0x16e>
    1008:	88 0f       	add	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	0a 94       	dec	r0
    100e:	e2 f7       	brpl	.-8      	; 0x1008 <DIO_SetPinValue+0x16a>
    1010:	84 2b       	or	r24, r20
    1012:	8c 93       	st	X, r24
    1014:	3b c0       	rjmp	.+118    	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPB:
            SET_BIT(PORTB_Register, PinIDcopy);
    1016:	a8 e3       	ldi	r26, 0x38	; 56
    1018:	b0 e0       	ldi	r27, 0x00	; 0
    101a:	e8 e3       	ldi	r30, 0x38	; 56
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	80 81       	ld	r24, Z
    1020:	48 2f       	mov	r20, r24
    1022:	8a 81       	ldd	r24, Y+2	; 0x02
    1024:	28 2f       	mov	r18, r24
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	81 e0       	ldi	r24, 0x01	; 1
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	02 2e       	mov	r0, r18
    102e:	02 c0       	rjmp	.+4      	; 0x1034 <DIO_SetPinValue+0x196>
    1030:	88 0f       	add	r24, r24
    1032:	99 1f       	adc	r25, r25
    1034:	0a 94       	dec	r0
    1036:	e2 f7       	brpl	.-8      	; 0x1030 <DIO_SetPinValue+0x192>
    1038:	84 2b       	or	r24, r20
    103a:	8c 93       	st	X, r24
    103c:	27 c0       	rjmp	.+78     	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPC:
            SET_BIT(PORTC_Register, PinIDcopy);
    103e:	a5 e3       	ldi	r26, 0x35	; 53
    1040:	b0 e0       	ldi	r27, 0x00	; 0
    1042:	e5 e3       	ldi	r30, 0x35	; 53
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	80 81       	ld	r24, Z
    1048:	48 2f       	mov	r20, r24
    104a:	8a 81       	ldd	r24, Y+2	; 0x02
    104c:	28 2f       	mov	r18, r24
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	81 e0       	ldi	r24, 0x01	; 1
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	02 2e       	mov	r0, r18
    1056:	02 c0       	rjmp	.+4      	; 0x105c <DIO_SetPinValue+0x1be>
    1058:	88 0f       	add	r24, r24
    105a:	99 1f       	adc	r25, r25
    105c:	0a 94       	dec	r0
    105e:	e2 f7       	brpl	.-8      	; 0x1058 <DIO_SetPinValue+0x1ba>
    1060:	84 2b       	or	r24, r20
    1062:	8c 93       	st	X, r24
    1064:	13 c0       	rjmp	.+38     	; 0x108c <DIO_SetPinValue+0x1ee>
            break;
        case GROUPD:
            SET_BIT(PORTD_Register, PinIDcopy);
    1066:	a2 e3       	ldi	r26, 0x32	; 50
    1068:	b0 e0       	ldi	r27, 0x00	; 0
    106a:	e2 e3       	ldi	r30, 0x32	; 50
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	80 81       	ld	r24, Z
    1070:	48 2f       	mov	r20, r24
    1072:	8a 81       	ldd	r24, Y+2	; 0x02
    1074:	28 2f       	mov	r18, r24
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	02 2e       	mov	r0, r18
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <DIO_SetPinValue+0x1e6>
    1080:	88 0f       	add	r24, r24
    1082:	99 1f       	adc	r25, r25
    1084:	0a 94       	dec	r0
    1086:	e2 f7       	brpl	.-8      	; 0x1080 <DIO_SetPinValue+0x1e2>
    1088:	84 2b       	or	r24, r20
    108a:	8c 93       	st	X, r24
            break;
        }
    }
}
    108c:	27 96       	adiw	r28, 0x07	; 7
    108e:	0f b6       	in	r0, 0x3f	; 63
    1090:	f8 94       	cli
    1092:	de bf       	out	0x3e, r29	; 62
    1094:	0f be       	out	0x3f, r0	; 63
    1096:	cd bf       	out	0x3d, r28	; 61
    1098:	cf 91       	pop	r28
    109a:	df 91       	pop	r29
    109c:	08 95       	ret

0000109e <DIO_GetPinValue>:

u8 DIO_GetPinValue(u8 GropuIDcopy, u8 PinIDcopy)
{
    109e:	df 93       	push	r29
    10a0:	cf 93       	push	r28
    10a2:	00 d0       	rcall	.+0      	; 0x10a4 <DIO_GetPinValue+0x6>
    10a4:	00 d0       	rcall	.+0      	; 0x10a6 <DIO_GetPinValue+0x8>
    10a6:	0f 92       	push	r0
    10a8:	cd b7       	in	r28, 0x3d	; 61
    10aa:	de b7       	in	r29, 0x3e	; 62
    10ac:	8a 83       	std	Y+2, r24	; 0x02
    10ae:	6b 83       	std	Y+3, r22	; 0x03
    u8 result = 0xFF;
    10b0:	8f ef       	ldi	r24, 0xFF	; 255
    10b2:	89 83       	std	Y+1, r24	; 0x01
    switch (GropuIDcopy)
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	28 2f       	mov	r18, r24
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	3d 83       	std	Y+5, r19	; 0x05
    10bc:	2c 83       	std	Y+4, r18	; 0x04
    10be:	4c 81       	ldd	r20, Y+4	; 0x04
    10c0:	5d 81       	ldd	r21, Y+5	; 0x05
    10c2:	41 30       	cpi	r20, 0x01	; 1
    10c4:	51 05       	cpc	r21, r1
    10c6:	41 f1       	breq	.+80     	; 0x1118 <DIO_GetPinValue+0x7a>
    10c8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ca:	9d 81       	ldd	r25, Y+5	; 0x05
    10cc:	82 30       	cpi	r24, 0x02	; 2
    10ce:	91 05       	cpc	r25, r1
    10d0:	34 f4       	brge	.+12     	; 0x10de <DIO_GetPinValue+0x40>
    10d2:	2c 81       	ldd	r18, Y+4	; 0x04
    10d4:	3d 81       	ldd	r19, Y+5	; 0x05
    10d6:	21 15       	cp	r18, r1
    10d8:	31 05       	cpc	r19, r1
    10da:	61 f0       	breq	.+24     	; 0x10f4 <DIO_GetPinValue+0x56>
    10dc:	52 c0       	rjmp	.+164    	; 0x1182 <DIO_GetPinValue+0xe4>
    10de:	4c 81       	ldd	r20, Y+4	; 0x04
    10e0:	5d 81       	ldd	r21, Y+5	; 0x05
    10e2:	42 30       	cpi	r20, 0x02	; 2
    10e4:	51 05       	cpc	r21, r1
    10e6:	51 f1       	breq	.+84     	; 0x113c <DIO_GetPinValue+0x9e>
    10e8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ea:	9d 81       	ldd	r25, Y+5	; 0x05
    10ec:	83 30       	cpi	r24, 0x03	; 3
    10ee:	91 05       	cpc	r25, r1
    10f0:	b9 f1       	breq	.+110    	; 0x1160 <DIO_GetPinValue+0xc2>
    10f2:	47 c0       	rjmp	.+142    	; 0x1182 <DIO_GetPinValue+0xe4>
    {
    case GROUPA:
        result = GET_BIT(PINA_Register, PinIDcopy);
    10f4:	e9 e3       	ldi	r30, 0x39	; 57
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	28 2f       	mov	r18, r24
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1100:	88 2f       	mov	r24, r24
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	a9 01       	movw	r20, r18
    1106:	02 c0       	rjmp	.+4      	; 0x110c <DIO_GetPinValue+0x6e>
    1108:	55 95       	asr	r21
    110a:	47 95       	ror	r20
    110c:	8a 95       	dec	r24
    110e:	e2 f7       	brpl	.-8      	; 0x1108 <DIO_GetPinValue+0x6a>
    1110:	ca 01       	movw	r24, r20
    1112:	81 70       	andi	r24, 0x01	; 1
    1114:	89 83       	std	Y+1, r24	; 0x01
    1116:	35 c0       	rjmp	.+106    	; 0x1182 <DIO_GetPinValue+0xe4>
        break;
    case GROUPB:
        result = GET_BIT(PINB_Register, PinIDcopy);
    1118:	e6 e3       	ldi	r30, 0x36	; 54
    111a:	f0 e0       	ldi	r31, 0x00	; 0
    111c:	80 81       	ld	r24, Z
    111e:	28 2f       	mov	r18, r24
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	88 2f       	mov	r24, r24
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a9 01       	movw	r20, r18
    112a:	02 c0       	rjmp	.+4      	; 0x1130 <DIO_GetPinValue+0x92>
    112c:	55 95       	asr	r21
    112e:	47 95       	ror	r20
    1130:	8a 95       	dec	r24
    1132:	e2 f7       	brpl	.-8      	; 0x112c <DIO_GetPinValue+0x8e>
    1134:	ca 01       	movw	r24, r20
    1136:	81 70       	andi	r24, 0x01	; 1
    1138:	89 83       	std	Y+1, r24	; 0x01
    113a:	23 c0       	rjmp	.+70     	; 0x1182 <DIO_GetPinValue+0xe4>
        break;
    case GROUPC:
        result = GET_BIT(PINC_Register, PinIDcopy);
    113c:	e3 e3       	ldi	r30, 0x33	; 51
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	28 2f       	mov	r18, r24
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	88 2f       	mov	r24, r24
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	a9 01       	movw	r20, r18
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <DIO_GetPinValue+0xb6>
    1150:	55 95       	asr	r21
    1152:	47 95       	ror	r20
    1154:	8a 95       	dec	r24
    1156:	e2 f7       	brpl	.-8      	; 0x1150 <DIO_GetPinValue+0xb2>
    1158:	ca 01       	movw	r24, r20
    115a:	81 70       	andi	r24, 0x01	; 1
    115c:	89 83       	std	Y+1, r24	; 0x01
    115e:	11 c0       	rjmp	.+34     	; 0x1182 <DIO_GetPinValue+0xe4>
        break;
    case GROUPD:
        result = GET_BIT(PIND_Register, PinIDcopy);
    1160:	e0 e3       	ldi	r30, 0x30	; 48
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	80 81       	ld	r24, Z
    1166:	28 2f       	mov	r18, r24
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	8b 81       	ldd	r24, Y+3	; 0x03
    116c:	88 2f       	mov	r24, r24
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	a9 01       	movw	r20, r18
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <DIO_GetPinValue+0xda>
    1174:	55 95       	asr	r21
    1176:	47 95       	ror	r20
    1178:	8a 95       	dec	r24
    117a:	e2 f7       	brpl	.-8      	; 0x1174 <DIO_GetPinValue+0xd6>
    117c:	ca 01       	movw	r24, r20
    117e:	81 70       	andi	r24, 0x01	; 1
    1180:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return result;
    1182:	89 81       	ldd	r24, Y+1	; 0x01
}
    1184:	0f 90       	pop	r0
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	cf 91       	pop	r28
    1190:	df 91       	pop	r29
    1192:	08 95       	ret

00001194 <DIO_SetGroupDirection>:

void DIO_SetGroupDirection(u8 GropuIDcopy, u8 DirID)
{
    1194:	df 93       	push	r29
    1196:	cf 93       	push	r28
    1198:	00 d0       	rcall	.+0      	; 0x119a <DIO_SetGroupDirection+0x6>
    119a:	00 d0       	rcall	.+0      	; 0x119c <DIO_SetGroupDirection+0x8>
    119c:	cd b7       	in	r28, 0x3d	; 61
    119e:	de b7       	in	r29, 0x3e	; 62
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	6a 83       	std	Y+2, r22	; 0x02
    switch (GropuIDcopy)
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	3c 83       	std	Y+4, r19	; 0x04
    11ac:	2b 83       	std	Y+3, r18	; 0x03
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	9c 81       	ldd	r25, Y+4	; 0x04
    11b2:	81 30       	cpi	r24, 0x01	; 1
    11b4:	91 05       	cpc	r25, r1
    11b6:	d1 f0       	breq	.+52     	; 0x11ec <DIO_SetGroupDirection+0x58>
    11b8:	2b 81       	ldd	r18, Y+3	; 0x03
    11ba:	3c 81       	ldd	r19, Y+4	; 0x04
    11bc:	22 30       	cpi	r18, 0x02	; 2
    11be:	31 05       	cpc	r19, r1
    11c0:	2c f4       	brge	.+10     	; 0x11cc <DIO_SetGroupDirection+0x38>
    11c2:	8b 81       	ldd	r24, Y+3	; 0x03
    11c4:	9c 81       	ldd	r25, Y+4	; 0x04
    11c6:	00 97       	sbiw	r24, 0x00	; 0
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <DIO_SetGroupDirection+0x4e>
    11ca:	1e c0       	rjmp	.+60     	; 0x1208 <DIO_SetGroupDirection+0x74>
    11cc:	2b 81       	ldd	r18, Y+3	; 0x03
    11ce:	3c 81       	ldd	r19, Y+4	; 0x04
    11d0:	22 30       	cpi	r18, 0x02	; 2
    11d2:	31 05       	cpc	r19, r1
    11d4:	81 f0       	breq	.+32     	; 0x11f6 <DIO_SetGroupDirection+0x62>
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	9c 81       	ldd	r25, Y+4	; 0x04
    11da:	83 30       	cpi	r24, 0x03	; 3
    11dc:	91 05       	cpc	r25, r1
    11de:	81 f0       	breq	.+32     	; 0x1200 <DIO_SetGroupDirection+0x6c>
    11e0:	13 c0       	rjmp	.+38     	; 0x1208 <DIO_SetGroupDirection+0x74>
    {
    case GROUPA:
        DDRA_Register = DirID;
    11e2:	ea e3       	ldi	r30, 0x3A	; 58
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	8a 81       	ldd	r24, Y+2	; 0x02
    11e8:	80 83       	st	Z, r24
    11ea:	0e c0       	rjmp	.+28     	; 0x1208 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPB:
        DDRB_Register = DirID;
    11ec:	e7 e3       	ldi	r30, 0x37	; 55
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	80 83       	st	Z, r24
    11f4:	09 c0       	rjmp	.+18     	; 0x1208 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPC:
        DDRC_Register = DirID;
    11f6:	e4 e3       	ldi	r30, 0x34	; 52
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	8a 81       	ldd	r24, Y+2	; 0x02
    11fc:	80 83       	st	Z, r24
    11fe:	04 c0       	rjmp	.+8      	; 0x1208 <DIO_SetGroupDirection+0x74>
        break;
    case GROUPD:
        DDRD_Register = DirID;
    1200:	e1 e3       	ldi	r30, 0x31	; 49
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	8a 81       	ldd	r24, Y+2	; 0x02
    1206:	80 83       	st	Z, r24
        break;
    }
}
    1208:	0f 90       	pop	r0
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	0f 90       	pop	r0
    1210:	cf 91       	pop	r28
    1212:	df 91       	pop	r29
    1214:	08 95       	ret

00001216 <DIO_SetGroupValue>:

void DIO_SetGroupValue(u8 GropuIDcopy, u8 valueID)
{
    1216:	df 93       	push	r29
    1218:	cf 93       	push	r28
    121a:	00 d0       	rcall	.+0      	; 0x121c <DIO_SetGroupValue+0x6>
    121c:	00 d0       	rcall	.+0      	; 0x121e <DIO_SetGroupValue+0x8>
    121e:	cd b7       	in	r28, 0x3d	; 61
    1220:	de b7       	in	r29, 0x3e	; 62
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	6a 83       	std	Y+2, r22	; 0x02

    switch (GropuIDcopy)
    1226:	89 81       	ldd	r24, Y+1	; 0x01
    1228:	28 2f       	mov	r18, r24
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	3c 83       	std	Y+4, r19	; 0x04
    122e:	2b 83       	std	Y+3, r18	; 0x03
    1230:	8b 81       	ldd	r24, Y+3	; 0x03
    1232:	9c 81       	ldd	r25, Y+4	; 0x04
    1234:	81 30       	cpi	r24, 0x01	; 1
    1236:	91 05       	cpc	r25, r1
    1238:	d1 f0       	breq	.+52     	; 0x126e <DIO_SetGroupValue+0x58>
    123a:	2b 81       	ldd	r18, Y+3	; 0x03
    123c:	3c 81       	ldd	r19, Y+4	; 0x04
    123e:	22 30       	cpi	r18, 0x02	; 2
    1240:	31 05       	cpc	r19, r1
    1242:	2c f4       	brge	.+10     	; 0x124e <DIO_SetGroupValue+0x38>
    1244:	8b 81       	ldd	r24, Y+3	; 0x03
    1246:	9c 81       	ldd	r25, Y+4	; 0x04
    1248:	00 97       	sbiw	r24, 0x00	; 0
    124a:	61 f0       	breq	.+24     	; 0x1264 <DIO_SetGroupValue+0x4e>
    124c:	1e c0       	rjmp	.+60     	; 0x128a <DIO_SetGroupValue+0x74>
    124e:	2b 81       	ldd	r18, Y+3	; 0x03
    1250:	3c 81       	ldd	r19, Y+4	; 0x04
    1252:	22 30       	cpi	r18, 0x02	; 2
    1254:	31 05       	cpc	r19, r1
    1256:	81 f0       	breq	.+32     	; 0x1278 <DIO_SetGroupValue+0x62>
    1258:	8b 81       	ldd	r24, Y+3	; 0x03
    125a:	9c 81       	ldd	r25, Y+4	; 0x04
    125c:	83 30       	cpi	r24, 0x03	; 3
    125e:	91 05       	cpc	r25, r1
    1260:	81 f0       	breq	.+32     	; 0x1282 <DIO_SetGroupValue+0x6c>
    1262:	13 c0       	rjmp	.+38     	; 0x128a <DIO_SetGroupValue+0x74>
    {
    case GROUPA:
        PORTA_Register = valueID;
    1264:	eb e3       	ldi	r30, 0x3B	; 59
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	8a 81       	ldd	r24, Y+2	; 0x02
    126a:	80 83       	st	Z, r24
    126c:	0e c0       	rjmp	.+28     	; 0x128a <DIO_SetGroupValue+0x74>
        break;
    case GROUPB:
        PORTB_Register = valueID;
    126e:	e8 e3       	ldi	r30, 0x38	; 56
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	80 83       	st	Z, r24
    1276:	09 c0       	rjmp	.+18     	; 0x128a <DIO_SetGroupValue+0x74>
        break;
    case GROUPC:
        PORTC_Register = valueID;
    1278:	e5 e3       	ldi	r30, 0x35	; 53
    127a:	f0 e0       	ldi	r31, 0x00	; 0
    127c:	8a 81       	ldd	r24, Y+2	; 0x02
    127e:	80 83       	st	Z, r24
    1280:	04 c0       	rjmp	.+8      	; 0x128a <DIO_SetGroupValue+0x74>
        break;
    case GROUPD:
        PORTD_Register = valueID;
    1282:	e2 e3       	ldi	r30, 0x32	; 50
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	8a 81       	ldd	r24, Y+2	; 0x02
    1288:	80 83       	st	Z, r24
        break;
    }
}
    128a:	0f 90       	pop	r0
    128c:	0f 90       	pop	r0
    128e:	0f 90       	pop	r0
    1290:	0f 90       	pop	r0
    1292:	cf 91       	pop	r28
    1294:	df 91       	pop	r29
    1296:	08 95       	ret

00001298 <DIO_TogPin>:


void DIO_TogPin(u8 GropuIDcopy, u8 PinIDcopy) {
    1298:	df 93       	push	r29
    129a:	cf 93       	push	r28
    129c:	00 d0       	rcall	.+0      	; 0x129e <DIO_TogPin+0x6>
    129e:	00 d0       	rcall	.+0      	; 0x12a0 <DIO_TogPin+0x8>
    12a0:	cd b7       	in	r28, 0x3d	; 61
    12a2:	de b7       	in	r29, 0x3e	; 62
    12a4:	89 83       	std	Y+1, r24	; 0x01
    12a6:	6a 83       	std	Y+2, r22	; 0x02
	switch (GropuIDcopy) {
    12a8:	89 81       	ldd	r24, Y+1	; 0x01
    12aa:	28 2f       	mov	r18, r24
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	3c 83       	std	Y+4, r19	; 0x04
    12b0:	2b 83       	std	Y+3, r18	; 0x03
    12b2:	8b 81       	ldd	r24, Y+3	; 0x03
    12b4:	9c 81       	ldd	r25, Y+4	; 0x04
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	91 05       	cpc	r25, r1
    12ba:	49 f1       	breq	.+82     	; 0x130e <DIO_TogPin+0x76>
    12bc:	2b 81       	ldd	r18, Y+3	; 0x03
    12be:	3c 81       	ldd	r19, Y+4	; 0x04
    12c0:	22 30       	cpi	r18, 0x02	; 2
    12c2:	31 05       	cpc	r19, r1
    12c4:	2c f4       	brge	.+10     	; 0x12d0 <DIO_TogPin+0x38>
    12c6:	8b 81       	ldd	r24, Y+3	; 0x03
    12c8:	9c 81       	ldd	r25, Y+4	; 0x04
    12ca:	00 97       	sbiw	r24, 0x00	; 0
    12cc:	61 f0       	breq	.+24     	; 0x12e6 <DIO_TogPin+0x4e>
    12ce:	5a c0       	rjmp	.+180    	; 0x1384 <DIO_TogPin+0xec>
    12d0:	2b 81       	ldd	r18, Y+3	; 0x03
    12d2:	3c 81       	ldd	r19, Y+4	; 0x04
    12d4:	22 30       	cpi	r18, 0x02	; 2
    12d6:	31 05       	cpc	r19, r1
    12d8:	71 f1       	breq	.+92     	; 0x1336 <DIO_TogPin+0x9e>
    12da:	8b 81       	ldd	r24, Y+3	; 0x03
    12dc:	9c 81       	ldd	r25, Y+4	; 0x04
    12de:	83 30       	cpi	r24, 0x03	; 3
    12e0:	91 05       	cpc	r25, r1
    12e2:	e9 f1       	breq	.+122    	; 0x135e <DIO_TogPin+0xc6>
    12e4:	4f c0       	rjmp	.+158    	; 0x1384 <DIO_TogPin+0xec>
	case GROUPA:
		PORTA_Register ^= (1 << PinIDcopy);
    12e6:	ab e3       	ldi	r26, 0x3B	; 59
    12e8:	b0 e0       	ldi	r27, 0x00	; 0
    12ea:	eb e3       	ldi	r30, 0x3B	; 59
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	80 81       	ld	r24, Z
    12f0:	48 2f       	mov	r20, r24
    12f2:	8a 81       	ldd	r24, Y+2	; 0x02
    12f4:	28 2f       	mov	r18, r24
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	02 2e       	mov	r0, r18
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <DIO_TogPin+0x6c>
    1300:	88 0f       	add	r24, r24
    1302:	99 1f       	adc	r25, r25
    1304:	0a 94       	dec	r0
    1306:	e2 f7       	brpl	.-8      	; 0x1300 <DIO_TogPin+0x68>
    1308:	84 27       	eor	r24, r20
    130a:	8c 93       	st	X, r24
    130c:	3b c0       	rjmp	.+118    	; 0x1384 <DIO_TogPin+0xec>
		break;
	case GROUPB:
		PORTB_Register ^= (1 << PinIDcopy);
    130e:	a8 e3       	ldi	r26, 0x38	; 56
    1310:	b0 e0       	ldi	r27, 0x00	; 0
    1312:	e8 e3       	ldi	r30, 0x38	; 56
    1314:	f0 e0       	ldi	r31, 0x00	; 0
    1316:	80 81       	ld	r24, Z
    1318:	48 2f       	mov	r20, r24
    131a:	8a 81       	ldd	r24, Y+2	; 0x02
    131c:	28 2f       	mov	r18, r24
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	02 2e       	mov	r0, r18
    1326:	02 c0       	rjmp	.+4      	; 0x132c <DIO_TogPin+0x94>
    1328:	88 0f       	add	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	0a 94       	dec	r0
    132e:	e2 f7       	brpl	.-8      	; 0x1328 <DIO_TogPin+0x90>
    1330:	84 27       	eor	r24, r20
    1332:	8c 93       	st	X, r24
    1334:	27 c0       	rjmp	.+78     	; 0x1384 <DIO_TogPin+0xec>
		break;
	case GROUPC:
		PORTC_Register ^= (1 << PinIDcopy);
    1336:	a5 e3       	ldi	r26, 0x35	; 53
    1338:	b0 e0       	ldi	r27, 0x00	; 0
    133a:	e5 e3       	ldi	r30, 0x35	; 53
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	80 81       	ld	r24, Z
    1340:	48 2f       	mov	r20, r24
    1342:	8a 81       	ldd	r24, Y+2	; 0x02
    1344:	28 2f       	mov	r18, r24
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	02 2e       	mov	r0, r18
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <DIO_TogPin+0xbc>
    1350:	88 0f       	add	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	0a 94       	dec	r0
    1356:	e2 f7       	brpl	.-8      	; 0x1350 <DIO_TogPin+0xb8>
    1358:	84 27       	eor	r24, r20
    135a:	8c 93       	st	X, r24
    135c:	13 c0       	rjmp	.+38     	; 0x1384 <DIO_TogPin+0xec>
		break;
	case GROUPD:
		PORTD_Register ^= (1 << PinIDcopy);
    135e:	a2 e3       	ldi	r26, 0x32	; 50
    1360:	b0 e0       	ldi	r27, 0x00	; 0
    1362:	e2 e3       	ldi	r30, 0x32	; 50
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	80 81       	ld	r24, Z
    1368:	48 2f       	mov	r20, r24
    136a:	8a 81       	ldd	r24, Y+2	; 0x02
    136c:	28 2f       	mov	r18, r24
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	02 2e       	mov	r0, r18
    1376:	02 c0       	rjmp	.+4      	; 0x137c <DIO_TogPin+0xe4>
    1378:	88 0f       	add	r24, r24
    137a:	99 1f       	adc	r25, r25
    137c:	0a 94       	dec	r0
    137e:	e2 f7       	brpl	.-8      	; 0x1378 <DIO_TogPin+0xe0>
    1380:	84 27       	eor	r24, r20
    1382:	8c 93       	st	X, r24
		break;
	}
}
    1384:	0f 90       	pop	r0
    1386:	0f 90       	pop	r0
    1388:	0f 90       	pop	r0
    138a:	0f 90       	pop	r0
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	08 95       	ret

00001392 <DIO_voidSetPortDirection>:
 * note 27na bn4t8l 3la pull up switch b2ny b5le 2l DDR_reg->input(=0) && PORT_reg==1
 */
void DIO_voidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)//2na m7taga 2grf 2na 48ala 3la 2nhy port mn 2l 4 & 2l pin bt3ty act as input wla output
// fk2n 2dtlo(0(porta,255)2w(1(portb,128(1000 0000)m3naha 2n pin7 output w 2l ba2y input)
//dah fe 7alet 2ny 48ala 3la port kamel
{
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	00 d0       	rcall	.+0      	; 0x1398 <DIO_voidSetPortDirection+0x6>
    1398:	00 d0       	rcall	.+0      	; 0x139a <DIO_voidSetPortDirection+0x8>
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
    139e:	89 83       	std	Y+1, r24	; 0x01
    13a0:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    13a2:	89 81       	ldd	r24, Y+1	; 0x01
    13a4:	28 2f       	mov	r18, r24
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	3c 83       	std	Y+4, r19	; 0x04
    13aa:	2b 83       	std	Y+3, r18	; 0x03
    13ac:	8b 81       	ldd	r24, Y+3	; 0x03
    13ae:	9c 81       	ldd	r25, Y+4	; 0x04
    13b0:	81 30       	cpi	r24, 0x01	; 1
    13b2:	91 05       	cpc	r25, r1
    13b4:	d1 f0       	breq	.+52     	; 0x13ea <DIO_voidSetPortDirection+0x58>
    13b6:	2b 81       	ldd	r18, Y+3	; 0x03
    13b8:	3c 81       	ldd	r19, Y+4	; 0x04
    13ba:	22 30       	cpi	r18, 0x02	; 2
    13bc:	31 05       	cpc	r19, r1
    13be:	2c f4       	brge	.+10     	; 0x13ca <DIO_voidSetPortDirection+0x38>
    13c0:	8b 81       	ldd	r24, Y+3	; 0x03
    13c2:	9c 81       	ldd	r25, Y+4	; 0x04
    13c4:	00 97       	sbiw	r24, 0x00	; 0
    13c6:	61 f0       	breq	.+24     	; 0x13e0 <DIO_voidSetPortDirection+0x4e>
    13c8:	1e c0       	rjmp	.+60     	; 0x1406 <DIO_voidSetPortDirection+0x74>
    13ca:	2b 81       	ldd	r18, Y+3	; 0x03
    13cc:	3c 81       	ldd	r19, Y+4	; 0x04
    13ce:	22 30       	cpi	r18, 0x02	; 2
    13d0:	31 05       	cpc	r19, r1
    13d2:	81 f0       	breq	.+32     	; 0x13f4 <DIO_voidSetPortDirection+0x62>
    13d4:	8b 81       	ldd	r24, Y+3	; 0x03
    13d6:	9c 81       	ldd	r25, Y+4	; 0x04
    13d8:	83 30       	cpi	r24, 0x03	; 3
    13da:	91 05       	cpc	r25, r1
    13dc:	81 f0       	breq	.+32     	; 0x13fe <DIO_voidSetPortDirection+0x6c>
    13de:	13 c0       	rjmp	.+38     	; 0x1406 <DIO_voidSetPortDirection+0x74>
	{
	case DIO_PORTA:DIO_DDRA_REG=Copy_u8Direction;break;
    13e0:	ea e3       	ldi	r30, 0x3A	; 58
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	8a 81       	ldd	r24, Y+2	; 0x02
    13e6:	80 83       	st	Z, r24
    13e8:	0e c0       	rjmp	.+28     	; 0x1406 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTB:DIO_DDRB_REG=Copy_u8Direction;break;
    13ea:	e7 e3       	ldi	r30, 0x37	; 55
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	8a 81       	ldd	r24, Y+2	; 0x02
    13f0:	80 83       	st	Z, r24
    13f2:	09 c0       	rjmp	.+18     	; 0x1406 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTC:DIO_DDRC_REG=Copy_u8Direction;break;
    13f4:	e4 e3       	ldi	r30, 0x34	; 52
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	8a 81       	ldd	r24, Y+2	; 0x02
    13fa:	80 83       	st	Z, r24
    13fc:	04 c0       	rjmp	.+8      	; 0x1406 <DIO_voidSetPortDirection+0x74>
	case DIO_PORTD:DIO_DDRD_REG=Copy_u8Direction;break;
    13fe:	e1 e3       	ldi	r30, 0x31	; 49
    1400:	f0 e0       	ldi	r31, 0x00	; 0
    1402:	8a 81       	ldd	r24, Y+2	; 0x02
    1404:	80 83       	st	Z, r24
	default:break;
	}

}
    1406:	0f 90       	pop	r0
    1408:	0f 90       	pop	r0
    140a:	0f 90       	pop	r0
    140c:	0f 90       	pop	r0
    140e:	cf 91       	pop	r28
    1410:	df 91       	pop	r29
    1412:	08 95       	ret

00001414 <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)//value 2l hea high wla low 2l lmba ht2ed wla l2
{
    1414:	df 93       	push	r29
    1416:	cf 93       	push	r28
    1418:	00 d0       	rcall	.+0      	; 0x141a <DIO_voidSetPortValue+0x6>
    141a:	00 d0       	rcall	.+0      	; 0x141c <DIO_voidSetPortValue+0x8>
    141c:	cd b7       	in	r28, 0x3d	; 61
    141e:	de b7       	in	r29, 0x3e	; 62
    1420:	89 83       	std	Y+1, r24	; 0x01
    1422:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    1424:	89 81       	ldd	r24, Y+1	; 0x01
    1426:	28 2f       	mov	r18, r24
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	3c 83       	std	Y+4, r19	; 0x04
    142c:	2b 83       	std	Y+3, r18	; 0x03
    142e:	8b 81       	ldd	r24, Y+3	; 0x03
    1430:	9c 81       	ldd	r25, Y+4	; 0x04
    1432:	81 30       	cpi	r24, 0x01	; 1
    1434:	91 05       	cpc	r25, r1
    1436:	d1 f0       	breq	.+52     	; 0x146c <DIO_voidSetPortValue+0x58>
    1438:	2b 81       	ldd	r18, Y+3	; 0x03
    143a:	3c 81       	ldd	r19, Y+4	; 0x04
    143c:	22 30       	cpi	r18, 0x02	; 2
    143e:	31 05       	cpc	r19, r1
    1440:	2c f4       	brge	.+10     	; 0x144c <DIO_voidSetPortValue+0x38>
    1442:	8b 81       	ldd	r24, Y+3	; 0x03
    1444:	9c 81       	ldd	r25, Y+4	; 0x04
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	61 f0       	breq	.+24     	; 0x1462 <DIO_voidSetPortValue+0x4e>
    144a:	1e c0       	rjmp	.+60     	; 0x1488 <DIO_voidSetPortValue+0x74>
    144c:	2b 81       	ldd	r18, Y+3	; 0x03
    144e:	3c 81       	ldd	r19, Y+4	; 0x04
    1450:	22 30       	cpi	r18, 0x02	; 2
    1452:	31 05       	cpc	r19, r1
    1454:	81 f0       	breq	.+32     	; 0x1476 <DIO_voidSetPortValue+0x62>
    1456:	8b 81       	ldd	r24, Y+3	; 0x03
    1458:	9c 81       	ldd	r25, Y+4	; 0x04
    145a:	83 30       	cpi	r24, 0x03	; 3
    145c:	91 05       	cpc	r25, r1
    145e:	81 f0       	breq	.+32     	; 0x1480 <DIO_voidSetPortValue+0x6c>
    1460:	13 c0       	rjmp	.+38     	; 0x1488 <DIO_voidSetPortValue+0x74>
	{
    case DIO_PORTA:DIO_PORTA_REG=Copy_u8Value;break;
    1462:	eb e3       	ldi	r30, 0x3B	; 59
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	8a 81       	ldd	r24, Y+2	; 0x02
    1468:	80 83       	st	Z, r24
    146a:	0e c0       	rjmp	.+28     	; 0x1488 <DIO_voidSetPortValue+0x74>
	case DIO_PORTB:DIO_PORTB_REG=Copy_u8Value;break;
    146c:	e8 e3       	ldi	r30, 0x38	; 56
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	8a 81       	ldd	r24, Y+2	; 0x02
    1472:	80 83       	st	Z, r24
    1474:	09 c0       	rjmp	.+18     	; 0x1488 <DIO_voidSetPortValue+0x74>
	case DIO_PORTC:DIO_PORTC_REG=Copy_u8Value;break;
    1476:	e5 e3       	ldi	r30, 0x35	; 53
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	8a 81       	ldd	r24, Y+2	; 0x02
    147c:	80 83       	st	Z, r24
    147e:	04 c0       	rjmp	.+8      	; 0x1488 <DIO_voidSetPortValue+0x74>
	case DIO_PORTD:DIO_PORTD_REG=Copy_u8Value;break;
    1480:	e2 e3       	ldi	r30, 0x32	; 50
    1482:	f0 e0       	ldi	r31, 0x00	; 0
    1484:	8a 81       	ldd	r24, Y+2	; 0x02
    1486:	80 83       	st	Z, r24
	default:break;
	}

}
    1488:	0f 90       	pop	r0
    148a:	0f 90       	pop	r0
    148c:	0f 90       	pop	r0
    148e:	0f 90       	pop	r0
    1490:	cf 91       	pop	r28
    1492:	df 91       	pop	r29
    1494:	08 95       	ret

00001496 <DIO_voidSetPinDirection>:
void DIO_voidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)//(porta,8,output)
{
    1496:	df 93       	push	r29
    1498:	cf 93       	push	r28
    149a:	cd b7       	in	r28, 0x3d	; 61
    149c:	de b7       	in	r29, 0x3e	; 62
    149e:	27 97       	sbiw	r28, 0x07	; 7
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	89 83       	std	Y+1, r24	; 0x01
    14ac:	6a 83       	std	Y+2, r22	; 0x02
    14ae:	4b 83       	std	Y+3, r20	; 0x03
  if(Copy_u8Direction==DIO_OUTPUT)
    14b0:	8b 81       	ldd	r24, Y+3	; 0x03
    14b2:	81 30       	cpi	r24, 0x01	; 1
    14b4:	09 f0       	breq	.+2      	; 0x14b8 <DIO_voidSetPinDirection+0x22>
    14b6:	6f c0       	rjmp	.+222    	; 0x1596 <DIO_voidSetPinDirection+0x100>
  {
	  switch(Copy_u8Port)
    14b8:	89 81       	ldd	r24, Y+1	; 0x01
    14ba:	28 2f       	mov	r18, r24
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	3f 83       	std	Y+7, r19	; 0x07
    14c0:	2e 83       	std	Y+6, r18	; 0x06
    14c2:	8e 81       	ldd	r24, Y+6	; 0x06
    14c4:	9f 81       	ldd	r25, Y+7	; 0x07
    14c6:	81 30       	cpi	r24, 0x01	; 1
    14c8:	91 05       	cpc	r25, r1
    14ca:	49 f1       	breq	.+82     	; 0x151e <DIO_voidSetPinDirection+0x88>
    14cc:	2e 81       	ldd	r18, Y+6	; 0x06
    14ce:	3f 81       	ldd	r19, Y+7	; 0x07
    14d0:	22 30       	cpi	r18, 0x02	; 2
    14d2:	31 05       	cpc	r19, r1
    14d4:	2c f4       	brge	.+10     	; 0x14e0 <DIO_voidSetPinDirection+0x4a>
    14d6:	8e 81       	ldd	r24, Y+6	; 0x06
    14d8:	9f 81       	ldd	r25, Y+7	; 0x07
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	61 f0       	breq	.+24     	; 0x14f6 <DIO_voidSetPinDirection+0x60>
    14de:	d2 c0       	rjmp	.+420    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
    14e0:	2e 81       	ldd	r18, Y+6	; 0x06
    14e2:	3f 81       	ldd	r19, Y+7	; 0x07
    14e4:	22 30       	cpi	r18, 0x02	; 2
    14e6:	31 05       	cpc	r19, r1
    14e8:	71 f1       	breq	.+92     	; 0x1546 <DIO_voidSetPinDirection+0xb0>
    14ea:	8e 81       	ldd	r24, Y+6	; 0x06
    14ec:	9f 81       	ldd	r25, Y+7	; 0x07
    14ee:	83 30       	cpi	r24, 0x03	; 3
    14f0:	91 05       	cpc	r25, r1
    14f2:	e9 f1       	breq	.+122    	; 0x156e <DIO_voidSetPinDirection+0xd8>
    14f4:	c7 c0       	rjmp	.+398    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	  {
    case DIO_PORTA:SET_BIT(DIO_DDRA_REG,Copy_u8Pin);break;
    14f6:	aa e3       	ldi	r26, 0x3A	; 58
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	ea e3       	ldi	r30, 0x3A	; 58
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	48 2f       	mov	r20, r24
    1502:	8a 81       	ldd	r24, Y+2	; 0x02
    1504:	28 2f       	mov	r18, r24
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	02 2e       	mov	r0, r18
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <DIO_voidSetPinDirection+0x7e>
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	0a 94       	dec	r0
    1516:	e2 f7       	brpl	.-8      	; 0x1510 <DIO_voidSetPinDirection+0x7a>
    1518:	84 2b       	or	r24, r20
    151a:	8c 93       	st	X, r24
    151c:	b3 c0       	rjmp	.+358    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTB:SET_BIT(DIO_DDRB_REG,Copy_u8Pin);break;
    151e:	a7 e3       	ldi	r26, 0x37	; 55
    1520:	b0 e0       	ldi	r27, 0x00	; 0
    1522:	e7 e3       	ldi	r30, 0x37	; 55
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	80 81       	ld	r24, Z
    1528:	48 2f       	mov	r20, r24
    152a:	8a 81       	ldd	r24, Y+2	; 0x02
    152c:	28 2f       	mov	r18, r24
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	02 2e       	mov	r0, r18
    1536:	02 c0       	rjmp	.+4      	; 0x153c <DIO_voidSetPinDirection+0xa6>
    1538:	88 0f       	add	r24, r24
    153a:	99 1f       	adc	r25, r25
    153c:	0a 94       	dec	r0
    153e:	e2 f7       	brpl	.-8      	; 0x1538 <DIO_voidSetPinDirection+0xa2>
    1540:	84 2b       	or	r24, r20
    1542:	8c 93       	st	X, r24
    1544:	9f c0       	rjmp	.+318    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTC:SET_BIT(DIO_DDRC_REG,Copy_u8Pin);break;
    1546:	a4 e3       	ldi	r26, 0x34	; 52
    1548:	b0 e0       	ldi	r27, 0x00	; 0
    154a:	e4 e3       	ldi	r30, 0x34	; 52
    154c:	f0 e0       	ldi	r31, 0x00	; 0
    154e:	80 81       	ld	r24, Z
    1550:	48 2f       	mov	r20, r24
    1552:	8a 81       	ldd	r24, Y+2	; 0x02
    1554:	28 2f       	mov	r18, r24
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	02 2e       	mov	r0, r18
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <DIO_voidSetPinDirection+0xce>
    1560:	88 0f       	add	r24, r24
    1562:	99 1f       	adc	r25, r25
    1564:	0a 94       	dec	r0
    1566:	e2 f7       	brpl	.-8      	; 0x1560 <DIO_voidSetPinDirection+0xca>
    1568:	84 2b       	or	r24, r20
    156a:	8c 93       	st	X, r24
    156c:	8b c0       	rjmp	.+278    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTD:SET_BIT(DIO_DDRD_REG,Copy_u8Pin);break;
    156e:	a1 e3       	ldi	r26, 0x31	; 49
    1570:	b0 e0       	ldi	r27, 0x00	; 0
    1572:	e1 e3       	ldi	r30, 0x31	; 49
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	80 81       	ld	r24, Z
    1578:	48 2f       	mov	r20, r24
    157a:	8a 81       	ldd	r24, Y+2	; 0x02
    157c:	28 2f       	mov	r18, r24
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	81 e0       	ldi	r24, 0x01	; 1
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	02 2e       	mov	r0, r18
    1586:	02 c0       	rjmp	.+4      	; 0x158c <DIO_voidSetPinDirection+0xf6>
    1588:	88 0f       	add	r24, r24
    158a:	99 1f       	adc	r25, r25
    158c:	0a 94       	dec	r0
    158e:	e2 f7       	brpl	.-8      	; 0x1588 <DIO_voidSetPinDirection+0xf2>
    1590:	84 2b       	or	r24, r20
    1592:	8c 93       	st	X, r24
    1594:	77 c0       	rjmp	.+238    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	default:break;
	  }
  }
  else if(Copy_u8Direction==DIO_INPUT)
    1596:	8b 81       	ldd	r24, Y+3	; 0x03
    1598:	88 23       	and	r24, r24
    159a:	09 f0       	breq	.+2      	; 0x159e <DIO_voidSetPinDirection+0x108>
    159c:	73 c0       	rjmp	.+230    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
  {
	 switch(Copy_u8Port)
    159e:	89 81       	ldd	r24, Y+1	; 0x01
    15a0:	28 2f       	mov	r18, r24
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	3d 83       	std	Y+5, r19	; 0x05
    15a6:	2c 83       	std	Y+4, r18	; 0x04
    15a8:	8c 81       	ldd	r24, Y+4	; 0x04
    15aa:	9d 81       	ldd	r25, Y+5	; 0x05
    15ac:	81 30       	cpi	r24, 0x01	; 1
    15ae:	91 05       	cpc	r25, r1
    15b0:	59 f1       	breq	.+86     	; 0x1608 <DIO_voidSetPinDirection+0x172>
    15b2:	2c 81       	ldd	r18, Y+4	; 0x04
    15b4:	3d 81       	ldd	r19, Y+5	; 0x05
    15b6:	22 30       	cpi	r18, 0x02	; 2
    15b8:	31 05       	cpc	r19, r1
    15ba:	2c f4       	brge	.+10     	; 0x15c6 <DIO_voidSetPinDirection+0x130>
    15bc:	8c 81       	ldd	r24, Y+4	; 0x04
    15be:	9d 81       	ldd	r25, Y+5	; 0x05
    15c0:	00 97       	sbiw	r24, 0x00	; 0
    15c2:	69 f0       	breq	.+26     	; 0x15de <DIO_voidSetPinDirection+0x148>
    15c4:	5f c0       	rjmp	.+190    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
    15c6:	2c 81       	ldd	r18, Y+4	; 0x04
    15c8:	3d 81       	ldd	r19, Y+5	; 0x05
    15ca:	22 30       	cpi	r18, 0x02	; 2
    15cc:	31 05       	cpc	r19, r1
    15ce:	89 f1       	breq	.+98     	; 0x1632 <DIO_voidSetPinDirection+0x19c>
    15d0:	8c 81       	ldd	r24, Y+4	; 0x04
    15d2:	9d 81       	ldd	r25, Y+5	; 0x05
    15d4:	83 30       	cpi	r24, 0x03	; 3
    15d6:	91 05       	cpc	r25, r1
    15d8:	09 f4       	brne	.+2      	; 0x15dc <DIO_voidSetPinDirection+0x146>
    15da:	40 c0       	rjmp	.+128    	; 0x165c <DIO_voidSetPinDirection+0x1c6>
    15dc:	53 c0       	rjmp	.+166    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	 {
    case DIO_PORTA:CLR_BIT(DIO_DDRA_REG,Copy_u8Pin);break;
    15de:	aa e3       	ldi	r26, 0x3A	; 58
    15e0:	b0 e0       	ldi	r27, 0x00	; 0
    15e2:	ea e3       	ldi	r30, 0x3A	; 58
    15e4:	f0 e0       	ldi	r31, 0x00	; 0
    15e6:	80 81       	ld	r24, Z
    15e8:	48 2f       	mov	r20, r24
    15ea:	8a 81       	ldd	r24, Y+2	; 0x02
    15ec:	28 2f       	mov	r18, r24
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	81 e0       	ldi	r24, 0x01	; 1
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	02 2e       	mov	r0, r18
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <DIO_voidSetPinDirection+0x166>
    15f8:	88 0f       	add	r24, r24
    15fa:	99 1f       	adc	r25, r25
    15fc:	0a 94       	dec	r0
    15fe:	e2 f7       	brpl	.-8      	; 0x15f8 <DIO_voidSetPinDirection+0x162>
    1600:	80 95       	com	r24
    1602:	84 23       	and	r24, r20
    1604:	8c 93       	st	X, r24
    1606:	3e c0       	rjmp	.+124    	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTB:CLR_BIT(DIO_DDRB_REG,Copy_u8Pin);break;
    1608:	a7 e3       	ldi	r26, 0x37	; 55
    160a:	b0 e0       	ldi	r27, 0x00	; 0
    160c:	e7 e3       	ldi	r30, 0x37	; 55
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	80 81       	ld	r24, Z
    1612:	48 2f       	mov	r20, r24
    1614:	8a 81       	ldd	r24, Y+2	; 0x02
    1616:	28 2f       	mov	r18, r24
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	02 2e       	mov	r0, r18
    1620:	02 c0       	rjmp	.+4      	; 0x1626 <DIO_voidSetPinDirection+0x190>
    1622:	88 0f       	add	r24, r24
    1624:	99 1f       	adc	r25, r25
    1626:	0a 94       	dec	r0
    1628:	e2 f7       	brpl	.-8      	; 0x1622 <DIO_voidSetPinDirection+0x18c>
    162a:	80 95       	com	r24
    162c:	84 23       	and	r24, r20
    162e:	8c 93       	st	X, r24
    1630:	29 c0       	rjmp	.+82     	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTC:CLR_BIT(DIO_DDRC_REG,Copy_u8Pin);break;
    1632:	a4 e3       	ldi	r26, 0x34	; 52
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	e4 e3       	ldi	r30, 0x34	; 52
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 81       	ld	r24, Z
    163c:	48 2f       	mov	r20, r24
    163e:	8a 81       	ldd	r24, Y+2	; 0x02
    1640:	28 2f       	mov	r18, r24
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	02 2e       	mov	r0, r18
    164a:	02 c0       	rjmp	.+4      	; 0x1650 <DIO_voidSetPinDirection+0x1ba>
    164c:	88 0f       	add	r24, r24
    164e:	99 1f       	adc	r25, r25
    1650:	0a 94       	dec	r0
    1652:	e2 f7       	brpl	.-8      	; 0x164c <DIO_voidSetPinDirection+0x1b6>
    1654:	80 95       	com	r24
    1656:	84 23       	and	r24, r20
    1658:	8c 93       	st	X, r24
    165a:	14 c0       	rjmp	.+40     	; 0x1684 <DIO_voidSetPinDirection+0x1ee>
	case DIO_PORTD:CLR_BIT(DIO_DDRD_REG,Copy_u8Pin);break;
    165c:	a1 e3       	ldi	r26, 0x31	; 49
    165e:	b0 e0       	ldi	r27, 0x00	; 0
    1660:	e1 e3       	ldi	r30, 0x31	; 49
    1662:	f0 e0       	ldi	r31, 0x00	; 0
    1664:	80 81       	ld	r24, Z
    1666:	48 2f       	mov	r20, r24
    1668:	8a 81       	ldd	r24, Y+2	; 0x02
    166a:	28 2f       	mov	r18, r24
    166c:	30 e0       	ldi	r19, 0x00	; 0
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	02 2e       	mov	r0, r18
    1674:	02 c0       	rjmp	.+4      	; 0x167a <DIO_voidSetPinDirection+0x1e4>
    1676:	88 0f       	add	r24, r24
    1678:	99 1f       	adc	r25, r25
    167a:	0a 94       	dec	r0
    167c:	e2 f7       	brpl	.-8      	; 0x1676 <DIO_voidSetPinDirection+0x1e0>
    167e:	80 95       	com	r24
    1680:	84 23       	and	r24, r20
    1682:	8c 93       	st	X, r24
	default:break;
	 }
  }

}
    1684:	27 96       	adiw	r28, 0x07	; 7
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	f8 94       	cli
    168a:	de bf       	out	0x3e, r29	; 62
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	cd bf       	out	0x3d, r28	; 61
    1690:	cf 91       	pop	r28
    1692:	df 91       	pop	r29
    1694:	08 95       	ret

00001696 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)//(porta ,7,PORTa=1)

{
    1696:	df 93       	push	r29
    1698:	cf 93       	push	r28
    169a:	cd b7       	in	r28, 0x3d	; 61
    169c:	de b7       	in	r29, 0x3e	; 62
    169e:	27 97       	sbiw	r28, 0x07	; 7
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	f8 94       	cli
    16a4:	de bf       	out	0x3e, r29	; 62
    16a6:	0f be       	out	0x3f, r0	; 63
    16a8:	cd bf       	out	0x3d, r28	; 61
    16aa:	89 83       	std	Y+1, r24	; 0x01
    16ac:	6a 83       	std	Y+2, r22	; 0x02
    16ae:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Value==DIO_HIGH)
    16b0:	8b 81       	ldd	r24, Y+3	; 0x03
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	09 f0       	breq	.+2      	; 0x16b8 <DIO_voidSetPinValue+0x22>
    16b6:	6f c0       	rjmp	.+222    	; 0x1796 <DIO_voidSetPinValue+0x100>
	  {
		  switch(Copy_u8Port)
    16b8:	89 81       	ldd	r24, Y+1	; 0x01
    16ba:	28 2f       	mov	r18, r24
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	3f 83       	std	Y+7, r19	; 0x07
    16c0:	2e 83       	std	Y+6, r18	; 0x06
    16c2:	8e 81       	ldd	r24, Y+6	; 0x06
    16c4:	9f 81       	ldd	r25, Y+7	; 0x07
    16c6:	81 30       	cpi	r24, 0x01	; 1
    16c8:	91 05       	cpc	r25, r1
    16ca:	49 f1       	breq	.+82     	; 0x171e <DIO_voidSetPinValue+0x88>
    16cc:	2e 81       	ldd	r18, Y+6	; 0x06
    16ce:	3f 81       	ldd	r19, Y+7	; 0x07
    16d0:	22 30       	cpi	r18, 0x02	; 2
    16d2:	31 05       	cpc	r19, r1
    16d4:	2c f4       	brge	.+10     	; 0x16e0 <DIO_voidSetPinValue+0x4a>
    16d6:	8e 81       	ldd	r24, Y+6	; 0x06
    16d8:	9f 81       	ldd	r25, Y+7	; 0x07
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	61 f0       	breq	.+24     	; 0x16f6 <DIO_voidSetPinValue+0x60>
    16de:	d2 c0       	rjmp	.+420    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
    16e0:	2e 81       	ldd	r18, Y+6	; 0x06
    16e2:	3f 81       	ldd	r19, Y+7	; 0x07
    16e4:	22 30       	cpi	r18, 0x02	; 2
    16e6:	31 05       	cpc	r19, r1
    16e8:	71 f1       	breq	.+92     	; 0x1746 <DIO_voidSetPinValue+0xb0>
    16ea:	8e 81       	ldd	r24, Y+6	; 0x06
    16ec:	9f 81       	ldd	r25, Y+7	; 0x07
    16ee:	83 30       	cpi	r24, 0x03	; 3
    16f0:	91 05       	cpc	r25, r1
    16f2:	e9 f1       	breq	.+122    	; 0x176e <DIO_voidSetPinValue+0xd8>
    16f4:	c7 c0       	rjmp	.+398    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		  {
	    case DIO_PORTA:SET_BIT(DIO_PORTA_REG,Copy_u8Pin);break;
    16f6:	ab e3       	ldi	r26, 0x3B	; 59
    16f8:	b0 e0       	ldi	r27, 0x00	; 0
    16fa:	eb e3       	ldi	r30, 0x3B	; 59
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	80 81       	ld	r24, Z
    1700:	48 2f       	mov	r20, r24
    1702:	8a 81       	ldd	r24, Y+2	; 0x02
    1704:	28 2f       	mov	r18, r24
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	02 2e       	mov	r0, r18
    170e:	02 c0       	rjmp	.+4      	; 0x1714 <DIO_voidSetPinValue+0x7e>
    1710:	88 0f       	add	r24, r24
    1712:	99 1f       	adc	r25, r25
    1714:	0a 94       	dec	r0
    1716:	e2 f7       	brpl	.-8      	; 0x1710 <DIO_voidSetPinValue+0x7a>
    1718:	84 2b       	or	r24, r20
    171a:	8c 93       	st	X, r24
    171c:	b3 c0       	rjmp	.+358    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTB:SET_BIT(DIO_PORTB_REG,Copy_u8Pin);break;
    171e:	a8 e3       	ldi	r26, 0x38	; 56
    1720:	b0 e0       	ldi	r27, 0x00	; 0
    1722:	e8 e3       	ldi	r30, 0x38	; 56
    1724:	f0 e0       	ldi	r31, 0x00	; 0
    1726:	80 81       	ld	r24, Z
    1728:	48 2f       	mov	r20, r24
    172a:	8a 81       	ldd	r24, Y+2	; 0x02
    172c:	28 2f       	mov	r18, r24
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	81 e0       	ldi	r24, 0x01	; 1
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	02 2e       	mov	r0, r18
    1736:	02 c0       	rjmp	.+4      	; 0x173c <DIO_voidSetPinValue+0xa6>
    1738:	88 0f       	add	r24, r24
    173a:	99 1f       	adc	r25, r25
    173c:	0a 94       	dec	r0
    173e:	e2 f7       	brpl	.-8      	; 0x1738 <DIO_voidSetPinValue+0xa2>
    1740:	84 2b       	or	r24, r20
    1742:	8c 93       	st	X, r24
    1744:	9f c0       	rjmp	.+318    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTC:SET_BIT(DIO_PORTC_REG,Copy_u8Pin);break;
    1746:	a5 e3       	ldi	r26, 0x35	; 53
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	e5 e3       	ldi	r30, 0x35	; 53
    174c:	f0 e0       	ldi	r31, 0x00	; 0
    174e:	80 81       	ld	r24, Z
    1750:	48 2f       	mov	r20, r24
    1752:	8a 81       	ldd	r24, Y+2	; 0x02
    1754:	28 2f       	mov	r18, r24
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	81 e0       	ldi	r24, 0x01	; 1
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	02 2e       	mov	r0, r18
    175e:	02 c0       	rjmp	.+4      	; 0x1764 <DIO_voidSetPinValue+0xce>
    1760:	88 0f       	add	r24, r24
    1762:	99 1f       	adc	r25, r25
    1764:	0a 94       	dec	r0
    1766:	e2 f7       	brpl	.-8      	; 0x1760 <DIO_voidSetPinValue+0xca>
    1768:	84 2b       	or	r24, r20
    176a:	8c 93       	st	X, r24
    176c:	8b c0       	rjmp	.+278    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTD:SET_BIT(DIO_PORTD_REG,Copy_u8Pin);break;
    176e:	a2 e3       	ldi	r26, 0x32	; 50
    1770:	b0 e0       	ldi	r27, 0x00	; 0
    1772:	e2 e3       	ldi	r30, 0x32	; 50
    1774:	f0 e0       	ldi	r31, 0x00	; 0
    1776:	80 81       	ld	r24, Z
    1778:	48 2f       	mov	r20, r24
    177a:	8a 81       	ldd	r24, Y+2	; 0x02
    177c:	28 2f       	mov	r18, r24
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	02 2e       	mov	r0, r18
    1786:	02 c0       	rjmp	.+4      	; 0x178c <DIO_voidSetPinValue+0xf6>
    1788:	88 0f       	add	r24, r24
    178a:	99 1f       	adc	r25, r25
    178c:	0a 94       	dec	r0
    178e:	e2 f7       	brpl	.-8      	; 0x1788 <DIO_voidSetPinValue+0xf2>
    1790:	84 2b       	or	r24, r20
    1792:	8c 93       	st	X, r24
    1794:	77 c0       	rjmp	.+238    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		default:break;
		  }
	  }
	  else if(Copy_u8Value==DIO_LOW)
    1796:	8b 81       	ldd	r24, Y+3	; 0x03
    1798:	88 23       	and	r24, r24
    179a:	09 f0       	breq	.+2      	; 0x179e <DIO_voidSetPinValue+0x108>
    179c:	73 c0       	rjmp	.+230    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
	  {
		 switch(Copy_u8Port)
    179e:	89 81       	ldd	r24, Y+1	; 0x01
    17a0:	28 2f       	mov	r18, r24
    17a2:	30 e0       	ldi	r19, 0x00	; 0
    17a4:	3d 83       	std	Y+5, r19	; 0x05
    17a6:	2c 83       	std	Y+4, r18	; 0x04
    17a8:	8c 81       	ldd	r24, Y+4	; 0x04
    17aa:	9d 81       	ldd	r25, Y+5	; 0x05
    17ac:	81 30       	cpi	r24, 0x01	; 1
    17ae:	91 05       	cpc	r25, r1
    17b0:	59 f1       	breq	.+86     	; 0x1808 <DIO_voidSetPinValue+0x172>
    17b2:	2c 81       	ldd	r18, Y+4	; 0x04
    17b4:	3d 81       	ldd	r19, Y+5	; 0x05
    17b6:	22 30       	cpi	r18, 0x02	; 2
    17b8:	31 05       	cpc	r19, r1
    17ba:	2c f4       	brge	.+10     	; 0x17c6 <DIO_voidSetPinValue+0x130>
    17bc:	8c 81       	ldd	r24, Y+4	; 0x04
    17be:	9d 81       	ldd	r25, Y+5	; 0x05
    17c0:	00 97       	sbiw	r24, 0x00	; 0
    17c2:	69 f0       	breq	.+26     	; 0x17de <DIO_voidSetPinValue+0x148>
    17c4:	5f c0       	rjmp	.+190    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
    17c6:	2c 81       	ldd	r18, Y+4	; 0x04
    17c8:	3d 81       	ldd	r19, Y+5	; 0x05
    17ca:	22 30       	cpi	r18, 0x02	; 2
    17cc:	31 05       	cpc	r19, r1
    17ce:	89 f1       	breq	.+98     	; 0x1832 <DIO_voidSetPinValue+0x19c>
    17d0:	8c 81       	ldd	r24, Y+4	; 0x04
    17d2:	9d 81       	ldd	r25, Y+5	; 0x05
    17d4:	83 30       	cpi	r24, 0x03	; 3
    17d6:	91 05       	cpc	r25, r1
    17d8:	09 f4       	brne	.+2      	; 0x17dc <DIO_voidSetPinValue+0x146>
    17da:	40 c0       	rjmp	.+128    	; 0x185c <DIO_voidSetPinValue+0x1c6>
    17dc:	53 c0       	rjmp	.+166    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		 {
	    case DIO_PORTA:CLR_BIT(DIO_PORTA_REG,Copy_u8Pin);break;
    17de:	ab e3       	ldi	r26, 0x3B	; 59
    17e0:	b0 e0       	ldi	r27, 0x00	; 0
    17e2:	eb e3       	ldi	r30, 0x3B	; 59
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	80 81       	ld	r24, Z
    17e8:	48 2f       	mov	r20, r24
    17ea:	8a 81       	ldd	r24, Y+2	; 0x02
    17ec:	28 2f       	mov	r18, r24
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	81 e0       	ldi	r24, 0x01	; 1
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	02 2e       	mov	r0, r18
    17f6:	02 c0       	rjmp	.+4      	; 0x17fc <DIO_voidSetPinValue+0x166>
    17f8:	88 0f       	add	r24, r24
    17fa:	99 1f       	adc	r25, r25
    17fc:	0a 94       	dec	r0
    17fe:	e2 f7       	brpl	.-8      	; 0x17f8 <DIO_voidSetPinValue+0x162>
    1800:	80 95       	com	r24
    1802:	84 23       	and	r24, r20
    1804:	8c 93       	st	X, r24
    1806:	3e c0       	rjmp	.+124    	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTB:CLR_BIT(DIO_PORTB_REG,Copy_u8Pin);break;
    1808:	a8 e3       	ldi	r26, 0x38	; 56
    180a:	b0 e0       	ldi	r27, 0x00	; 0
    180c:	e8 e3       	ldi	r30, 0x38	; 56
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	80 81       	ld	r24, Z
    1812:	48 2f       	mov	r20, r24
    1814:	8a 81       	ldd	r24, Y+2	; 0x02
    1816:	28 2f       	mov	r18, r24
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	02 2e       	mov	r0, r18
    1820:	02 c0       	rjmp	.+4      	; 0x1826 <DIO_voidSetPinValue+0x190>
    1822:	88 0f       	add	r24, r24
    1824:	99 1f       	adc	r25, r25
    1826:	0a 94       	dec	r0
    1828:	e2 f7       	brpl	.-8      	; 0x1822 <DIO_voidSetPinValue+0x18c>
    182a:	80 95       	com	r24
    182c:	84 23       	and	r24, r20
    182e:	8c 93       	st	X, r24
    1830:	29 c0       	rjmp	.+82     	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTC:CLR_BIT(DIO_PORTC_REG,Copy_u8Pin);break;
    1832:	a5 e3       	ldi	r26, 0x35	; 53
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	e5 e3       	ldi	r30, 0x35	; 53
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	80 81       	ld	r24, Z
    183c:	48 2f       	mov	r20, r24
    183e:	8a 81       	ldd	r24, Y+2	; 0x02
    1840:	28 2f       	mov	r18, r24
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	02 2e       	mov	r0, r18
    184a:	02 c0       	rjmp	.+4      	; 0x1850 <DIO_voidSetPinValue+0x1ba>
    184c:	88 0f       	add	r24, r24
    184e:	99 1f       	adc	r25, r25
    1850:	0a 94       	dec	r0
    1852:	e2 f7       	brpl	.-8      	; 0x184c <DIO_voidSetPinValue+0x1b6>
    1854:	80 95       	com	r24
    1856:	84 23       	and	r24, r20
    1858:	8c 93       	st	X, r24
    185a:	14 c0       	rjmp	.+40     	; 0x1884 <DIO_voidSetPinValue+0x1ee>
		case DIO_PORTD:CLR_BIT(DIO_PORTD_REG,Copy_u8Pin);break;
    185c:	a2 e3       	ldi	r26, 0x32	; 50
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	e2 e3       	ldi	r30, 0x32	; 50
    1862:	f0 e0       	ldi	r31, 0x00	; 0
    1864:	80 81       	ld	r24, Z
    1866:	48 2f       	mov	r20, r24
    1868:	8a 81       	ldd	r24, Y+2	; 0x02
    186a:	28 2f       	mov	r18, r24
    186c:	30 e0       	ldi	r19, 0x00	; 0
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	02 2e       	mov	r0, r18
    1874:	02 c0       	rjmp	.+4      	; 0x187a <DIO_voidSetPinValue+0x1e4>
    1876:	88 0f       	add	r24, r24
    1878:	99 1f       	adc	r25, r25
    187a:	0a 94       	dec	r0
    187c:	e2 f7       	brpl	.-8      	; 0x1876 <DIO_voidSetPinValue+0x1e0>
    187e:	80 95       	com	r24
    1880:	84 23       	and	r24, r20
    1882:	8c 93       	st	X, r24
		default:break;
		 }
	  }
}
    1884:	27 96       	adiw	r28, 0x07	; 7
    1886:	0f b6       	in	r0, 0x3f	; 63
    1888:	f8 94       	cli
    188a:	de bf       	out	0x3e, r29	; 62
    188c:	0f be       	out	0x3f, r0	; 63
    188e:	cd bf       	out	0x3d, r28	; 61
    1890:	cf 91       	pop	r28
    1892:	df 91       	pop	r29
    1894:	08 95       	ret

00001896 <DIO_u8GetPortValue>:
u8 DIO_u8GetPortValue(u8 Copy_u8Port)//pin act as input PORT=1 34an pull up resistance
{
    1896:	df 93       	push	r29
    1898:	cf 93       	push	r28
    189a:	00 d0       	rcall	.+0      	; 0x189c <DIO_u8GetPortValue+0x6>
    189c:	00 d0       	rcall	.+0      	; 0x189e <DIO_u8GetPortValue+0x8>
    189e:	cd b7       	in	r28, 0x3d	; 61
    18a0:	de b7       	in	r29, 0x3e	; 62
    18a2:	8a 83       	std	Y+2, r24	; 0x02
	u8 Loc_u8Result=0;
    18a4:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    18a6:	8a 81       	ldd	r24, Y+2	; 0x02
    18a8:	28 2f       	mov	r18, r24
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	3c 83       	std	Y+4, r19	; 0x04
    18ae:	2b 83       	std	Y+3, r18	; 0x03
    18b0:	8b 81       	ldd	r24, Y+3	; 0x03
    18b2:	9c 81       	ldd	r25, Y+4	; 0x04
    18b4:	81 30       	cpi	r24, 0x01	; 1
    18b6:	91 05       	cpc	r25, r1
    18b8:	d1 f0       	breq	.+52     	; 0x18ee <DIO_u8GetPortValue+0x58>
    18ba:	2b 81       	ldd	r18, Y+3	; 0x03
    18bc:	3c 81       	ldd	r19, Y+4	; 0x04
    18be:	22 30       	cpi	r18, 0x02	; 2
    18c0:	31 05       	cpc	r19, r1
    18c2:	2c f4       	brge	.+10     	; 0x18ce <DIO_u8GetPortValue+0x38>
    18c4:	8b 81       	ldd	r24, Y+3	; 0x03
    18c6:	9c 81       	ldd	r25, Y+4	; 0x04
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	61 f0       	breq	.+24     	; 0x18e4 <DIO_u8GetPortValue+0x4e>
    18cc:	1e c0       	rjmp	.+60     	; 0x190a <DIO_u8GetPortValue+0x74>
    18ce:	2b 81       	ldd	r18, Y+3	; 0x03
    18d0:	3c 81       	ldd	r19, Y+4	; 0x04
    18d2:	22 30       	cpi	r18, 0x02	; 2
    18d4:	31 05       	cpc	r19, r1
    18d6:	81 f0       	breq	.+32     	; 0x18f8 <DIO_u8GetPortValue+0x62>
    18d8:	8b 81       	ldd	r24, Y+3	; 0x03
    18da:	9c 81       	ldd	r25, Y+4	; 0x04
    18dc:	83 30       	cpi	r24, 0x03	; 3
    18de:	91 05       	cpc	r25, r1
    18e0:	81 f0       	breq	.+32     	; 0x1902 <DIO_u8GetPortValue+0x6c>
    18e2:	13 c0       	rjmp	.+38     	; 0x190a <DIO_u8GetPortValue+0x74>
	{
	        case DIO_PORTA:Loc_u8Result=DIO_PINA_REG;break;
    18e4:	e9 e3       	ldi	r30, 0x39	; 57
    18e6:	f0 e0       	ldi	r31, 0x00	; 0
    18e8:	80 81       	ld	r24, Z
    18ea:	89 83       	std	Y+1, r24	; 0x01
    18ec:	0e c0       	rjmp	.+28     	; 0x190a <DIO_u8GetPortValue+0x74>
			case DIO_PORTB:Loc_u8Result=DIO_PINB_REG;break;
    18ee:	e6 e3       	ldi	r30, 0x36	; 54
    18f0:	f0 e0       	ldi	r31, 0x00	; 0
    18f2:	80 81       	ld	r24, Z
    18f4:	89 83       	std	Y+1, r24	; 0x01
    18f6:	09 c0       	rjmp	.+18     	; 0x190a <DIO_u8GetPortValue+0x74>
			case DIO_PORTC:Loc_u8Result=DIO_PINC_REG;break;
    18f8:	e3 e3       	ldi	r30, 0x33	; 51
    18fa:	f0 e0       	ldi	r31, 0x00	; 0
    18fc:	80 81       	ld	r24, Z
    18fe:	89 83       	std	Y+1, r24	; 0x01
    1900:	04 c0       	rjmp	.+8      	; 0x190a <DIO_u8GetPortValue+0x74>
			case DIO_PORTD:Loc_u8Result=DIO_PIND_REG;break;
    1902:	e0 e3       	ldi	r30, 0x30	; 48
    1904:	f0 e0       	ldi	r31, 0x00	; 0
    1906:	80 81       	ld	r24, Z
    1908:	89 83       	std	Y+1, r24	; 0x01
	}
	return Loc_u8Result;
    190a:	89 81       	ldd	r24, Y+1	; 0x01

}
    190c:	0f 90       	pop	r0
    190e:	0f 90       	pop	r0
    1910:	0f 90       	pop	r0
    1912:	0f 90       	pop	r0
    1914:	cf 91       	pop	r28
    1916:	df 91       	pop	r29
    1918:	08 95       	ret

0000191a <DIO_u8GetpinValue>:
u8 DIO_u8GetpinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    191a:	df 93       	push	r29
    191c:	cf 93       	push	r28
    191e:	00 d0       	rcall	.+0      	; 0x1920 <DIO_u8GetpinValue+0x6>
    1920:	00 d0       	rcall	.+0      	; 0x1922 <DIO_u8GetpinValue+0x8>
    1922:	0f 92       	push	r0
    1924:	cd b7       	in	r28, 0x3d	; 61
    1926:	de b7       	in	r29, 0x3e	; 62
    1928:	8a 83       	std	Y+2, r24	; 0x02
    192a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Loc_u8Result=0;
    192c:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    192e:	8a 81       	ldd	r24, Y+2	; 0x02
    1930:	28 2f       	mov	r18, r24
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	3d 83       	std	Y+5, r19	; 0x05
    1936:	2c 83       	std	Y+4, r18	; 0x04
    1938:	4c 81       	ldd	r20, Y+4	; 0x04
    193a:	5d 81       	ldd	r21, Y+5	; 0x05
    193c:	41 30       	cpi	r20, 0x01	; 1
    193e:	51 05       	cpc	r21, r1
    1940:	41 f1       	breq	.+80     	; 0x1992 <DIO_u8GetpinValue+0x78>
    1942:	8c 81       	ldd	r24, Y+4	; 0x04
    1944:	9d 81       	ldd	r25, Y+5	; 0x05
    1946:	82 30       	cpi	r24, 0x02	; 2
    1948:	91 05       	cpc	r25, r1
    194a:	34 f4       	brge	.+12     	; 0x1958 <DIO_u8GetpinValue+0x3e>
    194c:	2c 81       	ldd	r18, Y+4	; 0x04
    194e:	3d 81       	ldd	r19, Y+5	; 0x05
    1950:	21 15       	cp	r18, r1
    1952:	31 05       	cpc	r19, r1
    1954:	61 f0       	breq	.+24     	; 0x196e <DIO_u8GetpinValue+0x54>
    1956:	52 c0       	rjmp	.+164    	; 0x19fc <DIO_u8GetpinValue+0xe2>
    1958:	4c 81       	ldd	r20, Y+4	; 0x04
    195a:	5d 81       	ldd	r21, Y+5	; 0x05
    195c:	42 30       	cpi	r20, 0x02	; 2
    195e:	51 05       	cpc	r21, r1
    1960:	51 f1       	breq	.+84     	; 0x19b6 <DIO_u8GetpinValue+0x9c>
    1962:	8c 81       	ldd	r24, Y+4	; 0x04
    1964:	9d 81       	ldd	r25, Y+5	; 0x05
    1966:	83 30       	cpi	r24, 0x03	; 3
    1968:	91 05       	cpc	r25, r1
    196a:	b9 f1       	breq	.+110    	; 0x19da <DIO_u8GetpinValue+0xc0>
    196c:	47 c0       	rjmp	.+142    	; 0x19fc <DIO_u8GetpinValue+0xe2>
	{
	case DIO_PORTA:Loc_u8Result=GET_BIT(DIO_PINA_REG,Copy_u8Pin);break;
    196e:	e9 e3       	ldi	r30, 0x39	; 57
    1970:	f0 e0       	ldi	r31, 0x00	; 0
    1972:	80 81       	ld	r24, Z
    1974:	28 2f       	mov	r18, r24
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	8b 81       	ldd	r24, Y+3	; 0x03
    197a:	88 2f       	mov	r24, r24
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	a9 01       	movw	r20, r18
    1980:	02 c0       	rjmp	.+4      	; 0x1986 <DIO_u8GetpinValue+0x6c>
    1982:	55 95       	asr	r21
    1984:	47 95       	ror	r20
    1986:	8a 95       	dec	r24
    1988:	e2 f7       	brpl	.-8      	; 0x1982 <DIO_u8GetpinValue+0x68>
    198a:	ca 01       	movw	r24, r20
    198c:	81 70       	andi	r24, 0x01	; 1
    198e:	89 83       	std	Y+1, r24	; 0x01
    1990:	35 c0       	rjmp	.+106    	; 0x19fc <DIO_u8GetpinValue+0xe2>
	case DIO_PORTB:Loc_u8Result=GET_BIT(DIO_PINB_REG,Copy_u8Pin);break;
    1992:	e6 e3       	ldi	r30, 0x36	; 54
    1994:	f0 e0       	ldi	r31, 0x00	; 0
    1996:	80 81       	ld	r24, Z
    1998:	28 2f       	mov	r18, r24
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	8b 81       	ldd	r24, Y+3	; 0x03
    199e:	88 2f       	mov	r24, r24
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	a9 01       	movw	r20, r18
    19a4:	02 c0       	rjmp	.+4      	; 0x19aa <DIO_u8GetpinValue+0x90>
    19a6:	55 95       	asr	r21
    19a8:	47 95       	ror	r20
    19aa:	8a 95       	dec	r24
    19ac:	e2 f7       	brpl	.-8      	; 0x19a6 <DIO_u8GetpinValue+0x8c>
    19ae:	ca 01       	movw	r24, r20
    19b0:	81 70       	andi	r24, 0x01	; 1
    19b2:	89 83       	std	Y+1, r24	; 0x01
    19b4:	23 c0       	rjmp	.+70     	; 0x19fc <DIO_u8GetpinValue+0xe2>
	case DIO_PORTC:Loc_u8Result=GET_BIT(DIO_PINC_REG,Copy_u8Pin);break;
    19b6:	e3 e3       	ldi	r30, 0x33	; 51
    19b8:	f0 e0       	ldi	r31, 0x00	; 0
    19ba:	80 81       	ld	r24, Z
    19bc:	28 2f       	mov	r18, r24
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	8b 81       	ldd	r24, Y+3	; 0x03
    19c2:	88 2f       	mov	r24, r24
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	a9 01       	movw	r20, r18
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <DIO_u8GetpinValue+0xb4>
    19ca:	55 95       	asr	r21
    19cc:	47 95       	ror	r20
    19ce:	8a 95       	dec	r24
    19d0:	e2 f7       	brpl	.-8      	; 0x19ca <DIO_u8GetpinValue+0xb0>
    19d2:	ca 01       	movw	r24, r20
    19d4:	81 70       	andi	r24, 0x01	; 1
    19d6:	89 83       	std	Y+1, r24	; 0x01
    19d8:	11 c0       	rjmp	.+34     	; 0x19fc <DIO_u8GetpinValue+0xe2>
	case DIO_PORTD:Loc_u8Result=GET_BIT(DIO_PIND_REG,Copy_u8Pin);;break;
    19da:	e0 e3       	ldi	r30, 0x30	; 48
    19dc:	f0 e0       	ldi	r31, 0x00	; 0
    19de:	80 81       	ld	r24, Z
    19e0:	28 2f       	mov	r18, r24
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	8b 81       	ldd	r24, Y+3	; 0x03
    19e6:	88 2f       	mov	r24, r24
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	a9 01       	movw	r20, r18
    19ec:	02 c0       	rjmp	.+4      	; 0x19f2 <DIO_u8GetpinValue+0xd8>
    19ee:	55 95       	asr	r21
    19f0:	47 95       	ror	r20
    19f2:	8a 95       	dec	r24
    19f4:	e2 f7       	brpl	.-8      	; 0x19ee <DIO_u8GetpinValue+0xd4>
    19f6:	ca 01       	movw	r24, r20
    19f8:	81 70       	andi	r24, 0x01	; 1
    19fa:	89 83       	std	Y+1, r24	; 0x01
	}
	return Loc_u8Result;
    19fc:	89 81       	ldd	r24, Y+1	; 0x01
}
    19fe:	0f 90       	pop	r0
    1a00:	0f 90       	pop	r0
    1a02:	0f 90       	pop	r0
    1a04:	0f 90       	pop	r0
    1a06:	0f 90       	pop	r0
    1a08:	cf 91       	pop	r28
    1a0a:	df 91       	pop	r29
    1a0c:	08 95       	ret

00001a0e <EINT_voidInt2>:

u8 EINT_Array[3][2]= EINT_ARRAY;


void EINT_voidInt2(u8 Copy_u8Mode)
 	{
    1a0e:	df 93       	push	r29
    1a10:	cf 93       	push	r28
    1a12:	0f 92       	push	r0
    1a14:	cd b7       	in	r28, 0x3d	; 61
    1a16:	de b7       	in	r29, 0x3e	; 62
    1a18:	89 83       	std	Y+1, r24	; 0x01
 		DIO_voidSetPinDirection(EINT_Array[0][0],EINT_Array[0][1],DIO_INPUT);
    1a1a:	80 91 9a 00 	lds	r24, 0x009A
    1a1e:	90 91 9b 00 	lds	r25, 0x009B
    1a22:	69 2f       	mov	r22, r25
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>
 		DIO_voidSetPinValue(EINT_Array[0][0],EINT_Array[0][1],DIO_HIGH);
    1a2a:	80 91 9a 00 	lds	r24, 0x009A
    1a2e:	90 91 9b 00 	lds	r25, 0x009B
    1a32:	69 2f       	mov	r22, r25
    1a34:	41 e0       	ldi	r20, 0x01	; 1
    1a36:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
 		EINT_voidMode2(Copy_u8Mode);
    1a3a:	89 81       	ldd	r24, Y+1	; 0x01
    1a3c:	0e 94 5d 0e 	call	0x1cba	; 0x1cba <EINT_voidMode2>
 		SET_BIT(GIFR_REG,5);//clear flage
    1a40:	aa e5       	ldi	r26, 0x5A	; 90
    1a42:	b0 e0       	ldi	r27, 0x00	; 0
    1a44:	ea e5       	ldi	r30, 0x5A	; 90
    1a46:	f0 e0       	ldi	r31, 0x00	; 0
    1a48:	80 81       	ld	r24, Z
    1a4a:	80 62       	ori	r24, 0x20	; 32
    1a4c:	8c 93       	st	X, r24
 		SET_BIT(GICR_REG,5);
    1a4e:	ab e5       	ldi	r26, 0x5B	; 91
    1a50:	b0 e0       	ldi	r27, 0x00	; 0
    1a52:	eb e5       	ldi	r30, 0x5B	; 91
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	80 81       	ld	r24, Z
    1a58:	80 62       	ori	r24, 0x20	; 32
    1a5a:	8c 93       	st	X, r24
 		SET_BIT(SREG_REG,7);
    1a5c:	af e5       	ldi	r26, 0x5F	; 95
    1a5e:	b0 e0       	ldi	r27, 0x00	; 0
    1a60:	ef e5       	ldi	r30, 0x5F	; 95
    1a62:	f0 e0       	ldi	r31, 0x00	; 0
    1a64:	80 81       	ld	r24, Z
    1a66:	80 68       	ori	r24, 0x80	; 128
    1a68:	8c 93       	st	X, r24
 	}
    1a6a:	0f 90       	pop	r0
    1a6c:	cf 91       	pop	r28
    1a6e:	df 91       	pop	r29
    1a70:	08 95       	ret

00001a72 <EINT_voidInt1>:

 void EINT_voidInt1(u8 Copy_u8Mode)
	{
    1a72:	df 93       	push	r29
    1a74:	cf 93       	push	r28
    1a76:	0f 92       	push	r0
    1a78:	cd b7       	in	r28, 0x3d	; 61
    1a7a:	de b7       	in	r29, 0x3e	; 62
    1a7c:	89 83       	std	Y+1, r24	; 0x01
		DIO_voidSetPinDirection(EINT_Array[1][0],EINT_Array[1][1],DIO_INPUT);
    1a7e:	80 91 9c 00 	lds	r24, 0x009C
    1a82:	90 91 9d 00 	lds	r25, 0x009D
    1a86:	69 2f       	mov	r22, r25
    1a88:	40 e0       	ldi	r20, 0x00	; 0
    1a8a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(EINT_Array[1][0],EINT_Array[1][1],DIO_HIGH);
    1a8e:	80 91 9c 00 	lds	r24, 0x009C
    1a92:	90 91 9d 00 	lds	r25, 0x009D
    1a96:	69 2f       	mov	r22, r25
    1a98:	41 e0       	ldi	r20, 0x01	; 1
    1a9a:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
		EINT_voidMode1(Copy_u8Mode);
    1a9e:	89 81       	ldd	r24, Y+1	; 0x01
    1aa0:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <EINT_voidMode1>
 		SET_BIT(GIFR_REG,7);//clear flage
    1aa4:	aa e5       	ldi	r26, 0x5A	; 90
    1aa6:	b0 e0       	ldi	r27, 0x00	; 0
    1aa8:	ea e5       	ldi	r30, 0x5A	; 90
    1aaa:	f0 e0       	ldi	r31, 0x00	; 0
    1aac:	80 81       	ld	r24, Z
    1aae:	80 68       	ori	r24, 0x80	; 128
    1ab0:	8c 93       	st	X, r24
 		SET_BIT(GICR_REG,7);
    1ab2:	ab e5       	ldi	r26, 0x5B	; 91
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	eb e5       	ldi	r30, 0x5B	; 91
    1ab8:	f0 e0       	ldi	r31, 0x00	; 0
    1aba:	80 81       	ld	r24, Z
    1abc:	80 68       	ori	r24, 0x80	; 128
    1abe:	8c 93       	st	X, r24
 		SET_BIT(SREG_REG,7);
    1ac0:	af e5       	ldi	r26, 0x5F	; 95
    1ac2:	b0 e0       	ldi	r27, 0x00	; 0
    1ac4:	ef e5       	ldi	r30, 0x5F	; 95
    1ac6:	f0 e0       	ldi	r31, 0x00	; 0
    1ac8:	80 81       	ld	r24, Z
    1aca:	80 68       	ori	r24, 0x80	; 128
    1acc:	8c 93       	st	X, r24
	}
    1ace:	0f 90       	pop	r0
    1ad0:	cf 91       	pop	r28
    1ad2:	df 91       	pop	r29
    1ad4:	08 95       	ret

00001ad6 <EINT_voidInt0>:

void EINT_voidInt0(u8 Copy_u8Mode)
 	{
    1ad6:	df 93       	push	r29
    1ad8:	cf 93       	push	r28
    1ada:	0f 92       	push	r0
    1adc:	cd b7       	in	r28, 0x3d	; 61
    1ade:	de b7       	in	r29, 0x3e	; 62
    1ae0:	89 83       	std	Y+1, r24	; 0x01
		DIO_voidSetPinDirection(EINT_Array[2][0],EINT_Array[2][1],DIO_INPUT);
    1ae2:	80 91 9e 00 	lds	r24, 0x009E
    1ae6:	90 91 9f 00 	lds	r25, 0x009F
    1aea:	69 2f       	mov	r22, r25
    1aec:	40 e0       	ldi	r20, 0x00	; 0
    1aee:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(EINT_Array[2][0],EINT_Array[2][1],DIO_HIGH);
    1af2:	80 91 9e 00 	lds	r24, 0x009E
    1af6:	90 91 9f 00 	lds	r25, 0x009F
    1afa:	69 2f       	mov	r22, r25
    1afc:	41 e0       	ldi	r20, 0x01	; 1
    1afe:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
 		EINT_voidMode0(Copy_u8Mode);
    1b02:	89 81       	ldd	r24, Y+1	; 0x01
    1b04:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <EINT_voidMode0>
		SET_BIT(GIFR_REG,6);//clear flage
    1b08:	aa e5       	ldi	r26, 0x5A	; 90
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	ea e5       	ldi	r30, 0x5A	; 90
    1b0e:	f0 e0       	ldi	r31, 0x00	; 0
    1b10:	80 81       	ld	r24, Z
    1b12:	80 64       	ori	r24, 0x40	; 64
    1b14:	8c 93       	st	X, r24
 		SET_BIT(GICR_REG,6);
    1b16:	ab e5       	ldi	r26, 0x5B	; 91
    1b18:	b0 e0       	ldi	r27, 0x00	; 0
    1b1a:	eb e5       	ldi	r30, 0x5B	; 91
    1b1c:	f0 e0       	ldi	r31, 0x00	; 0
    1b1e:	80 81       	ld	r24, Z
    1b20:	80 64       	ori	r24, 0x40	; 64
    1b22:	8c 93       	st	X, r24
 		SET_BIT(SREG_REG,7);
    1b24:	af e5       	ldi	r26, 0x5F	; 95
    1b26:	b0 e0       	ldi	r27, 0x00	; 0
    1b28:	ef e5       	ldi	r30, 0x5F	; 95
    1b2a:	f0 e0       	ldi	r31, 0x00	; 0
    1b2c:	80 81       	ld	r24, Z
    1b2e:	80 68       	ori	r24, 0x80	; 128
    1b30:	8c 93       	st	X, r24
	}
    1b32:	0f 90       	pop	r0
    1b34:	cf 91       	pop	r28
    1b36:	df 91       	pop	r29
    1b38:	08 95       	ret

00001b3a <EINT_voidMode0>:




	void EINT_voidMode0(u8 Copy_u8Modee)
{
    1b3a:	df 93       	push	r29
    1b3c:	cf 93       	push	r28
    1b3e:	00 d0       	rcall	.+0      	; 0x1b40 <EINT_voidMode0+0x6>
    1b40:	0f 92       	push	r0
    1b42:	cd b7       	in	r28, 0x3d	; 61
    1b44:	de b7       	in	r29, 0x3e	; 62
    1b46:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Modee)
    1b48:	89 81       	ldd	r24, Y+1	; 0x01
    1b4a:	28 2f       	mov	r18, r24
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	3b 83       	std	Y+3, r19	; 0x03
    1b50:	2a 83       	std	Y+2, r18	; 0x02
    1b52:	8a 81       	ldd	r24, Y+2	; 0x02
    1b54:	9b 81       	ldd	r25, Y+3	; 0x03
    1b56:	81 30       	cpi	r24, 0x01	; 1
    1b58:	91 05       	cpc	r25, r1
    1b5a:	21 f1       	breq	.+72     	; 0x1ba4 <EINT_voidMode0+0x6a>
    1b5c:	2a 81       	ldd	r18, Y+2	; 0x02
    1b5e:	3b 81       	ldd	r19, Y+3	; 0x03
    1b60:	22 30       	cpi	r18, 0x02	; 2
    1b62:	31 05       	cpc	r19, r1
    1b64:	2c f4       	brge	.+10     	; 0x1b70 <EINT_voidMode0+0x36>
    1b66:	8a 81       	ldd	r24, Y+2	; 0x02
    1b68:	9b 81       	ldd	r25, Y+3	; 0x03
    1b6a:	00 97       	sbiw	r24, 0x00	; 0
    1b6c:	61 f0       	breq	.+24     	; 0x1b86 <EINT_voidMode0+0x4c>
    1b6e:	3f c0       	rjmp	.+126    	; 0x1bee <EINT_voidMode0+0xb4>
    1b70:	2a 81       	ldd	r18, Y+2	; 0x02
    1b72:	3b 81       	ldd	r19, Y+3	; 0x03
    1b74:	22 30       	cpi	r18, 0x02	; 2
    1b76:	31 05       	cpc	r19, r1
    1b78:	21 f1       	breq	.+72     	; 0x1bc2 <EINT_voidMode0+0x88>
    1b7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b7e:	83 30       	cpi	r24, 0x03	; 3
    1b80:	91 05       	cpc	r25, r1
    1b82:	39 f1       	breq	.+78     	; 0x1bd2 <EINT_voidMode0+0x98>
    1b84:	34 c0       	rjmp	.+104    	; 0x1bee <EINT_voidMode0+0xb4>
	{
	case FALLING_EDGE:
		CLR_BIT(MCUCR_REG,0);
    1b86:	a5 e5       	ldi	r26, 0x55	; 85
    1b88:	b0 e0       	ldi	r27, 0x00	; 0
    1b8a:	e5 e5       	ldi	r30, 0x55	; 85
    1b8c:	f0 e0       	ldi	r31, 0x00	; 0
    1b8e:	80 81       	ld	r24, Z
    1b90:	8e 7f       	andi	r24, 0xFE	; 254
    1b92:	8c 93       	st	X, r24
		SET_BIT(MCUCR_REG,1);
    1b94:	a5 e5       	ldi	r26, 0x55	; 85
    1b96:	b0 e0       	ldi	r27, 0x00	; 0
    1b98:	e5 e5       	ldi	r30, 0x55	; 85
    1b9a:	f0 e0       	ldi	r31, 0x00	; 0
    1b9c:	80 81       	ld	r24, Z
    1b9e:	82 60       	ori	r24, 0x02	; 2
    1ba0:	8c 93       	st	X, r24
    1ba2:	25 c0       	rjmp	.+74     	; 0x1bee <EINT_voidMode0+0xb4>
		break;
	case RISING_EDGE:
		SET_BIT(MCUCR_REG,0);
    1ba4:	a5 e5       	ldi	r26, 0x55	; 85
    1ba6:	b0 e0       	ldi	r27, 0x00	; 0
    1ba8:	e5 e5       	ldi	r30, 0x55	; 85
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	80 81       	ld	r24, Z
    1bae:	81 60       	ori	r24, 0x01	; 1
    1bb0:	8c 93       	st	X, r24
		SET_BIT(MCUCR_REG,1);
    1bb2:	a5 e5       	ldi	r26, 0x55	; 85
    1bb4:	b0 e0       	ldi	r27, 0x00	; 0
    1bb6:	e5 e5       	ldi	r30, 0x55	; 85
    1bb8:	f0 e0       	ldi	r31, 0x00	; 0
    1bba:	80 81       	ld	r24, Z
    1bbc:	82 60       	ori	r24, 0x02	; 2
    1bbe:	8c 93       	st	X, r24
    1bc0:	16 c0       	rjmp	.+44     	; 0x1bee <EINT_voidMode0+0xb4>
		break;
	case LOGICAL_CHANGE:SET_BIT(MCUCR_REG,0);;break;
    1bc2:	a5 e5       	ldi	r26, 0x55	; 85
    1bc4:	b0 e0       	ldi	r27, 0x00	; 0
    1bc6:	e5 e5       	ldi	r30, 0x55	; 85
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 81       	ld	r24, Z
    1bcc:	81 60       	ori	r24, 0x01	; 1
    1bce:	8c 93       	st	X, r24
    1bd0:	0e c0       	rjmp	.+28     	; 0x1bee <EINT_voidMode0+0xb4>
	case LOW_LEVEL:
		CLR_BIT(MCUCR_REG,0);
    1bd2:	a5 e5       	ldi	r26, 0x55	; 85
    1bd4:	b0 e0       	ldi	r27, 0x00	; 0
    1bd6:	e5 e5       	ldi	r30, 0x55	; 85
    1bd8:	f0 e0       	ldi	r31, 0x00	; 0
    1bda:	80 81       	ld	r24, Z
    1bdc:	8e 7f       	andi	r24, 0xFE	; 254
    1bde:	8c 93       	st	X, r24
		CLR_BIT(MCUCR_REG,1);
    1be0:	a5 e5       	ldi	r26, 0x55	; 85
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	e5 e5       	ldi	r30, 0x55	; 85
    1be6:	f0 e0       	ldi	r31, 0x00	; 0
    1be8:	80 81       	ld	r24, Z
    1bea:	8d 7f       	andi	r24, 0xFD	; 253
    1bec:	8c 93       	st	X, r24
		break;
	default:break;
	}
}
    1bee:	0f 90       	pop	r0
    1bf0:	0f 90       	pop	r0
    1bf2:	0f 90       	pop	r0
    1bf4:	cf 91       	pop	r28
    1bf6:	df 91       	pop	r29
    1bf8:	08 95       	ret

00001bfa <EINT_voidMode1>:



void EINT_voidMode1(u8 Copy_u8Modee)
{
    1bfa:	df 93       	push	r29
    1bfc:	cf 93       	push	r28
    1bfe:	00 d0       	rcall	.+0      	; 0x1c00 <EINT_voidMode1+0x6>
    1c00:	0f 92       	push	r0
    1c02:	cd b7       	in	r28, 0x3d	; 61
    1c04:	de b7       	in	r29, 0x3e	; 62
    1c06:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Modee)
    1c08:	89 81       	ldd	r24, Y+1	; 0x01
    1c0a:	28 2f       	mov	r18, r24
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	3b 83       	std	Y+3, r19	; 0x03
    1c10:	2a 83       	std	Y+2, r18	; 0x02
    1c12:	8a 81       	ldd	r24, Y+2	; 0x02
    1c14:	9b 81       	ldd	r25, Y+3	; 0x03
    1c16:	81 30       	cpi	r24, 0x01	; 1
    1c18:	91 05       	cpc	r25, r1
    1c1a:	21 f1       	breq	.+72     	; 0x1c64 <EINT_voidMode1+0x6a>
    1c1c:	2a 81       	ldd	r18, Y+2	; 0x02
    1c1e:	3b 81       	ldd	r19, Y+3	; 0x03
    1c20:	22 30       	cpi	r18, 0x02	; 2
    1c22:	31 05       	cpc	r19, r1
    1c24:	2c f4       	brge	.+10     	; 0x1c30 <EINT_voidMode1+0x36>
    1c26:	8a 81       	ldd	r24, Y+2	; 0x02
    1c28:	9b 81       	ldd	r25, Y+3	; 0x03
    1c2a:	00 97       	sbiw	r24, 0x00	; 0
    1c2c:	61 f0       	breq	.+24     	; 0x1c46 <EINT_voidMode1+0x4c>
    1c2e:	3f c0       	rjmp	.+126    	; 0x1cae <EINT_voidMode1+0xb4>
    1c30:	2a 81       	ldd	r18, Y+2	; 0x02
    1c32:	3b 81       	ldd	r19, Y+3	; 0x03
    1c34:	22 30       	cpi	r18, 0x02	; 2
    1c36:	31 05       	cpc	r19, r1
    1c38:	21 f1       	breq	.+72     	; 0x1c82 <EINT_voidMode1+0x88>
    1c3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3e:	83 30       	cpi	r24, 0x03	; 3
    1c40:	91 05       	cpc	r25, r1
    1c42:	39 f1       	breq	.+78     	; 0x1c92 <EINT_voidMode1+0x98>
    1c44:	34 c0       	rjmp	.+104    	; 0x1cae <EINT_voidMode1+0xb4>
	{
	case FALLING_EDGE:
		CLR_BIT(MCUCR_REG,0);
    1c46:	a5 e5       	ldi	r26, 0x55	; 85
    1c48:	b0 e0       	ldi	r27, 0x00	; 0
    1c4a:	e5 e5       	ldi	r30, 0x55	; 85
    1c4c:	f0 e0       	ldi	r31, 0x00	; 0
    1c4e:	80 81       	ld	r24, Z
    1c50:	8e 7f       	andi	r24, 0xFE	; 254
    1c52:	8c 93       	st	X, r24
		SET_BIT(MCUCR_REG,1);
    1c54:	a5 e5       	ldi	r26, 0x55	; 85
    1c56:	b0 e0       	ldi	r27, 0x00	; 0
    1c58:	e5 e5       	ldi	r30, 0x55	; 85
    1c5a:	f0 e0       	ldi	r31, 0x00	; 0
    1c5c:	80 81       	ld	r24, Z
    1c5e:	82 60       	ori	r24, 0x02	; 2
    1c60:	8c 93       	st	X, r24
    1c62:	25 c0       	rjmp	.+74     	; 0x1cae <EINT_voidMode1+0xb4>
		break;
	case RISING_EDGE:
		SET_BIT(MCUCR_REG,0);
    1c64:	a5 e5       	ldi	r26, 0x55	; 85
    1c66:	b0 e0       	ldi	r27, 0x00	; 0
    1c68:	e5 e5       	ldi	r30, 0x55	; 85
    1c6a:	f0 e0       	ldi	r31, 0x00	; 0
    1c6c:	80 81       	ld	r24, Z
    1c6e:	81 60       	ori	r24, 0x01	; 1
    1c70:	8c 93       	st	X, r24
		SET_BIT(MCUCR_REG,1);
    1c72:	a5 e5       	ldi	r26, 0x55	; 85
    1c74:	b0 e0       	ldi	r27, 0x00	; 0
    1c76:	e5 e5       	ldi	r30, 0x55	; 85
    1c78:	f0 e0       	ldi	r31, 0x00	; 0
    1c7a:	80 81       	ld	r24, Z
    1c7c:	82 60       	ori	r24, 0x02	; 2
    1c7e:	8c 93       	st	X, r24
    1c80:	16 c0       	rjmp	.+44     	; 0x1cae <EINT_voidMode1+0xb4>
		break;
	case LOGICAL_CHANGE:SET_BIT(MCUCR_REG,0);;break;
    1c82:	a5 e5       	ldi	r26, 0x55	; 85
    1c84:	b0 e0       	ldi	r27, 0x00	; 0
    1c86:	e5 e5       	ldi	r30, 0x55	; 85
    1c88:	f0 e0       	ldi	r31, 0x00	; 0
    1c8a:	80 81       	ld	r24, Z
    1c8c:	81 60       	ori	r24, 0x01	; 1
    1c8e:	8c 93       	st	X, r24
    1c90:	0e c0       	rjmp	.+28     	; 0x1cae <EINT_voidMode1+0xb4>
	case LOW_LEVEL:
		CLR_BIT(MCUCR_REG,0);
    1c92:	a5 e5       	ldi	r26, 0x55	; 85
    1c94:	b0 e0       	ldi	r27, 0x00	; 0
    1c96:	e5 e5       	ldi	r30, 0x55	; 85
    1c98:	f0 e0       	ldi	r31, 0x00	; 0
    1c9a:	80 81       	ld	r24, Z
    1c9c:	8e 7f       	andi	r24, 0xFE	; 254
    1c9e:	8c 93       	st	X, r24
		CLR_BIT(MCUCR_REG,1);
    1ca0:	a5 e5       	ldi	r26, 0x55	; 85
    1ca2:	b0 e0       	ldi	r27, 0x00	; 0
    1ca4:	e5 e5       	ldi	r30, 0x55	; 85
    1ca6:	f0 e0       	ldi	r31, 0x00	; 0
    1ca8:	80 81       	ld	r24, Z
    1caa:	8d 7f       	andi	r24, 0xFD	; 253
    1cac:	8c 93       	st	X, r24
		break;
	default:break;
	}
}
    1cae:	0f 90       	pop	r0
    1cb0:	0f 90       	pop	r0
    1cb2:	0f 90       	pop	r0
    1cb4:	cf 91       	pop	r28
    1cb6:	df 91       	pop	r29
    1cb8:	08 95       	ret

00001cba <EINT_voidMode2>:



void EINT_voidMode2(u8 Copy_u8Modee)
{
    1cba:	df 93       	push	r29
    1cbc:	cf 93       	push	r28
    1cbe:	00 d0       	rcall	.+0      	; 0x1cc0 <EINT_voidMode2+0x6>
    1cc0:	0f 92       	push	r0
    1cc2:	cd b7       	in	r28, 0x3d	; 61
    1cc4:	de b7       	in	r29, 0x3e	; 62
    1cc6:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Modee)
    1cc8:	89 81       	ldd	r24, Y+1	; 0x01
    1cca:	28 2f       	mov	r18, r24
    1ccc:	30 e0       	ldi	r19, 0x00	; 0
    1cce:	3b 83       	std	Y+3, r19	; 0x03
    1cd0:	2a 83       	std	Y+2, r18	; 0x02
    1cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cd4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cd6:	00 97       	sbiw	r24, 0x00	; 0
    1cd8:	31 f0       	breq	.+12     	; 0x1ce6 <EINT_voidMode2+0x2c>
    1cda:	2a 81       	ldd	r18, Y+2	; 0x02
    1cdc:	3b 81       	ldd	r19, Y+3	; 0x03
    1cde:	21 30       	cpi	r18, 0x01	; 1
    1ce0:	31 05       	cpc	r19, r1
    1ce2:	49 f0       	breq	.+18     	; 0x1cf6 <EINT_voidMode2+0x3c>
    1ce4:	0f c0       	rjmp	.+30     	; 0x1d04 <EINT_voidMode2+0x4a>
	{
	case FALLING_EDGE:
		CLR_BIT(MCUCSR_REG,6);
    1ce6:	a4 e5       	ldi	r26, 0x54	; 84
    1ce8:	b0 e0       	ldi	r27, 0x00	; 0
    1cea:	e4 e5       	ldi	r30, 0x54	; 84
    1cec:	f0 e0       	ldi	r31, 0x00	; 0
    1cee:	80 81       	ld	r24, Z
    1cf0:	8f 7b       	andi	r24, 0xBF	; 191
    1cf2:	8c 93       	st	X, r24
    1cf4:	07 c0       	rjmp	.+14     	; 0x1d04 <EINT_voidMode2+0x4a>
				break;
	case RISING_EDGE:
		SET_BIT(MCUCSR_REG,6);
    1cf6:	a4 e5       	ldi	r26, 0x54	; 84
    1cf8:	b0 e0       	ldi	r27, 0x00	; 0
    1cfa:	e4 e5       	ldi	r30, 0x54	; 84
    1cfc:	f0 e0       	ldi	r31, 0x00	; 0
    1cfe:	80 81       	ld	r24, Z
    1d00:	80 64       	ori	r24, 0x40	; 64
    1d02:	8c 93       	st	X, r24
				break;
		default:break;
	}
}
    1d04:	0f 90       	pop	r0
    1d06:	0f 90       	pop	r0
    1d08:	0f 90       	pop	r0
    1d0a:	cf 91       	pop	r28
    1d0c:	df 91       	pop	r29
    1d0e:	08 95       	ret

00001d10 <LCD_Vinit>:
#define LCD_DISPLAY_ON 0x0C


#define degree_sysmbol 0xdf
#define degree_sysmbol_i  0xdf
void LCD_Vinit(void) {
    1d10:	0f 93       	push	r16
    1d12:	1f 93       	push	r17
    1d14:	df 93       	push	r29
    1d16:	cf 93       	push	r28
    1d18:	cd b7       	in	r28, 0x3d	; 61
    1d1a:	de b7       	in	r29, 0x3e	; 62
    1d1c:	c4 55       	subi	r28, 0x54	; 84
    1d1e:	d0 40       	sbci	r29, 0x00	; 0
    1d20:	0f b6       	in	r0, 0x3f	; 63
    1d22:	f8 94       	cli
    1d24:	de bf       	out	0x3e, r29	; 62
    1d26:	0f be       	out	0x3f, r0	; 63
    1d28:	cd bf       	out	0x3d, r28	; 61
	/* set DDRA as OUTPUTs pins */
	DIO_SetGroupDirection(LCD_GROUP_DATA, 0xFF);
    1d2a:	81 e0       	ldi	r24, 0x01	; 1
    1d2c:	6f ef       	ldi	r22, 0xFF	; 255
    1d2e:	0e 94 ca 08 	call	0x1194	; 0x1194 <DIO_SetGroupDirection>
	/* confguire RS & E as output */
	DIO_SetPinDirection(LCD_GROUP_CONTROL, LCD_RS_PIN, OUTPUT);
    1d32:	83 e0       	ldi	r24, 0x03	; 3
    1d34:	64 e0       	ldi	r22, 0x04	; 4
    1d36:	41 e0       	ldi	r20, 0x01	; 1
    1d38:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_GROUP_CONTROL, LCD_E_PIN, OUTPUT);
    1d3c:	83 e0       	ldi	r24, 0x03	; 3
    1d3e:	65 e0       	ldi	r22, 0x05	; 5
    1d40:	41 e0       	ldi	r20, 0x01	; 1
    1d42:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_SetPinDirection>
    1d46:	fe 01       	movw	r30, r28
    1d48:	ef 5a       	subi	r30, 0xAF	; 175
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	80 e0       	ldi	r24, 0x00	; 0
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	a0 ef       	ldi	r26, 0xF0	; 240
    1d52:	b1 e4       	ldi	r27, 0x41	; 65
    1d54:	80 83       	st	Z, r24
    1d56:	91 83       	std	Z+1, r25	; 0x01
    1d58:	a2 83       	std	Z+2, r26	; 0x02
    1d5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d5c:	8e 01       	movw	r16, r28
    1d5e:	03 5b       	subi	r16, 0xB3	; 179
    1d60:	1f 4f       	sbci	r17, 0xFF	; 255
    1d62:	fe 01       	movw	r30, r28
    1d64:	ef 5a       	subi	r30, 0xAF	; 175
    1d66:	ff 4f       	sbci	r31, 0xFF	; 255
    1d68:	60 81       	ld	r22, Z
    1d6a:	71 81       	ldd	r23, Z+1	; 0x01
    1d6c:	82 81       	ldd	r24, Z+2	; 0x02
    1d6e:	93 81       	ldd	r25, Z+3	; 0x03
    1d70:	20 e0       	ldi	r18, 0x00	; 0
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	4a ef       	ldi	r20, 0xFA	; 250
    1d76:	54 e4       	ldi	r21, 0x44	; 68
    1d78:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d7c:	dc 01       	movw	r26, r24
    1d7e:	cb 01       	movw	r24, r22
    1d80:	f8 01       	movw	r30, r16
    1d82:	80 83       	st	Z, r24
    1d84:	91 83       	std	Z+1, r25	; 0x01
    1d86:	a2 83       	std	Z+2, r26	; 0x02
    1d88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e3 5b       	subi	r30, 0xB3	; 179
    1d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d90:	60 81       	ld	r22, Z
    1d92:	71 81       	ldd	r23, Z+1	; 0x01
    1d94:	82 81       	ldd	r24, Z+2	; 0x02
    1d96:	93 81       	ldd	r25, Z+3	; 0x03
    1d98:	20 e0       	ldi	r18, 0x00	; 0
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	40 e8       	ldi	r20, 0x80	; 128
    1d9e:	5f e3       	ldi	r21, 0x3F	; 63
    1da0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1da4:	88 23       	and	r24, r24
    1da6:	44 f4       	brge	.+16     	; 0x1db8 <LCD_Vinit+0xa8>
		__ticks = 1;
    1da8:	fe 01       	movw	r30, r28
    1daa:	e5 5b       	subi	r30, 0xB5	; 181
    1dac:	ff 4f       	sbci	r31, 0xFF	; 255
    1dae:	81 e0       	ldi	r24, 0x01	; 1
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	91 83       	std	Z+1, r25	; 0x01
    1db4:	80 83       	st	Z, r24
    1db6:	64 c0       	rjmp	.+200    	; 0x1e80 <LCD_Vinit+0x170>
	else if (__tmp > 65535)
    1db8:	fe 01       	movw	r30, r28
    1dba:	e3 5b       	subi	r30, 0xB3	; 179
    1dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbe:	60 81       	ld	r22, Z
    1dc0:	71 81       	ldd	r23, Z+1	; 0x01
    1dc2:	82 81       	ldd	r24, Z+2	; 0x02
    1dc4:	93 81       	ldd	r25, Z+3	; 0x03
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	3f ef       	ldi	r19, 0xFF	; 255
    1dca:	4f e7       	ldi	r20, 0x7F	; 127
    1dcc:	57 e4       	ldi	r21, 0x47	; 71
    1dce:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1dd2:	18 16       	cp	r1, r24
    1dd4:	0c f0       	brlt	.+2      	; 0x1dd8 <LCD_Vinit+0xc8>
    1dd6:	43 c0       	rjmp	.+134    	; 0x1e5e <LCD_Vinit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dd8:	fe 01       	movw	r30, r28
    1dda:	ef 5a       	subi	r30, 0xAF	; 175
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	60 81       	ld	r22, Z
    1de0:	71 81       	ldd	r23, Z+1	; 0x01
    1de2:	82 81       	ldd	r24, Z+2	; 0x02
    1de4:	93 81       	ldd	r25, Z+3	; 0x03
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e2       	ldi	r20, 0x20	; 32
    1dec:	51 e4       	ldi	r21, 0x41	; 65
    1dee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1df2:	dc 01       	movw	r26, r24
    1df4:	cb 01       	movw	r24, r22
    1df6:	8e 01       	movw	r16, r28
    1df8:	05 5b       	subi	r16, 0xB5	; 181
    1dfa:	1f 4f       	sbci	r17, 0xFF	; 255
    1dfc:	bc 01       	movw	r22, r24
    1dfe:	cd 01       	movw	r24, r26
    1e00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e04:	dc 01       	movw	r26, r24
    1e06:	cb 01       	movw	r24, r22
    1e08:	f8 01       	movw	r30, r16
    1e0a:	91 83       	std	Z+1, r25	; 0x01
    1e0c:	80 83       	st	Z, r24
    1e0e:	1f c0       	rjmp	.+62     	; 0x1e4e <LCD_Vinit+0x13e>
    1e10:	fe 01       	movw	r30, r28
    1e12:	e7 5b       	subi	r30, 0xB7	; 183
    1e14:	ff 4f       	sbci	r31, 0xFF	; 255
    1e16:	88 ec       	ldi	r24, 0xC8	; 200
    1e18:	90 e0       	ldi	r25, 0x00	; 0
    1e1a:	91 83       	std	Z+1, r25	; 0x01
    1e1c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e1e:	fe 01       	movw	r30, r28
    1e20:	e7 5b       	subi	r30, 0xB7	; 183
    1e22:	ff 4f       	sbci	r31, 0xFF	; 255
    1e24:	80 81       	ld	r24, Z
    1e26:	91 81       	ldd	r25, Z+1	; 0x01
    1e28:	01 97       	sbiw	r24, 0x01	; 1
    1e2a:	f1 f7       	brne	.-4      	; 0x1e28 <LCD_Vinit+0x118>
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	e7 5b       	subi	r30, 0xB7	; 183
    1e30:	ff 4f       	sbci	r31, 0xFF	; 255
    1e32:	91 83       	std	Z+1, r25	; 0x01
    1e34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e36:	de 01       	movw	r26, r28
    1e38:	a5 5b       	subi	r26, 0xB5	; 181
    1e3a:	bf 4f       	sbci	r27, 0xFF	; 255
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	e5 5b       	subi	r30, 0xB5	; 181
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	80 81       	ld	r24, Z
    1e44:	91 81       	ldd	r25, Z+1	; 0x01
    1e46:	01 97       	sbiw	r24, 0x01	; 1
    1e48:	11 96       	adiw	r26, 0x01	; 1
    1e4a:	9c 93       	st	X, r25
    1e4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e4e:	fe 01       	movw	r30, r28
    1e50:	e5 5b       	subi	r30, 0xB5	; 181
    1e52:	ff 4f       	sbci	r31, 0xFF	; 255
    1e54:	80 81       	ld	r24, Z
    1e56:	91 81       	ldd	r25, Z+1	; 0x01
    1e58:	00 97       	sbiw	r24, 0x00	; 0
    1e5a:	d1 f6       	brne	.-76     	; 0x1e10 <LCD_Vinit+0x100>
    1e5c:	27 c0       	rjmp	.+78     	; 0x1eac <LCD_Vinit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e5e:	8e 01       	movw	r16, r28
    1e60:	05 5b       	subi	r16, 0xB5	; 181
    1e62:	1f 4f       	sbci	r17, 0xFF	; 255
    1e64:	fe 01       	movw	r30, r28
    1e66:	e3 5b       	subi	r30, 0xB3	; 179
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	60 81       	ld	r22, Z
    1e6c:	71 81       	ldd	r23, Z+1	; 0x01
    1e6e:	82 81       	ldd	r24, Z+2	; 0x02
    1e70:	93 81       	ldd	r25, Z+3	; 0x03
    1e72:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e76:	dc 01       	movw	r26, r24
    1e78:	cb 01       	movw	r24, r22
    1e7a:	f8 01       	movw	r30, r16
    1e7c:	91 83       	std	Z+1, r25	; 0x01
    1e7e:	80 83       	st	Z, r24
    1e80:	de 01       	movw	r26, r28
    1e82:	a9 5b       	subi	r26, 0xB9	; 185
    1e84:	bf 4f       	sbci	r27, 0xFF	; 255
    1e86:	fe 01       	movw	r30, r28
    1e88:	e5 5b       	subi	r30, 0xB5	; 181
    1e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8c:	80 81       	ld	r24, Z
    1e8e:	91 81       	ldd	r25, Z+1	; 0x01
    1e90:	8d 93       	st	X+, r24
    1e92:	9c 93       	st	X, r25
    1e94:	fe 01       	movw	r30, r28
    1e96:	e9 5b       	subi	r30, 0xB9	; 185
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	80 81       	ld	r24, Z
    1e9c:	91 81       	ldd	r25, Z+1	; 0x01
    1e9e:	01 97       	sbiw	r24, 0x01	; 1
    1ea0:	f1 f7       	brne	.-4      	; 0x1e9e <LCD_Vinit+0x18e>
    1ea2:	fe 01       	movw	r30, r28
    1ea4:	e9 5b       	subi	r30, 0xB9	; 185
    1ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea8:	91 83       	std	Z+1, r25	; 0x01
    1eaa:	80 83       	st	Z, r24

	_delay_ms(30);
	LCD_Send_Command(LCD_HOME);
    1eac:	82 e0       	ldi	r24, 0x02	; 2
    1eae:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	ed 5b       	subi	r30, 0xBD	; 189
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	80 e0       	ldi	r24, 0x00	; 0
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	a0 e7       	ldi	r26, 0x70	; 112
    1ebe:	b1 e4       	ldi	r27, 0x41	; 65
    1ec0:	80 83       	st	Z, r24
    1ec2:	91 83       	std	Z+1, r25	; 0x01
    1ec4:	a2 83       	std	Z+2, r26	; 0x02
    1ec6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ec8:	8e 01       	movw	r16, r28
    1eca:	01 5c       	subi	r16, 0xC1	; 193
    1ecc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ece:	fe 01       	movw	r30, r28
    1ed0:	ed 5b       	subi	r30, 0xBD	; 189
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	60 81       	ld	r22, Z
    1ed6:	71 81       	ldd	r23, Z+1	; 0x01
    1ed8:	82 81       	ldd	r24, Z+2	; 0x02
    1eda:	93 81       	ldd	r25, Z+3	; 0x03
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	4a ef       	ldi	r20, 0xFA	; 250
    1ee2:	54 e4       	ldi	r21, 0x44	; 68
    1ee4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ee8:	dc 01       	movw	r26, r24
    1eea:	cb 01       	movw	r24, r22
    1eec:	f8 01       	movw	r30, r16
    1eee:	80 83       	st	Z, r24
    1ef0:	91 83       	std	Z+1, r25	; 0x01
    1ef2:	a2 83       	std	Z+2, r26	; 0x02
    1ef4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	ff 96       	adiw	r30, 0x3f	; 63
    1efa:	60 81       	ld	r22, Z
    1efc:	71 81       	ldd	r23, Z+1	; 0x01
    1efe:	82 81       	ldd	r24, Z+2	; 0x02
    1f00:	93 81       	ldd	r25, Z+3	; 0x03
    1f02:	20 e0       	ldi	r18, 0x00	; 0
    1f04:	30 e0       	ldi	r19, 0x00	; 0
    1f06:	40 e8       	ldi	r20, 0x80	; 128
    1f08:	5f e3       	ldi	r21, 0x3F	; 63
    1f0a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f0e:	88 23       	and	r24, r24
    1f10:	2c f4       	brge	.+10     	; 0x1f1c <LCD_Vinit+0x20c>
		__ticks = 1;
    1f12:	81 e0       	ldi	r24, 0x01	; 1
    1f14:	90 e0       	ldi	r25, 0x00	; 0
    1f16:	9e af       	std	Y+62, r25	; 0x3e
    1f18:	8d af       	std	Y+61, r24	; 0x3d
    1f1a:	46 c0       	rjmp	.+140    	; 0x1fa8 <LCD_Vinit+0x298>
	else if (__tmp > 65535)
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	ff 96       	adiw	r30, 0x3f	; 63
    1f20:	60 81       	ld	r22, Z
    1f22:	71 81       	ldd	r23, Z+1	; 0x01
    1f24:	82 81       	ldd	r24, Z+2	; 0x02
    1f26:	93 81       	ldd	r25, Z+3	; 0x03
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	3f ef       	ldi	r19, 0xFF	; 255
    1f2c:	4f e7       	ldi	r20, 0x7F	; 127
    1f2e:	57 e4       	ldi	r21, 0x47	; 71
    1f30:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f34:	18 16       	cp	r1, r24
    1f36:	64 f5       	brge	.+88     	; 0x1f90 <LCD_Vinit+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f38:	fe 01       	movw	r30, r28
    1f3a:	ed 5b       	subi	r30, 0xBD	; 189
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	60 81       	ld	r22, Z
    1f40:	71 81       	ldd	r23, Z+1	; 0x01
    1f42:	82 81       	ldd	r24, Z+2	; 0x02
    1f44:	93 81       	ldd	r25, Z+3	; 0x03
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e2       	ldi	r20, 0x20	; 32
    1f4c:	51 e4       	ldi	r21, 0x41	; 65
    1f4e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f52:	dc 01       	movw	r26, r24
    1f54:	cb 01       	movw	r24, r22
    1f56:	bc 01       	movw	r22, r24
    1f58:	cd 01       	movw	r24, r26
    1f5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f5e:	dc 01       	movw	r26, r24
    1f60:	cb 01       	movw	r24, r22
    1f62:	9e af       	std	Y+62, r25	; 0x3e
    1f64:	8d af       	std	Y+61, r24	; 0x3d
    1f66:	0f c0       	rjmp	.+30     	; 0x1f86 <LCD_Vinit+0x276>
    1f68:	88 ec       	ldi	r24, 0xC8	; 200
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	9c af       	std	Y+60, r25	; 0x3c
    1f6e:	8b af       	std	Y+59, r24	; 0x3b
    1f70:	8b ad       	ldd	r24, Y+59	; 0x3b
    1f72:	9c ad       	ldd	r25, Y+60	; 0x3c
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	f1 f7       	brne	.-4      	; 0x1f74 <LCD_Vinit+0x264>
    1f78:	9c af       	std	Y+60, r25	; 0x3c
    1f7a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f7c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f7e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f80:	01 97       	sbiw	r24, 0x01	; 1
    1f82:	9e af       	std	Y+62, r25	; 0x3e
    1f84:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f86:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f88:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	69 f7       	brne	.-38     	; 0x1f68 <LCD_Vinit+0x258>
    1f8e:	16 c0       	rjmp	.+44     	; 0x1fbc <LCD_Vinit+0x2ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f90:	fe 01       	movw	r30, r28
    1f92:	ff 96       	adiw	r30, 0x3f	; 63
    1f94:	60 81       	ld	r22, Z
    1f96:	71 81       	ldd	r23, Z+1	; 0x01
    1f98:	82 81       	ldd	r24, Z+2	; 0x02
    1f9a:	93 81       	ldd	r25, Z+3	; 0x03
    1f9c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa0:	dc 01       	movw	r26, r24
    1fa2:	cb 01       	movw	r24, r22
    1fa4:	9e af       	std	Y+62, r25	; 0x3e
    1fa6:	8d af       	std	Y+61, r24	; 0x3d
    1fa8:	8d ad       	ldd	r24, Y+61	; 0x3d
    1faa:	9e ad       	ldd	r25, Y+62	; 0x3e
    1fac:	9a af       	std	Y+58, r25	; 0x3a
    1fae:	89 af       	std	Y+57, r24	; 0x39
    1fb0:	89 ad       	ldd	r24, Y+57	; 0x39
    1fb2:	9a ad       	ldd	r25, Y+58	; 0x3a
    1fb4:	01 97       	sbiw	r24, 0x01	; 1
    1fb6:	f1 f7       	brne	.-4      	; 0x1fb4 <LCD_Vinit+0x2a4>
    1fb8:	9a af       	std	Y+58, r25	; 0x3a
    1fba:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(15);

	LCD_Send_Command(LCD_SET_8FUNCTION);
    1fbc:	88 e3       	ldi	r24, 0x38	; 56
    1fbe:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    1fc2:	80 e0       	ldi	r24, 0x00	; 0
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	a0 e8       	ldi	r26, 0x80	; 128
    1fc8:	bf e3       	ldi	r27, 0x3F	; 63
    1fca:	8d ab       	std	Y+53, r24	; 0x35
    1fcc:	9e ab       	std	Y+54, r25	; 0x36
    1fce:	af ab       	std	Y+55, r26	; 0x37
    1fd0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fd2:	6d a9       	ldd	r22, Y+53	; 0x35
    1fd4:	7e a9       	ldd	r23, Y+54	; 0x36
    1fd6:	8f a9       	ldd	r24, Y+55	; 0x37
    1fd8:	98 ad       	ldd	r25, Y+56	; 0x38
    1fda:	20 e0       	ldi	r18, 0x00	; 0
    1fdc:	30 e0       	ldi	r19, 0x00	; 0
    1fde:	4a ef       	ldi	r20, 0xFA	; 250
    1fe0:	54 e4       	ldi	r21, 0x44	; 68
    1fe2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fe6:	dc 01       	movw	r26, r24
    1fe8:	cb 01       	movw	r24, r22
    1fea:	89 ab       	std	Y+49, r24	; 0x31
    1fec:	9a ab       	std	Y+50, r25	; 0x32
    1fee:	ab ab       	std	Y+51, r26	; 0x33
    1ff0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1ff2:	69 a9       	ldd	r22, Y+49	; 0x31
    1ff4:	7a a9       	ldd	r23, Y+50	; 0x32
    1ff6:	8b a9       	ldd	r24, Y+51	; 0x33
    1ff8:	9c a9       	ldd	r25, Y+52	; 0x34
    1ffa:	20 e0       	ldi	r18, 0x00	; 0
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	40 e8       	ldi	r20, 0x80	; 128
    2000:	5f e3       	ldi	r21, 0x3F	; 63
    2002:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2006:	88 23       	and	r24, r24
    2008:	2c f4       	brge	.+10     	; 0x2014 <LCD_Vinit+0x304>
		__ticks = 1;
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	90 e0       	ldi	r25, 0x00	; 0
    200e:	98 ab       	std	Y+48, r25	; 0x30
    2010:	8f a7       	std	Y+47, r24	; 0x2f
    2012:	3f c0       	rjmp	.+126    	; 0x2092 <LCD_Vinit+0x382>
	else if (__tmp > 65535)
    2014:	69 a9       	ldd	r22, Y+49	; 0x31
    2016:	7a a9       	ldd	r23, Y+50	; 0x32
    2018:	8b a9       	ldd	r24, Y+51	; 0x33
    201a:	9c a9       	ldd	r25, Y+52	; 0x34
    201c:	20 e0       	ldi	r18, 0x00	; 0
    201e:	3f ef       	ldi	r19, 0xFF	; 255
    2020:	4f e7       	ldi	r20, 0x7F	; 127
    2022:	57 e4       	ldi	r21, 0x47	; 71
    2024:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2028:	18 16       	cp	r1, r24
    202a:	4c f5       	brge	.+82     	; 0x207e <LCD_Vinit+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    202c:	6d a9       	ldd	r22, Y+53	; 0x35
    202e:	7e a9       	ldd	r23, Y+54	; 0x36
    2030:	8f a9       	ldd	r24, Y+55	; 0x37
    2032:	98 ad       	ldd	r25, Y+56	; 0x38
    2034:	20 e0       	ldi	r18, 0x00	; 0
    2036:	30 e0       	ldi	r19, 0x00	; 0
    2038:	40 e2       	ldi	r20, 0x20	; 32
    203a:	51 e4       	ldi	r21, 0x41	; 65
    203c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2040:	dc 01       	movw	r26, r24
    2042:	cb 01       	movw	r24, r22
    2044:	bc 01       	movw	r22, r24
    2046:	cd 01       	movw	r24, r26
    2048:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    204c:	dc 01       	movw	r26, r24
    204e:	cb 01       	movw	r24, r22
    2050:	98 ab       	std	Y+48, r25	; 0x30
    2052:	8f a7       	std	Y+47, r24	; 0x2f
    2054:	0f c0       	rjmp	.+30     	; 0x2074 <LCD_Vinit+0x364>
    2056:	88 ec       	ldi	r24, 0xC8	; 200
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	9e a7       	std	Y+46, r25	; 0x2e
    205c:	8d a7       	std	Y+45, r24	; 0x2d
    205e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2060:	9e a5       	ldd	r25, Y+46	; 0x2e
    2062:	01 97       	sbiw	r24, 0x01	; 1
    2064:	f1 f7       	brne	.-4      	; 0x2062 <LCD_Vinit+0x352>
    2066:	9e a7       	std	Y+46, r25	; 0x2e
    2068:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    206a:	8f a5       	ldd	r24, Y+47	; 0x2f
    206c:	98 a9       	ldd	r25, Y+48	; 0x30
    206e:	01 97       	sbiw	r24, 0x01	; 1
    2070:	98 ab       	std	Y+48, r25	; 0x30
    2072:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2074:	8f a5       	ldd	r24, Y+47	; 0x2f
    2076:	98 a9       	ldd	r25, Y+48	; 0x30
    2078:	00 97       	sbiw	r24, 0x00	; 0
    207a:	69 f7       	brne	.-38     	; 0x2056 <LCD_Vinit+0x346>
    207c:	14 c0       	rjmp	.+40     	; 0x20a6 <LCD_Vinit+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    207e:	69 a9       	ldd	r22, Y+49	; 0x31
    2080:	7a a9       	ldd	r23, Y+50	; 0x32
    2082:	8b a9       	ldd	r24, Y+51	; 0x33
    2084:	9c a9       	ldd	r25, Y+52	; 0x34
    2086:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    208a:	dc 01       	movw	r26, r24
    208c:	cb 01       	movw	r24, r22
    208e:	98 ab       	std	Y+48, r25	; 0x30
    2090:	8f a7       	std	Y+47, r24	; 0x2f
    2092:	8f a5       	ldd	r24, Y+47	; 0x2f
    2094:	98 a9       	ldd	r25, Y+48	; 0x30
    2096:	9c a7       	std	Y+44, r25	; 0x2c
    2098:	8b a7       	std	Y+43, r24	; 0x2b
    209a:	8b a5       	ldd	r24, Y+43	; 0x2b
    209c:	9c a5       	ldd	r25, Y+44	; 0x2c
    209e:	01 97       	sbiw	r24, 0x01	; 1
    20a0:	f1 f7       	brne	.-4      	; 0x209e <LCD_Vinit+0x38e>
    20a2:	9c a7       	std	Y+44, r25	; 0x2c
    20a4:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	LCD_Send_Command(LCD_DISPLAY_ON);
    20a6:	8c e0       	ldi	r24, 0x0C	; 12
    20a8:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    20ac:	80 e0       	ldi	r24, 0x00	; 0
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	a0 e8       	ldi	r26, 0x80	; 128
    20b2:	bf e3       	ldi	r27, 0x3F	; 63
    20b4:	8f a3       	std	Y+39, r24	; 0x27
    20b6:	98 a7       	std	Y+40, r25	; 0x28
    20b8:	a9 a7       	std	Y+41, r26	; 0x29
    20ba:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20bc:	6f a1       	ldd	r22, Y+39	; 0x27
    20be:	78 a5       	ldd	r23, Y+40	; 0x28
    20c0:	89 a5       	ldd	r24, Y+41	; 0x29
    20c2:	9a a5       	ldd	r25, Y+42	; 0x2a
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	4a ef       	ldi	r20, 0xFA	; 250
    20ca:	54 e4       	ldi	r21, 0x44	; 68
    20cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	8b a3       	std	Y+35, r24	; 0x23
    20d6:	9c a3       	std	Y+36, r25	; 0x24
    20d8:	ad a3       	std	Y+37, r26	; 0x25
    20da:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    20dc:	6b a1       	ldd	r22, Y+35	; 0x23
    20de:	7c a1       	ldd	r23, Y+36	; 0x24
    20e0:	8d a1       	ldd	r24, Y+37	; 0x25
    20e2:	9e a1       	ldd	r25, Y+38	; 0x26
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	40 e8       	ldi	r20, 0x80	; 128
    20ea:	5f e3       	ldi	r21, 0x3F	; 63
    20ec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    20f0:	88 23       	and	r24, r24
    20f2:	2c f4       	brge	.+10     	; 0x20fe <LCD_Vinit+0x3ee>
		__ticks = 1;
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	9a a3       	std	Y+34, r25	; 0x22
    20fa:	89 a3       	std	Y+33, r24	; 0x21
    20fc:	3f c0       	rjmp	.+126    	; 0x217c <LCD_Vinit+0x46c>
	else if (__tmp > 65535)
    20fe:	6b a1       	ldd	r22, Y+35	; 0x23
    2100:	7c a1       	ldd	r23, Y+36	; 0x24
    2102:	8d a1       	ldd	r24, Y+37	; 0x25
    2104:	9e a1       	ldd	r25, Y+38	; 0x26
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	3f ef       	ldi	r19, 0xFF	; 255
    210a:	4f e7       	ldi	r20, 0x7F	; 127
    210c:	57 e4       	ldi	r21, 0x47	; 71
    210e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2112:	18 16       	cp	r1, r24
    2114:	4c f5       	brge	.+82     	; 0x2168 <LCD_Vinit+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2116:	6f a1       	ldd	r22, Y+39	; 0x27
    2118:	78 a5       	ldd	r23, Y+40	; 0x28
    211a:	89 a5       	ldd	r24, Y+41	; 0x29
    211c:	9a a5       	ldd	r25, Y+42	; 0x2a
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	40 e2       	ldi	r20, 0x20	; 32
    2124:	51 e4       	ldi	r21, 0x41	; 65
    2126:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    212a:	dc 01       	movw	r26, r24
    212c:	cb 01       	movw	r24, r22
    212e:	bc 01       	movw	r22, r24
    2130:	cd 01       	movw	r24, r26
    2132:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2136:	dc 01       	movw	r26, r24
    2138:	cb 01       	movw	r24, r22
    213a:	9a a3       	std	Y+34, r25	; 0x22
    213c:	89 a3       	std	Y+33, r24	; 0x21
    213e:	0f c0       	rjmp	.+30     	; 0x215e <LCD_Vinit+0x44e>
    2140:	88 ec       	ldi	r24, 0xC8	; 200
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	98 a3       	std	Y+32, r25	; 0x20
    2146:	8f 8f       	std	Y+31, r24	; 0x1f
    2148:	8f 8d       	ldd	r24, Y+31	; 0x1f
    214a:	98 a1       	ldd	r25, Y+32	; 0x20
    214c:	01 97       	sbiw	r24, 0x01	; 1
    214e:	f1 f7       	brne	.-4      	; 0x214c <LCD_Vinit+0x43c>
    2150:	98 a3       	std	Y+32, r25	; 0x20
    2152:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2154:	89 a1       	ldd	r24, Y+33	; 0x21
    2156:	9a a1       	ldd	r25, Y+34	; 0x22
    2158:	01 97       	sbiw	r24, 0x01	; 1
    215a:	9a a3       	std	Y+34, r25	; 0x22
    215c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    215e:	89 a1       	ldd	r24, Y+33	; 0x21
    2160:	9a a1       	ldd	r25, Y+34	; 0x22
    2162:	00 97       	sbiw	r24, 0x00	; 0
    2164:	69 f7       	brne	.-38     	; 0x2140 <LCD_Vinit+0x430>
    2166:	14 c0       	rjmp	.+40     	; 0x2190 <LCD_Vinit+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2168:	6b a1       	ldd	r22, Y+35	; 0x23
    216a:	7c a1       	ldd	r23, Y+36	; 0x24
    216c:	8d a1       	ldd	r24, Y+37	; 0x25
    216e:	9e a1       	ldd	r25, Y+38	; 0x26
    2170:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2174:	dc 01       	movw	r26, r24
    2176:	cb 01       	movw	r24, r22
    2178:	9a a3       	std	Y+34, r25	; 0x22
    217a:	89 a3       	std	Y+33, r24	; 0x21
    217c:	89 a1       	ldd	r24, Y+33	; 0x21
    217e:	9a a1       	ldd	r25, Y+34	; 0x22
    2180:	9e 8f       	std	Y+30, r25	; 0x1e
    2182:	8d 8f       	std	Y+29, r24	; 0x1d
    2184:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2186:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2188:	01 97       	sbiw	r24, 0x01	; 1
    218a:	f1 f7       	brne	.-4      	; 0x2188 <LCD_Vinit+0x478>
    218c:	9e 8f       	std	Y+30, r25	; 0x1e
    218e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	LCD_Send_Command(LCD_CLEAR);
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    2196:	80 e0       	ldi	r24, 0x00	; 0
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	a0 e0       	ldi	r26, 0x00	; 0
    219c:	b0 e4       	ldi	r27, 0x40	; 64
    219e:	89 8f       	std	Y+25, r24	; 0x19
    21a0:	9a 8f       	std	Y+26, r25	; 0x1a
    21a2:	ab 8f       	std	Y+27, r26	; 0x1b
    21a4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21a6:	69 8d       	ldd	r22, Y+25	; 0x19
    21a8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    21aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	4a ef       	ldi	r20, 0xFA	; 250
    21b4:	54 e4       	ldi	r21, 0x44	; 68
    21b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21ba:	dc 01       	movw	r26, r24
    21bc:	cb 01       	movw	r24, r22
    21be:	8d 8b       	std	Y+21, r24	; 0x15
    21c0:	9e 8b       	std	Y+22, r25	; 0x16
    21c2:	af 8b       	std	Y+23, r26	; 0x17
    21c4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    21c6:	6d 89       	ldd	r22, Y+21	; 0x15
    21c8:	7e 89       	ldd	r23, Y+22	; 0x16
    21ca:	8f 89       	ldd	r24, Y+23	; 0x17
    21cc:	98 8d       	ldd	r25, Y+24	; 0x18
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	40 e8       	ldi	r20, 0x80	; 128
    21d4:	5f e3       	ldi	r21, 0x3F	; 63
    21d6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    21da:	88 23       	and	r24, r24
    21dc:	2c f4       	brge	.+10     	; 0x21e8 <LCD_Vinit+0x4d8>
		__ticks = 1;
    21de:	81 e0       	ldi	r24, 0x01	; 1
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	9c 8b       	std	Y+20, r25	; 0x14
    21e4:	8b 8b       	std	Y+19, r24	; 0x13
    21e6:	3f c0       	rjmp	.+126    	; 0x2266 <LCD_Vinit+0x556>
	else if (__tmp > 65535)
    21e8:	6d 89       	ldd	r22, Y+21	; 0x15
    21ea:	7e 89       	ldd	r23, Y+22	; 0x16
    21ec:	8f 89       	ldd	r24, Y+23	; 0x17
    21ee:	98 8d       	ldd	r25, Y+24	; 0x18
    21f0:	20 e0       	ldi	r18, 0x00	; 0
    21f2:	3f ef       	ldi	r19, 0xFF	; 255
    21f4:	4f e7       	ldi	r20, 0x7F	; 127
    21f6:	57 e4       	ldi	r21, 0x47	; 71
    21f8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    21fc:	18 16       	cp	r1, r24
    21fe:	4c f5       	brge	.+82     	; 0x2252 <LCD_Vinit+0x542>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2200:	69 8d       	ldd	r22, Y+25	; 0x19
    2202:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2204:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2206:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2208:	20 e0       	ldi	r18, 0x00	; 0
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	40 e2       	ldi	r20, 0x20	; 32
    220e:	51 e4       	ldi	r21, 0x41	; 65
    2210:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2214:	dc 01       	movw	r26, r24
    2216:	cb 01       	movw	r24, r22
    2218:	bc 01       	movw	r22, r24
    221a:	cd 01       	movw	r24, r26
    221c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2220:	dc 01       	movw	r26, r24
    2222:	cb 01       	movw	r24, r22
    2224:	9c 8b       	std	Y+20, r25	; 0x14
    2226:	8b 8b       	std	Y+19, r24	; 0x13
    2228:	0f c0       	rjmp	.+30     	; 0x2248 <LCD_Vinit+0x538>
    222a:	88 ec       	ldi	r24, 0xC8	; 200
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	9a 8b       	std	Y+18, r25	; 0x12
    2230:	89 8b       	std	Y+17, r24	; 0x11
    2232:	89 89       	ldd	r24, Y+17	; 0x11
    2234:	9a 89       	ldd	r25, Y+18	; 0x12
    2236:	01 97       	sbiw	r24, 0x01	; 1
    2238:	f1 f7       	brne	.-4      	; 0x2236 <LCD_Vinit+0x526>
    223a:	9a 8b       	std	Y+18, r25	; 0x12
    223c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    223e:	8b 89       	ldd	r24, Y+19	; 0x13
    2240:	9c 89       	ldd	r25, Y+20	; 0x14
    2242:	01 97       	sbiw	r24, 0x01	; 1
    2244:	9c 8b       	std	Y+20, r25	; 0x14
    2246:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2248:	8b 89       	ldd	r24, Y+19	; 0x13
    224a:	9c 89       	ldd	r25, Y+20	; 0x14
    224c:	00 97       	sbiw	r24, 0x00	; 0
    224e:	69 f7       	brne	.-38     	; 0x222a <LCD_Vinit+0x51a>
    2250:	14 c0       	rjmp	.+40     	; 0x227a <LCD_Vinit+0x56a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2252:	6d 89       	ldd	r22, Y+21	; 0x15
    2254:	7e 89       	ldd	r23, Y+22	; 0x16
    2256:	8f 89       	ldd	r24, Y+23	; 0x17
    2258:	98 8d       	ldd	r25, Y+24	; 0x18
    225a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    225e:	dc 01       	movw	r26, r24
    2260:	cb 01       	movw	r24, r22
    2262:	9c 8b       	std	Y+20, r25	; 0x14
    2264:	8b 8b       	std	Y+19, r24	; 0x13
    2266:	8b 89       	ldd	r24, Y+19	; 0x13
    2268:	9c 89       	ldd	r25, Y+20	; 0x14
    226a:	98 8b       	std	Y+16, r25	; 0x10
    226c:	8f 87       	std	Y+15, r24	; 0x0f
    226e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2270:	98 89       	ldd	r25, Y+16	; 0x10
    2272:	01 97       	sbiw	r24, 0x01	; 1
    2274:	f1 f7       	brne	.-4      	; 0x2272 <LCD_Vinit+0x562>
    2276:	98 8b       	std	Y+16, r25	; 0x10
    2278:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);

	LCD_Send_Command(LCD_DATA_ENTERY);
    227a:	86 e0       	ldi	r24, 0x06	; 6
    227c:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    2280:	80 e0       	ldi	r24, 0x00	; 0
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	a0 e7       	ldi	r26, 0x70	; 112
    2286:	b1 e4       	ldi	r27, 0x41	; 65
    2288:	8b 87       	std	Y+11, r24	; 0x0b
    228a:	9c 87       	std	Y+12, r25	; 0x0c
    228c:	ad 87       	std	Y+13, r26	; 0x0d
    228e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2290:	6b 85       	ldd	r22, Y+11	; 0x0b
    2292:	7c 85       	ldd	r23, Y+12	; 0x0c
    2294:	8d 85       	ldd	r24, Y+13	; 0x0d
    2296:	9e 85       	ldd	r25, Y+14	; 0x0e
    2298:	20 e0       	ldi	r18, 0x00	; 0
    229a:	30 e0       	ldi	r19, 0x00	; 0
    229c:	4a ef       	ldi	r20, 0xFA	; 250
    229e:	54 e4       	ldi	r21, 0x44	; 68
    22a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22a4:	dc 01       	movw	r26, r24
    22a6:	cb 01       	movw	r24, r22
    22a8:	8f 83       	std	Y+7, r24	; 0x07
    22aa:	98 87       	std	Y+8, r25	; 0x08
    22ac:	a9 87       	std	Y+9, r26	; 0x09
    22ae:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    22b0:	6f 81       	ldd	r22, Y+7	; 0x07
    22b2:	78 85       	ldd	r23, Y+8	; 0x08
    22b4:	89 85       	ldd	r24, Y+9	; 0x09
    22b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	40 e8       	ldi	r20, 0x80	; 128
    22be:	5f e3       	ldi	r21, 0x3F	; 63
    22c0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    22c4:	88 23       	and	r24, r24
    22c6:	2c f4       	brge	.+10     	; 0x22d2 <LCD_Vinit+0x5c2>
		__ticks = 1;
    22c8:	81 e0       	ldi	r24, 0x01	; 1
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	9e 83       	std	Y+6, r25	; 0x06
    22ce:	8d 83       	std	Y+5, r24	; 0x05
    22d0:	3f c0       	rjmp	.+126    	; 0x2350 <LCD_Vinit+0x640>
	else if (__tmp > 65535)
    22d2:	6f 81       	ldd	r22, Y+7	; 0x07
    22d4:	78 85       	ldd	r23, Y+8	; 0x08
    22d6:	89 85       	ldd	r24, Y+9	; 0x09
    22d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    22da:	20 e0       	ldi	r18, 0x00	; 0
    22dc:	3f ef       	ldi	r19, 0xFF	; 255
    22de:	4f e7       	ldi	r20, 0x7F	; 127
    22e0:	57 e4       	ldi	r21, 0x47	; 71
    22e2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    22e6:	18 16       	cp	r1, r24
    22e8:	4c f5       	brge	.+82     	; 0x233c <LCD_Vinit+0x62c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    22ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    22ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    22f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    22f2:	20 e0       	ldi	r18, 0x00	; 0
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	40 e2       	ldi	r20, 0x20	; 32
    22f8:	51 e4       	ldi	r21, 0x41	; 65
    22fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22fe:	dc 01       	movw	r26, r24
    2300:	cb 01       	movw	r24, r22
    2302:	bc 01       	movw	r22, r24
    2304:	cd 01       	movw	r24, r26
    2306:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    230a:	dc 01       	movw	r26, r24
    230c:	cb 01       	movw	r24, r22
    230e:	9e 83       	std	Y+6, r25	; 0x06
    2310:	8d 83       	std	Y+5, r24	; 0x05
    2312:	0f c0       	rjmp	.+30     	; 0x2332 <LCD_Vinit+0x622>
    2314:	88 ec       	ldi	r24, 0xC8	; 200
    2316:	90 e0       	ldi	r25, 0x00	; 0
    2318:	9c 83       	std	Y+4, r25	; 0x04
    231a:	8b 83       	std	Y+3, r24	; 0x03
    231c:	8b 81       	ldd	r24, Y+3	; 0x03
    231e:	9c 81       	ldd	r25, Y+4	; 0x04
    2320:	01 97       	sbiw	r24, 0x01	; 1
    2322:	f1 f7       	brne	.-4      	; 0x2320 <LCD_Vinit+0x610>
    2324:	9c 83       	std	Y+4, r25	; 0x04
    2326:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2328:	8d 81       	ldd	r24, Y+5	; 0x05
    232a:	9e 81       	ldd	r25, Y+6	; 0x06
    232c:	01 97       	sbiw	r24, 0x01	; 1
    232e:	9e 83       	std	Y+6, r25	; 0x06
    2330:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2332:	8d 81       	ldd	r24, Y+5	; 0x05
    2334:	9e 81       	ldd	r25, Y+6	; 0x06
    2336:	00 97       	sbiw	r24, 0x00	; 0
    2338:	69 f7       	brne	.-38     	; 0x2314 <LCD_Vinit+0x604>
    233a:	14 c0       	rjmp	.+40     	; 0x2364 <LCD_Vinit+0x654>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    233c:	6f 81       	ldd	r22, Y+7	; 0x07
    233e:	78 85       	ldd	r23, Y+8	; 0x08
    2340:	89 85       	ldd	r24, Y+9	; 0x09
    2342:	9a 85       	ldd	r25, Y+10	; 0x0a
    2344:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2348:	dc 01       	movw	r26, r24
    234a:	cb 01       	movw	r24, r22
    234c:	9e 83       	std	Y+6, r25	; 0x06
    234e:	8d 83       	std	Y+5, r24	; 0x05
    2350:	8d 81       	ldd	r24, Y+5	; 0x05
    2352:	9e 81       	ldd	r25, Y+6	; 0x06
    2354:	9a 83       	std	Y+2, r25	; 0x02
    2356:	89 83       	std	Y+1, r24	; 0x01
    2358:	89 81       	ldd	r24, Y+1	; 0x01
    235a:	9a 81       	ldd	r25, Y+2	; 0x02
    235c:	01 97       	sbiw	r24, 0x01	; 1
    235e:	f1 f7       	brne	.-4      	; 0x235c <LCD_Vinit+0x64c>
    2360:	9a 83       	std	Y+2, r25	; 0x02
    2362:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);

}
    2364:	cc 5a       	subi	r28, 0xAC	; 172
    2366:	df 4f       	sbci	r29, 0xFF	; 255
    2368:	0f b6       	in	r0, 0x3f	; 63
    236a:	f8 94       	cli
    236c:	de bf       	out	0x3e, r29	; 62
    236e:	0f be       	out	0x3f, r0	; 63
    2370:	cd bf       	out	0x3d, r28	; 61
    2372:	cf 91       	pop	r28
    2374:	df 91       	pop	r29
    2376:	1f 91       	pop	r17
    2378:	0f 91       	pop	r16
    237a:	08 95       	ret

0000237c <LCD_Send_Command>:

void LCD_Send_Command(u8 command) {
    237c:	0f 93       	push	r16
    237e:	1f 93       	push	r17
    2380:	df 93       	push	r29
    2382:	cf 93       	push	r28
    2384:	cd b7       	in	r28, 0x3d	; 61
    2386:	de b7       	in	r29, 0x3e	; 62
    2388:	cf 56       	subi	r28, 0x6F	; 111
    238a:	d0 40       	sbci	r29, 0x00	; 0
    238c:	0f b6       	in	r0, 0x3f	; 63
    238e:	f8 94       	cli
    2390:	de bf       	out	0x3e, r29	; 62
    2392:	0f be       	out	0x3f, r0	; 63
    2394:	cd bf       	out	0x3d, r28	; 61
    2396:	fe 01       	movw	r30, r28
    2398:	e1 59       	subi	r30, 0x91	; 145
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	80 83       	st	Z, r24
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_RS_PIN, LOW);
    239e:	83 e0       	ldi	r24, 0x03	; 3
    23a0:	64 e0       	ldi	r22, 0x04	; 4
    23a2:	40 e0       	ldi	r20, 0x00	; 0
    23a4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    23a8:	fe 01       	movw	r30, r28
    23aa:	e5 59       	subi	r30, 0x95	; 149
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	80 e0       	ldi	r24, 0x00	; 0
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	a0 e8       	ldi	r26, 0x80	; 128
    23b4:	bf e3       	ldi	r27, 0x3F	; 63
    23b6:	80 83       	st	Z, r24
    23b8:	91 83       	std	Z+1, r25	; 0x01
    23ba:	a2 83       	std	Z+2, r26	; 0x02
    23bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    23be:	8e 01       	movw	r16, r28
    23c0:	09 59       	subi	r16, 0x99	; 153
    23c2:	1f 4f       	sbci	r17, 0xFF	; 255
    23c4:	fe 01       	movw	r30, r28
    23c6:	e5 59       	subi	r30, 0x95	; 149
    23c8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ca:	60 81       	ld	r22, Z
    23cc:	71 81       	ldd	r23, Z+1	; 0x01
    23ce:	82 81       	ldd	r24, Z+2	; 0x02
    23d0:	93 81       	ldd	r25, Z+3	; 0x03
    23d2:	2b ea       	ldi	r18, 0xAB	; 171
    23d4:	3a ea       	ldi	r19, 0xAA	; 170
    23d6:	4a e2       	ldi	r20, 0x2A	; 42
    23d8:	50 e4       	ldi	r21, 0x40	; 64
    23da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23de:	dc 01       	movw	r26, r24
    23e0:	cb 01       	movw	r24, r22
    23e2:	f8 01       	movw	r30, r16
    23e4:	80 83       	st	Z, r24
    23e6:	91 83       	std	Z+1, r25	; 0x01
    23e8:	a2 83       	std	Z+2, r26	; 0x02
    23ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ec:	fe 01       	movw	r30, r28
    23ee:	e9 59       	subi	r30, 0x99	; 153
    23f0:	ff 4f       	sbci	r31, 0xFF	; 255
    23f2:	60 81       	ld	r22, Z
    23f4:	71 81       	ldd	r23, Z+1	; 0x01
    23f6:	82 81       	ldd	r24, Z+2	; 0x02
    23f8:	93 81       	ldd	r25, Z+3	; 0x03
    23fa:	20 e0       	ldi	r18, 0x00	; 0
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	40 e8       	ldi	r20, 0x80	; 128
    2400:	5f e3       	ldi	r21, 0x3F	; 63
    2402:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2406:	88 23       	and	r24, r24
    2408:	34 f4       	brge	.+12     	; 0x2416 <LCD_Send_Command+0x9a>
		__ticks = 1;
    240a:	fe 01       	movw	r30, r28
    240c:	ea 59       	subi	r30, 0x9A	; 154
    240e:	ff 4f       	sbci	r31, 0xFF	; 255
    2410:	81 e0       	ldi	r24, 0x01	; 1
    2412:	80 83       	st	Z, r24
    2414:	e0 c0       	rjmp	.+448    	; 0x25d6 <LCD_Send_Command+0x25a>
	else if (__tmp > 255)
    2416:	fe 01       	movw	r30, r28
    2418:	e9 59       	subi	r30, 0x99	; 153
    241a:	ff 4f       	sbci	r31, 0xFF	; 255
    241c:	60 81       	ld	r22, Z
    241e:	71 81       	ldd	r23, Z+1	; 0x01
    2420:	82 81       	ldd	r24, Z+2	; 0x02
    2422:	93 81       	ldd	r25, Z+3	; 0x03
    2424:	20 e0       	ldi	r18, 0x00	; 0
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	4f e7       	ldi	r20, 0x7F	; 127
    242a:	53 e4       	ldi	r21, 0x43	; 67
    242c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2430:	18 16       	cp	r1, r24
    2432:	0c f0       	brlt	.+2      	; 0x2436 <LCD_Send_Command+0xba>
    2434:	c0 c0       	rjmp	.+384    	; 0x25b6 <LCD_Send_Command+0x23a>
	{
		_delay_ms(__us / 1000.0);
    2436:	fe 01       	movw	r30, r28
    2438:	e5 59       	subi	r30, 0x95	; 149
    243a:	ff 4f       	sbci	r31, 0xFF	; 255
    243c:	60 81       	ld	r22, Z
    243e:	71 81       	ldd	r23, Z+1	; 0x01
    2440:	82 81       	ldd	r24, Z+2	; 0x02
    2442:	93 81       	ldd	r25, Z+3	; 0x03
    2444:	20 e0       	ldi	r18, 0x00	; 0
    2446:	30 e0       	ldi	r19, 0x00	; 0
    2448:	4a e7       	ldi	r20, 0x7A	; 122
    244a:	54 e4       	ldi	r21, 0x44	; 68
    244c:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2450:	dc 01       	movw	r26, r24
    2452:	cb 01       	movw	r24, r22
    2454:	fe 01       	movw	r30, r28
    2456:	ee 59       	subi	r30, 0x9E	; 158
    2458:	ff 4f       	sbci	r31, 0xFF	; 255
    245a:	80 83       	st	Z, r24
    245c:	91 83       	std	Z+1, r25	; 0x01
    245e:	a2 83       	std	Z+2, r26	; 0x02
    2460:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2462:	8e 01       	movw	r16, r28
    2464:	02 5a       	subi	r16, 0xA2	; 162
    2466:	1f 4f       	sbci	r17, 0xFF	; 255
    2468:	fe 01       	movw	r30, r28
    246a:	ee 59       	subi	r30, 0x9E	; 158
    246c:	ff 4f       	sbci	r31, 0xFF	; 255
    246e:	60 81       	ld	r22, Z
    2470:	71 81       	ldd	r23, Z+1	; 0x01
    2472:	82 81       	ldd	r24, Z+2	; 0x02
    2474:	93 81       	ldd	r25, Z+3	; 0x03
    2476:	20 e0       	ldi	r18, 0x00	; 0
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	4a ef       	ldi	r20, 0xFA	; 250
    247c:	54 e4       	ldi	r21, 0x44	; 68
    247e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	f8 01       	movw	r30, r16
    2488:	80 83       	st	Z, r24
    248a:	91 83       	std	Z+1, r25	; 0x01
    248c:	a2 83       	std	Z+2, r26	; 0x02
    248e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2490:	fe 01       	movw	r30, r28
    2492:	e2 5a       	subi	r30, 0xA2	; 162
    2494:	ff 4f       	sbci	r31, 0xFF	; 255
    2496:	60 81       	ld	r22, Z
    2498:	71 81       	ldd	r23, Z+1	; 0x01
    249a:	82 81       	ldd	r24, Z+2	; 0x02
    249c:	93 81       	ldd	r25, Z+3	; 0x03
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	5f e3       	ldi	r21, 0x3F	; 63
    24a6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    24aa:	88 23       	and	r24, r24
    24ac:	44 f4       	brge	.+16     	; 0x24be <LCD_Send_Command+0x142>
		__ticks = 1;
    24ae:	fe 01       	movw	r30, r28
    24b0:	e4 5a       	subi	r30, 0xA4	; 164
    24b2:	ff 4f       	sbci	r31, 0xFF	; 255
    24b4:	81 e0       	ldi	r24, 0x01	; 1
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	91 83       	std	Z+1, r25	; 0x01
    24ba:	80 83       	st	Z, r24
    24bc:	64 c0       	rjmp	.+200    	; 0x2586 <LCD_Send_Command+0x20a>
	else if (__tmp > 65535)
    24be:	fe 01       	movw	r30, r28
    24c0:	e2 5a       	subi	r30, 0xA2	; 162
    24c2:	ff 4f       	sbci	r31, 0xFF	; 255
    24c4:	60 81       	ld	r22, Z
    24c6:	71 81       	ldd	r23, Z+1	; 0x01
    24c8:	82 81       	ldd	r24, Z+2	; 0x02
    24ca:	93 81       	ldd	r25, Z+3	; 0x03
    24cc:	20 e0       	ldi	r18, 0x00	; 0
    24ce:	3f ef       	ldi	r19, 0xFF	; 255
    24d0:	4f e7       	ldi	r20, 0x7F	; 127
    24d2:	57 e4       	ldi	r21, 0x47	; 71
    24d4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    24d8:	18 16       	cp	r1, r24
    24da:	0c f0       	brlt	.+2      	; 0x24de <LCD_Send_Command+0x162>
    24dc:	43 c0       	rjmp	.+134    	; 0x2564 <LCD_Send_Command+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24de:	fe 01       	movw	r30, r28
    24e0:	ee 59       	subi	r30, 0x9E	; 158
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	20 e0       	ldi	r18, 0x00	; 0
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	40 e2       	ldi	r20, 0x20	; 32
    24f2:	51 e4       	ldi	r21, 0x41	; 65
    24f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	8e 01       	movw	r16, r28
    24fe:	04 5a       	subi	r16, 0xA4	; 164
    2500:	1f 4f       	sbci	r17, 0xFF	; 255
    2502:	bc 01       	movw	r22, r24
    2504:	cd 01       	movw	r24, r26
    2506:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	f8 01       	movw	r30, r16
    2510:	91 83       	std	Z+1, r25	; 0x01
    2512:	80 83       	st	Z, r24
    2514:	1f c0       	rjmp	.+62     	; 0x2554 <LCD_Send_Command+0x1d8>
    2516:	fe 01       	movw	r30, r28
    2518:	e6 5a       	subi	r30, 0xA6	; 166
    251a:	ff 4f       	sbci	r31, 0xFF	; 255
    251c:	88 ec       	ldi	r24, 0xC8	; 200
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	91 83       	std	Z+1, r25	; 0x01
    2522:	80 83       	st	Z, r24
    2524:	fe 01       	movw	r30, r28
    2526:	e6 5a       	subi	r30, 0xA6	; 166
    2528:	ff 4f       	sbci	r31, 0xFF	; 255
    252a:	80 81       	ld	r24, Z
    252c:	91 81       	ldd	r25, Z+1	; 0x01
    252e:	01 97       	sbiw	r24, 0x01	; 1
    2530:	f1 f7       	brne	.-4      	; 0x252e <LCD_Send_Command+0x1b2>
    2532:	fe 01       	movw	r30, r28
    2534:	e6 5a       	subi	r30, 0xA6	; 166
    2536:	ff 4f       	sbci	r31, 0xFF	; 255
    2538:	91 83       	std	Z+1, r25	; 0x01
    253a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    253c:	de 01       	movw	r26, r28
    253e:	a4 5a       	subi	r26, 0xA4	; 164
    2540:	bf 4f       	sbci	r27, 0xFF	; 255
    2542:	fe 01       	movw	r30, r28
    2544:	e4 5a       	subi	r30, 0xA4	; 164
    2546:	ff 4f       	sbci	r31, 0xFF	; 255
    2548:	80 81       	ld	r24, Z
    254a:	91 81       	ldd	r25, Z+1	; 0x01
    254c:	01 97       	sbiw	r24, 0x01	; 1
    254e:	11 96       	adiw	r26, 0x01	; 1
    2550:	9c 93       	st	X, r25
    2552:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2554:	fe 01       	movw	r30, r28
    2556:	e4 5a       	subi	r30, 0xA4	; 164
    2558:	ff 4f       	sbci	r31, 0xFF	; 255
    255a:	80 81       	ld	r24, Z
    255c:	91 81       	ldd	r25, Z+1	; 0x01
    255e:	00 97       	sbiw	r24, 0x00	; 0
    2560:	d1 f6       	brne	.-76     	; 0x2516 <LCD_Send_Command+0x19a>
    2562:	4b c0       	rjmp	.+150    	; 0x25fa <LCD_Send_Command+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2564:	8e 01       	movw	r16, r28
    2566:	04 5a       	subi	r16, 0xA4	; 164
    2568:	1f 4f       	sbci	r17, 0xFF	; 255
    256a:	fe 01       	movw	r30, r28
    256c:	e2 5a       	subi	r30, 0xA2	; 162
    256e:	ff 4f       	sbci	r31, 0xFF	; 255
    2570:	60 81       	ld	r22, Z
    2572:	71 81       	ldd	r23, Z+1	; 0x01
    2574:	82 81       	ldd	r24, Z+2	; 0x02
    2576:	93 81       	ldd	r25, Z+3	; 0x03
    2578:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    257c:	dc 01       	movw	r26, r24
    257e:	cb 01       	movw	r24, r22
    2580:	f8 01       	movw	r30, r16
    2582:	91 83       	std	Z+1, r25	; 0x01
    2584:	80 83       	st	Z, r24
    2586:	de 01       	movw	r26, r28
    2588:	a8 5a       	subi	r26, 0xA8	; 168
    258a:	bf 4f       	sbci	r27, 0xFF	; 255
    258c:	fe 01       	movw	r30, r28
    258e:	e4 5a       	subi	r30, 0xA4	; 164
    2590:	ff 4f       	sbci	r31, 0xFF	; 255
    2592:	80 81       	ld	r24, Z
    2594:	91 81       	ldd	r25, Z+1	; 0x01
    2596:	11 96       	adiw	r26, 0x01	; 1
    2598:	9c 93       	st	X, r25
    259a:	8e 93       	st	-X, r24
    259c:	fe 01       	movw	r30, r28
    259e:	e8 5a       	subi	r30, 0xA8	; 168
    25a0:	ff 4f       	sbci	r31, 0xFF	; 255
    25a2:	80 81       	ld	r24, Z
    25a4:	91 81       	ldd	r25, Z+1	; 0x01
    25a6:	01 97       	sbiw	r24, 0x01	; 1
    25a8:	f1 f7       	brne	.-4      	; 0x25a6 <LCD_Send_Command+0x22a>
    25aa:	fe 01       	movw	r30, r28
    25ac:	e8 5a       	subi	r30, 0xA8	; 168
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	91 83       	std	Z+1, r25	; 0x01
    25b2:	80 83       	st	Z, r24
    25b4:	22 c0       	rjmp	.+68     	; 0x25fa <LCD_Send_Command+0x27e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    25b6:	8e 01       	movw	r16, r28
    25b8:	0a 59       	subi	r16, 0x9A	; 154
    25ba:	1f 4f       	sbci	r17, 0xFF	; 255
    25bc:	fe 01       	movw	r30, r28
    25be:	e9 59       	subi	r30, 0x99	; 153
    25c0:	ff 4f       	sbci	r31, 0xFF	; 255
    25c2:	60 81       	ld	r22, Z
    25c4:	71 81       	ldd	r23, Z+1	; 0x01
    25c6:	82 81       	ldd	r24, Z+2	; 0x02
    25c8:	93 81       	ldd	r25, Z+3	; 0x03
    25ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	f8 01       	movw	r30, r16
    25d4:	80 83       	st	Z, r24
    25d6:	de 01       	movw	r26, r28
    25d8:	a9 5a       	subi	r26, 0xA9	; 169
    25da:	bf 4f       	sbci	r27, 0xFF	; 255
    25dc:	fe 01       	movw	r30, r28
    25de:	ea 59       	subi	r30, 0x9A	; 154
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	80 81       	ld	r24, Z
    25e4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    25e6:	fe 01       	movw	r30, r28
    25e8:	e9 5a       	subi	r30, 0xA9	; 169
    25ea:	ff 4f       	sbci	r31, 0xFF	; 255
    25ec:	80 81       	ld	r24, Z
    25ee:	8a 95       	dec	r24
    25f0:	f1 f7       	brne	.-4      	; 0x25ee <LCD_Send_Command+0x272>
    25f2:	fe 01       	movw	r30, r28
    25f4:	e9 5a       	subi	r30, 0xA9	; 169
    25f6:	ff 4f       	sbci	r31, 0xFF	; 255
    25f8:	80 83       	st	Z, r24
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    25fa:	83 e0       	ldi	r24, 0x03	; 3
    25fc:	65 e0       	ldi	r22, 0x05	; 5
    25fe:	41 e0       	ldi	r20, 0x01	; 1
    2600:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    2604:	fe 01       	movw	r30, r28
    2606:	ed 5a       	subi	r30, 0xAD	; 173
    2608:	ff 4f       	sbci	r31, 0xFF	; 255
    260a:	80 e0       	ldi	r24, 0x00	; 0
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	a0 e8       	ldi	r26, 0x80	; 128
    2610:	bf e3       	ldi	r27, 0x3F	; 63
    2612:	80 83       	st	Z, r24
    2614:	91 83       	std	Z+1, r25	; 0x01
    2616:	a2 83       	std	Z+2, r26	; 0x02
    2618:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    261a:	8e 01       	movw	r16, r28
    261c:	01 5b       	subi	r16, 0xB1	; 177
    261e:	1f 4f       	sbci	r17, 0xFF	; 255
    2620:	fe 01       	movw	r30, r28
    2622:	ed 5a       	subi	r30, 0xAD	; 173
    2624:	ff 4f       	sbci	r31, 0xFF	; 255
    2626:	60 81       	ld	r22, Z
    2628:	71 81       	ldd	r23, Z+1	; 0x01
    262a:	82 81       	ldd	r24, Z+2	; 0x02
    262c:	93 81       	ldd	r25, Z+3	; 0x03
    262e:	2b ea       	ldi	r18, 0xAB	; 171
    2630:	3a ea       	ldi	r19, 0xAA	; 170
    2632:	4a e2       	ldi	r20, 0x2A	; 42
    2634:	50 e4       	ldi	r21, 0x40	; 64
    2636:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    263a:	dc 01       	movw	r26, r24
    263c:	cb 01       	movw	r24, r22
    263e:	f8 01       	movw	r30, r16
    2640:	80 83       	st	Z, r24
    2642:	91 83       	std	Z+1, r25	; 0x01
    2644:	a2 83       	std	Z+2, r26	; 0x02
    2646:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2648:	fe 01       	movw	r30, r28
    264a:	e1 5b       	subi	r30, 0xB1	; 177
    264c:	ff 4f       	sbci	r31, 0xFF	; 255
    264e:	60 81       	ld	r22, Z
    2650:	71 81       	ldd	r23, Z+1	; 0x01
    2652:	82 81       	ldd	r24, Z+2	; 0x02
    2654:	93 81       	ldd	r25, Z+3	; 0x03
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	30 e0       	ldi	r19, 0x00	; 0
    265a:	40 e8       	ldi	r20, 0x80	; 128
    265c:	5f e3       	ldi	r21, 0x3F	; 63
    265e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2662:	88 23       	and	r24, r24
    2664:	34 f4       	brge	.+12     	; 0x2672 <LCD_Send_Command+0x2f6>
		__ticks = 1;
    2666:	fe 01       	movw	r30, r28
    2668:	e2 5b       	subi	r30, 0xB2	; 178
    266a:	ff 4f       	sbci	r31, 0xFF	; 255
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	80 83       	st	Z, r24
    2670:	e0 c0       	rjmp	.+448    	; 0x2832 <LCD_Send_Command+0x4b6>
	else if (__tmp > 255)
    2672:	fe 01       	movw	r30, r28
    2674:	e1 5b       	subi	r30, 0xB1	; 177
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	82 81       	ldd	r24, Z+2	; 0x02
    267e:	93 81       	ldd	r25, Z+3	; 0x03
    2680:	20 e0       	ldi	r18, 0x00	; 0
    2682:	30 e0       	ldi	r19, 0x00	; 0
    2684:	4f e7       	ldi	r20, 0x7F	; 127
    2686:	53 e4       	ldi	r21, 0x43	; 67
    2688:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    268c:	18 16       	cp	r1, r24
    268e:	0c f0       	brlt	.+2      	; 0x2692 <LCD_Send_Command+0x316>
    2690:	c0 c0       	rjmp	.+384    	; 0x2812 <LCD_Send_Command+0x496>
	{
		_delay_ms(__us / 1000.0);
    2692:	fe 01       	movw	r30, r28
    2694:	ed 5a       	subi	r30, 0xAD	; 173
    2696:	ff 4f       	sbci	r31, 0xFF	; 255
    2698:	60 81       	ld	r22, Z
    269a:	71 81       	ldd	r23, Z+1	; 0x01
    269c:	82 81       	ldd	r24, Z+2	; 0x02
    269e:	93 81       	ldd	r25, Z+3	; 0x03
    26a0:	20 e0       	ldi	r18, 0x00	; 0
    26a2:	30 e0       	ldi	r19, 0x00	; 0
    26a4:	4a e7       	ldi	r20, 0x7A	; 122
    26a6:	54 e4       	ldi	r21, 0x44	; 68
    26a8:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    26ac:	dc 01       	movw	r26, r24
    26ae:	cb 01       	movw	r24, r22
    26b0:	fe 01       	movw	r30, r28
    26b2:	e6 5b       	subi	r30, 0xB6	; 182
    26b4:	ff 4f       	sbci	r31, 0xFF	; 255
    26b6:	80 83       	st	Z, r24
    26b8:	91 83       	std	Z+1, r25	; 0x01
    26ba:	a2 83       	std	Z+2, r26	; 0x02
    26bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26be:	8e 01       	movw	r16, r28
    26c0:	0a 5b       	subi	r16, 0xBA	; 186
    26c2:	1f 4f       	sbci	r17, 0xFF	; 255
    26c4:	fe 01       	movw	r30, r28
    26c6:	e6 5b       	subi	r30, 0xB6	; 182
    26c8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ca:	60 81       	ld	r22, Z
    26cc:	71 81       	ldd	r23, Z+1	; 0x01
    26ce:	82 81       	ldd	r24, Z+2	; 0x02
    26d0:	93 81       	ldd	r25, Z+3	; 0x03
    26d2:	20 e0       	ldi	r18, 0x00	; 0
    26d4:	30 e0       	ldi	r19, 0x00	; 0
    26d6:	4a ef       	ldi	r20, 0xFA	; 250
    26d8:	54 e4       	ldi	r21, 0x44	; 68
    26da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26de:	dc 01       	movw	r26, r24
    26e0:	cb 01       	movw	r24, r22
    26e2:	f8 01       	movw	r30, r16
    26e4:	80 83       	st	Z, r24
    26e6:	91 83       	std	Z+1, r25	; 0x01
    26e8:	a2 83       	std	Z+2, r26	; 0x02
    26ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26ec:	fe 01       	movw	r30, r28
    26ee:	ea 5b       	subi	r30, 0xBA	; 186
    26f0:	ff 4f       	sbci	r31, 0xFF	; 255
    26f2:	60 81       	ld	r22, Z
    26f4:	71 81       	ldd	r23, Z+1	; 0x01
    26f6:	82 81       	ldd	r24, Z+2	; 0x02
    26f8:	93 81       	ldd	r25, Z+3	; 0x03
    26fa:	20 e0       	ldi	r18, 0x00	; 0
    26fc:	30 e0       	ldi	r19, 0x00	; 0
    26fe:	40 e8       	ldi	r20, 0x80	; 128
    2700:	5f e3       	ldi	r21, 0x3F	; 63
    2702:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2706:	88 23       	and	r24, r24
    2708:	44 f4       	brge	.+16     	; 0x271a <LCD_Send_Command+0x39e>
		__ticks = 1;
    270a:	fe 01       	movw	r30, r28
    270c:	ec 5b       	subi	r30, 0xBC	; 188
    270e:	ff 4f       	sbci	r31, 0xFF	; 255
    2710:	81 e0       	ldi	r24, 0x01	; 1
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	91 83       	std	Z+1, r25	; 0x01
    2716:	80 83       	st	Z, r24
    2718:	64 c0       	rjmp	.+200    	; 0x27e2 <LCD_Send_Command+0x466>
	else if (__tmp > 65535)
    271a:	fe 01       	movw	r30, r28
    271c:	ea 5b       	subi	r30, 0xBA	; 186
    271e:	ff 4f       	sbci	r31, 0xFF	; 255
    2720:	60 81       	ld	r22, Z
    2722:	71 81       	ldd	r23, Z+1	; 0x01
    2724:	82 81       	ldd	r24, Z+2	; 0x02
    2726:	93 81       	ldd	r25, Z+3	; 0x03
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	3f ef       	ldi	r19, 0xFF	; 255
    272c:	4f e7       	ldi	r20, 0x7F	; 127
    272e:	57 e4       	ldi	r21, 0x47	; 71
    2730:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2734:	18 16       	cp	r1, r24
    2736:	0c f0       	brlt	.+2      	; 0x273a <LCD_Send_Command+0x3be>
    2738:	43 c0       	rjmp	.+134    	; 0x27c0 <LCD_Send_Command+0x444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    273a:	fe 01       	movw	r30, r28
    273c:	e6 5b       	subi	r30, 0xB6	; 182
    273e:	ff 4f       	sbci	r31, 0xFF	; 255
    2740:	60 81       	ld	r22, Z
    2742:	71 81       	ldd	r23, Z+1	; 0x01
    2744:	82 81       	ldd	r24, Z+2	; 0x02
    2746:	93 81       	ldd	r25, Z+3	; 0x03
    2748:	20 e0       	ldi	r18, 0x00	; 0
    274a:	30 e0       	ldi	r19, 0x00	; 0
    274c:	40 e2       	ldi	r20, 0x20	; 32
    274e:	51 e4       	ldi	r21, 0x41	; 65
    2750:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2754:	dc 01       	movw	r26, r24
    2756:	cb 01       	movw	r24, r22
    2758:	8e 01       	movw	r16, r28
    275a:	0c 5b       	subi	r16, 0xBC	; 188
    275c:	1f 4f       	sbci	r17, 0xFF	; 255
    275e:	bc 01       	movw	r22, r24
    2760:	cd 01       	movw	r24, r26
    2762:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2766:	dc 01       	movw	r26, r24
    2768:	cb 01       	movw	r24, r22
    276a:	f8 01       	movw	r30, r16
    276c:	91 83       	std	Z+1, r25	; 0x01
    276e:	80 83       	st	Z, r24
    2770:	1f c0       	rjmp	.+62     	; 0x27b0 <LCD_Send_Command+0x434>
    2772:	fe 01       	movw	r30, r28
    2774:	ee 5b       	subi	r30, 0xBE	; 190
    2776:	ff 4f       	sbci	r31, 0xFF	; 255
    2778:	88 ec       	ldi	r24, 0xC8	; 200
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	91 83       	std	Z+1, r25	; 0x01
    277e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2780:	fe 01       	movw	r30, r28
    2782:	ee 5b       	subi	r30, 0xBE	; 190
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	80 81       	ld	r24, Z
    2788:	91 81       	ldd	r25, Z+1	; 0x01
    278a:	01 97       	sbiw	r24, 0x01	; 1
    278c:	f1 f7       	brne	.-4      	; 0x278a <LCD_Send_Command+0x40e>
    278e:	fe 01       	movw	r30, r28
    2790:	ee 5b       	subi	r30, 0xBE	; 190
    2792:	ff 4f       	sbci	r31, 0xFF	; 255
    2794:	91 83       	std	Z+1, r25	; 0x01
    2796:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2798:	de 01       	movw	r26, r28
    279a:	ac 5b       	subi	r26, 0xBC	; 188
    279c:	bf 4f       	sbci	r27, 0xFF	; 255
    279e:	fe 01       	movw	r30, r28
    27a0:	ec 5b       	subi	r30, 0xBC	; 188
    27a2:	ff 4f       	sbci	r31, 0xFF	; 255
    27a4:	80 81       	ld	r24, Z
    27a6:	91 81       	ldd	r25, Z+1	; 0x01
    27a8:	01 97       	sbiw	r24, 0x01	; 1
    27aa:	11 96       	adiw	r26, 0x01	; 1
    27ac:	9c 93       	st	X, r25
    27ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27b0:	fe 01       	movw	r30, r28
    27b2:	ec 5b       	subi	r30, 0xBC	; 188
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	80 81       	ld	r24, Z
    27b8:	91 81       	ldd	r25, Z+1	; 0x01
    27ba:	00 97       	sbiw	r24, 0x00	; 0
    27bc:	d1 f6       	brne	.-76     	; 0x2772 <LCD_Send_Command+0x3f6>
    27be:	42 c0       	rjmp	.+132    	; 0x2844 <LCD_Send_Command+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27c0:	8e 01       	movw	r16, r28
    27c2:	0c 5b       	subi	r16, 0xBC	; 188
    27c4:	1f 4f       	sbci	r17, 0xFF	; 255
    27c6:	fe 01       	movw	r30, r28
    27c8:	ea 5b       	subi	r30, 0xBA	; 186
    27ca:	ff 4f       	sbci	r31, 0xFF	; 255
    27cc:	60 81       	ld	r22, Z
    27ce:	71 81       	ldd	r23, Z+1	; 0x01
    27d0:	82 81       	ldd	r24, Z+2	; 0x02
    27d2:	93 81       	ldd	r25, Z+3	; 0x03
    27d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27d8:	dc 01       	movw	r26, r24
    27da:	cb 01       	movw	r24, r22
    27dc:	f8 01       	movw	r30, r16
    27de:	91 83       	std	Z+1, r25	; 0x01
    27e0:	80 83       	st	Z, r24
    27e2:	de 01       	movw	r26, r28
    27e4:	a0 5c       	subi	r26, 0xC0	; 192
    27e6:	bf 4f       	sbci	r27, 0xFF	; 255
    27e8:	fe 01       	movw	r30, r28
    27ea:	ec 5b       	subi	r30, 0xBC	; 188
    27ec:	ff 4f       	sbci	r31, 0xFF	; 255
    27ee:	80 81       	ld	r24, Z
    27f0:	91 81       	ldd	r25, Z+1	; 0x01
    27f2:	11 96       	adiw	r26, 0x01	; 1
    27f4:	9c 93       	st	X, r25
    27f6:	8e 93       	st	-X, r24
    27f8:	fe 01       	movw	r30, r28
    27fa:	e0 5c       	subi	r30, 0xC0	; 192
    27fc:	ff 4f       	sbci	r31, 0xFF	; 255
    27fe:	80 81       	ld	r24, Z
    2800:	91 81       	ldd	r25, Z+1	; 0x01
    2802:	01 97       	sbiw	r24, 0x01	; 1
    2804:	f1 f7       	brne	.-4      	; 0x2802 <LCD_Send_Command+0x486>
    2806:	fe 01       	movw	r30, r28
    2808:	e0 5c       	subi	r30, 0xC0	; 192
    280a:	ff 4f       	sbci	r31, 0xFF	; 255
    280c:	91 83       	std	Z+1, r25	; 0x01
    280e:	80 83       	st	Z, r24
    2810:	19 c0       	rjmp	.+50     	; 0x2844 <LCD_Send_Command+0x4c8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2812:	8e 01       	movw	r16, r28
    2814:	02 5b       	subi	r16, 0xB2	; 178
    2816:	1f 4f       	sbci	r17, 0xFF	; 255
    2818:	fe 01       	movw	r30, r28
    281a:	e1 5b       	subi	r30, 0xB1	; 177
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	60 81       	ld	r22, Z
    2820:	71 81       	ldd	r23, Z+1	; 0x01
    2822:	82 81       	ldd	r24, Z+2	; 0x02
    2824:	93 81       	ldd	r25, Z+3	; 0x03
    2826:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	f8 01       	movw	r30, r16
    2830:	80 83       	st	Z, r24
    2832:	fe 01       	movw	r30, r28
    2834:	e2 5b       	subi	r30, 0xB2	; 178
    2836:	ff 4f       	sbci	r31, 0xFF	; 255
    2838:	80 81       	ld	r24, Z
    283a:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    283c:	8f ad       	ldd	r24, Y+63	; 0x3f
    283e:	8a 95       	dec	r24
    2840:	f1 f7       	brne	.-4      	; 0x283e <LCD_Send_Command+0x4c2>
    2842:	8f af       	std	Y+63, r24	; 0x3f
	_delay_us(1);
	DIO_SetGroupValue(LCD_GROUP_DATA, command);
    2844:	fe 01       	movw	r30, r28
    2846:	e1 59       	subi	r30, 0x91	; 145
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	81 e0       	ldi	r24, 0x01	; 1
    284c:	60 81       	ld	r22, Z
    284e:	0e 94 0b 09 	call	0x1216	; 0x1216 <DIO_SetGroupValue>
    2852:	80 e0       	ldi	r24, 0x00	; 0
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	a0 e8       	ldi	r26, 0x80	; 128
    2858:	bf e3       	ldi	r27, 0x3F	; 63
    285a:	8b af       	std	Y+59, r24	; 0x3b
    285c:	9c af       	std	Y+60, r25	; 0x3c
    285e:	ad af       	std	Y+61, r26	; 0x3d
    2860:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2862:	6b ad       	ldd	r22, Y+59	; 0x3b
    2864:	7c ad       	ldd	r23, Y+60	; 0x3c
    2866:	8d ad       	ldd	r24, Y+61	; 0x3d
    2868:	9e ad       	ldd	r25, Y+62	; 0x3e
    286a:	2b ea       	ldi	r18, 0xAB	; 171
    286c:	3a ea       	ldi	r19, 0xAA	; 170
    286e:	4a e2       	ldi	r20, 0x2A	; 42
    2870:	50 e4       	ldi	r21, 0x40	; 64
    2872:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2876:	dc 01       	movw	r26, r24
    2878:	cb 01       	movw	r24, r22
    287a:	8f ab       	std	Y+55, r24	; 0x37
    287c:	98 af       	std	Y+56, r25	; 0x38
    287e:	a9 af       	std	Y+57, r26	; 0x39
    2880:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    2882:	6f a9       	ldd	r22, Y+55	; 0x37
    2884:	78 ad       	ldd	r23, Y+56	; 0x38
    2886:	89 ad       	ldd	r24, Y+57	; 0x39
    2888:	9a ad       	ldd	r25, Y+58	; 0x3a
    288a:	20 e0       	ldi	r18, 0x00	; 0
    288c:	30 e0       	ldi	r19, 0x00	; 0
    288e:	40 e8       	ldi	r20, 0x80	; 128
    2890:	5f e3       	ldi	r21, 0x3F	; 63
    2892:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2896:	88 23       	and	r24, r24
    2898:	1c f4       	brge	.+6      	; 0x28a0 <LCD_Send_Command+0x524>
		__ticks = 1;
    289a:	81 e0       	ldi	r24, 0x01	; 1
    289c:	8e ab       	std	Y+54, r24	; 0x36
    289e:	91 c0       	rjmp	.+290    	; 0x29c2 <LCD_Send_Command+0x646>
	else if (__tmp > 255)
    28a0:	6f a9       	ldd	r22, Y+55	; 0x37
    28a2:	78 ad       	ldd	r23, Y+56	; 0x38
    28a4:	89 ad       	ldd	r24, Y+57	; 0x39
    28a6:	9a ad       	ldd	r25, Y+58	; 0x3a
    28a8:	20 e0       	ldi	r18, 0x00	; 0
    28aa:	30 e0       	ldi	r19, 0x00	; 0
    28ac:	4f e7       	ldi	r20, 0x7F	; 127
    28ae:	53 e4       	ldi	r21, 0x43	; 67
    28b0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    28b4:	18 16       	cp	r1, r24
    28b6:	0c f0       	brlt	.+2      	; 0x28ba <LCD_Send_Command+0x53e>
    28b8:	7b c0       	rjmp	.+246    	; 0x29b0 <LCD_Send_Command+0x634>
	{
		_delay_ms(__us / 1000.0);
    28ba:	6b ad       	ldd	r22, Y+59	; 0x3b
    28bc:	7c ad       	ldd	r23, Y+60	; 0x3c
    28be:	8d ad       	ldd	r24, Y+61	; 0x3d
    28c0:	9e ad       	ldd	r25, Y+62	; 0x3e
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	4a e7       	ldi	r20, 0x7A	; 122
    28c8:	54 e4       	ldi	r21, 0x44	; 68
    28ca:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    28ce:	dc 01       	movw	r26, r24
    28d0:	cb 01       	movw	r24, r22
    28d2:	8a ab       	std	Y+50, r24	; 0x32
    28d4:	9b ab       	std	Y+51, r25	; 0x33
    28d6:	ac ab       	std	Y+52, r26	; 0x34
    28d8:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28da:	6a a9       	ldd	r22, Y+50	; 0x32
    28dc:	7b a9       	ldd	r23, Y+51	; 0x33
    28de:	8c a9       	ldd	r24, Y+52	; 0x34
    28e0:	9d a9       	ldd	r25, Y+53	; 0x35
    28e2:	20 e0       	ldi	r18, 0x00	; 0
    28e4:	30 e0       	ldi	r19, 0x00	; 0
    28e6:	4a ef       	ldi	r20, 0xFA	; 250
    28e8:	54 e4       	ldi	r21, 0x44	; 68
    28ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28ee:	dc 01       	movw	r26, r24
    28f0:	cb 01       	movw	r24, r22
    28f2:	8e a7       	std	Y+46, r24	; 0x2e
    28f4:	9f a7       	std	Y+47, r25	; 0x2f
    28f6:	a8 ab       	std	Y+48, r26	; 0x30
    28f8:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    28fa:	6e a5       	ldd	r22, Y+46	; 0x2e
    28fc:	7f a5       	ldd	r23, Y+47	; 0x2f
    28fe:	88 a9       	ldd	r24, Y+48	; 0x30
    2900:	99 a9       	ldd	r25, Y+49	; 0x31
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e8       	ldi	r20, 0x80	; 128
    2908:	5f e3       	ldi	r21, 0x3F	; 63
    290a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    290e:	88 23       	and	r24, r24
    2910:	2c f4       	brge	.+10     	; 0x291c <LCD_Send_Command+0x5a0>
		__ticks = 1;
    2912:	81 e0       	ldi	r24, 0x01	; 1
    2914:	90 e0       	ldi	r25, 0x00	; 0
    2916:	9d a7       	std	Y+45, r25	; 0x2d
    2918:	8c a7       	std	Y+44, r24	; 0x2c
    291a:	3f c0       	rjmp	.+126    	; 0x299a <LCD_Send_Command+0x61e>
	else if (__tmp > 65535)
    291c:	6e a5       	ldd	r22, Y+46	; 0x2e
    291e:	7f a5       	ldd	r23, Y+47	; 0x2f
    2920:	88 a9       	ldd	r24, Y+48	; 0x30
    2922:	99 a9       	ldd	r25, Y+49	; 0x31
    2924:	20 e0       	ldi	r18, 0x00	; 0
    2926:	3f ef       	ldi	r19, 0xFF	; 255
    2928:	4f e7       	ldi	r20, 0x7F	; 127
    292a:	57 e4       	ldi	r21, 0x47	; 71
    292c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2930:	18 16       	cp	r1, r24
    2932:	4c f5       	brge	.+82     	; 0x2986 <LCD_Send_Command+0x60a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2934:	6a a9       	ldd	r22, Y+50	; 0x32
    2936:	7b a9       	ldd	r23, Y+51	; 0x33
    2938:	8c a9       	ldd	r24, Y+52	; 0x34
    293a:	9d a9       	ldd	r25, Y+53	; 0x35
    293c:	20 e0       	ldi	r18, 0x00	; 0
    293e:	30 e0       	ldi	r19, 0x00	; 0
    2940:	40 e2       	ldi	r20, 0x20	; 32
    2942:	51 e4       	ldi	r21, 0x41	; 65
    2944:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2948:	dc 01       	movw	r26, r24
    294a:	cb 01       	movw	r24, r22
    294c:	bc 01       	movw	r22, r24
    294e:	cd 01       	movw	r24, r26
    2950:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2954:	dc 01       	movw	r26, r24
    2956:	cb 01       	movw	r24, r22
    2958:	9d a7       	std	Y+45, r25	; 0x2d
    295a:	8c a7       	std	Y+44, r24	; 0x2c
    295c:	0f c0       	rjmp	.+30     	; 0x297c <LCD_Send_Command+0x600>
    295e:	88 ec       	ldi	r24, 0xC8	; 200
    2960:	90 e0       	ldi	r25, 0x00	; 0
    2962:	9b a7       	std	Y+43, r25	; 0x2b
    2964:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2966:	8a a5       	ldd	r24, Y+42	; 0x2a
    2968:	9b a5       	ldd	r25, Y+43	; 0x2b
    296a:	01 97       	sbiw	r24, 0x01	; 1
    296c:	f1 f7       	brne	.-4      	; 0x296a <LCD_Send_Command+0x5ee>
    296e:	9b a7       	std	Y+43, r25	; 0x2b
    2970:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2972:	8c a5       	ldd	r24, Y+44	; 0x2c
    2974:	9d a5       	ldd	r25, Y+45	; 0x2d
    2976:	01 97       	sbiw	r24, 0x01	; 1
    2978:	9d a7       	std	Y+45, r25	; 0x2d
    297a:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    297c:	8c a5       	ldd	r24, Y+44	; 0x2c
    297e:	9d a5       	ldd	r25, Y+45	; 0x2d
    2980:	00 97       	sbiw	r24, 0x00	; 0
    2982:	69 f7       	brne	.-38     	; 0x295e <LCD_Send_Command+0x5e2>
    2984:	24 c0       	rjmp	.+72     	; 0x29ce <LCD_Send_Command+0x652>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2986:	6e a5       	ldd	r22, Y+46	; 0x2e
    2988:	7f a5       	ldd	r23, Y+47	; 0x2f
    298a:	88 a9       	ldd	r24, Y+48	; 0x30
    298c:	99 a9       	ldd	r25, Y+49	; 0x31
    298e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2992:	dc 01       	movw	r26, r24
    2994:	cb 01       	movw	r24, r22
    2996:	9d a7       	std	Y+45, r25	; 0x2d
    2998:	8c a7       	std	Y+44, r24	; 0x2c
    299a:	8c a5       	ldd	r24, Y+44	; 0x2c
    299c:	9d a5       	ldd	r25, Y+45	; 0x2d
    299e:	99 a7       	std	Y+41, r25	; 0x29
    29a0:	88 a7       	std	Y+40, r24	; 0x28
    29a2:	88 a5       	ldd	r24, Y+40	; 0x28
    29a4:	99 a5       	ldd	r25, Y+41	; 0x29
    29a6:	01 97       	sbiw	r24, 0x01	; 1
    29a8:	f1 f7       	brne	.-4      	; 0x29a6 <LCD_Send_Command+0x62a>
    29aa:	99 a7       	std	Y+41, r25	; 0x29
    29ac:	88 a7       	std	Y+40, r24	; 0x28
    29ae:	0f c0       	rjmp	.+30     	; 0x29ce <LCD_Send_Command+0x652>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29b0:	6f a9       	ldd	r22, Y+55	; 0x37
    29b2:	78 ad       	ldd	r23, Y+56	; 0x38
    29b4:	89 ad       	ldd	r24, Y+57	; 0x39
    29b6:	9a ad       	ldd	r25, Y+58	; 0x3a
    29b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29bc:	dc 01       	movw	r26, r24
    29be:	cb 01       	movw	r24, r22
    29c0:	8e ab       	std	Y+54, r24	; 0x36
    29c2:	8e a9       	ldd	r24, Y+54	; 0x36
    29c4:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    29c6:	8f a1       	ldd	r24, Y+39	; 0x27
    29c8:	8a 95       	dec	r24
    29ca:	f1 f7       	brne	.-4      	; 0x29c8 <LCD_Send_Command+0x64c>
    29cc:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, LOW);
    29ce:	83 e0       	ldi	r24, 0x03	; 3
    29d0:	65 e0       	ldi	r22, 0x05	; 5
    29d2:	40 e0       	ldi	r20, 0x00	; 0
    29d4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    29d8:	80 e0       	ldi	r24, 0x00	; 0
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	a0 ea       	ldi	r26, 0xA0	; 160
    29de:	b0 e4       	ldi	r27, 0x40	; 64
    29e0:	8b a3       	std	Y+35, r24	; 0x23
    29e2:	9c a3       	std	Y+36, r25	; 0x24
    29e4:	ad a3       	std	Y+37, r26	; 0x25
    29e6:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    29e8:	6b a1       	ldd	r22, Y+35	; 0x23
    29ea:	7c a1       	ldd	r23, Y+36	; 0x24
    29ec:	8d a1       	ldd	r24, Y+37	; 0x25
    29ee:	9e a1       	ldd	r25, Y+38	; 0x26
    29f0:	2b ea       	ldi	r18, 0xAB	; 171
    29f2:	3a ea       	ldi	r19, 0xAA	; 170
    29f4:	4a e2       	ldi	r20, 0x2A	; 42
    29f6:	50 e4       	ldi	r21, 0x40	; 64
    29f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29fc:	dc 01       	movw	r26, r24
    29fe:	cb 01       	movw	r24, r22
    2a00:	8f 8f       	std	Y+31, r24	; 0x1f
    2a02:	98 a3       	std	Y+32, r25	; 0x20
    2a04:	a9 a3       	std	Y+33, r26	; 0x21
    2a06:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    2a08:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2a0a:	78 a1       	ldd	r23, Y+32	; 0x20
    2a0c:	89 a1       	ldd	r24, Y+33	; 0x21
    2a0e:	9a a1       	ldd	r25, Y+34	; 0x22
    2a10:	20 e0       	ldi	r18, 0x00	; 0
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	40 e8       	ldi	r20, 0x80	; 128
    2a16:	5f e3       	ldi	r21, 0x3F	; 63
    2a18:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2a1c:	88 23       	and	r24, r24
    2a1e:	1c f4       	brge	.+6      	; 0x2a26 <LCD_Send_Command+0x6aa>
		__ticks = 1;
    2a20:	81 e0       	ldi	r24, 0x01	; 1
    2a22:	8e 8f       	std	Y+30, r24	; 0x1e
    2a24:	91 c0       	rjmp	.+290    	; 0x2b48 <LCD_Send_Command+0x7cc>
	else if (__tmp > 255)
    2a26:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2a28:	78 a1       	ldd	r23, Y+32	; 0x20
    2a2a:	89 a1       	ldd	r24, Y+33	; 0x21
    2a2c:	9a a1       	ldd	r25, Y+34	; 0x22
    2a2e:	20 e0       	ldi	r18, 0x00	; 0
    2a30:	30 e0       	ldi	r19, 0x00	; 0
    2a32:	4f e7       	ldi	r20, 0x7F	; 127
    2a34:	53 e4       	ldi	r21, 0x43	; 67
    2a36:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2a3a:	18 16       	cp	r1, r24
    2a3c:	0c f0       	brlt	.+2      	; 0x2a40 <LCD_Send_Command+0x6c4>
    2a3e:	7b c0       	rjmp	.+246    	; 0x2b36 <LCD_Send_Command+0x7ba>
	{
		_delay_ms(__us / 1000.0);
    2a40:	6b a1       	ldd	r22, Y+35	; 0x23
    2a42:	7c a1       	ldd	r23, Y+36	; 0x24
    2a44:	8d a1       	ldd	r24, Y+37	; 0x25
    2a46:	9e a1       	ldd	r25, Y+38	; 0x26
    2a48:	20 e0       	ldi	r18, 0x00	; 0
    2a4a:	30 e0       	ldi	r19, 0x00	; 0
    2a4c:	4a e7       	ldi	r20, 0x7A	; 122
    2a4e:	54 e4       	ldi	r21, 0x44	; 68
    2a50:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2a54:	dc 01       	movw	r26, r24
    2a56:	cb 01       	movw	r24, r22
    2a58:	8a 8f       	std	Y+26, r24	; 0x1a
    2a5a:	9b 8f       	std	Y+27, r25	; 0x1b
    2a5c:	ac 8f       	std	Y+28, r26	; 0x1c
    2a5e:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a60:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2a62:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2a64:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a66:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a68:	20 e0       	ldi	r18, 0x00	; 0
    2a6a:	30 e0       	ldi	r19, 0x00	; 0
    2a6c:	4a ef       	ldi	r20, 0xFA	; 250
    2a6e:	54 e4       	ldi	r21, 0x44	; 68
    2a70:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a74:	dc 01       	movw	r26, r24
    2a76:	cb 01       	movw	r24, r22
    2a78:	8e 8b       	std	Y+22, r24	; 0x16
    2a7a:	9f 8b       	std	Y+23, r25	; 0x17
    2a7c:	a8 8f       	std	Y+24, r26	; 0x18
    2a7e:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    2a80:	6e 89       	ldd	r22, Y+22	; 0x16
    2a82:	7f 89       	ldd	r23, Y+23	; 0x17
    2a84:	88 8d       	ldd	r24, Y+24	; 0x18
    2a86:	99 8d       	ldd	r25, Y+25	; 0x19
    2a88:	20 e0       	ldi	r18, 0x00	; 0
    2a8a:	30 e0       	ldi	r19, 0x00	; 0
    2a8c:	40 e8       	ldi	r20, 0x80	; 128
    2a8e:	5f e3       	ldi	r21, 0x3F	; 63
    2a90:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2a94:	88 23       	and	r24, r24
    2a96:	2c f4       	brge	.+10     	; 0x2aa2 <LCD_Send_Command+0x726>
		__ticks = 1;
    2a98:	81 e0       	ldi	r24, 0x01	; 1
    2a9a:	90 e0       	ldi	r25, 0x00	; 0
    2a9c:	9d 8b       	std	Y+21, r25	; 0x15
    2a9e:	8c 8b       	std	Y+20, r24	; 0x14
    2aa0:	3f c0       	rjmp	.+126    	; 0x2b20 <LCD_Send_Command+0x7a4>
	else if (__tmp > 65535)
    2aa2:	6e 89       	ldd	r22, Y+22	; 0x16
    2aa4:	7f 89       	ldd	r23, Y+23	; 0x17
    2aa6:	88 8d       	ldd	r24, Y+24	; 0x18
    2aa8:	99 8d       	ldd	r25, Y+25	; 0x19
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	3f ef       	ldi	r19, 0xFF	; 255
    2aae:	4f e7       	ldi	r20, 0x7F	; 127
    2ab0:	57 e4       	ldi	r21, 0x47	; 71
    2ab2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2ab6:	18 16       	cp	r1, r24
    2ab8:	4c f5       	brge	.+82     	; 0x2b0c <LCD_Send_Command+0x790>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aba:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2abc:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2abe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2ac0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2ac2:	20 e0       	ldi	r18, 0x00	; 0
    2ac4:	30 e0       	ldi	r19, 0x00	; 0
    2ac6:	40 e2       	ldi	r20, 0x20	; 32
    2ac8:	51 e4       	ldi	r21, 0x41	; 65
    2aca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ace:	dc 01       	movw	r26, r24
    2ad0:	cb 01       	movw	r24, r22
    2ad2:	bc 01       	movw	r22, r24
    2ad4:	cd 01       	movw	r24, r26
    2ad6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ada:	dc 01       	movw	r26, r24
    2adc:	cb 01       	movw	r24, r22
    2ade:	9d 8b       	std	Y+21, r25	; 0x15
    2ae0:	8c 8b       	std	Y+20, r24	; 0x14
    2ae2:	0f c0       	rjmp	.+30     	; 0x2b02 <LCD_Send_Command+0x786>
    2ae4:	88 ec       	ldi	r24, 0xC8	; 200
    2ae6:	90 e0       	ldi	r25, 0x00	; 0
    2ae8:	9b 8b       	std	Y+19, r25	; 0x13
    2aea:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2aec:	8a 89       	ldd	r24, Y+18	; 0x12
    2aee:	9b 89       	ldd	r25, Y+19	; 0x13
    2af0:	01 97       	sbiw	r24, 0x01	; 1
    2af2:	f1 f7       	brne	.-4      	; 0x2af0 <LCD_Send_Command+0x774>
    2af4:	9b 8b       	std	Y+19, r25	; 0x13
    2af6:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2af8:	8c 89       	ldd	r24, Y+20	; 0x14
    2afa:	9d 89       	ldd	r25, Y+21	; 0x15
    2afc:	01 97       	sbiw	r24, 0x01	; 1
    2afe:	9d 8b       	std	Y+21, r25	; 0x15
    2b00:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b02:	8c 89       	ldd	r24, Y+20	; 0x14
    2b04:	9d 89       	ldd	r25, Y+21	; 0x15
    2b06:	00 97       	sbiw	r24, 0x00	; 0
    2b08:	69 f7       	brne	.-38     	; 0x2ae4 <LCD_Send_Command+0x768>
    2b0a:	24 c0       	rjmp	.+72     	; 0x2b54 <LCD_Send_Command+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b0c:	6e 89       	ldd	r22, Y+22	; 0x16
    2b0e:	7f 89       	ldd	r23, Y+23	; 0x17
    2b10:	88 8d       	ldd	r24, Y+24	; 0x18
    2b12:	99 8d       	ldd	r25, Y+25	; 0x19
    2b14:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b18:	dc 01       	movw	r26, r24
    2b1a:	cb 01       	movw	r24, r22
    2b1c:	9d 8b       	std	Y+21, r25	; 0x15
    2b1e:	8c 8b       	std	Y+20, r24	; 0x14
    2b20:	8c 89       	ldd	r24, Y+20	; 0x14
    2b22:	9d 89       	ldd	r25, Y+21	; 0x15
    2b24:	99 8b       	std	Y+17, r25	; 0x11
    2b26:	88 8b       	std	Y+16, r24	; 0x10
    2b28:	88 89       	ldd	r24, Y+16	; 0x10
    2b2a:	99 89       	ldd	r25, Y+17	; 0x11
    2b2c:	01 97       	sbiw	r24, 0x01	; 1
    2b2e:	f1 f7       	brne	.-4      	; 0x2b2c <LCD_Send_Command+0x7b0>
    2b30:	99 8b       	std	Y+17, r25	; 0x11
    2b32:	88 8b       	std	Y+16, r24	; 0x10
    2b34:	0f c0       	rjmp	.+30     	; 0x2b54 <LCD_Send_Command+0x7d8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2b36:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2b38:	78 a1       	ldd	r23, Y+32	; 0x20
    2b3a:	89 a1       	ldd	r24, Y+33	; 0x21
    2b3c:	9a a1       	ldd	r25, Y+34	; 0x22
    2b3e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b42:	dc 01       	movw	r26, r24
    2b44:	cb 01       	movw	r24, r22
    2b46:	8e 8f       	std	Y+30, r24	; 0x1e
    2b48:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2b4a:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2b4c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b4e:	8a 95       	dec	r24
    2b50:	f1 f7       	brne	.-4      	; 0x2b4e <LCD_Send_Command+0x7d2>
    2b52:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(5);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    2b54:	83 e0       	ldi	r24, 0x03	; 3
    2b56:	65 e0       	ldi	r22, 0x05	; 5
    2b58:	41 e0       	ldi	r20, 0x01	; 1
    2b5a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    2b5e:	80 e0       	ldi	r24, 0x00	; 0
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	a0 e2       	ldi	r26, 0x20	; 32
    2b64:	b1 e4       	ldi	r27, 0x41	; 65
    2b66:	8b 87       	std	Y+11, r24	; 0x0b
    2b68:	9c 87       	std	Y+12, r25	; 0x0c
    2b6a:	ad 87       	std	Y+13, r26	; 0x0d
    2b6c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b6e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b70:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b72:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b74:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b76:	20 e0       	ldi	r18, 0x00	; 0
    2b78:	30 e0       	ldi	r19, 0x00	; 0
    2b7a:	4a ef       	ldi	r20, 0xFA	; 250
    2b7c:	54 e4       	ldi	r21, 0x44	; 68
    2b7e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b82:	dc 01       	movw	r26, r24
    2b84:	cb 01       	movw	r24, r22
    2b86:	8f 83       	std	Y+7, r24	; 0x07
    2b88:	98 87       	std	Y+8, r25	; 0x08
    2b8a:	a9 87       	std	Y+9, r26	; 0x09
    2b8c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b8e:	6f 81       	ldd	r22, Y+7	; 0x07
    2b90:	78 85       	ldd	r23, Y+8	; 0x08
    2b92:	89 85       	ldd	r24, Y+9	; 0x09
    2b94:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b96:	20 e0       	ldi	r18, 0x00	; 0
    2b98:	30 e0       	ldi	r19, 0x00	; 0
    2b9a:	40 e8       	ldi	r20, 0x80	; 128
    2b9c:	5f e3       	ldi	r21, 0x3F	; 63
    2b9e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2ba2:	88 23       	and	r24, r24
    2ba4:	2c f4       	brge	.+10     	; 0x2bb0 <LCD_Send_Command+0x834>
		__ticks = 1;
    2ba6:	81 e0       	ldi	r24, 0x01	; 1
    2ba8:	90 e0       	ldi	r25, 0x00	; 0
    2baa:	9e 83       	std	Y+6, r25	; 0x06
    2bac:	8d 83       	std	Y+5, r24	; 0x05
    2bae:	3f c0       	rjmp	.+126    	; 0x2c2e <LCD_Send_Command+0x8b2>
	else if (__tmp > 65535)
    2bb0:	6f 81       	ldd	r22, Y+7	; 0x07
    2bb2:	78 85       	ldd	r23, Y+8	; 0x08
    2bb4:	89 85       	ldd	r24, Y+9	; 0x09
    2bb6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bb8:	20 e0       	ldi	r18, 0x00	; 0
    2bba:	3f ef       	ldi	r19, 0xFF	; 255
    2bbc:	4f e7       	ldi	r20, 0x7F	; 127
    2bbe:	57 e4       	ldi	r21, 0x47	; 71
    2bc0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2bc4:	18 16       	cp	r1, r24
    2bc6:	4c f5       	brge	.+82     	; 0x2c1a <LCD_Send_Command+0x89e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bc8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bca:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bcc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bce:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bd0:	20 e0       	ldi	r18, 0x00	; 0
    2bd2:	30 e0       	ldi	r19, 0x00	; 0
    2bd4:	40 e2       	ldi	r20, 0x20	; 32
    2bd6:	51 e4       	ldi	r21, 0x41	; 65
    2bd8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bdc:	dc 01       	movw	r26, r24
    2bde:	cb 01       	movw	r24, r22
    2be0:	bc 01       	movw	r22, r24
    2be2:	cd 01       	movw	r24, r26
    2be4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2be8:	dc 01       	movw	r26, r24
    2bea:	cb 01       	movw	r24, r22
    2bec:	9e 83       	std	Y+6, r25	; 0x06
    2bee:	8d 83       	std	Y+5, r24	; 0x05
    2bf0:	0f c0       	rjmp	.+30     	; 0x2c10 <LCD_Send_Command+0x894>
    2bf2:	88 ec       	ldi	r24, 0xC8	; 200
    2bf4:	90 e0       	ldi	r25, 0x00	; 0
    2bf6:	9c 83       	std	Y+4, r25	; 0x04
    2bf8:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2bfa:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfc:	9c 81       	ldd	r25, Y+4	; 0x04
    2bfe:	01 97       	sbiw	r24, 0x01	; 1
    2c00:	f1 f7       	brne	.-4      	; 0x2bfe <LCD_Send_Command+0x882>
    2c02:	9c 83       	std	Y+4, r25	; 0x04
    2c04:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c06:	8d 81       	ldd	r24, Y+5	; 0x05
    2c08:	9e 81       	ldd	r25, Y+6	; 0x06
    2c0a:	01 97       	sbiw	r24, 0x01	; 1
    2c0c:	9e 83       	std	Y+6, r25	; 0x06
    2c0e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c10:	8d 81       	ldd	r24, Y+5	; 0x05
    2c12:	9e 81       	ldd	r25, Y+6	; 0x06
    2c14:	00 97       	sbiw	r24, 0x00	; 0
    2c16:	69 f7       	brne	.-38     	; 0x2bf2 <LCD_Send_Command+0x876>
    2c18:	14 c0       	rjmp	.+40     	; 0x2c42 <LCD_Send_Command+0x8c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c1a:	6f 81       	ldd	r22, Y+7	; 0x07
    2c1c:	78 85       	ldd	r23, Y+8	; 0x08
    2c1e:	89 85       	ldd	r24, Y+9	; 0x09
    2c20:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c26:	dc 01       	movw	r26, r24
    2c28:	cb 01       	movw	r24, r22
    2c2a:	9e 83       	std	Y+6, r25	; 0x06
    2c2c:	8d 83       	std	Y+5, r24	; 0x05
    2c2e:	8d 81       	ldd	r24, Y+5	; 0x05
    2c30:	9e 81       	ldd	r25, Y+6	; 0x06
    2c32:	9a 83       	std	Y+2, r25	; 0x02
    2c34:	89 83       	std	Y+1, r24	; 0x01
    2c36:	89 81       	ldd	r24, Y+1	; 0x01
    2c38:	9a 81       	ldd	r25, Y+2	; 0x02
    2c3a:	01 97       	sbiw	r24, 0x01	; 1
    2c3c:	f1 f7       	brne	.-4      	; 0x2c3a <LCD_Send_Command+0x8be>
    2c3e:	9a 83       	std	Y+2, r25	; 0x02
    2c40:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    2c42:	c1 59       	subi	r28, 0x91	; 145
    2c44:	df 4f       	sbci	r29, 0xFF	; 255
    2c46:	0f b6       	in	r0, 0x3f	; 63
    2c48:	f8 94       	cli
    2c4a:	de bf       	out	0x3e, r29	; 62
    2c4c:	0f be       	out	0x3f, r0	; 63
    2c4e:	cd bf       	out	0x3d, r28	; 61
    2c50:	cf 91       	pop	r28
    2c52:	df 91       	pop	r29
    2c54:	1f 91       	pop	r17
    2c56:	0f 91       	pop	r16
    2c58:	08 95       	ret

00002c5a <LCD_Send_Data>:

void LCD_Send_Data(u8 data) {
    2c5a:	0f 93       	push	r16
    2c5c:	1f 93       	push	r17
    2c5e:	df 93       	push	r29
    2c60:	cf 93       	push	r28
    2c62:	cd b7       	in	r28, 0x3d	; 61
    2c64:	de b7       	in	r29, 0x3e	; 62
    2c66:	cf 56       	subi	r28, 0x6F	; 111
    2c68:	d0 40       	sbci	r29, 0x00	; 0
    2c6a:	0f b6       	in	r0, 0x3f	; 63
    2c6c:	f8 94       	cli
    2c6e:	de bf       	out	0x3e, r29	; 62
    2c70:	0f be       	out	0x3f, r0	; 63
    2c72:	cd bf       	out	0x3d, r28	; 61
    2c74:	fe 01       	movw	r30, r28
    2c76:	e1 59       	subi	r30, 0x91	; 145
    2c78:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7a:	80 83       	st	Z, r24
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_RS_PIN, HIGH);
    2c7c:	83 e0       	ldi	r24, 0x03	; 3
    2c7e:	64 e0       	ldi	r22, 0x04	; 4
    2c80:	41 e0       	ldi	r20, 0x01	; 1
    2c82:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    2c86:	fe 01       	movw	r30, r28
    2c88:	e5 59       	subi	r30, 0x95	; 149
    2c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8c:	80 e0       	ldi	r24, 0x00	; 0
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	a0 e8       	ldi	r26, 0x80	; 128
    2c92:	bf e3       	ldi	r27, 0x3F	; 63
    2c94:	80 83       	st	Z, r24
    2c96:	91 83       	std	Z+1, r25	; 0x01
    2c98:	a2 83       	std	Z+2, r26	; 0x02
    2c9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2c9c:	8e 01       	movw	r16, r28
    2c9e:	09 59       	subi	r16, 0x99	; 153
    2ca0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e5 59       	subi	r30, 0x95	; 149
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	60 81       	ld	r22, Z
    2caa:	71 81       	ldd	r23, Z+1	; 0x01
    2cac:	82 81       	ldd	r24, Z+2	; 0x02
    2cae:	93 81       	ldd	r25, Z+3	; 0x03
    2cb0:	2b ea       	ldi	r18, 0xAB	; 171
    2cb2:	3a ea       	ldi	r19, 0xAA	; 170
    2cb4:	4a e2       	ldi	r20, 0x2A	; 42
    2cb6:	50 e4       	ldi	r21, 0x40	; 64
    2cb8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cbc:	dc 01       	movw	r26, r24
    2cbe:	cb 01       	movw	r24, r22
    2cc0:	f8 01       	movw	r30, r16
    2cc2:	80 83       	st	Z, r24
    2cc4:	91 83       	std	Z+1, r25	; 0x01
    2cc6:	a2 83       	std	Z+2, r26	; 0x02
    2cc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e9 59       	subi	r30, 0x99	; 153
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	20 e0       	ldi	r18, 0x00	; 0
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	40 e8       	ldi	r20, 0x80	; 128
    2cde:	5f e3       	ldi	r21, 0x3F	; 63
    2ce0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2ce4:	88 23       	and	r24, r24
    2ce6:	34 f4       	brge	.+12     	; 0x2cf4 <LCD_Send_Data+0x9a>
		__ticks = 1;
    2ce8:	fe 01       	movw	r30, r28
    2cea:	ea 59       	subi	r30, 0x9A	; 154
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	80 83       	st	Z, r24
    2cf2:	e0 c0       	rjmp	.+448    	; 0x2eb4 <LCD_Send_Data+0x25a>
	else if (__tmp > 255)
    2cf4:	fe 01       	movw	r30, r28
    2cf6:	e9 59       	subi	r30, 0x99	; 153
    2cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfa:	60 81       	ld	r22, Z
    2cfc:	71 81       	ldd	r23, Z+1	; 0x01
    2cfe:	82 81       	ldd	r24, Z+2	; 0x02
    2d00:	93 81       	ldd	r25, Z+3	; 0x03
    2d02:	20 e0       	ldi	r18, 0x00	; 0
    2d04:	30 e0       	ldi	r19, 0x00	; 0
    2d06:	4f e7       	ldi	r20, 0x7F	; 127
    2d08:	53 e4       	ldi	r21, 0x43	; 67
    2d0a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2d0e:	18 16       	cp	r1, r24
    2d10:	0c f0       	brlt	.+2      	; 0x2d14 <LCD_Send_Data+0xba>
    2d12:	c0 c0       	rjmp	.+384    	; 0x2e94 <LCD_Send_Data+0x23a>
	{
		_delay_ms(__us / 1000.0);
    2d14:	fe 01       	movw	r30, r28
    2d16:	e5 59       	subi	r30, 0x95	; 149
    2d18:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1a:	60 81       	ld	r22, Z
    2d1c:	71 81       	ldd	r23, Z+1	; 0x01
    2d1e:	82 81       	ldd	r24, Z+2	; 0x02
    2d20:	93 81       	ldd	r25, Z+3	; 0x03
    2d22:	20 e0       	ldi	r18, 0x00	; 0
    2d24:	30 e0       	ldi	r19, 0x00	; 0
    2d26:	4a e7       	ldi	r20, 0x7A	; 122
    2d28:	54 e4       	ldi	r21, 0x44	; 68
    2d2a:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2d2e:	dc 01       	movw	r26, r24
    2d30:	cb 01       	movw	r24, r22
    2d32:	fe 01       	movw	r30, r28
    2d34:	ee 59       	subi	r30, 0x9E	; 158
    2d36:	ff 4f       	sbci	r31, 0xFF	; 255
    2d38:	80 83       	st	Z, r24
    2d3a:	91 83       	std	Z+1, r25	; 0x01
    2d3c:	a2 83       	std	Z+2, r26	; 0x02
    2d3e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d40:	8e 01       	movw	r16, r28
    2d42:	02 5a       	subi	r16, 0xA2	; 162
    2d44:	1f 4f       	sbci	r17, 0xFF	; 255
    2d46:	fe 01       	movw	r30, r28
    2d48:	ee 59       	subi	r30, 0x9E	; 158
    2d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d4c:	60 81       	ld	r22, Z
    2d4e:	71 81       	ldd	r23, Z+1	; 0x01
    2d50:	82 81       	ldd	r24, Z+2	; 0x02
    2d52:	93 81       	ldd	r25, Z+3	; 0x03
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	4a ef       	ldi	r20, 0xFA	; 250
    2d5a:	54 e4       	ldi	r21, 0x44	; 68
    2d5c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d60:	dc 01       	movw	r26, r24
    2d62:	cb 01       	movw	r24, r22
    2d64:	f8 01       	movw	r30, r16
    2d66:	80 83       	st	Z, r24
    2d68:	91 83       	std	Z+1, r25	; 0x01
    2d6a:	a2 83       	std	Z+2, r26	; 0x02
    2d6c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d6e:	fe 01       	movw	r30, r28
    2d70:	e2 5a       	subi	r30, 0xA2	; 162
    2d72:	ff 4f       	sbci	r31, 0xFF	; 255
    2d74:	60 81       	ld	r22, Z
    2d76:	71 81       	ldd	r23, Z+1	; 0x01
    2d78:	82 81       	ldd	r24, Z+2	; 0x02
    2d7a:	93 81       	ldd	r25, Z+3	; 0x03
    2d7c:	20 e0       	ldi	r18, 0x00	; 0
    2d7e:	30 e0       	ldi	r19, 0x00	; 0
    2d80:	40 e8       	ldi	r20, 0x80	; 128
    2d82:	5f e3       	ldi	r21, 0x3F	; 63
    2d84:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2d88:	88 23       	and	r24, r24
    2d8a:	44 f4       	brge	.+16     	; 0x2d9c <LCD_Send_Data+0x142>
		__ticks = 1;
    2d8c:	fe 01       	movw	r30, r28
    2d8e:	e4 5a       	subi	r30, 0xA4	; 164
    2d90:	ff 4f       	sbci	r31, 0xFF	; 255
    2d92:	81 e0       	ldi	r24, 0x01	; 1
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	91 83       	std	Z+1, r25	; 0x01
    2d98:	80 83       	st	Z, r24
    2d9a:	64 c0       	rjmp	.+200    	; 0x2e64 <LCD_Send_Data+0x20a>
	else if (__tmp > 65535)
    2d9c:	fe 01       	movw	r30, r28
    2d9e:	e2 5a       	subi	r30, 0xA2	; 162
    2da0:	ff 4f       	sbci	r31, 0xFF	; 255
    2da2:	60 81       	ld	r22, Z
    2da4:	71 81       	ldd	r23, Z+1	; 0x01
    2da6:	82 81       	ldd	r24, Z+2	; 0x02
    2da8:	93 81       	ldd	r25, Z+3	; 0x03
    2daa:	20 e0       	ldi	r18, 0x00	; 0
    2dac:	3f ef       	ldi	r19, 0xFF	; 255
    2dae:	4f e7       	ldi	r20, 0x7F	; 127
    2db0:	57 e4       	ldi	r21, 0x47	; 71
    2db2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2db6:	18 16       	cp	r1, r24
    2db8:	0c f0       	brlt	.+2      	; 0x2dbc <LCD_Send_Data+0x162>
    2dba:	43 c0       	rjmp	.+134    	; 0x2e42 <LCD_Send_Data+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dbc:	fe 01       	movw	r30, r28
    2dbe:	ee 59       	subi	r30, 0x9E	; 158
    2dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc2:	60 81       	ld	r22, Z
    2dc4:	71 81       	ldd	r23, Z+1	; 0x01
    2dc6:	82 81       	ldd	r24, Z+2	; 0x02
    2dc8:	93 81       	ldd	r25, Z+3	; 0x03
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	30 e0       	ldi	r19, 0x00	; 0
    2dce:	40 e2       	ldi	r20, 0x20	; 32
    2dd0:	51 e4       	ldi	r21, 0x41	; 65
    2dd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2dd6:	dc 01       	movw	r26, r24
    2dd8:	cb 01       	movw	r24, r22
    2dda:	8e 01       	movw	r16, r28
    2ddc:	04 5a       	subi	r16, 0xA4	; 164
    2dde:	1f 4f       	sbci	r17, 0xFF	; 255
    2de0:	bc 01       	movw	r22, r24
    2de2:	cd 01       	movw	r24, r26
    2de4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2de8:	dc 01       	movw	r26, r24
    2dea:	cb 01       	movw	r24, r22
    2dec:	f8 01       	movw	r30, r16
    2dee:	91 83       	std	Z+1, r25	; 0x01
    2df0:	80 83       	st	Z, r24
    2df2:	1f c0       	rjmp	.+62     	; 0x2e32 <LCD_Send_Data+0x1d8>
    2df4:	fe 01       	movw	r30, r28
    2df6:	e6 5a       	subi	r30, 0xA6	; 166
    2df8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dfa:	88 ec       	ldi	r24, 0xC8	; 200
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	91 83       	std	Z+1, r25	; 0x01
    2e00:	80 83       	st	Z, r24
    2e02:	fe 01       	movw	r30, r28
    2e04:	e6 5a       	subi	r30, 0xA6	; 166
    2e06:	ff 4f       	sbci	r31, 0xFF	; 255
    2e08:	80 81       	ld	r24, Z
    2e0a:	91 81       	ldd	r25, Z+1	; 0x01
    2e0c:	01 97       	sbiw	r24, 0x01	; 1
    2e0e:	f1 f7       	brne	.-4      	; 0x2e0c <LCD_Send_Data+0x1b2>
    2e10:	fe 01       	movw	r30, r28
    2e12:	e6 5a       	subi	r30, 0xA6	; 166
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	91 83       	std	Z+1, r25	; 0x01
    2e18:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e1a:	de 01       	movw	r26, r28
    2e1c:	a4 5a       	subi	r26, 0xA4	; 164
    2e1e:	bf 4f       	sbci	r27, 0xFF	; 255
    2e20:	fe 01       	movw	r30, r28
    2e22:	e4 5a       	subi	r30, 0xA4	; 164
    2e24:	ff 4f       	sbci	r31, 0xFF	; 255
    2e26:	80 81       	ld	r24, Z
    2e28:	91 81       	ldd	r25, Z+1	; 0x01
    2e2a:	01 97       	sbiw	r24, 0x01	; 1
    2e2c:	11 96       	adiw	r26, 0x01	; 1
    2e2e:	9c 93       	st	X, r25
    2e30:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e32:	fe 01       	movw	r30, r28
    2e34:	e4 5a       	subi	r30, 0xA4	; 164
    2e36:	ff 4f       	sbci	r31, 0xFF	; 255
    2e38:	80 81       	ld	r24, Z
    2e3a:	91 81       	ldd	r25, Z+1	; 0x01
    2e3c:	00 97       	sbiw	r24, 0x00	; 0
    2e3e:	d1 f6       	brne	.-76     	; 0x2df4 <LCD_Send_Data+0x19a>
    2e40:	4b c0       	rjmp	.+150    	; 0x2ed8 <LCD_Send_Data+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e42:	8e 01       	movw	r16, r28
    2e44:	04 5a       	subi	r16, 0xA4	; 164
    2e46:	1f 4f       	sbci	r17, 0xFF	; 255
    2e48:	fe 01       	movw	r30, r28
    2e4a:	e2 5a       	subi	r30, 0xA2	; 162
    2e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4e:	60 81       	ld	r22, Z
    2e50:	71 81       	ldd	r23, Z+1	; 0x01
    2e52:	82 81       	ldd	r24, Z+2	; 0x02
    2e54:	93 81       	ldd	r25, Z+3	; 0x03
    2e56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e5a:	dc 01       	movw	r26, r24
    2e5c:	cb 01       	movw	r24, r22
    2e5e:	f8 01       	movw	r30, r16
    2e60:	91 83       	std	Z+1, r25	; 0x01
    2e62:	80 83       	st	Z, r24
    2e64:	de 01       	movw	r26, r28
    2e66:	a8 5a       	subi	r26, 0xA8	; 168
    2e68:	bf 4f       	sbci	r27, 0xFF	; 255
    2e6a:	fe 01       	movw	r30, r28
    2e6c:	e4 5a       	subi	r30, 0xA4	; 164
    2e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e70:	80 81       	ld	r24, Z
    2e72:	91 81       	ldd	r25, Z+1	; 0x01
    2e74:	11 96       	adiw	r26, 0x01	; 1
    2e76:	9c 93       	st	X, r25
    2e78:	8e 93       	st	-X, r24
    2e7a:	fe 01       	movw	r30, r28
    2e7c:	e8 5a       	subi	r30, 0xA8	; 168
    2e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e80:	80 81       	ld	r24, Z
    2e82:	91 81       	ldd	r25, Z+1	; 0x01
    2e84:	01 97       	sbiw	r24, 0x01	; 1
    2e86:	f1 f7       	brne	.-4      	; 0x2e84 <LCD_Send_Data+0x22a>
    2e88:	fe 01       	movw	r30, r28
    2e8a:	e8 5a       	subi	r30, 0xA8	; 168
    2e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8e:	91 83       	std	Z+1, r25	; 0x01
    2e90:	80 83       	st	Z, r24
    2e92:	22 c0       	rjmp	.+68     	; 0x2ed8 <LCD_Send_Data+0x27e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2e94:	8e 01       	movw	r16, r28
    2e96:	0a 59       	subi	r16, 0x9A	; 154
    2e98:	1f 4f       	sbci	r17, 0xFF	; 255
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e9 59       	subi	r30, 0x99	; 153
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	60 81       	ld	r22, Z
    2ea2:	71 81       	ldd	r23, Z+1	; 0x01
    2ea4:	82 81       	ldd	r24, Z+2	; 0x02
    2ea6:	93 81       	ldd	r25, Z+3	; 0x03
    2ea8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2eac:	dc 01       	movw	r26, r24
    2eae:	cb 01       	movw	r24, r22
    2eb0:	f8 01       	movw	r30, r16
    2eb2:	80 83       	st	Z, r24
    2eb4:	de 01       	movw	r26, r28
    2eb6:	a9 5a       	subi	r26, 0xA9	; 169
    2eb8:	bf 4f       	sbci	r27, 0xFF	; 255
    2eba:	fe 01       	movw	r30, r28
    2ebc:	ea 59       	subi	r30, 0x9A	; 154
    2ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec0:	80 81       	ld	r24, Z
    2ec2:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2ec4:	fe 01       	movw	r30, r28
    2ec6:	e9 5a       	subi	r30, 0xA9	; 169
    2ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eca:	80 81       	ld	r24, Z
    2ecc:	8a 95       	dec	r24
    2ece:	f1 f7       	brne	.-4      	; 0x2ecc <LCD_Send_Data+0x272>
    2ed0:	fe 01       	movw	r30, r28
    2ed2:	e9 5a       	subi	r30, 0xA9	; 169
    2ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed6:	80 83       	st	Z, r24
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    2ed8:	83 e0       	ldi	r24, 0x03	; 3
    2eda:	65 e0       	ldi	r22, 0x05	; 5
    2edc:	41 e0       	ldi	r20, 0x01	; 1
    2ede:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    2ee2:	fe 01       	movw	r30, r28
    2ee4:	ed 5a       	subi	r30, 0xAD	; 173
    2ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee8:	80 e0       	ldi	r24, 0x00	; 0
    2eea:	90 e0       	ldi	r25, 0x00	; 0
    2eec:	a0 e8       	ldi	r26, 0x80	; 128
    2eee:	bf e3       	ldi	r27, 0x3F	; 63
    2ef0:	80 83       	st	Z, r24
    2ef2:	91 83       	std	Z+1, r25	; 0x01
    2ef4:	a2 83       	std	Z+2, r26	; 0x02
    2ef6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2ef8:	8e 01       	movw	r16, r28
    2efa:	01 5b       	subi	r16, 0xB1	; 177
    2efc:	1f 4f       	sbci	r17, 0xFF	; 255
    2efe:	fe 01       	movw	r30, r28
    2f00:	ed 5a       	subi	r30, 0xAD	; 173
    2f02:	ff 4f       	sbci	r31, 0xFF	; 255
    2f04:	60 81       	ld	r22, Z
    2f06:	71 81       	ldd	r23, Z+1	; 0x01
    2f08:	82 81       	ldd	r24, Z+2	; 0x02
    2f0a:	93 81       	ldd	r25, Z+3	; 0x03
    2f0c:	2b ea       	ldi	r18, 0xAB	; 171
    2f0e:	3a ea       	ldi	r19, 0xAA	; 170
    2f10:	4a e2       	ldi	r20, 0x2A	; 42
    2f12:	50 e4       	ldi	r21, 0x40	; 64
    2f14:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	f8 01       	movw	r30, r16
    2f1e:	80 83       	st	Z, r24
    2f20:	91 83       	std	Z+1, r25	; 0x01
    2f22:	a2 83       	std	Z+2, r26	; 0x02
    2f24:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f26:	fe 01       	movw	r30, r28
    2f28:	e1 5b       	subi	r30, 0xB1	; 177
    2f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2c:	60 81       	ld	r22, Z
    2f2e:	71 81       	ldd	r23, Z+1	; 0x01
    2f30:	82 81       	ldd	r24, Z+2	; 0x02
    2f32:	93 81       	ldd	r25, Z+3	; 0x03
    2f34:	20 e0       	ldi	r18, 0x00	; 0
    2f36:	30 e0       	ldi	r19, 0x00	; 0
    2f38:	40 e8       	ldi	r20, 0x80	; 128
    2f3a:	5f e3       	ldi	r21, 0x3F	; 63
    2f3c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2f40:	88 23       	and	r24, r24
    2f42:	34 f4       	brge	.+12     	; 0x2f50 <LCD_Send_Data+0x2f6>
		__ticks = 1;
    2f44:	fe 01       	movw	r30, r28
    2f46:	e2 5b       	subi	r30, 0xB2	; 178
    2f48:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	80 83       	st	Z, r24
    2f4e:	e0 c0       	rjmp	.+448    	; 0x3110 <LCD_Send_Data+0x4b6>
	else if (__tmp > 255)
    2f50:	fe 01       	movw	r30, r28
    2f52:	e1 5b       	subi	r30, 0xB1	; 177
    2f54:	ff 4f       	sbci	r31, 0xFF	; 255
    2f56:	60 81       	ld	r22, Z
    2f58:	71 81       	ldd	r23, Z+1	; 0x01
    2f5a:	82 81       	ldd	r24, Z+2	; 0x02
    2f5c:	93 81       	ldd	r25, Z+3	; 0x03
    2f5e:	20 e0       	ldi	r18, 0x00	; 0
    2f60:	30 e0       	ldi	r19, 0x00	; 0
    2f62:	4f e7       	ldi	r20, 0x7F	; 127
    2f64:	53 e4       	ldi	r21, 0x43	; 67
    2f66:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2f6a:	18 16       	cp	r1, r24
    2f6c:	0c f0       	brlt	.+2      	; 0x2f70 <LCD_Send_Data+0x316>
    2f6e:	c0 c0       	rjmp	.+384    	; 0x30f0 <LCD_Send_Data+0x496>
	{
		_delay_ms(__us / 1000.0);
    2f70:	fe 01       	movw	r30, r28
    2f72:	ed 5a       	subi	r30, 0xAD	; 173
    2f74:	ff 4f       	sbci	r31, 0xFF	; 255
    2f76:	60 81       	ld	r22, Z
    2f78:	71 81       	ldd	r23, Z+1	; 0x01
    2f7a:	82 81       	ldd	r24, Z+2	; 0x02
    2f7c:	93 81       	ldd	r25, Z+3	; 0x03
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	30 e0       	ldi	r19, 0x00	; 0
    2f82:	4a e7       	ldi	r20, 0x7A	; 122
    2f84:	54 e4       	ldi	r21, 0x44	; 68
    2f86:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2f8a:	dc 01       	movw	r26, r24
    2f8c:	cb 01       	movw	r24, r22
    2f8e:	fe 01       	movw	r30, r28
    2f90:	e6 5b       	subi	r30, 0xB6	; 182
    2f92:	ff 4f       	sbci	r31, 0xFF	; 255
    2f94:	80 83       	st	Z, r24
    2f96:	91 83       	std	Z+1, r25	; 0x01
    2f98:	a2 83       	std	Z+2, r26	; 0x02
    2f9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f9c:	8e 01       	movw	r16, r28
    2f9e:	0a 5b       	subi	r16, 0xBA	; 186
    2fa0:	1f 4f       	sbci	r17, 0xFF	; 255
    2fa2:	fe 01       	movw	r30, r28
    2fa4:	e6 5b       	subi	r30, 0xB6	; 182
    2fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa8:	60 81       	ld	r22, Z
    2faa:	71 81       	ldd	r23, Z+1	; 0x01
    2fac:	82 81       	ldd	r24, Z+2	; 0x02
    2fae:	93 81       	ldd	r25, Z+3	; 0x03
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	4a ef       	ldi	r20, 0xFA	; 250
    2fb6:	54 e4       	ldi	r21, 0x44	; 68
    2fb8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2fbc:	dc 01       	movw	r26, r24
    2fbe:	cb 01       	movw	r24, r22
    2fc0:	f8 01       	movw	r30, r16
    2fc2:	80 83       	st	Z, r24
    2fc4:	91 83       	std	Z+1, r25	; 0x01
    2fc6:	a2 83       	std	Z+2, r26	; 0x02
    2fc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fca:	fe 01       	movw	r30, r28
    2fcc:	ea 5b       	subi	r30, 0xBA	; 186
    2fce:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd0:	60 81       	ld	r22, Z
    2fd2:	71 81       	ldd	r23, Z+1	; 0x01
    2fd4:	82 81       	ldd	r24, Z+2	; 0x02
    2fd6:	93 81       	ldd	r25, Z+3	; 0x03
    2fd8:	20 e0       	ldi	r18, 0x00	; 0
    2fda:	30 e0       	ldi	r19, 0x00	; 0
    2fdc:	40 e8       	ldi	r20, 0x80	; 128
    2fde:	5f e3       	ldi	r21, 0x3F	; 63
    2fe0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2fe4:	88 23       	and	r24, r24
    2fe6:	44 f4       	brge	.+16     	; 0x2ff8 <LCD_Send_Data+0x39e>
		__ticks = 1;
    2fe8:	fe 01       	movw	r30, r28
    2fea:	ec 5b       	subi	r30, 0xBC	; 188
    2fec:	ff 4f       	sbci	r31, 0xFF	; 255
    2fee:	81 e0       	ldi	r24, 0x01	; 1
    2ff0:	90 e0       	ldi	r25, 0x00	; 0
    2ff2:	91 83       	std	Z+1, r25	; 0x01
    2ff4:	80 83       	st	Z, r24
    2ff6:	64 c0       	rjmp	.+200    	; 0x30c0 <LCD_Send_Data+0x466>
	else if (__tmp > 65535)
    2ff8:	fe 01       	movw	r30, r28
    2ffa:	ea 5b       	subi	r30, 0xBA	; 186
    2ffc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffe:	60 81       	ld	r22, Z
    3000:	71 81       	ldd	r23, Z+1	; 0x01
    3002:	82 81       	ldd	r24, Z+2	; 0x02
    3004:	93 81       	ldd	r25, Z+3	; 0x03
    3006:	20 e0       	ldi	r18, 0x00	; 0
    3008:	3f ef       	ldi	r19, 0xFF	; 255
    300a:	4f e7       	ldi	r20, 0x7F	; 127
    300c:	57 e4       	ldi	r21, 0x47	; 71
    300e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3012:	18 16       	cp	r1, r24
    3014:	0c f0       	brlt	.+2      	; 0x3018 <LCD_Send_Data+0x3be>
    3016:	43 c0       	rjmp	.+134    	; 0x309e <LCD_Send_Data+0x444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3018:	fe 01       	movw	r30, r28
    301a:	e6 5b       	subi	r30, 0xB6	; 182
    301c:	ff 4f       	sbci	r31, 0xFF	; 255
    301e:	60 81       	ld	r22, Z
    3020:	71 81       	ldd	r23, Z+1	; 0x01
    3022:	82 81       	ldd	r24, Z+2	; 0x02
    3024:	93 81       	ldd	r25, Z+3	; 0x03
    3026:	20 e0       	ldi	r18, 0x00	; 0
    3028:	30 e0       	ldi	r19, 0x00	; 0
    302a:	40 e2       	ldi	r20, 0x20	; 32
    302c:	51 e4       	ldi	r21, 0x41	; 65
    302e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3032:	dc 01       	movw	r26, r24
    3034:	cb 01       	movw	r24, r22
    3036:	8e 01       	movw	r16, r28
    3038:	0c 5b       	subi	r16, 0xBC	; 188
    303a:	1f 4f       	sbci	r17, 0xFF	; 255
    303c:	bc 01       	movw	r22, r24
    303e:	cd 01       	movw	r24, r26
    3040:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3044:	dc 01       	movw	r26, r24
    3046:	cb 01       	movw	r24, r22
    3048:	f8 01       	movw	r30, r16
    304a:	91 83       	std	Z+1, r25	; 0x01
    304c:	80 83       	st	Z, r24
    304e:	1f c0       	rjmp	.+62     	; 0x308e <LCD_Send_Data+0x434>
    3050:	fe 01       	movw	r30, r28
    3052:	ee 5b       	subi	r30, 0xBE	; 190
    3054:	ff 4f       	sbci	r31, 0xFF	; 255
    3056:	88 ec       	ldi	r24, 0xC8	; 200
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	91 83       	std	Z+1, r25	; 0x01
    305c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    305e:	fe 01       	movw	r30, r28
    3060:	ee 5b       	subi	r30, 0xBE	; 190
    3062:	ff 4f       	sbci	r31, 0xFF	; 255
    3064:	80 81       	ld	r24, Z
    3066:	91 81       	ldd	r25, Z+1	; 0x01
    3068:	01 97       	sbiw	r24, 0x01	; 1
    306a:	f1 f7       	brne	.-4      	; 0x3068 <LCD_Send_Data+0x40e>
    306c:	fe 01       	movw	r30, r28
    306e:	ee 5b       	subi	r30, 0xBE	; 190
    3070:	ff 4f       	sbci	r31, 0xFF	; 255
    3072:	91 83       	std	Z+1, r25	; 0x01
    3074:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3076:	de 01       	movw	r26, r28
    3078:	ac 5b       	subi	r26, 0xBC	; 188
    307a:	bf 4f       	sbci	r27, 0xFF	; 255
    307c:	fe 01       	movw	r30, r28
    307e:	ec 5b       	subi	r30, 0xBC	; 188
    3080:	ff 4f       	sbci	r31, 0xFF	; 255
    3082:	80 81       	ld	r24, Z
    3084:	91 81       	ldd	r25, Z+1	; 0x01
    3086:	01 97       	sbiw	r24, 0x01	; 1
    3088:	11 96       	adiw	r26, 0x01	; 1
    308a:	9c 93       	st	X, r25
    308c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    308e:	fe 01       	movw	r30, r28
    3090:	ec 5b       	subi	r30, 0xBC	; 188
    3092:	ff 4f       	sbci	r31, 0xFF	; 255
    3094:	80 81       	ld	r24, Z
    3096:	91 81       	ldd	r25, Z+1	; 0x01
    3098:	00 97       	sbiw	r24, 0x00	; 0
    309a:	d1 f6       	brne	.-76     	; 0x3050 <LCD_Send_Data+0x3f6>
    309c:	42 c0       	rjmp	.+132    	; 0x3122 <LCD_Send_Data+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    309e:	8e 01       	movw	r16, r28
    30a0:	0c 5b       	subi	r16, 0xBC	; 188
    30a2:	1f 4f       	sbci	r17, 0xFF	; 255
    30a4:	fe 01       	movw	r30, r28
    30a6:	ea 5b       	subi	r30, 0xBA	; 186
    30a8:	ff 4f       	sbci	r31, 0xFF	; 255
    30aa:	60 81       	ld	r22, Z
    30ac:	71 81       	ldd	r23, Z+1	; 0x01
    30ae:	82 81       	ldd	r24, Z+2	; 0x02
    30b0:	93 81       	ldd	r25, Z+3	; 0x03
    30b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30b6:	dc 01       	movw	r26, r24
    30b8:	cb 01       	movw	r24, r22
    30ba:	f8 01       	movw	r30, r16
    30bc:	91 83       	std	Z+1, r25	; 0x01
    30be:	80 83       	st	Z, r24
    30c0:	de 01       	movw	r26, r28
    30c2:	a0 5c       	subi	r26, 0xC0	; 192
    30c4:	bf 4f       	sbci	r27, 0xFF	; 255
    30c6:	fe 01       	movw	r30, r28
    30c8:	ec 5b       	subi	r30, 0xBC	; 188
    30ca:	ff 4f       	sbci	r31, 0xFF	; 255
    30cc:	80 81       	ld	r24, Z
    30ce:	91 81       	ldd	r25, Z+1	; 0x01
    30d0:	11 96       	adiw	r26, 0x01	; 1
    30d2:	9c 93       	st	X, r25
    30d4:	8e 93       	st	-X, r24
    30d6:	fe 01       	movw	r30, r28
    30d8:	e0 5c       	subi	r30, 0xC0	; 192
    30da:	ff 4f       	sbci	r31, 0xFF	; 255
    30dc:	80 81       	ld	r24, Z
    30de:	91 81       	ldd	r25, Z+1	; 0x01
    30e0:	01 97       	sbiw	r24, 0x01	; 1
    30e2:	f1 f7       	brne	.-4      	; 0x30e0 <LCD_Send_Data+0x486>
    30e4:	fe 01       	movw	r30, r28
    30e6:	e0 5c       	subi	r30, 0xC0	; 192
    30e8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ea:	91 83       	std	Z+1, r25	; 0x01
    30ec:	80 83       	st	Z, r24
    30ee:	19 c0       	rjmp	.+50     	; 0x3122 <LCD_Send_Data+0x4c8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    30f0:	8e 01       	movw	r16, r28
    30f2:	02 5b       	subi	r16, 0xB2	; 178
    30f4:	1f 4f       	sbci	r17, 0xFF	; 255
    30f6:	fe 01       	movw	r30, r28
    30f8:	e1 5b       	subi	r30, 0xB1	; 177
    30fa:	ff 4f       	sbci	r31, 0xFF	; 255
    30fc:	60 81       	ld	r22, Z
    30fe:	71 81       	ldd	r23, Z+1	; 0x01
    3100:	82 81       	ldd	r24, Z+2	; 0x02
    3102:	93 81       	ldd	r25, Z+3	; 0x03
    3104:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3108:	dc 01       	movw	r26, r24
    310a:	cb 01       	movw	r24, r22
    310c:	f8 01       	movw	r30, r16
    310e:	80 83       	st	Z, r24
    3110:	fe 01       	movw	r30, r28
    3112:	e2 5b       	subi	r30, 0xB2	; 178
    3114:	ff 4f       	sbci	r31, 0xFF	; 255
    3116:	80 81       	ld	r24, Z
    3118:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    311a:	8f ad       	ldd	r24, Y+63	; 0x3f
    311c:	8a 95       	dec	r24
    311e:	f1 f7       	brne	.-4      	; 0x311c <LCD_Send_Data+0x4c2>
    3120:	8f af       	std	Y+63, r24	; 0x3f
	_delay_us(1);
	DIO_SetGroupValue(LCD_GROUP_DATA, data);
    3122:	fe 01       	movw	r30, r28
    3124:	e1 59       	subi	r30, 0x91	; 145
    3126:	ff 4f       	sbci	r31, 0xFF	; 255
    3128:	81 e0       	ldi	r24, 0x01	; 1
    312a:	60 81       	ld	r22, Z
    312c:	0e 94 0b 09 	call	0x1216	; 0x1216 <DIO_SetGroupValue>
    3130:	80 e0       	ldi	r24, 0x00	; 0
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	a0 e8       	ldi	r26, 0x80	; 128
    3136:	bf e3       	ldi	r27, 0x3F	; 63
    3138:	8b af       	std	Y+59, r24	; 0x3b
    313a:	9c af       	std	Y+60, r25	; 0x3c
    313c:	ad af       	std	Y+61, r26	; 0x3d
    313e:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3140:	6b ad       	ldd	r22, Y+59	; 0x3b
    3142:	7c ad       	ldd	r23, Y+60	; 0x3c
    3144:	8d ad       	ldd	r24, Y+61	; 0x3d
    3146:	9e ad       	ldd	r25, Y+62	; 0x3e
    3148:	2b ea       	ldi	r18, 0xAB	; 171
    314a:	3a ea       	ldi	r19, 0xAA	; 170
    314c:	4a e2       	ldi	r20, 0x2A	; 42
    314e:	50 e4       	ldi	r21, 0x40	; 64
    3150:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3154:	dc 01       	movw	r26, r24
    3156:	cb 01       	movw	r24, r22
    3158:	8f ab       	std	Y+55, r24	; 0x37
    315a:	98 af       	std	Y+56, r25	; 0x38
    315c:	a9 af       	std	Y+57, r26	; 0x39
    315e:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    3160:	6f a9       	ldd	r22, Y+55	; 0x37
    3162:	78 ad       	ldd	r23, Y+56	; 0x38
    3164:	89 ad       	ldd	r24, Y+57	; 0x39
    3166:	9a ad       	ldd	r25, Y+58	; 0x3a
    3168:	20 e0       	ldi	r18, 0x00	; 0
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	40 e8       	ldi	r20, 0x80	; 128
    316e:	5f e3       	ldi	r21, 0x3F	; 63
    3170:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3174:	88 23       	and	r24, r24
    3176:	1c f4       	brge	.+6      	; 0x317e <LCD_Send_Data+0x524>
		__ticks = 1;
    3178:	81 e0       	ldi	r24, 0x01	; 1
    317a:	8e ab       	std	Y+54, r24	; 0x36
    317c:	91 c0       	rjmp	.+290    	; 0x32a0 <LCD_Send_Data+0x646>
	else if (__tmp > 255)
    317e:	6f a9       	ldd	r22, Y+55	; 0x37
    3180:	78 ad       	ldd	r23, Y+56	; 0x38
    3182:	89 ad       	ldd	r24, Y+57	; 0x39
    3184:	9a ad       	ldd	r25, Y+58	; 0x3a
    3186:	20 e0       	ldi	r18, 0x00	; 0
    3188:	30 e0       	ldi	r19, 0x00	; 0
    318a:	4f e7       	ldi	r20, 0x7F	; 127
    318c:	53 e4       	ldi	r21, 0x43	; 67
    318e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3192:	18 16       	cp	r1, r24
    3194:	0c f0       	brlt	.+2      	; 0x3198 <LCD_Send_Data+0x53e>
    3196:	7b c0       	rjmp	.+246    	; 0x328e <LCD_Send_Data+0x634>
	{
		_delay_ms(__us / 1000.0);
    3198:	6b ad       	ldd	r22, Y+59	; 0x3b
    319a:	7c ad       	ldd	r23, Y+60	; 0x3c
    319c:	8d ad       	ldd	r24, Y+61	; 0x3d
    319e:	9e ad       	ldd	r25, Y+62	; 0x3e
    31a0:	20 e0       	ldi	r18, 0x00	; 0
    31a2:	30 e0       	ldi	r19, 0x00	; 0
    31a4:	4a e7       	ldi	r20, 0x7A	; 122
    31a6:	54 e4       	ldi	r21, 0x44	; 68
    31a8:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    31ac:	dc 01       	movw	r26, r24
    31ae:	cb 01       	movw	r24, r22
    31b0:	8a ab       	std	Y+50, r24	; 0x32
    31b2:	9b ab       	std	Y+51, r25	; 0x33
    31b4:	ac ab       	std	Y+52, r26	; 0x34
    31b6:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31b8:	6a a9       	ldd	r22, Y+50	; 0x32
    31ba:	7b a9       	ldd	r23, Y+51	; 0x33
    31bc:	8c a9       	ldd	r24, Y+52	; 0x34
    31be:	9d a9       	ldd	r25, Y+53	; 0x35
    31c0:	20 e0       	ldi	r18, 0x00	; 0
    31c2:	30 e0       	ldi	r19, 0x00	; 0
    31c4:	4a ef       	ldi	r20, 0xFA	; 250
    31c6:	54 e4       	ldi	r21, 0x44	; 68
    31c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31cc:	dc 01       	movw	r26, r24
    31ce:	cb 01       	movw	r24, r22
    31d0:	8e a7       	std	Y+46, r24	; 0x2e
    31d2:	9f a7       	std	Y+47, r25	; 0x2f
    31d4:	a8 ab       	std	Y+48, r26	; 0x30
    31d6:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    31d8:	6e a5       	ldd	r22, Y+46	; 0x2e
    31da:	7f a5       	ldd	r23, Y+47	; 0x2f
    31dc:	88 a9       	ldd	r24, Y+48	; 0x30
    31de:	99 a9       	ldd	r25, Y+49	; 0x31
    31e0:	20 e0       	ldi	r18, 0x00	; 0
    31e2:	30 e0       	ldi	r19, 0x00	; 0
    31e4:	40 e8       	ldi	r20, 0x80	; 128
    31e6:	5f e3       	ldi	r21, 0x3F	; 63
    31e8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    31ec:	88 23       	and	r24, r24
    31ee:	2c f4       	brge	.+10     	; 0x31fa <LCD_Send_Data+0x5a0>
		__ticks = 1;
    31f0:	81 e0       	ldi	r24, 0x01	; 1
    31f2:	90 e0       	ldi	r25, 0x00	; 0
    31f4:	9d a7       	std	Y+45, r25	; 0x2d
    31f6:	8c a7       	std	Y+44, r24	; 0x2c
    31f8:	3f c0       	rjmp	.+126    	; 0x3278 <LCD_Send_Data+0x61e>
	else if (__tmp > 65535)
    31fa:	6e a5       	ldd	r22, Y+46	; 0x2e
    31fc:	7f a5       	ldd	r23, Y+47	; 0x2f
    31fe:	88 a9       	ldd	r24, Y+48	; 0x30
    3200:	99 a9       	ldd	r25, Y+49	; 0x31
    3202:	20 e0       	ldi	r18, 0x00	; 0
    3204:	3f ef       	ldi	r19, 0xFF	; 255
    3206:	4f e7       	ldi	r20, 0x7F	; 127
    3208:	57 e4       	ldi	r21, 0x47	; 71
    320a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    320e:	18 16       	cp	r1, r24
    3210:	4c f5       	brge	.+82     	; 0x3264 <LCD_Send_Data+0x60a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3212:	6a a9       	ldd	r22, Y+50	; 0x32
    3214:	7b a9       	ldd	r23, Y+51	; 0x33
    3216:	8c a9       	ldd	r24, Y+52	; 0x34
    3218:	9d a9       	ldd	r25, Y+53	; 0x35
    321a:	20 e0       	ldi	r18, 0x00	; 0
    321c:	30 e0       	ldi	r19, 0x00	; 0
    321e:	40 e2       	ldi	r20, 0x20	; 32
    3220:	51 e4       	ldi	r21, 0x41	; 65
    3222:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3226:	dc 01       	movw	r26, r24
    3228:	cb 01       	movw	r24, r22
    322a:	bc 01       	movw	r22, r24
    322c:	cd 01       	movw	r24, r26
    322e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3232:	dc 01       	movw	r26, r24
    3234:	cb 01       	movw	r24, r22
    3236:	9d a7       	std	Y+45, r25	; 0x2d
    3238:	8c a7       	std	Y+44, r24	; 0x2c
    323a:	0f c0       	rjmp	.+30     	; 0x325a <LCD_Send_Data+0x600>
    323c:	88 ec       	ldi	r24, 0xC8	; 200
    323e:	90 e0       	ldi	r25, 0x00	; 0
    3240:	9b a7       	std	Y+43, r25	; 0x2b
    3242:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3244:	8a a5       	ldd	r24, Y+42	; 0x2a
    3246:	9b a5       	ldd	r25, Y+43	; 0x2b
    3248:	01 97       	sbiw	r24, 0x01	; 1
    324a:	f1 f7       	brne	.-4      	; 0x3248 <LCD_Send_Data+0x5ee>
    324c:	9b a7       	std	Y+43, r25	; 0x2b
    324e:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3250:	8c a5       	ldd	r24, Y+44	; 0x2c
    3252:	9d a5       	ldd	r25, Y+45	; 0x2d
    3254:	01 97       	sbiw	r24, 0x01	; 1
    3256:	9d a7       	std	Y+45, r25	; 0x2d
    3258:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    325a:	8c a5       	ldd	r24, Y+44	; 0x2c
    325c:	9d a5       	ldd	r25, Y+45	; 0x2d
    325e:	00 97       	sbiw	r24, 0x00	; 0
    3260:	69 f7       	brne	.-38     	; 0x323c <LCD_Send_Data+0x5e2>
    3262:	24 c0       	rjmp	.+72     	; 0x32ac <LCD_Send_Data+0x652>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3264:	6e a5       	ldd	r22, Y+46	; 0x2e
    3266:	7f a5       	ldd	r23, Y+47	; 0x2f
    3268:	88 a9       	ldd	r24, Y+48	; 0x30
    326a:	99 a9       	ldd	r25, Y+49	; 0x31
    326c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3270:	dc 01       	movw	r26, r24
    3272:	cb 01       	movw	r24, r22
    3274:	9d a7       	std	Y+45, r25	; 0x2d
    3276:	8c a7       	std	Y+44, r24	; 0x2c
    3278:	8c a5       	ldd	r24, Y+44	; 0x2c
    327a:	9d a5       	ldd	r25, Y+45	; 0x2d
    327c:	99 a7       	std	Y+41, r25	; 0x29
    327e:	88 a7       	std	Y+40, r24	; 0x28
    3280:	88 a5       	ldd	r24, Y+40	; 0x28
    3282:	99 a5       	ldd	r25, Y+41	; 0x29
    3284:	01 97       	sbiw	r24, 0x01	; 1
    3286:	f1 f7       	brne	.-4      	; 0x3284 <LCD_Send_Data+0x62a>
    3288:	99 a7       	std	Y+41, r25	; 0x29
    328a:	88 a7       	std	Y+40, r24	; 0x28
    328c:	0f c0       	rjmp	.+30     	; 0x32ac <LCD_Send_Data+0x652>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    328e:	6f a9       	ldd	r22, Y+55	; 0x37
    3290:	78 ad       	ldd	r23, Y+56	; 0x38
    3292:	89 ad       	ldd	r24, Y+57	; 0x39
    3294:	9a ad       	ldd	r25, Y+58	; 0x3a
    3296:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    329a:	dc 01       	movw	r26, r24
    329c:	cb 01       	movw	r24, r22
    329e:	8e ab       	std	Y+54, r24	; 0x36
    32a0:	8e a9       	ldd	r24, Y+54	; 0x36
    32a2:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    32a4:	8f a1       	ldd	r24, Y+39	; 0x27
    32a6:	8a 95       	dec	r24
    32a8:	f1 f7       	brne	.-4      	; 0x32a6 <LCD_Send_Data+0x64c>
    32aa:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(1);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, LOW);
    32ac:	83 e0       	ldi	r24, 0x03	; 3
    32ae:	65 e0       	ldi	r22, 0x05	; 5
    32b0:	40 e0       	ldi	r20, 0x00	; 0
    32b2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    32b6:	80 e0       	ldi	r24, 0x00	; 0
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	a0 ea       	ldi	r26, 0xA0	; 160
    32bc:	b0 e4       	ldi	r27, 0x40	; 64
    32be:	8b a3       	std	Y+35, r24	; 0x23
    32c0:	9c a3       	std	Y+36, r25	; 0x24
    32c2:	ad a3       	std	Y+37, r26	; 0x25
    32c4:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    32c6:	6b a1       	ldd	r22, Y+35	; 0x23
    32c8:	7c a1       	ldd	r23, Y+36	; 0x24
    32ca:	8d a1       	ldd	r24, Y+37	; 0x25
    32cc:	9e a1       	ldd	r25, Y+38	; 0x26
    32ce:	2b ea       	ldi	r18, 0xAB	; 171
    32d0:	3a ea       	ldi	r19, 0xAA	; 170
    32d2:	4a e2       	ldi	r20, 0x2A	; 42
    32d4:	50 e4       	ldi	r21, 0x40	; 64
    32d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    32da:	dc 01       	movw	r26, r24
    32dc:	cb 01       	movw	r24, r22
    32de:	8f 8f       	std	Y+31, r24	; 0x1f
    32e0:	98 a3       	std	Y+32, r25	; 0x20
    32e2:	a9 a3       	std	Y+33, r26	; 0x21
    32e4:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    32e6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    32e8:	78 a1       	ldd	r23, Y+32	; 0x20
    32ea:	89 a1       	ldd	r24, Y+33	; 0x21
    32ec:	9a a1       	ldd	r25, Y+34	; 0x22
    32ee:	20 e0       	ldi	r18, 0x00	; 0
    32f0:	30 e0       	ldi	r19, 0x00	; 0
    32f2:	40 e8       	ldi	r20, 0x80	; 128
    32f4:	5f e3       	ldi	r21, 0x3F	; 63
    32f6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    32fa:	88 23       	and	r24, r24
    32fc:	1c f4       	brge	.+6      	; 0x3304 <LCD_Send_Data+0x6aa>
		__ticks = 1;
    32fe:	81 e0       	ldi	r24, 0x01	; 1
    3300:	8e 8f       	std	Y+30, r24	; 0x1e
    3302:	91 c0       	rjmp	.+290    	; 0x3426 <LCD_Send_Data+0x7cc>
	else if (__tmp > 255)
    3304:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3306:	78 a1       	ldd	r23, Y+32	; 0x20
    3308:	89 a1       	ldd	r24, Y+33	; 0x21
    330a:	9a a1       	ldd	r25, Y+34	; 0x22
    330c:	20 e0       	ldi	r18, 0x00	; 0
    330e:	30 e0       	ldi	r19, 0x00	; 0
    3310:	4f e7       	ldi	r20, 0x7F	; 127
    3312:	53 e4       	ldi	r21, 0x43	; 67
    3314:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3318:	18 16       	cp	r1, r24
    331a:	0c f0       	brlt	.+2      	; 0x331e <LCD_Send_Data+0x6c4>
    331c:	7b c0       	rjmp	.+246    	; 0x3414 <LCD_Send_Data+0x7ba>
	{
		_delay_ms(__us / 1000.0);
    331e:	6b a1       	ldd	r22, Y+35	; 0x23
    3320:	7c a1       	ldd	r23, Y+36	; 0x24
    3322:	8d a1       	ldd	r24, Y+37	; 0x25
    3324:	9e a1       	ldd	r25, Y+38	; 0x26
    3326:	20 e0       	ldi	r18, 0x00	; 0
    3328:	30 e0       	ldi	r19, 0x00	; 0
    332a:	4a e7       	ldi	r20, 0x7A	; 122
    332c:	54 e4       	ldi	r21, 0x44	; 68
    332e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3332:	dc 01       	movw	r26, r24
    3334:	cb 01       	movw	r24, r22
    3336:	8a 8f       	std	Y+26, r24	; 0x1a
    3338:	9b 8f       	std	Y+27, r25	; 0x1b
    333a:	ac 8f       	std	Y+28, r26	; 0x1c
    333c:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    333e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3340:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3342:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3344:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3346:	20 e0       	ldi	r18, 0x00	; 0
    3348:	30 e0       	ldi	r19, 0x00	; 0
    334a:	4a ef       	ldi	r20, 0xFA	; 250
    334c:	54 e4       	ldi	r21, 0x44	; 68
    334e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3352:	dc 01       	movw	r26, r24
    3354:	cb 01       	movw	r24, r22
    3356:	8e 8b       	std	Y+22, r24	; 0x16
    3358:	9f 8b       	std	Y+23, r25	; 0x17
    335a:	a8 8f       	std	Y+24, r26	; 0x18
    335c:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    335e:	6e 89       	ldd	r22, Y+22	; 0x16
    3360:	7f 89       	ldd	r23, Y+23	; 0x17
    3362:	88 8d       	ldd	r24, Y+24	; 0x18
    3364:	99 8d       	ldd	r25, Y+25	; 0x19
    3366:	20 e0       	ldi	r18, 0x00	; 0
    3368:	30 e0       	ldi	r19, 0x00	; 0
    336a:	40 e8       	ldi	r20, 0x80	; 128
    336c:	5f e3       	ldi	r21, 0x3F	; 63
    336e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3372:	88 23       	and	r24, r24
    3374:	2c f4       	brge	.+10     	; 0x3380 <LCD_Send_Data+0x726>
		__ticks = 1;
    3376:	81 e0       	ldi	r24, 0x01	; 1
    3378:	90 e0       	ldi	r25, 0x00	; 0
    337a:	9d 8b       	std	Y+21, r25	; 0x15
    337c:	8c 8b       	std	Y+20, r24	; 0x14
    337e:	3f c0       	rjmp	.+126    	; 0x33fe <LCD_Send_Data+0x7a4>
	else if (__tmp > 65535)
    3380:	6e 89       	ldd	r22, Y+22	; 0x16
    3382:	7f 89       	ldd	r23, Y+23	; 0x17
    3384:	88 8d       	ldd	r24, Y+24	; 0x18
    3386:	99 8d       	ldd	r25, Y+25	; 0x19
    3388:	20 e0       	ldi	r18, 0x00	; 0
    338a:	3f ef       	ldi	r19, 0xFF	; 255
    338c:	4f e7       	ldi	r20, 0x7F	; 127
    338e:	57 e4       	ldi	r21, 0x47	; 71
    3390:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3394:	18 16       	cp	r1, r24
    3396:	4c f5       	brge	.+82     	; 0x33ea <LCD_Send_Data+0x790>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3398:	6a 8d       	ldd	r22, Y+26	; 0x1a
    339a:	7b 8d       	ldd	r23, Y+27	; 0x1b
    339c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    339e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    33a0:	20 e0       	ldi	r18, 0x00	; 0
    33a2:	30 e0       	ldi	r19, 0x00	; 0
    33a4:	40 e2       	ldi	r20, 0x20	; 32
    33a6:	51 e4       	ldi	r21, 0x41	; 65
    33a8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    33ac:	dc 01       	movw	r26, r24
    33ae:	cb 01       	movw	r24, r22
    33b0:	bc 01       	movw	r22, r24
    33b2:	cd 01       	movw	r24, r26
    33b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33b8:	dc 01       	movw	r26, r24
    33ba:	cb 01       	movw	r24, r22
    33bc:	9d 8b       	std	Y+21, r25	; 0x15
    33be:	8c 8b       	std	Y+20, r24	; 0x14
    33c0:	0f c0       	rjmp	.+30     	; 0x33e0 <LCD_Send_Data+0x786>
    33c2:	88 ec       	ldi	r24, 0xC8	; 200
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	9b 8b       	std	Y+19, r25	; 0x13
    33c8:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    33ca:	8a 89       	ldd	r24, Y+18	; 0x12
    33cc:	9b 89       	ldd	r25, Y+19	; 0x13
    33ce:	01 97       	sbiw	r24, 0x01	; 1
    33d0:	f1 f7       	brne	.-4      	; 0x33ce <LCD_Send_Data+0x774>
    33d2:	9b 8b       	std	Y+19, r25	; 0x13
    33d4:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33d6:	8c 89       	ldd	r24, Y+20	; 0x14
    33d8:	9d 89       	ldd	r25, Y+21	; 0x15
    33da:	01 97       	sbiw	r24, 0x01	; 1
    33dc:	9d 8b       	std	Y+21, r25	; 0x15
    33de:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33e0:	8c 89       	ldd	r24, Y+20	; 0x14
    33e2:	9d 89       	ldd	r25, Y+21	; 0x15
    33e4:	00 97       	sbiw	r24, 0x00	; 0
    33e6:	69 f7       	brne	.-38     	; 0x33c2 <LCD_Send_Data+0x768>
    33e8:	24 c0       	rjmp	.+72     	; 0x3432 <LCD_Send_Data+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33ea:	6e 89       	ldd	r22, Y+22	; 0x16
    33ec:	7f 89       	ldd	r23, Y+23	; 0x17
    33ee:	88 8d       	ldd	r24, Y+24	; 0x18
    33f0:	99 8d       	ldd	r25, Y+25	; 0x19
    33f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33f6:	dc 01       	movw	r26, r24
    33f8:	cb 01       	movw	r24, r22
    33fa:	9d 8b       	std	Y+21, r25	; 0x15
    33fc:	8c 8b       	std	Y+20, r24	; 0x14
    33fe:	8c 89       	ldd	r24, Y+20	; 0x14
    3400:	9d 89       	ldd	r25, Y+21	; 0x15
    3402:	99 8b       	std	Y+17, r25	; 0x11
    3404:	88 8b       	std	Y+16, r24	; 0x10
    3406:	88 89       	ldd	r24, Y+16	; 0x10
    3408:	99 89       	ldd	r25, Y+17	; 0x11
    340a:	01 97       	sbiw	r24, 0x01	; 1
    340c:	f1 f7       	brne	.-4      	; 0x340a <LCD_Send_Data+0x7b0>
    340e:	99 8b       	std	Y+17, r25	; 0x11
    3410:	88 8b       	std	Y+16, r24	; 0x10
    3412:	0f c0       	rjmp	.+30     	; 0x3432 <LCD_Send_Data+0x7d8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3414:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3416:	78 a1       	ldd	r23, Y+32	; 0x20
    3418:	89 a1       	ldd	r24, Y+33	; 0x21
    341a:	9a a1       	ldd	r25, Y+34	; 0x22
    341c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3420:	dc 01       	movw	r26, r24
    3422:	cb 01       	movw	r24, r22
    3424:	8e 8f       	std	Y+30, r24	; 0x1e
    3426:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3428:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    342a:	8f 85       	ldd	r24, Y+15	; 0x0f
    342c:	8a 95       	dec	r24
    342e:	f1 f7       	brne	.-4      	; 0x342c <LCD_Send_Data+0x7d2>
    3430:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(5);
	DIO_SetPinValue(LCD_GROUP_CONTROL, LCD_E_PIN, HIGH);
    3432:	83 e0       	ldi	r24, 0x03	; 3
    3434:	65 e0       	ldi	r22, 0x05	; 5
    3436:	41 e0       	ldi	r20, 0x01	; 1
    3438:	0e 94 4f 07 	call	0xe9e	; 0xe9e <DIO_SetPinValue>
    343c:	80 e0       	ldi	r24, 0x00	; 0
    343e:	90 e0       	ldi	r25, 0x00	; 0
    3440:	a0 e2       	ldi	r26, 0x20	; 32
    3442:	b1 e4       	ldi	r27, 0x41	; 65
    3444:	8b 87       	std	Y+11, r24	; 0x0b
    3446:	9c 87       	std	Y+12, r25	; 0x0c
    3448:	ad 87       	std	Y+13, r26	; 0x0d
    344a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    344c:	6b 85       	ldd	r22, Y+11	; 0x0b
    344e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3450:	8d 85       	ldd	r24, Y+13	; 0x0d
    3452:	9e 85       	ldd	r25, Y+14	; 0x0e
    3454:	20 e0       	ldi	r18, 0x00	; 0
    3456:	30 e0       	ldi	r19, 0x00	; 0
    3458:	4a ef       	ldi	r20, 0xFA	; 250
    345a:	54 e4       	ldi	r21, 0x44	; 68
    345c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3460:	dc 01       	movw	r26, r24
    3462:	cb 01       	movw	r24, r22
    3464:	8f 83       	std	Y+7, r24	; 0x07
    3466:	98 87       	std	Y+8, r25	; 0x08
    3468:	a9 87       	std	Y+9, r26	; 0x09
    346a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    346c:	6f 81       	ldd	r22, Y+7	; 0x07
    346e:	78 85       	ldd	r23, Y+8	; 0x08
    3470:	89 85       	ldd	r24, Y+9	; 0x09
    3472:	9a 85       	ldd	r25, Y+10	; 0x0a
    3474:	20 e0       	ldi	r18, 0x00	; 0
    3476:	30 e0       	ldi	r19, 0x00	; 0
    3478:	40 e8       	ldi	r20, 0x80	; 128
    347a:	5f e3       	ldi	r21, 0x3F	; 63
    347c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3480:	88 23       	and	r24, r24
    3482:	2c f4       	brge	.+10     	; 0x348e <LCD_Send_Data+0x834>
		__ticks = 1;
    3484:	81 e0       	ldi	r24, 0x01	; 1
    3486:	90 e0       	ldi	r25, 0x00	; 0
    3488:	9e 83       	std	Y+6, r25	; 0x06
    348a:	8d 83       	std	Y+5, r24	; 0x05
    348c:	3f c0       	rjmp	.+126    	; 0x350c <LCD_Send_Data+0x8b2>
	else if (__tmp > 65535)
    348e:	6f 81       	ldd	r22, Y+7	; 0x07
    3490:	78 85       	ldd	r23, Y+8	; 0x08
    3492:	89 85       	ldd	r24, Y+9	; 0x09
    3494:	9a 85       	ldd	r25, Y+10	; 0x0a
    3496:	20 e0       	ldi	r18, 0x00	; 0
    3498:	3f ef       	ldi	r19, 0xFF	; 255
    349a:	4f e7       	ldi	r20, 0x7F	; 127
    349c:	57 e4       	ldi	r21, 0x47	; 71
    349e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    34a2:	18 16       	cp	r1, r24
    34a4:	4c f5       	brge	.+82     	; 0x34f8 <LCD_Send_Data+0x89e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    34a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    34aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    34ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    34ae:	20 e0       	ldi	r18, 0x00	; 0
    34b0:	30 e0       	ldi	r19, 0x00	; 0
    34b2:	40 e2       	ldi	r20, 0x20	; 32
    34b4:	51 e4       	ldi	r21, 0x41	; 65
    34b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    34ba:	dc 01       	movw	r26, r24
    34bc:	cb 01       	movw	r24, r22
    34be:	bc 01       	movw	r22, r24
    34c0:	cd 01       	movw	r24, r26
    34c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34c6:	dc 01       	movw	r26, r24
    34c8:	cb 01       	movw	r24, r22
    34ca:	9e 83       	std	Y+6, r25	; 0x06
    34cc:	8d 83       	std	Y+5, r24	; 0x05
    34ce:	0f c0       	rjmp	.+30     	; 0x34ee <LCD_Send_Data+0x894>
    34d0:	88 ec       	ldi	r24, 0xC8	; 200
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	9c 83       	std	Y+4, r25	; 0x04
    34d6:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    34d8:	8b 81       	ldd	r24, Y+3	; 0x03
    34da:	9c 81       	ldd	r25, Y+4	; 0x04
    34dc:	01 97       	sbiw	r24, 0x01	; 1
    34de:	f1 f7       	brne	.-4      	; 0x34dc <LCD_Send_Data+0x882>
    34e0:	9c 83       	std	Y+4, r25	; 0x04
    34e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e4:	8d 81       	ldd	r24, Y+5	; 0x05
    34e6:	9e 81       	ldd	r25, Y+6	; 0x06
    34e8:	01 97       	sbiw	r24, 0x01	; 1
    34ea:	9e 83       	std	Y+6, r25	; 0x06
    34ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34ee:	8d 81       	ldd	r24, Y+5	; 0x05
    34f0:	9e 81       	ldd	r25, Y+6	; 0x06
    34f2:	00 97       	sbiw	r24, 0x00	; 0
    34f4:	69 f7       	brne	.-38     	; 0x34d0 <LCD_Send_Data+0x876>
    34f6:	14 c0       	rjmp	.+40     	; 0x3520 <LCD_Send_Data+0x8c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34f8:	6f 81       	ldd	r22, Y+7	; 0x07
    34fa:	78 85       	ldd	r23, Y+8	; 0x08
    34fc:	89 85       	ldd	r24, Y+9	; 0x09
    34fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3500:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3504:	dc 01       	movw	r26, r24
    3506:	cb 01       	movw	r24, r22
    3508:	9e 83       	std	Y+6, r25	; 0x06
    350a:	8d 83       	std	Y+5, r24	; 0x05
    350c:	8d 81       	ldd	r24, Y+5	; 0x05
    350e:	9e 81       	ldd	r25, Y+6	; 0x06
    3510:	9a 83       	std	Y+2, r25	; 0x02
    3512:	89 83       	std	Y+1, r24	; 0x01
    3514:	89 81       	ldd	r24, Y+1	; 0x01
    3516:	9a 81       	ldd	r25, Y+2	; 0x02
    3518:	01 97       	sbiw	r24, 0x01	; 1
    351a:	f1 f7       	brne	.-4      	; 0x3518 <LCD_Send_Data+0x8be>
    351c:	9a 83       	std	Y+2, r25	; 0x02
    351e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    3520:	c1 59       	subi	r28, 0x91	; 145
    3522:	df 4f       	sbci	r29, 0xFF	; 255
    3524:	0f b6       	in	r0, 0x3f	; 63
    3526:	f8 94       	cli
    3528:	de bf       	out	0x3e, r29	; 62
    352a:	0f be       	out	0x3f, r0	; 63
    352c:	cd bf       	out	0x3d, r28	; 61
    352e:	cf 91       	pop	r28
    3530:	df 91       	pop	r29
    3532:	1f 91       	pop	r17
    3534:	0f 91       	pop	r16
    3536:	08 95       	ret

00003538 <LCD_Send_string>:

void LCD_Send_string(u8 *ptr) {
    3538:	df 93       	push	r29
    353a:	cf 93       	push	r28
    353c:	00 d0       	rcall	.+0      	; 0x353e <LCD_Send_string+0x6>
    353e:	0f 92       	push	r0
    3540:	cd b7       	in	r28, 0x3d	; 61
    3542:	de b7       	in	r29, 0x3e	; 62
    3544:	9b 83       	std	Y+3, r25	; 0x03
    3546:	8a 83       	std	Y+2, r24	; 0x02
	u8 index = 0;
    3548:	19 82       	std	Y+1, r1	; 0x01
    354a:	0e c0       	rjmp	.+28     	; 0x3568 <LCD_Send_string+0x30>
	while (ptr[index] != '\0') {
		LCD_Send_Data(ptr[index]);
    354c:	89 81       	ldd	r24, Y+1	; 0x01
    354e:	28 2f       	mov	r18, r24
    3550:	30 e0       	ldi	r19, 0x00	; 0
    3552:	8a 81       	ldd	r24, Y+2	; 0x02
    3554:	9b 81       	ldd	r25, Y+3	; 0x03
    3556:	fc 01       	movw	r30, r24
    3558:	e2 0f       	add	r30, r18
    355a:	f3 1f       	adc	r31, r19
    355c:	80 81       	ld	r24, Z
    355e:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <LCD_Send_Data>
		index++;
    3562:	89 81       	ldd	r24, Y+1	; 0x01
    3564:	8f 5f       	subi	r24, 0xFF	; 255
    3566:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}

void LCD_Send_string(u8 *ptr) {
	u8 index = 0;
	while (ptr[index] != '\0') {
    3568:	89 81       	ldd	r24, Y+1	; 0x01
    356a:	28 2f       	mov	r18, r24
    356c:	30 e0       	ldi	r19, 0x00	; 0
    356e:	8a 81       	ldd	r24, Y+2	; 0x02
    3570:	9b 81       	ldd	r25, Y+3	; 0x03
    3572:	fc 01       	movw	r30, r24
    3574:	e2 0f       	add	r30, r18
    3576:	f3 1f       	adc	r31, r19
    3578:	80 81       	ld	r24, Z
    357a:	88 23       	and	r24, r24
    357c:	39 f7       	brne	.-50     	; 0x354c <LCD_Send_string+0x14>
		LCD_Send_Data(ptr[index]);
		index++;
	}

}
    357e:	0f 90       	pop	r0
    3580:	0f 90       	pop	r0
    3582:	0f 90       	pop	r0
    3584:	cf 91       	pop	r28
    3586:	df 91       	pop	r29
    3588:	08 95       	ret

0000358a <LCD_Clear>:

void LCD_Clear(void) {
    358a:	df 93       	push	r29
    358c:	cf 93       	push	r28
    358e:	cd b7       	in	r28, 0x3d	; 61
    3590:	de b7       	in	r29, 0x3e	; 62
	LCD_Send_Command(LCD_CLEAR);
    3592:	81 e0       	ldi	r24, 0x01	; 1
    3594:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
}
    3598:	cf 91       	pop	r28
    359a:	df 91       	pop	r29
    359c:	08 95       	ret

0000359e <LCD_GOTOXY>:

void LCD_GOTOXY(u8 raw, u8 col) {
    359e:	df 93       	push	r29
    35a0:	cf 93       	push	r28
    35a2:	00 d0       	rcall	.+0      	; 0x35a4 <LCD_GOTOXY+0x6>
    35a4:	00 d0       	rcall	.+0      	; 0x35a6 <LCD_GOTOXY+0x8>
    35a6:	cd b7       	in	r28, 0x3d	; 61
    35a8:	de b7       	in	r29, 0x3e	; 62
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	6a 83       	std	Y+2, r22	; 0x02

	switch (raw) {
    35ae:	89 81       	ldd	r24, Y+1	; 0x01
    35b0:	28 2f       	mov	r18, r24
    35b2:	30 e0       	ldi	r19, 0x00	; 0
    35b4:	3c 83       	std	Y+4, r19	; 0x04
    35b6:	2b 83       	std	Y+3, r18	; 0x03
    35b8:	8b 81       	ldd	r24, Y+3	; 0x03
    35ba:	9c 81       	ldd	r25, Y+4	; 0x04
    35bc:	81 30       	cpi	r24, 0x01	; 1
    35be:	91 05       	cpc	r25, r1
    35c0:	31 f0       	breq	.+12     	; 0x35ce <LCD_GOTOXY+0x30>
    35c2:	2b 81       	ldd	r18, Y+3	; 0x03
    35c4:	3c 81       	ldd	r19, Y+4	; 0x04
    35c6:	22 30       	cpi	r18, 0x02	; 2
    35c8:	31 05       	cpc	r19, r1
    35ca:	31 f0       	breq	.+12     	; 0x35d8 <LCD_GOTOXY+0x3a>
    35cc:	0a c0       	rjmp	.+20     	; 0x35e2 <LCD_GOTOXY+0x44>
	case 1:
		LCD_Send_Command((0x00 + col) | (0x80));
    35ce:	8a 81       	ldd	r24, Y+2	; 0x02
    35d0:	80 68       	ori	r24, 0x80	; 128
    35d2:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
    35d6:	05 c0       	rjmp	.+10     	; 0x35e2 <LCD_GOTOXY+0x44>
		break;
	case 2:
		LCD_Send_Command((0x40 + col) | (0x80));
    35d8:	8a 81       	ldd	r24, Y+2	; 0x02
    35da:	80 5c       	subi	r24, 0xC0	; 192
    35dc:	80 68       	ori	r24, 0x80	; 128
    35de:	0e 94 be 11 	call	0x237c	; 0x237c <LCD_Send_Command>
		break;
	default:
		break;
	}

}
    35e2:	0f 90       	pop	r0
    35e4:	0f 90       	pop	r0
    35e6:	0f 90       	pop	r0
    35e8:	0f 90       	pop	r0
    35ea:	cf 91       	pop	r28
    35ec:	df 91       	pop	r29
    35ee:	08 95       	ret

000035f0 <LED_voidSetConfig>:
#include "LED_Pcfg.h"
#include "LED_Private.h"


void LED_voidSetConfig(LED_Type Copy_strLedConfig)
{
    35f0:	df 93       	push	r29
    35f2:	cf 93       	push	r28
    35f4:	00 d0       	rcall	.+0      	; 0x35f6 <LED_voidSetConfig+0x6>
    35f6:	0f 92       	push	r0
    35f8:	cd b7       	in	r28, 0x3d	; 61
    35fa:	de b7       	in	r29, 0x3e	; 62
    35fc:	69 83       	std	Y+1, r22	; 0x01
    35fe:	7a 83       	std	Y+2, r23	; 0x02
    3600:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDirection(Copy_strLedConfig.LED_Port,Copy_strLedConfig.LED_Pin,DIO_OUTPUT);
    3602:	89 81       	ldd	r24, Y+1	; 0x01
    3604:	9a 81       	ldd	r25, Y+2	; 0x02
    3606:	69 2f       	mov	r22, r25
    3608:	41 e0       	ldi	r20, 0x01	; 1
    360a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>

}
    360e:	0f 90       	pop	r0
    3610:	0f 90       	pop	r0
    3612:	0f 90       	pop	r0
    3614:	cf 91       	pop	r28
    3616:	df 91       	pop	r29
    3618:	08 95       	ret

0000361a <LED_voidOn>:
void LED_voidOn(LED_Type Copy_strLedConfig)
{
    361a:	df 93       	push	r29
    361c:	cf 93       	push	r28
    361e:	00 d0       	rcall	.+0      	; 0x3620 <LED_voidOn+0x6>
    3620:	0f 92       	push	r0
    3622:	cd b7       	in	r28, 0x3d	; 61
    3624:	de b7       	in	r29, 0x3e	; 62
    3626:	69 83       	std	Y+1, r22	; 0x01
    3628:	7a 83       	std	Y+2, r23	; 0x02
    362a:	8b 83       	std	Y+3, r24	; 0x03
	if(Copy_strLedConfig.LED_Connection==LED_FORWARD)
    362c:	8b 81       	ldd	r24, Y+3	; 0x03
    362e:	81 30       	cpi	r24, 0x01	; 1
    3630:	39 f4       	brne	.+14     	; 0x3640 <LED_voidOn+0x26>
	{
		DIO_voidSetPinValue(Copy_strLedConfig.LED_Port,Copy_strLedConfig.LED_Pin,DIO_HIGH);
    3632:	89 81       	ldd	r24, Y+1	; 0x01
    3634:	9a 81       	ldd	r25, Y+2	; 0x02
    3636:	69 2f       	mov	r22, r25
    3638:	41 e0       	ldi	r20, 0x01	; 1
    363a:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
    363e:	09 c0       	rjmp	.+18     	; 0x3652 <LED_voidOn+0x38>
	}
	else if(Copy_strLedConfig.LED_Connection==LED_BACKWARD)
    3640:	8b 81       	ldd	r24, Y+3	; 0x03
    3642:	88 23       	and	r24, r24
    3644:	31 f4       	brne	.+12     	; 0x3652 <LED_voidOn+0x38>
	{
		DIO_voidSetPinValue(Copy_strLedConfig.LED_Port,Copy_strLedConfig.LED_Pin,DIO_LOW);
    3646:	89 81       	ldd	r24, Y+1	; 0x01
    3648:	9a 81       	ldd	r25, Y+2	; 0x02
    364a:	69 2f       	mov	r22, r25
    364c:	40 e0       	ldi	r20, 0x00	; 0
    364e:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
	}
}
    3652:	0f 90       	pop	r0
    3654:	0f 90       	pop	r0
    3656:	0f 90       	pop	r0
    3658:	cf 91       	pop	r28
    365a:	df 91       	pop	r29
    365c:	08 95       	ret

0000365e <LED_voidOff>:
void LED_voidOff(LED_Type Copy_strLedConfig)
{
    365e:	df 93       	push	r29
    3660:	cf 93       	push	r28
    3662:	00 d0       	rcall	.+0      	; 0x3664 <LED_voidOff+0x6>
    3664:	0f 92       	push	r0
    3666:	cd b7       	in	r28, 0x3d	; 61
    3668:	de b7       	in	r29, 0x3e	; 62
    366a:	69 83       	std	Y+1, r22	; 0x01
    366c:	7a 83       	std	Y+2, r23	; 0x02
    366e:	8b 83       	std	Y+3, r24	; 0x03
	if(Copy_strLedConfig.LED_Connection==LED_FORWARD)
    3670:	8b 81       	ldd	r24, Y+3	; 0x03
    3672:	81 30       	cpi	r24, 0x01	; 1
    3674:	39 f4       	brne	.+14     	; 0x3684 <LED_voidOff+0x26>
	{
		DIO_voidSetPinValue(Copy_strLedConfig.LED_Port,Copy_strLedConfig.LED_Pin,DIO_LOW);
    3676:	89 81       	ldd	r24, Y+1	; 0x01
    3678:	9a 81       	ldd	r25, Y+2	; 0x02
    367a:	69 2f       	mov	r22, r25
    367c:	40 e0       	ldi	r20, 0x00	; 0
    367e:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
    3682:	09 c0       	rjmp	.+18     	; 0x3696 <LED_voidOff+0x38>
	}
	else if(Copy_strLedConfig.LED_Connection==LED_BACKWARD)
    3684:	8b 81       	ldd	r24, Y+3	; 0x03
    3686:	88 23       	and	r24, r24
    3688:	31 f4       	brne	.+12     	; 0x3696 <LED_voidOff+0x38>
	{
		DIO_voidSetPinValue(Copy_strLedConfig.LED_Port,Copy_strLedConfig.LED_Pin,DIO_HIGH);
    368a:	89 81       	ldd	r24, Y+1	; 0x01
    368c:	9a 81       	ldd	r25, Y+2	; 0x02
    368e:	69 2f       	mov	r22, r25
    3690:	41 e0       	ldi	r20, 0x01	; 1
    3692:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
	}
}
    3696:	0f 90       	pop	r0
    3698:	0f 90       	pop	r0
    369a:	0f 90       	pop	r0
    369c:	cf 91       	pop	r28
    369e:	df 91       	pop	r29
    36a0:	08 95       	ret

000036a2 <LED_voidLedTogglee>:

void LED_voidLedTogglee(LED_Type Copy_strLedConfig)
{
    36a2:	df 93       	push	r29
    36a4:	cf 93       	push	r28
    36a6:	cd b7       	in	r28, 0x3d	; 61
    36a8:	de b7       	in	r29, 0x3e	; 62
    36aa:	6f 97       	sbiw	r28, 0x1f	; 31
    36ac:	0f b6       	in	r0, 0x3f	; 63
    36ae:	f8 94       	cli
    36b0:	de bf       	out	0x3e, r29	; 62
    36b2:	0f be       	out	0x3f, r0	; 63
    36b4:	cd bf       	out	0x3d, r28	; 61
    36b6:	6d 8f       	std	Y+29, r22	; 0x1d
    36b8:	7e 8f       	std	Y+30, r23	; 0x1e
    36ba:	8f 8f       	std	Y+31, r24	; 0x1f
	LED_voidOn( Copy_strLedConfig);
    36bc:	6d 8d       	ldd	r22, Y+29	; 0x1d
    36be:	7e 8d       	ldd	r23, Y+30	; 0x1e
    36c0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    36c2:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
    36c6:	80 e0       	ldi	r24, 0x00	; 0
    36c8:	90 e0       	ldi	r25, 0x00	; 0
    36ca:	aa ef       	ldi	r26, 0xFA	; 250
    36cc:	b3 e4       	ldi	r27, 0x43	; 67
    36ce:	89 8f       	std	Y+25, r24	; 0x19
    36d0:	9a 8f       	std	Y+26, r25	; 0x1a
    36d2:	ab 8f       	std	Y+27, r26	; 0x1b
    36d4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36d6:	69 8d       	ldd	r22, Y+25	; 0x19
    36d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36de:	20 e0       	ldi	r18, 0x00	; 0
    36e0:	30 e0       	ldi	r19, 0x00	; 0
    36e2:	4a ef       	ldi	r20, 0xFA	; 250
    36e4:	54 e4       	ldi	r21, 0x44	; 68
    36e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    36ea:	dc 01       	movw	r26, r24
    36ec:	cb 01       	movw	r24, r22
    36ee:	8d 8b       	std	Y+21, r24	; 0x15
    36f0:	9e 8b       	std	Y+22, r25	; 0x16
    36f2:	af 8b       	std	Y+23, r26	; 0x17
    36f4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    36f6:	6d 89       	ldd	r22, Y+21	; 0x15
    36f8:	7e 89       	ldd	r23, Y+22	; 0x16
    36fa:	8f 89       	ldd	r24, Y+23	; 0x17
    36fc:	98 8d       	ldd	r25, Y+24	; 0x18
    36fe:	20 e0       	ldi	r18, 0x00	; 0
    3700:	30 e0       	ldi	r19, 0x00	; 0
    3702:	40 e8       	ldi	r20, 0x80	; 128
    3704:	5f e3       	ldi	r21, 0x3F	; 63
    3706:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    370a:	88 23       	and	r24, r24
    370c:	2c f4       	brge	.+10     	; 0x3718 <LED_voidLedTogglee+0x76>
		__ticks = 1;
    370e:	81 e0       	ldi	r24, 0x01	; 1
    3710:	90 e0       	ldi	r25, 0x00	; 0
    3712:	9c 8b       	std	Y+20, r25	; 0x14
    3714:	8b 8b       	std	Y+19, r24	; 0x13
    3716:	3f c0       	rjmp	.+126    	; 0x3796 <LED_voidLedTogglee+0xf4>
	else if (__tmp > 65535)
    3718:	6d 89       	ldd	r22, Y+21	; 0x15
    371a:	7e 89       	ldd	r23, Y+22	; 0x16
    371c:	8f 89       	ldd	r24, Y+23	; 0x17
    371e:	98 8d       	ldd	r25, Y+24	; 0x18
    3720:	20 e0       	ldi	r18, 0x00	; 0
    3722:	3f ef       	ldi	r19, 0xFF	; 255
    3724:	4f e7       	ldi	r20, 0x7F	; 127
    3726:	57 e4       	ldi	r21, 0x47	; 71
    3728:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    372c:	18 16       	cp	r1, r24
    372e:	4c f5       	brge	.+82     	; 0x3782 <LED_voidLedTogglee+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3730:	69 8d       	ldd	r22, Y+25	; 0x19
    3732:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3734:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3736:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3738:	20 e0       	ldi	r18, 0x00	; 0
    373a:	30 e0       	ldi	r19, 0x00	; 0
    373c:	40 e2       	ldi	r20, 0x20	; 32
    373e:	51 e4       	ldi	r21, 0x41	; 65
    3740:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	bc 01       	movw	r22, r24
    374a:	cd 01       	movw	r24, r26
    374c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3750:	dc 01       	movw	r26, r24
    3752:	cb 01       	movw	r24, r22
    3754:	9c 8b       	std	Y+20, r25	; 0x14
    3756:	8b 8b       	std	Y+19, r24	; 0x13
    3758:	0f c0       	rjmp	.+30     	; 0x3778 <LED_voidLedTogglee+0xd6>
    375a:	88 ec       	ldi	r24, 0xC8	; 200
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	9a 8b       	std	Y+18, r25	; 0x12
    3760:	89 8b       	std	Y+17, r24	; 0x11
    3762:	89 89       	ldd	r24, Y+17	; 0x11
    3764:	9a 89       	ldd	r25, Y+18	; 0x12
    3766:	01 97       	sbiw	r24, 0x01	; 1
    3768:	f1 f7       	brne	.-4      	; 0x3766 <LED_voidLedTogglee+0xc4>
    376a:	9a 8b       	std	Y+18, r25	; 0x12
    376c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    376e:	8b 89       	ldd	r24, Y+19	; 0x13
    3770:	9c 89       	ldd	r25, Y+20	; 0x14
    3772:	01 97       	sbiw	r24, 0x01	; 1
    3774:	9c 8b       	std	Y+20, r25	; 0x14
    3776:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3778:	8b 89       	ldd	r24, Y+19	; 0x13
    377a:	9c 89       	ldd	r25, Y+20	; 0x14
    377c:	00 97       	sbiw	r24, 0x00	; 0
    377e:	69 f7       	brne	.-38     	; 0x375a <LED_voidLedTogglee+0xb8>
    3780:	14 c0       	rjmp	.+40     	; 0x37aa <LED_voidLedTogglee+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3782:	6d 89       	ldd	r22, Y+21	; 0x15
    3784:	7e 89       	ldd	r23, Y+22	; 0x16
    3786:	8f 89       	ldd	r24, Y+23	; 0x17
    3788:	98 8d       	ldd	r25, Y+24	; 0x18
    378a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    378e:	dc 01       	movw	r26, r24
    3790:	cb 01       	movw	r24, r22
    3792:	9c 8b       	std	Y+20, r25	; 0x14
    3794:	8b 8b       	std	Y+19, r24	; 0x13
    3796:	8b 89       	ldd	r24, Y+19	; 0x13
    3798:	9c 89       	ldd	r25, Y+20	; 0x14
    379a:	98 8b       	std	Y+16, r25	; 0x10
    379c:	8f 87       	std	Y+15, r24	; 0x0f
    379e:	8f 85       	ldd	r24, Y+15	; 0x0f
    37a0:	98 89       	ldd	r25, Y+16	; 0x10
    37a2:	01 97       	sbiw	r24, 0x01	; 1
    37a4:	f1 f7       	brne	.-4      	; 0x37a2 <LED_voidLedTogglee+0x100>
    37a6:	98 8b       	std	Y+16, r25	; 0x10
    37a8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	LED_voidOff( Copy_strLedConfig);
    37aa:	6d 8d       	ldd	r22, Y+29	; 0x1d
    37ac:	7e 8d       	ldd	r23, Y+30	; 0x1e
    37ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    37b0:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
    37b4:	80 e0       	ldi	r24, 0x00	; 0
    37b6:	90 e0       	ldi	r25, 0x00	; 0
    37b8:	aa ef       	ldi	r26, 0xFA	; 250
    37ba:	b3 e4       	ldi	r27, 0x43	; 67
    37bc:	8b 87       	std	Y+11, r24	; 0x0b
    37be:	9c 87       	std	Y+12, r25	; 0x0c
    37c0:	ad 87       	std	Y+13, r26	; 0x0d
    37c2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    37c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    37c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    37ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    37cc:	20 e0       	ldi	r18, 0x00	; 0
    37ce:	30 e0       	ldi	r19, 0x00	; 0
    37d0:	4a ef       	ldi	r20, 0xFA	; 250
    37d2:	54 e4       	ldi	r21, 0x44	; 68
    37d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37d8:	dc 01       	movw	r26, r24
    37da:	cb 01       	movw	r24, r22
    37dc:	8f 83       	std	Y+7, r24	; 0x07
    37de:	98 87       	std	Y+8, r25	; 0x08
    37e0:	a9 87       	std	Y+9, r26	; 0x09
    37e2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    37e4:	6f 81       	ldd	r22, Y+7	; 0x07
    37e6:	78 85       	ldd	r23, Y+8	; 0x08
    37e8:	89 85       	ldd	r24, Y+9	; 0x09
    37ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    37ec:	20 e0       	ldi	r18, 0x00	; 0
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	40 e8       	ldi	r20, 0x80	; 128
    37f2:	5f e3       	ldi	r21, 0x3F	; 63
    37f4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    37f8:	88 23       	and	r24, r24
    37fa:	2c f4       	brge	.+10     	; 0x3806 <LED_voidLedTogglee+0x164>
		__ticks = 1;
    37fc:	81 e0       	ldi	r24, 0x01	; 1
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	9e 83       	std	Y+6, r25	; 0x06
    3802:	8d 83       	std	Y+5, r24	; 0x05
    3804:	3f c0       	rjmp	.+126    	; 0x3884 <LED_voidLedTogglee+0x1e2>
	else if (__tmp > 65535)
    3806:	6f 81       	ldd	r22, Y+7	; 0x07
    3808:	78 85       	ldd	r23, Y+8	; 0x08
    380a:	89 85       	ldd	r24, Y+9	; 0x09
    380c:	9a 85       	ldd	r25, Y+10	; 0x0a
    380e:	20 e0       	ldi	r18, 0x00	; 0
    3810:	3f ef       	ldi	r19, 0xFF	; 255
    3812:	4f e7       	ldi	r20, 0x7F	; 127
    3814:	57 e4       	ldi	r21, 0x47	; 71
    3816:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    381a:	18 16       	cp	r1, r24
    381c:	4c f5       	brge	.+82     	; 0x3870 <LED_voidLedTogglee+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    381e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3820:	7c 85       	ldd	r23, Y+12	; 0x0c
    3822:	8d 85       	ldd	r24, Y+13	; 0x0d
    3824:	9e 85       	ldd	r25, Y+14	; 0x0e
    3826:	20 e0       	ldi	r18, 0x00	; 0
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	40 e2       	ldi	r20, 0x20	; 32
    382c:	51 e4       	ldi	r21, 0x41	; 65
    382e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3832:	dc 01       	movw	r26, r24
    3834:	cb 01       	movw	r24, r22
    3836:	bc 01       	movw	r22, r24
    3838:	cd 01       	movw	r24, r26
    383a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    383e:	dc 01       	movw	r26, r24
    3840:	cb 01       	movw	r24, r22
    3842:	9e 83       	std	Y+6, r25	; 0x06
    3844:	8d 83       	std	Y+5, r24	; 0x05
    3846:	0f c0       	rjmp	.+30     	; 0x3866 <LED_voidLedTogglee+0x1c4>
    3848:	88 ec       	ldi	r24, 0xC8	; 200
    384a:	90 e0       	ldi	r25, 0x00	; 0
    384c:	9c 83       	std	Y+4, r25	; 0x04
    384e:	8b 83       	std	Y+3, r24	; 0x03
    3850:	8b 81       	ldd	r24, Y+3	; 0x03
    3852:	9c 81       	ldd	r25, Y+4	; 0x04
    3854:	01 97       	sbiw	r24, 0x01	; 1
    3856:	f1 f7       	brne	.-4      	; 0x3854 <LED_voidLedTogglee+0x1b2>
    3858:	9c 83       	std	Y+4, r25	; 0x04
    385a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    385c:	8d 81       	ldd	r24, Y+5	; 0x05
    385e:	9e 81       	ldd	r25, Y+6	; 0x06
    3860:	01 97       	sbiw	r24, 0x01	; 1
    3862:	9e 83       	std	Y+6, r25	; 0x06
    3864:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3866:	8d 81       	ldd	r24, Y+5	; 0x05
    3868:	9e 81       	ldd	r25, Y+6	; 0x06
    386a:	00 97       	sbiw	r24, 0x00	; 0
    386c:	69 f7       	brne	.-38     	; 0x3848 <LED_voidLedTogglee+0x1a6>
    386e:	14 c0       	rjmp	.+40     	; 0x3898 <LED_voidLedTogglee+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3870:	6f 81       	ldd	r22, Y+7	; 0x07
    3872:	78 85       	ldd	r23, Y+8	; 0x08
    3874:	89 85       	ldd	r24, Y+9	; 0x09
    3876:	9a 85       	ldd	r25, Y+10	; 0x0a
    3878:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    387c:	dc 01       	movw	r26, r24
    387e:	cb 01       	movw	r24, r22
    3880:	9e 83       	std	Y+6, r25	; 0x06
    3882:	8d 83       	std	Y+5, r24	; 0x05
    3884:	8d 81       	ldd	r24, Y+5	; 0x05
    3886:	9e 81       	ldd	r25, Y+6	; 0x06
    3888:	9a 83       	std	Y+2, r25	; 0x02
    388a:	89 83       	std	Y+1, r24	; 0x01
    388c:	89 81       	ldd	r24, Y+1	; 0x01
    388e:	9a 81       	ldd	r25, Y+2	; 0x02
    3890:	01 97       	sbiw	r24, 0x01	; 1
    3892:	f1 f7       	brne	.-4      	; 0x3890 <LED_voidLedTogglee+0x1ee>
    3894:	9a 83       	std	Y+2, r25	; 0x02
    3896:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
}
    3898:	6f 96       	adiw	r28, 0x1f	; 31
    389a:	0f b6       	in	r0, 0x3f	; 63
    389c:	f8 94       	cli
    389e:	de bf       	out	0x3e, r29	; 62
    38a0:	0f be       	out	0x3f, r0	; 63
    38a2:	cd bf       	out	0x3d, r28	; 61
    38a4:	cf 91       	pop	r28
    38a6:	df 91       	pop	r29
    38a8:	08 95       	ret

000038aa <SSEG_voidSetConfig>:
#include"STD_TYPES.h"
#include "DIO_Interface.h"
#include"SSEG_Interface.h"
#include"SSEG_Pcfg.h"
void SSEG_voidSetConfig(SSEG_Types Copy_strSetConfig)
{
    38aa:	df 93       	push	r29
    38ac:	cf 93       	push	r28
    38ae:	00 d0       	rcall	.+0      	; 0x38b0 <SSEG_voidSetConfig+0x6>
    38b0:	cd b7       	in	r28, 0x3d	; 61
    38b2:	de b7       	in	r29, 0x3e	; 62
    38b4:	9a 83       	std	Y+2, r25	; 0x02
    38b6:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortDirection(Copy_strSetConfig.SSEG_Port,255);//DDR=1
    38b8:	89 81       	ldd	r24, Y+1	; 0x01
    38ba:	6f ef       	ldi	r22, 0xFF	; 255
    38bc:	0e 94 c9 09 	call	0x1392	; 0x1392 <DIO_voidSetPortDirection>
}
    38c0:	0f 90       	pop	r0
    38c2:	0f 90       	pop	r0
    38c4:	cf 91       	pop	r28
    38c6:	df 91       	pop	r29
    38c8:	08 95       	ret

000038ca <SSEG_voidSendNumber>:
void SSEG_voidSendNumber(SSEG_Types Copy_strSetConfig,u8 Copy_u8Number)
{
    38ca:	df 93       	push	r29
    38cc:	cf 93       	push	r28
    38ce:	cd b7       	in	r28, 0x3d	; 61
    38d0:	de b7       	in	r29, 0x3e	; 62
    38d2:	62 97       	sbiw	r28, 0x12	; 18
    38d4:	0f b6       	in	r0, 0x3f	; 63
    38d6:	f8 94       	cli
    38d8:	de bf       	out	0x3e, r29	; 62
    38da:	0f be       	out	0x3f, r0	; 63
    38dc:	cd bf       	out	0x3d, r28	; 61
    38de:	9c 87       	std	Y+12, r25	; 0x0c
    38e0:	8b 87       	std	Y+11, r24	; 0x0b
    38e2:	6d 87       	std	Y+13, r22	; 0x0d
			  ~0b01101101, /* 5 */
			  ~0b01111101, /* 6 */
			  ~0b00000111, /* 7 */
			  ~0b01111111, /* 8 */
			  ~0b01101111 /* 9 */
			};
    38e4:	ce 01       	movw	r24, r28
    38e6:	01 96       	adiw	r24, 0x01	; 1
    38e8:	9f 87       	std	Y+15, r25	; 0x0f
    38ea:	8e 87       	std	Y+14, r24	; 0x0e
    38ec:	e0 ea       	ldi	r30, 0xA0	; 160
    38ee:	f0 e0       	ldi	r31, 0x00	; 0
    38f0:	f9 8b       	std	Y+17, r31	; 0x11
    38f2:	e8 8b       	std	Y+16, r30	; 0x10
    38f4:	fa e0       	ldi	r31, 0x0A	; 10
    38f6:	fa 8b       	std	Y+18, r31	; 0x12
    38f8:	e8 89       	ldd	r30, Y+16	; 0x10
    38fa:	f9 89       	ldd	r31, Y+17	; 0x11
    38fc:	00 80       	ld	r0, Z
    38fe:	88 89       	ldd	r24, Y+16	; 0x10
    3900:	99 89       	ldd	r25, Y+17	; 0x11
    3902:	01 96       	adiw	r24, 0x01	; 1
    3904:	99 8b       	std	Y+17, r25	; 0x11
    3906:	88 8b       	std	Y+16, r24	; 0x10
    3908:	ee 85       	ldd	r30, Y+14	; 0x0e
    390a:	ff 85       	ldd	r31, Y+15	; 0x0f
    390c:	00 82       	st	Z, r0
    390e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3910:	9f 85       	ldd	r25, Y+15	; 0x0f
    3912:	01 96       	adiw	r24, 0x01	; 1
    3914:	9f 87       	std	Y+15, r25	; 0x0f
    3916:	8e 87       	std	Y+14, r24	; 0x0e
    3918:	9a 89       	ldd	r25, Y+18	; 0x12
    391a:	91 50       	subi	r25, 0x01	; 1
    391c:	9a 8b       	std	Y+18, r25	; 0x12
    391e:	ea 89       	ldd	r30, Y+18	; 0x12
    3920:	ee 23       	and	r30, r30
    3922:	51 f7       	brne	.-44     	; 0x38f8 <SSEG_voidSendNumber+0x2e>
	if(Copy_strSetConfig.SSEG_Type==SSEG_ComanCathode)
    3924:	8c 85       	ldd	r24, Y+12	; 0x0c
    3926:	88 23       	and	r24, r24
    3928:	79 f4       	brne	.+30     	; 0x3948 <SSEG_voidSendNumber+0x7e>
	{
		DIO_voidSetPortValue(Copy_strSetConfig.SSEG_Port,SSEG_u8Number[Copy_u8Number]);//PORT=1 tnwar
    392a:	4b 85       	ldd	r20, Y+11	; 0x0b
    392c:	8d 85       	ldd	r24, Y+13	; 0x0d
    392e:	28 2f       	mov	r18, r24
    3930:	30 e0       	ldi	r19, 0x00	; 0
    3932:	ce 01       	movw	r24, r28
    3934:	01 96       	adiw	r24, 0x01	; 1
    3936:	fc 01       	movw	r30, r24
    3938:	e2 0f       	add	r30, r18
    393a:	f3 1f       	adc	r31, r19
    393c:	90 81       	ld	r25, Z
    393e:	84 2f       	mov	r24, r20
    3940:	69 2f       	mov	r22, r25
    3942:	0e 94 0a 0a 	call	0x1414	; 0x1414 <DIO_voidSetPortValue>
    3946:	13 c0       	rjmp	.+38     	; 0x396e <SSEG_voidSendNumber+0xa4>
	}
	else if(Copy_strSetConfig.SSEG_Type==SSEG_ComanAnode)
    3948:	8c 85       	ldd	r24, Y+12	; 0x0c
    394a:	81 30       	cpi	r24, 0x01	; 1
    394c:	81 f4       	brne	.+32     	; 0x396e <SSEG_voidSendNumber+0xa4>
	{
		DIO_voidSetPortValue(Copy_strSetConfig.SSEG_Port,~(SSEG_u8Number[Copy_u8Number]));//PORT=0 tnwar
    394e:	4b 85       	ldd	r20, Y+11	; 0x0b
    3950:	8d 85       	ldd	r24, Y+13	; 0x0d
    3952:	28 2f       	mov	r18, r24
    3954:	30 e0       	ldi	r19, 0x00	; 0
    3956:	ce 01       	movw	r24, r28
    3958:	01 96       	adiw	r24, 0x01	; 1
    395a:	fc 01       	movw	r30, r24
    395c:	e2 0f       	add	r30, r18
    395e:	f3 1f       	adc	r31, r19
    3960:	80 81       	ld	r24, Z
    3962:	98 2f       	mov	r25, r24
    3964:	90 95       	com	r25
    3966:	84 2f       	mov	r24, r20
    3968:	69 2f       	mov	r22, r25
    396a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <DIO_voidSetPortValue>
	}
}
    396e:	62 96       	adiw	r28, 0x12	; 18
    3970:	0f b6       	in	r0, 0x3f	; 63
    3972:	f8 94       	cli
    3974:	de bf       	out	0x3e, r29	; 62
    3976:	0f be       	out	0x3f, r0	; 63
    3978:	cd bf       	out	0x3d, r28	; 61
    397a:	cf 91       	pop	r28
    397c:	df 91       	pop	r29
    397e:	08 95       	ret

00003980 <SW_voidSetConfig>:
#include"SW_Interface.h"
#include"SW_Pcfg.h"
#include"SW_Private.h"
//obj sw0
void SW_voidSetConfig(sw_types Copy_strSwConfig)//3,1,1
{
    3980:	df 93       	push	r29
    3982:	cf 93       	push	r28
    3984:	00 d0       	rcall	.+0      	; 0x3986 <SW_voidSetConfig+0x6>
    3986:	0f 92       	push	r0
    3988:	cd b7       	in	r28, 0x3d	; 61
    398a:	de b7       	in	r29, 0x3e	; 62
    398c:	69 83       	std	Y+1, r22	; 0x01
    398e:	7a 83       	std	Y+2, r23	; 0x02
    3990:	8b 83       	std	Y+3, r24	; 0x03
	DIO_voidSetPinDirection(Copy_strSwConfig.SW_Port,Copy_strSwConfig.SW_Pin,DIO_INPUT);//3,1,input->ddrd=0
    3992:	89 81       	ldd	r24, Y+1	; 0x01
    3994:	9a 81       	ldd	r25, Y+2	; 0x02
    3996:	69 2f       	mov	r22, r25
    3998:	40 e0       	ldi	r20, 0x00	; 0
    399a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>
	if(Copy_strSwConfig.SW_State==SW_PULLUP)
    399e:	8b 81       	ldd	r24, Y+3	; 0x03
    39a0:	81 30       	cpi	r24, 0x01	; 1
    39a2:	31 f4       	brne	.+12     	; 0x39b0 <SW_voidSetConfig+0x30>
	{
		DIO_voidSetPinValue(Copy_strSwConfig.SW_Port,Copy_strSwConfig.SW_Pin,DIO_HIGH);//portd pin2 =1
    39a4:	89 81       	ldd	r24, Y+1	; 0x01
    39a6:	9a 81       	ldd	r25, Y+2	; 0x02
    39a8:	69 2f       	mov	r22, r25
    39aa:	41 e0       	ldi	r20, 0x01	; 1
    39ac:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
	//	{
	//		DIO_voidSetPinValue(Copy_strButtonConfig.SW_Port,Copy_strButtonConfig.SW_Pin,DIO_LOW);
	//	}m4 m7taga 2gml kda 34an by deffult 2l port=0


}
    39b0:	0f 90       	pop	r0
    39b2:	0f 90       	pop	r0
    39b4:	0f 90       	pop	r0
    39b6:	cf 91       	pop	r28
    39b8:	df 91       	pop	r29
    39ba:	08 95       	ret

000039bc <SW_u8GetButtonState>:
u8 SW_u8GetButtonState(sw_types Copy_strSwConfig)
{
    39bc:	df 93       	push	r29
    39be:	cf 93       	push	r28
    39c0:	00 d0       	rcall	.+0      	; 0x39c2 <SW_u8GetButtonState+0x6>
    39c2:	00 d0       	rcall	.+0      	; 0x39c4 <SW_u8GetButtonState+0x8>
    39c4:	cd b7       	in	r28, 0x3d	; 61
    39c6:	de b7       	in	r29, 0x3e	; 62
    39c8:	6a 83       	std	Y+2, r22	; 0x02
    39ca:	7b 83       	std	Y+3, r23	; 0x03
    39cc:	8c 83       	std	Y+4, r24	; 0x04

	u8 Loc_u8ButtonState=0;
    39ce:	19 82       	std	Y+1, r1	; 0x01
	Loc_u8ButtonState=DIO_u8GetpinValue(Copy_strSwConfig.SW_Port,Copy_strSwConfig.SW_Pin);
    39d0:	8a 81       	ldd	r24, Y+2	; 0x02
    39d2:	9b 81       	ldd	r25, Y+3	; 0x03
    39d4:	69 2f       	mov	r22, r25
    39d6:	0e 94 8d 0c 	call	0x191a	; 0x191a <DIO_u8GetpinValue>
    39da:	89 83       	std	Y+1, r24	; 0x01
	return Loc_u8ButtonState;
    39dc:	89 81       	ldd	r24, Y+1	; 0x01
}
    39de:	0f 90       	pop	r0
    39e0:	0f 90       	pop	r0
    39e2:	0f 90       	pop	r0
    39e4:	0f 90       	pop	r0
    39e6:	cf 91       	pop	r28
    39e8:	df 91       	pop	r29
    39ea:	08 95       	ret

000039ec <main>:
#include"LCD.h"
#include"DIO.h"

u8 volatile flage=0;
int main(void)
{
    39ec:	0f 93       	push	r16
    39ee:	1f 93       	push	r17
    39f0:	df 93       	push	r29
    39f2:	cf 93       	push	r28
    39f4:	cd b7       	in	r28, 0x3d	; 61
    39f6:	de b7       	in	r29, 0x3e	; 62
    39f8:	ce 5a       	subi	r28, 0xAE	; 174
    39fa:	d0 40       	sbci	r29, 0x00	; 0
    39fc:	0f b6       	in	r0, 0x3f	; 63
    39fe:	f8 94       	cli
    3a00:	de bf       	out	0x3e, r29	; 62
    3a02:	0f be       	out	0x3f, r0	; 63
    3a04:	cd bf       	out	0x3d, r28	; 61
	LCD_Vinit();
    3a06:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <LCD_Vinit>
	LCD_Clear();
    3a0a:	0e 94 c5 1a 	call	0x358a	; 0x358a <LCD_Clear>
sw_types SW0={SW_PORTD,SW_PIN2,SW_PULLUP};
    3a0e:	ce 01       	movw	r24, r28
    3a10:	8d 58       	subi	r24, 0x8D	; 141
    3a12:	9f 4f       	sbci	r25, 0xFF	; 255
    3a14:	c4 57       	subi	r28, 0x74	; 116
    3a16:	df 4f       	sbci	r29, 0xFF	; 255
    3a18:	99 83       	std	Y+1, r25	; 0x01
    3a1a:	88 83       	st	Y, r24
    3a1c:	cc 58       	subi	r28, 0x8C	; 140
    3a1e:	d0 40       	sbci	r29, 0x00	; 0
    3a20:	8c eb       	ldi	r24, 0xBC	; 188
    3a22:	90 e0       	ldi	r25, 0x00	; 0
    3a24:	c2 57       	subi	r28, 0x72	; 114
    3a26:	df 4f       	sbci	r29, 0xFF	; 255
    3a28:	99 83       	std	Y+1, r25	; 0x01
    3a2a:	88 83       	st	Y, r24
    3a2c:	ce 58       	subi	r28, 0x8E	; 142
    3a2e:	d0 40       	sbci	r29, 0x00	; 0
    3a30:	93 e0       	ldi	r25, 0x03	; 3
    3a32:	c0 57       	subi	r28, 0x70	; 112
    3a34:	df 4f       	sbci	r29, 0xFF	; 255
    3a36:	98 83       	st	Y, r25
    3a38:	c0 59       	subi	r28, 0x90	; 144
    3a3a:	d0 40       	sbci	r29, 0x00	; 0
    3a3c:	c2 57       	subi	r28, 0x72	; 114
    3a3e:	df 4f       	sbci	r29, 0xFF	; 255
    3a40:	e8 81       	ld	r30, Y
    3a42:	f9 81       	ldd	r31, Y+1	; 0x01
    3a44:	ce 58       	subi	r28, 0x8E	; 142
    3a46:	d0 40       	sbci	r29, 0x00	; 0
    3a48:	00 80       	ld	r0, Z
    3a4a:	c2 57       	subi	r28, 0x72	; 114
    3a4c:	df 4f       	sbci	r29, 0xFF	; 255
    3a4e:	88 81       	ld	r24, Y
    3a50:	99 81       	ldd	r25, Y+1	; 0x01
    3a52:	ce 58       	subi	r28, 0x8E	; 142
    3a54:	d0 40       	sbci	r29, 0x00	; 0
    3a56:	01 96       	adiw	r24, 0x01	; 1
    3a58:	c2 57       	subi	r28, 0x72	; 114
    3a5a:	df 4f       	sbci	r29, 0xFF	; 255
    3a5c:	99 83       	std	Y+1, r25	; 0x01
    3a5e:	88 83       	st	Y, r24
    3a60:	ce 58       	subi	r28, 0x8E	; 142
    3a62:	d0 40       	sbci	r29, 0x00	; 0
    3a64:	c4 57       	subi	r28, 0x74	; 116
    3a66:	df 4f       	sbci	r29, 0xFF	; 255
    3a68:	e8 81       	ld	r30, Y
    3a6a:	f9 81       	ldd	r31, Y+1	; 0x01
    3a6c:	cc 58       	subi	r28, 0x8C	; 140
    3a6e:	d0 40       	sbci	r29, 0x00	; 0
    3a70:	00 82       	st	Z, r0
    3a72:	c4 57       	subi	r28, 0x74	; 116
    3a74:	df 4f       	sbci	r29, 0xFF	; 255
    3a76:	88 81       	ld	r24, Y
    3a78:	99 81       	ldd	r25, Y+1	; 0x01
    3a7a:	cc 58       	subi	r28, 0x8C	; 140
    3a7c:	d0 40       	sbci	r29, 0x00	; 0
    3a7e:	01 96       	adiw	r24, 0x01	; 1
    3a80:	c4 57       	subi	r28, 0x74	; 116
    3a82:	df 4f       	sbci	r29, 0xFF	; 255
    3a84:	99 83       	std	Y+1, r25	; 0x01
    3a86:	88 83       	st	Y, r24
    3a88:	cc 58       	subi	r28, 0x8C	; 140
    3a8a:	d0 40       	sbci	r29, 0x00	; 0
    3a8c:	c0 57       	subi	r28, 0x70	; 112
    3a8e:	df 4f       	sbci	r29, 0xFF	; 255
    3a90:	98 81       	ld	r25, Y
    3a92:	c0 59       	subi	r28, 0x90	; 144
    3a94:	d0 40       	sbci	r29, 0x00	; 0
    3a96:	91 50       	subi	r25, 0x01	; 1
    3a98:	c0 57       	subi	r28, 0x70	; 112
    3a9a:	df 4f       	sbci	r29, 0xFF	; 255
    3a9c:	98 83       	st	Y, r25
    3a9e:	c0 59       	subi	r28, 0x90	; 144
    3aa0:	d0 40       	sbci	r29, 0x00	; 0
    3aa2:	c0 57       	subi	r28, 0x70	; 112
    3aa4:	df 4f       	sbci	r29, 0xFF	; 255
    3aa6:	e8 81       	ld	r30, Y
    3aa8:	c0 59       	subi	r28, 0x90	; 144
    3aaa:	d0 40       	sbci	r29, 0x00	; 0
    3aac:	ee 23       	and	r30, r30
    3aae:	31 f6       	brne	.-116    	; 0x3a3c <main+0x50>
SW_voidSetConfig(SW0);
    3ab0:	fe 01       	movw	r30, r28
    3ab2:	ed 58       	subi	r30, 0x8D	; 141
    3ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab6:	60 81       	ld	r22, Z
    3ab8:	71 81       	ldd	r23, Z+1	; 0x01
    3aba:	82 81       	ldd	r24, Z+2	; 0x02
    3abc:	0e 94 c0 1c 	call	0x3980	; 0x3980 <SW_voidSetConfig>
EINT_voidInt0(FALLING_EDGE);
    3ac0:	80 e0       	ldi	r24, 0x00	; 0
    3ac2:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <EINT_voidInt0>
	SSEG_Types sseg1={SSEG_PORTC,SSEG_ComanCathode};
    3ac6:	fe 01       	movw	r30, r28
    3ac8:	ea 58       	subi	r30, 0x8A	; 138
    3aca:	ff 4f       	sbci	r31, 0xFF	; 255
    3acc:	82 e0       	ldi	r24, 0x02	; 2
    3ace:	80 83       	st	Z, r24
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	ea 58       	subi	r30, 0x8A	; 138
    3ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad6:	11 82       	std	Z+1, r1	; 0x01
	SSEG_Types sseg2={SSEG_PORTA,SSEG_ComanCathode};
    3ad8:	fe 01       	movw	r30, r28
    3ada:	e8 58       	subi	r30, 0x88	; 136
    3adc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ade:	10 82       	st	Z, r1
    3ae0:	fe 01       	movw	r30, r28
    3ae2:	e8 58       	subi	r30, 0x88	; 136
    3ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae6:	11 82       	std	Z+1, r1	; 0x01

	LED_Type red_LED1={DIO_PORTD,DIO_PIN3,LED_FORWARD};//red
    3ae8:	ce 01       	movw	r24, r28
    3aea:	86 58       	subi	r24, 0x86	; 134
    3aec:	9f 4f       	sbci	r25, 0xFF	; 255
    3aee:	cf 56       	subi	r28, 0x6F	; 111
    3af0:	df 4f       	sbci	r29, 0xFF	; 255
    3af2:	99 83       	std	Y+1, r25	; 0x01
    3af4:	88 83       	st	Y, r24
    3af6:	c1 59       	subi	r28, 0x91	; 145
    3af8:	d0 40       	sbci	r29, 0x00	; 0
    3afa:	89 eb       	ldi	r24, 0xB9	; 185
    3afc:	90 e0       	ldi	r25, 0x00	; 0
    3afe:	cd 56       	subi	r28, 0x6D	; 109
    3b00:	df 4f       	sbci	r29, 0xFF	; 255
    3b02:	99 83       	std	Y+1, r25	; 0x01
    3b04:	88 83       	st	Y, r24
    3b06:	c3 59       	subi	r28, 0x93	; 147
    3b08:	d0 40       	sbci	r29, 0x00	; 0
    3b0a:	93 e0       	ldi	r25, 0x03	; 3
    3b0c:	cb 56       	subi	r28, 0x6B	; 107
    3b0e:	df 4f       	sbci	r29, 0xFF	; 255
    3b10:	98 83       	st	Y, r25
    3b12:	c5 59       	subi	r28, 0x95	; 149
    3b14:	d0 40       	sbci	r29, 0x00	; 0
    3b16:	cd 56       	subi	r28, 0x6D	; 109
    3b18:	df 4f       	sbci	r29, 0xFF	; 255
    3b1a:	e8 81       	ld	r30, Y
    3b1c:	f9 81       	ldd	r31, Y+1	; 0x01
    3b1e:	c3 59       	subi	r28, 0x93	; 147
    3b20:	d0 40       	sbci	r29, 0x00	; 0
    3b22:	00 80       	ld	r0, Z
    3b24:	cd 56       	subi	r28, 0x6D	; 109
    3b26:	df 4f       	sbci	r29, 0xFF	; 255
    3b28:	88 81       	ld	r24, Y
    3b2a:	99 81       	ldd	r25, Y+1	; 0x01
    3b2c:	c3 59       	subi	r28, 0x93	; 147
    3b2e:	d0 40       	sbci	r29, 0x00	; 0
    3b30:	01 96       	adiw	r24, 0x01	; 1
    3b32:	cd 56       	subi	r28, 0x6D	; 109
    3b34:	df 4f       	sbci	r29, 0xFF	; 255
    3b36:	99 83       	std	Y+1, r25	; 0x01
    3b38:	88 83       	st	Y, r24
    3b3a:	c3 59       	subi	r28, 0x93	; 147
    3b3c:	d0 40       	sbci	r29, 0x00	; 0
    3b3e:	cf 56       	subi	r28, 0x6F	; 111
    3b40:	df 4f       	sbci	r29, 0xFF	; 255
    3b42:	e8 81       	ld	r30, Y
    3b44:	f9 81       	ldd	r31, Y+1	; 0x01
    3b46:	c1 59       	subi	r28, 0x91	; 145
    3b48:	d0 40       	sbci	r29, 0x00	; 0
    3b4a:	00 82       	st	Z, r0
    3b4c:	cf 56       	subi	r28, 0x6F	; 111
    3b4e:	df 4f       	sbci	r29, 0xFF	; 255
    3b50:	88 81       	ld	r24, Y
    3b52:	99 81       	ldd	r25, Y+1	; 0x01
    3b54:	c1 59       	subi	r28, 0x91	; 145
    3b56:	d0 40       	sbci	r29, 0x00	; 0
    3b58:	01 96       	adiw	r24, 0x01	; 1
    3b5a:	cf 56       	subi	r28, 0x6F	; 111
    3b5c:	df 4f       	sbci	r29, 0xFF	; 255
    3b5e:	99 83       	std	Y+1, r25	; 0x01
    3b60:	88 83       	st	Y, r24
    3b62:	c1 59       	subi	r28, 0x91	; 145
    3b64:	d0 40       	sbci	r29, 0x00	; 0
    3b66:	cb 56       	subi	r28, 0x6B	; 107
    3b68:	df 4f       	sbci	r29, 0xFF	; 255
    3b6a:	98 81       	ld	r25, Y
    3b6c:	c5 59       	subi	r28, 0x95	; 149
    3b6e:	d0 40       	sbci	r29, 0x00	; 0
    3b70:	91 50       	subi	r25, 0x01	; 1
    3b72:	cb 56       	subi	r28, 0x6B	; 107
    3b74:	df 4f       	sbci	r29, 0xFF	; 255
    3b76:	98 83       	st	Y, r25
    3b78:	c5 59       	subi	r28, 0x95	; 149
    3b7a:	d0 40       	sbci	r29, 0x00	; 0
    3b7c:	cb 56       	subi	r28, 0x6B	; 107
    3b7e:	df 4f       	sbci	r29, 0xFF	; 255
    3b80:	e8 81       	ld	r30, Y
    3b82:	c5 59       	subi	r28, 0x95	; 149
    3b84:	d0 40       	sbci	r29, 0x00	; 0
    3b86:	ee 23       	and	r30, r30
    3b88:	31 f6       	brne	.-116    	; 0x3b16 <main+0x12a>
	LED_Type yellow_LED1={DIO_PORTD,DIO_PIN1,LED_FORWARD};//yellow
    3b8a:	ce 01       	movw	r24, r28
    3b8c:	83 58       	subi	r24, 0x83	; 131
    3b8e:	9f 4f       	sbci	r25, 0xFF	; 255
    3b90:	ca 56       	subi	r28, 0x6A	; 106
    3b92:	df 4f       	sbci	r29, 0xFF	; 255
    3b94:	99 83       	std	Y+1, r25	; 0x01
    3b96:	88 83       	st	Y, r24
    3b98:	c6 59       	subi	r28, 0x96	; 150
    3b9a:	d0 40       	sbci	r29, 0x00	; 0
    3b9c:	86 eb       	ldi	r24, 0xB6	; 182
    3b9e:	90 e0       	ldi	r25, 0x00	; 0
    3ba0:	c8 56       	subi	r28, 0x68	; 104
    3ba2:	df 4f       	sbci	r29, 0xFF	; 255
    3ba4:	99 83       	std	Y+1, r25	; 0x01
    3ba6:	88 83       	st	Y, r24
    3ba8:	c8 59       	subi	r28, 0x98	; 152
    3baa:	d0 40       	sbci	r29, 0x00	; 0
    3bac:	93 e0       	ldi	r25, 0x03	; 3
    3bae:	c6 56       	subi	r28, 0x66	; 102
    3bb0:	df 4f       	sbci	r29, 0xFF	; 255
    3bb2:	98 83       	st	Y, r25
    3bb4:	ca 59       	subi	r28, 0x9A	; 154
    3bb6:	d0 40       	sbci	r29, 0x00	; 0
    3bb8:	c8 56       	subi	r28, 0x68	; 104
    3bba:	df 4f       	sbci	r29, 0xFF	; 255
    3bbc:	e8 81       	ld	r30, Y
    3bbe:	f9 81       	ldd	r31, Y+1	; 0x01
    3bc0:	c8 59       	subi	r28, 0x98	; 152
    3bc2:	d0 40       	sbci	r29, 0x00	; 0
    3bc4:	00 80       	ld	r0, Z
    3bc6:	c8 56       	subi	r28, 0x68	; 104
    3bc8:	df 4f       	sbci	r29, 0xFF	; 255
    3bca:	88 81       	ld	r24, Y
    3bcc:	99 81       	ldd	r25, Y+1	; 0x01
    3bce:	c8 59       	subi	r28, 0x98	; 152
    3bd0:	d0 40       	sbci	r29, 0x00	; 0
    3bd2:	01 96       	adiw	r24, 0x01	; 1
    3bd4:	c8 56       	subi	r28, 0x68	; 104
    3bd6:	df 4f       	sbci	r29, 0xFF	; 255
    3bd8:	99 83       	std	Y+1, r25	; 0x01
    3bda:	88 83       	st	Y, r24
    3bdc:	c8 59       	subi	r28, 0x98	; 152
    3bde:	d0 40       	sbci	r29, 0x00	; 0
    3be0:	ca 56       	subi	r28, 0x6A	; 106
    3be2:	df 4f       	sbci	r29, 0xFF	; 255
    3be4:	e8 81       	ld	r30, Y
    3be6:	f9 81       	ldd	r31, Y+1	; 0x01
    3be8:	c6 59       	subi	r28, 0x96	; 150
    3bea:	d0 40       	sbci	r29, 0x00	; 0
    3bec:	00 82       	st	Z, r0
    3bee:	ca 56       	subi	r28, 0x6A	; 106
    3bf0:	df 4f       	sbci	r29, 0xFF	; 255
    3bf2:	88 81       	ld	r24, Y
    3bf4:	99 81       	ldd	r25, Y+1	; 0x01
    3bf6:	c6 59       	subi	r28, 0x96	; 150
    3bf8:	d0 40       	sbci	r29, 0x00	; 0
    3bfa:	01 96       	adiw	r24, 0x01	; 1
    3bfc:	ca 56       	subi	r28, 0x6A	; 106
    3bfe:	df 4f       	sbci	r29, 0xFF	; 255
    3c00:	99 83       	std	Y+1, r25	; 0x01
    3c02:	88 83       	st	Y, r24
    3c04:	c6 59       	subi	r28, 0x96	; 150
    3c06:	d0 40       	sbci	r29, 0x00	; 0
    3c08:	c6 56       	subi	r28, 0x66	; 102
    3c0a:	df 4f       	sbci	r29, 0xFF	; 255
    3c0c:	98 81       	ld	r25, Y
    3c0e:	ca 59       	subi	r28, 0x9A	; 154
    3c10:	d0 40       	sbci	r29, 0x00	; 0
    3c12:	91 50       	subi	r25, 0x01	; 1
    3c14:	c6 56       	subi	r28, 0x66	; 102
    3c16:	df 4f       	sbci	r29, 0xFF	; 255
    3c18:	98 83       	st	Y, r25
    3c1a:	ca 59       	subi	r28, 0x9A	; 154
    3c1c:	d0 40       	sbci	r29, 0x00	; 0
    3c1e:	c6 56       	subi	r28, 0x66	; 102
    3c20:	df 4f       	sbci	r29, 0xFF	; 255
    3c22:	e8 81       	ld	r30, Y
    3c24:	ca 59       	subi	r28, 0x9A	; 154
    3c26:	d0 40       	sbci	r29, 0x00	; 0
    3c28:	ee 23       	and	r30, r30
    3c2a:	31 f6       	brne	.-116    	; 0x3bb8 <main+0x1cc>
	LED_Type green_LED1={DIO_PORTD,DIO_PIN0,LED_FORWARD};//green
    3c2c:	ce 01       	movw	r24, r28
    3c2e:	80 58       	subi	r24, 0x80	; 128
    3c30:	9f 4f       	sbci	r25, 0xFF	; 255
    3c32:	c5 56       	subi	r28, 0x65	; 101
    3c34:	df 4f       	sbci	r29, 0xFF	; 255
    3c36:	99 83       	std	Y+1, r25	; 0x01
    3c38:	88 83       	st	Y, r24
    3c3a:	cb 59       	subi	r28, 0x9B	; 155
    3c3c:	d0 40       	sbci	r29, 0x00	; 0
    3c3e:	83 eb       	ldi	r24, 0xB3	; 179
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	c3 56       	subi	r28, 0x63	; 99
    3c44:	df 4f       	sbci	r29, 0xFF	; 255
    3c46:	99 83       	std	Y+1, r25	; 0x01
    3c48:	88 83       	st	Y, r24
    3c4a:	cd 59       	subi	r28, 0x9D	; 157
    3c4c:	d0 40       	sbci	r29, 0x00	; 0
    3c4e:	93 e0       	ldi	r25, 0x03	; 3
    3c50:	c1 56       	subi	r28, 0x61	; 97
    3c52:	df 4f       	sbci	r29, 0xFF	; 255
    3c54:	98 83       	st	Y, r25
    3c56:	cf 59       	subi	r28, 0x9F	; 159
    3c58:	d0 40       	sbci	r29, 0x00	; 0
    3c5a:	c3 56       	subi	r28, 0x63	; 99
    3c5c:	df 4f       	sbci	r29, 0xFF	; 255
    3c5e:	e8 81       	ld	r30, Y
    3c60:	f9 81       	ldd	r31, Y+1	; 0x01
    3c62:	cd 59       	subi	r28, 0x9D	; 157
    3c64:	d0 40       	sbci	r29, 0x00	; 0
    3c66:	00 80       	ld	r0, Z
    3c68:	c3 56       	subi	r28, 0x63	; 99
    3c6a:	df 4f       	sbci	r29, 0xFF	; 255
    3c6c:	88 81       	ld	r24, Y
    3c6e:	99 81       	ldd	r25, Y+1	; 0x01
    3c70:	cd 59       	subi	r28, 0x9D	; 157
    3c72:	d0 40       	sbci	r29, 0x00	; 0
    3c74:	01 96       	adiw	r24, 0x01	; 1
    3c76:	c3 56       	subi	r28, 0x63	; 99
    3c78:	df 4f       	sbci	r29, 0xFF	; 255
    3c7a:	99 83       	std	Y+1, r25	; 0x01
    3c7c:	88 83       	st	Y, r24
    3c7e:	cd 59       	subi	r28, 0x9D	; 157
    3c80:	d0 40       	sbci	r29, 0x00	; 0
    3c82:	c5 56       	subi	r28, 0x65	; 101
    3c84:	df 4f       	sbci	r29, 0xFF	; 255
    3c86:	e8 81       	ld	r30, Y
    3c88:	f9 81       	ldd	r31, Y+1	; 0x01
    3c8a:	cb 59       	subi	r28, 0x9B	; 155
    3c8c:	d0 40       	sbci	r29, 0x00	; 0
    3c8e:	00 82       	st	Z, r0
    3c90:	c5 56       	subi	r28, 0x65	; 101
    3c92:	df 4f       	sbci	r29, 0xFF	; 255
    3c94:	88 81       	ld	r24, Y
    3c96:	99 81       	ldd	r25, Y+1	; 0x01
    3c98:	cb 59       	subi	r28, 0x9B	; 155
    3c9a:	d0 40       	sbci	r29, 0x00	; 0
    3c9c:	01 96       	adiw	r24, 0x01	; 1
    3c9e:	c5 56       	subi	r28, 0x65	; 101
    3ca0:	df 4f       	sbci	r29, 0xFF	; 255
    3ca2:	99 83       	std	Y+1, r25	; 0x01
    3ca4:	88 83       	st	Y, r24
    3ca6:	cb 59       	subi	r28, 0x9B	; 155
    3ca8:	d0 40       	sbci	r29, 0x00	; 0
    3caa:	c1 56       	subi	r28, 0x61	; 97
    3cac:	df 4f       	sbci	r29, 0xFF	; 255
    3cae:	98 81       	ld	r25, Y
    3cb0:	cf 59       	subi	r28, 0x9F	; 159
    3cb2:	d0 40       	sbci	r29, 0x00	; 0
    3cb4:	91 50       	subi	r25, 0x01	; 1
    3cb6:	c1 56       	subi	r28, 0x61	; 97
    3cb8:	df 4f       	sbci	r29, 0xFF	; 255
    3cba:	98 83       	st	Y, r25
    3cbc:	cf 59       	subi	r28, 0x9F	; 159
    3cbe:	d0 40       	sbci	r29, 0x00	; 0
    3cc0:	c1 56       	subi	r28, 0x61	; 97
    3cc2:	df 4f       	sbci	r29, 0xFF	; 255
    3cc4:	e8 81       	ld	r30, Y
    3cc6:	cf 59       	subi	r28, 0x9F	; 159
    3cc8:	d0 40       	sbci	r29, 0x00	; 0
    3cca:	ee 23       	and	r30, r30
    3ccc:	31 f6       	brne	.-116    	; 0x3c5a <main+0x26e>
	LED_Type red_LED2={DIO_PORTD,DIO_PIN7,LED_FORWARD};//red2
    3cce:	ce 01       	movw	r24, r28
    3cd0:	8d 57       	subi	r24, 0x7D	; 125
    3cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd4:	c0 56       	subi	r28, 0x60	; 96
    3cd6:	df 4f       	sbci	r29, 0xFF	; 255
    3cd8:	99 83       	std	Y+1, r25	; 0x01
    3cda:	88 83       	st	Y, r24
    3cdc:	c0 5a       	subi	r28, 0xA0	; 160
    3cde:	d0 40       	sbci	r29, 0x00	; 0
    3ce0:	80 eb       	ldi	r24, 0xB0	; 176
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	ce 55       	subi	r28, 0x5E	; 94
    3ce6:	df 4f       	sbci	r29, 0xFF	; 255
    3ce8:	99 83       	std	Y+1, r25	; 0x01
    3cea:	88 83       	st	Y, r24
    3cec:	c2 5a       	subi	r28, 0xA2	; 162
    3cee:	d0 40       	sbci	r29, 0x00	; 0
    3cf0:	93 e0       	ldi	r25, 0x03	; 3
    3cf2:	cc 55       	subi	r28, 0x5C	; 92
    3cf4:	df 4f       	sbci	r29, 0xFF	; 255
    3cf6:	98 83       	st	Y, r25
    3cf8:	c4 5a       	subi	r28, 0xA4	; 164
    3cfa:	d0 40       	sbci	r29, 0x00	; 0
    3cfc:	ce 55       	subi	r28, 0x5E	; 94
    3cfe:	df 4f       	sbci	r29, 0xFF	; 255
    3d00:	e8 81       	ld	r30, Y
    3d02:	f9 81       	ldd	r31, Y+1	; 0x01
    3d04:	c2 5a       	subi	r28, 0xA2	; 162
    3d06:	d0 40       	sbci	r29, 0x00	; 0
    3d08:	00 80       	ld	r0, Z
    3d0a:	ce 55       	subi	r28, 0x5E	; 94
    3d0c:	df 4f       	sbci	r29, 0xFF	; 255
    3d0e:	88 81       	ld	r24, Y
    3d10:	99 81       	ldd	r25, Y+1	; 0x01
    3d12:	c2 5a       	subi	r28, 0xA2	; 162
    3d14:	d0 40       	sbci	r29, 0x00	; 0
    3d16:	01 96       	adiw	r24, 0x01	; 1
    3d18:	ce 55       	subi	r28, 0x5E	; 94
    3d1a:	df 4f       	sbci	r29, 0xFF	; 255
    3d1c:	99 83       	std	Y+1, r25	; 0x01
    3d1e:	88 83       	st	Y, r24
    3d20:	c2 5a       	subi	r28, 0xA2	; 162
    3d22:	d0 40       	sbci	r29, 0x00	; 0
    3d24:	c0 56       	subi	r28, 0x60	; 96
    3d26:	df 4f       	sbci	r29, 0xFF	; 255
    3d28:	e8 81       	ld	r30, Y
    3d2a:	f9 81       	ldd	r31, Y+1	; 0x01
    3d2c:	c0 5a       	subi	r28, 0xA0	; 160
    3d2e:	d0 40       	sbci	r29, 0x00	; 0
    3d30:	00 82       	st	Z, r0
    3d32:	c0 56       	subi	r28, 0x60	; 96
    3d34:	df 4f       	sbci	r29, 0xFF	; 255
    3d36:	88 81       	ld	r24, Y
    3d38:	99 81       	ldd	r25, Y+1	; 0x01
    3d3a:	c0 5a       	subi	r28, 0xA0	; 160
    3d3c:	d0 40       	sbci	r29, 0x00	; 0
    3d3e:	01 96       	adiw	r24, 0x01	; 1
    3d40:	c0 56       	subi	r28, 0x60	; 96
    3d42:	df 4f       	sbci	r29, 0xFF	; 255
    3d44:	99 83       	std	Y+1, r25	; 0x01
    3d46:	88 83       	st	Y, r24
    3d48:	c0 5a       	subi	r28, 0xA0	; 160
    3d4a:	d0 40       	sbci	r29, 0x00	; 0
    3d4c:	cc 55       	subi	r28, 0x5C	; 92
    3d4e:	df 4f       	sbci	r29, 0xFF	; 255
    3d50:	98 81       	ld	r25, Y
    3d52:	c4 5a       	subi	r28, 0xA4	; 164
    3d54:	d0 40       	sbci	r29, 0x00	; 0
    3d56:	91 50       	subi	r25, 0x01	; 1
    3d58:	cc 55       	subi	r28, 0x5C	; 92
    3d5a:	df 4f       	sbci	r29, 0xFF	; 255
    3d5c:	98 83       	st	Y, r25
    3d5e:	c4 5a       	subi	r28, 0xA4	; 164
    3d60:	d0 40       	sbci	r29, 0x00	; 0
    3d62:	cc 55       	subi	r28, 0x5C	; 92
    3d64:	df 4f       	sbci	r29, 0xFF	; 255
    3d66:	e8 81       	ld	r30, Y
    3d68:	c4 5a       	subi	r28, 0xA4	; 164
    3d6a:	d0 40       	sbci	r29, 0x00	; 0
    3d6c:	ee 23       	and	r30, r30
    3d6e:	31 f6       	brne	.-116    	; 0x3cfc <main+0x310>
	LED_Type yellow_LED2={DIO_PORTD,DIO_PIN6,LED_FORWARD};//yellow2
    3d70:	ce 01       	movw	r24, r28
    3d72:	8a 57       	subi	r24, 0x7A	; 122
    3d74:	9f 4f       	sbci	r25, 0xFF	; 255
    3d76:	cb 55       	subi	r28, 0x5B	; 91
    3d78:	df 4f       	sbci	r29, 0xFF	; 255
    3d7a:	99 83       	std	Y+1, r25	; 0x01
    3d7c:	88 83       	st	Y, r24
    3d7e:	c5 5a       	subi	r28, 0xA5	; 165
    3d80:	d0 40       	sbci	r29, 0x00	; 0
    3d82:	8d ea       	ldi	r24, 0xAD	; 173
    3d84:	90 e0       	ldi	r25, 0x00	; 0
    3d86:	c9 55       	subi	r28, 0x59	; 89
    3d88:	df 4f       	sbci	r29, 0xFF	; 255
    3d8a:	99 83       	std	Y+1, r25	; 0x01
    3d8c:	88 83       	st	Y, r24
    3d8e:	c7 5a       	subi	r28, 0xA7	; 167
    3d90:	d0 40       	sbci	r29, 0x00	; 0
    3d92:	93 e0       	ldi	r25, 0x03	; 3
    3d94:	c7 55       	subi	r28, 0x57	; 87
    3d96:	df 4f       	sbci	r29, 0xFF	; 255
    3d98:	98 83       	st	Y, r25
    3d9a:	c9 5a       	subi	r28, 0xA9	; 169
    3d9c:	d0 40       	sbci	r29, 0x00	; 0
    3d9e:	c9 55       	subi	r28, 0x59	; 89
    3da0:	df 4f       	sbci	r29, 0xFF	; 255
    3da2:	e8 81       	ld	r30, Y
    3da4:	f9 81       	ldd	r31, Y+1	; 0x01
    3da6:	c7 5a       	subi	r28, 0xA7	; 167
    3da8:	d0 40       	sbci	r29, 0x00	; 0
    3daa:	00 80       	ld	r0, Z
    3dac:	c9 55       	subi	r28, 0x59	; 89
    3dae:	df 4f       	sbci	r29, 0xFF	; 255
    3db0:	88 81       	ld	r24, Y
    3db2:	99 81       	ldd	r25, Y+1	; 0x01
    3db4:	c7 5a       	subi	r28, 0xA7	; 167
    3db6:	d0 40       	sbci	r29, 0x00	; 0
    3db8:	01 96       	adiw	r24, 0x01	; 1
    3dba:	c9 55       	subi	r28, 0x59	; 89
    3dbc:	df 4f       	sbci	r29, 0xFF	; 255
    3dbe:	99 83       	std	Y+1, r25	; 0x01
    3dc0:	88 83       	st	Y, r24
    3dc2:	c7 5a       	subi	r28, 0xA7	; 167
    3dc4:	d0 40       	sbci	r29, 0x00	; 0
    3dc6:	cb 55       	subi	r28, 0x5B	; 91
    3dc8:	df 4f       	sbci	r29, 0xFF	; 255
    3dca:	e8 81       	ld	r30, Y
    3dcc:	f9 81       	ldd	r31, Y+1	; 0x01
    3dce:	c5 5a       	subi	r28, 0xA5	; 165
    3dd0:	d0 40       	sbci	r29, 0x00	; 0
    3dd2:	00 82       	st	Z, r0
    3dd4:	cb 55       	subi	r28, 0x5B	; 91
    3dd6:	df 4f       	sbci	r29, 0xFF	; 255
    3dd8:	88 81       	ld	r24, Y
    3dda:	99 81       	ldd	r25, Y+1	; 0x01
    3ddc:	c5 5a       	subi	r28, 0xA5	; 165
    3dde:	d0 40       	sbci	r29, 0x00	; 0
    3de0:	01 96       	adiw	r24, 0x01	; 1
    3de2:	cb 55       	subi	r28, 0x5B	; 91
    3de4:	df 4f       	sbci	r29, 0xFF	; 255
    3de6:	99 83       	std	Y+1, r25	; 0x01
    3de8:	88 83       	st	Y, r24
    3dea:	c5 5a       	subi	r28, 0xA5	; 165
    3dec:	d0 40       	sbci	r29, 0x00	; 0
    3dee:	c7 55       	subi	r28, 0x57	; 87
    3df0:	df 4f       	sbci	r29, 0xFF	; 255
    3df2:	98 81       	ld	r25, Y
    3df4:	c9 5a       	subi	r28, 0xA9	; 169
    3df6:	d0 40       	sbci	r29, 0x00	; 0
    3df8:	91 50       	subi	r25, 0x01	; 1
    3dfa:	c7 55       	subi	r28, 0x57	; 87
    3dfc:	df 4f       	sbci	r29, 0xFF	; 255
    3dfe:	98 83       	st	Y, r25
    3e00:	c9 5a       	subi	r28, 0xA9	; 169
    3e02:	d0 40       	sbci	r29, 0x00	; 0
    3e04:	c7 55       	subi	r28, 0x57	; 87
    3e06:	df 4f       	sbci	r29, 0xFF	; 255
    3e08:	e8 81       	ld	r30, Y
    3e0a:	c9 5a       	subi	r28, 0xA9	; 169
    3e0c:	d0 40       	sbci	r29, 0x00	; 0
    3e0e:	ee 23       	and	r30, r30
    3e10:	31 f6       	brne	.-116    	; 0x3d9e <main+0x3b2>
	LED_Type green_LED2={DIO_PORTA,DIO_PIN7,LED_FORWARD};//green2
    3e12:	ce 01       	movw	r24, r28
    3e14:	87 57       	subi	r24, 0x77	; 119
    3e16:	9f 4f       	sbci	r25, 0xFF	; 255
    3e18:	c6 55       	subi	r28, 0x56	; 86
    3e1a:	df 4f       	sbci	r29, 0xFF	; 255
    3e1c:	99 83       	std	Y+1, r25	; 0x01
    3e1e:	88 83       	st	Y, r24
    3e20:	ca 5a       	subi	r28, 0xAA	; 170
    3e22:	d0 40       	sbci	r29, 0x00	; 0
    3e24:	8a ea       	ldi	r24, 0xAA	; 170
    3e26:	90 e0       	ldi	r25, 0x00	; 0
    3e28:	c4 55       	subi	r28, 0x54	; 84
    3e2a:	df 4f       	sbci	r29, 0xFF	; 255
    3e2c:	99 83       	std	Y+1, r25	; 0x01
    3e2e:	88 83       	st	Y, r24
    3e30:	cc 5a       	subi	r28, 0xAC	; 172
    3e32:	d0 40       	sbci	r29, 0x00	; 0
    3e34:	93 e0       	ldi	r25, 0x03	; 3
    3e36:	c2 55       	subi	r28, 0x52	; 82
    3e38:	df 4f       	sbci	r29, 0xFF	; 255
    3e3a:	98 83       	st	Y, r25
    3e3c:	ce 5a       	subi	r28, 0xAE	; 174
    3e3e:	d0 40       	sbci	r29, 0x00	; 0
    3e40:	c4 55       	subi	r28, 0x54	; 84
    3e42:	df 4f       	sbci	r29, 0xFF	; 255
    3e44:	e8 81       	ld	r30, Y
    3e46:	f9 81       	ldd	r31, Y+1	; 0x01
    3e48:	cc 5a       	subi	r28, 0xAC	; 172
    3e4a:	d0 40       	sbci	r29, 0x00	; 0
    3e4c:	00 80       	ld	r0, Z
    3e4e:	c4 55       	subi	r28, 0x54	; 84
    3e50:	df 4f       	sbci	r29, 0xFF	; 255
    3e52:	88 81       	ld	r24, Y
    3e54:	99 81       	ldd	r25, Y+1	; 0x01
    3e56:	cc 5a       	subi	r28, 0xAC	; 172
    3e58:	d0 40       	sbci	r29, 0x00	; 0
    3e5a:	01 96       	adiw	r24, 0x01	; 1
    3e5c:	c4 55       	subi	r28, 0x54	; 84
    3e5e:	df 4f       	sbci	r29, 0xFF	; 255
    3e60:	99 83       	std	Y+1, r25	; 0x01
    3e62:	88 83       	st	Y, r24
    3e64:	cc 5a       	subi	r28, 0xAC	; 172
    3e66:	d0 40       	sbci	r29, 0x00	; 0
    3e68:	c6 55       	subi	r28, 0x56	; 86
    3e6a:	df 4f       	sbci	r29, 0xFF	; 255
    3e6c:	e8 81       	ld	r30, Y
    3e6e:	f9 81       	ldd	r31, Y+1	; 0x01
    3e70:	ca 5a       	subi	r28, 0xAA	; 170
    3e72:	d0 40       	sbci	r29, 0x00	; 0
    3e74:	00 82       	st	Z, r0
    3e76:	c6 55       	subi	r28, 0x56	; 86
    3e78:	df 4f       	sbci	r29, 0xFF	; 255
    3e7a:	88 81       	ld	r24, Y
    3e7c:	99 81       	ldd	r25, Y+1	; 0x01
    3e7e:	ca 5a       	subi	r28, 0xAA	; 170
    3e80:	d0 40       	sbci	r29, 0x00	; 0
    3e82:	01 96       	adiw	r24, 0x01	; 1
    3e84:	c6 55       	subi	r28, 0x56	; 86
    3e86:	df 4f       	sbci	r29, 0xFF	; 255
    3e88:	99 83       	std	Y+1, r25	; 0x01
    3e8a:	88 83       	st	Y, r24
    3e8c:	ca 5a       	subi	r28, 0xAA	; 170
    3e8e:	d0 40       	sbci	r29, 0x00	; 0
    3e90:	c2 55       	subi	r28, 0x52	; 82
    3e92:	df 4f       	sbci	r29, 0xFF	; 255
    3e94:	98 81       	ld	r25, Y
    3e96:	ce 5a       	subi	r28, 0xAE	; 174
    3e98:	d0 40       	sbci	r29, 0x00	; 0
    3e9a:	91 50       	subi	r25, 0x01	; 1
    3e9c:	c2 55       	subi	r28, 0x52	; 82
    3e9e:	df 4f       	sbci	r29, 0xFF	; 255
    3ea0:	98 83       	st	Y, r25
    3ea2:	ce 5a       	subi	r28, 0xAE	; 174
    3ea4:	d0 40       	sbci	r29, 0x00	; 0
    3ea6:	c2 55       	subi	r28, 0x52	; 82
    3ea8:	df 4f       	sbci	r29, 0xFF	; 255
    3eaa:	e8 81       	ld	r30, Y
    3eac:	ce 5a       	subi	r28, 0xAE	; 174
    3eae:	d0 40       	sbci	r29, 0x00	; 0
    3eb0:	ee 23       	and	r30, r30
    3eb2:	31 f6       	brne	.-116    	; 0x3e40 <main+0x454>

	LED_voidSetConfig(red_LED1);
    3eb4:	fe 01       	movw	r30, r28
    3eb6:	e6 58       	subi	r30, 0x86	; 134
    3eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eba:	60 81       	ld	r22, Z
    3ebc:	71 81       	ldd	r23, Z+1	; 0x01
    3ebe:	82 81       	ldd	r24, Z+2	; 0x02
    3ec0:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
	LED_voidSetConfig(yellow_LED1);
    3ec4:	fe 01       	movw	r30, r28
    3ec6:	e3 58       	subi	r30, 0x83	; 131
    3ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eca:	60 81       	ld	r22, Z
    3ecc:	71 81       	ldd	r23, Z+1	; 0x01
    3ece:	82 81       	ldd	r24, Z+2	; 0x02
    3ed0:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
	LED_voidSetConfig(green_LED1);
    3ed4:	fe 01       	movw	r30, r28
    3ed6:	e0 58       	subi	r30, 0x80	; 128
    3ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eda:	60 81       	ld	r22, Z
    3edc:	71 81       	ldd	r23, Z+1	; 0x01
    3ede:	82 81       	ldd	r24, Z+2	; 0x02
    3ee0:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
	LED_voidSetConfig(red_LED2);
    3ee4:	fe 01       	movw	r30, r28
    3ee6:	ed 57       	subi	r30, 0x7D	; 125
    3ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eea:	60 81       	ld	r22, Z
    3eec:	71 81       	ldd	r23, Z+1	; 0x01
    3eee:	82 81       	ldd	r24, Z+2	; 0x02
    3ef0:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
	LED_voidSetConfig(yellow_LED2);
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	ea 57       	subi	r30, 0x7A	; 122
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	60 81       	ld	r22, Z
    3efc:	71 81       	ldd	r23, Z+1	; 0x01
    3efe:	82 81       	ldd	r24, Z+2	; 0x02
    3f00:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
	LED_voidSetConfig(green_LED2);
    3f04:	fe 01       	movw	r30, r28
    3f06:	e7 57       	subi	r30, 0x77	; 119
    3f08:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0a:	60 81       	ld	r22, Z
    3f0c:	71 81       	ldd	r23, Z+1	; 0x01
    3f0e:	82 81       	ldd	r24, Z+2	; 0x02
    3f10:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>

	SSEG_voidSetConfig(sseg1);
    3f14:	fe 01       	movw	r30, r28
    3f16:	ea 58       	subi	r30, 0x8A	; 138
    3f18:	ff 4f       	sbci	r31, 0xFF	; 255
    3f1a:	80 81       	ld	r24, Z
    3f1c:	91 81       	ldd	r25, Z+1	; 0x01
    3f1e:	0e 94 55 1c 	call	0x38aa	; 0x38aa <SSEG_voidSetConfig>
	SSEG_voidSetConfig(sseg2);
    3f22:	fe 01       	movw	r30, r28
    3f24:	e8 58       	subi	r30, 0x88	; 136
    3f26:	ff 4f       	sbci	r31, 0xFF	; 255
    3f28:	80 81       	ld	r24, Z
    3f2a:	91 81       	ldd	r25, Z+1	; 0x01
    3f2c:	0e 94 55 1c 	call	0x38aa	; 0x38aa <SSEG_voidSetConfig>

	while(1)
	{
		for(u8 counter=1;counter<10;counter++)
    3f30:	fe 01       	movw	r30, r28
    3f32:	ee 58       	subi	r30, 0x8E	; 142
    3f34:	ff 4f       	sbci	r31, 0xFF	; 255
    3f36:	81 e0       	ldi	r24, 0x01	; 1
    3f38:	80 83       	st	Z, r24
    3f3a:	17 c3       	rjmp	.+1582   	; 0x456a <main+0xb7e>
	        {
	        if(counter<=7)
    3f3c:	fe 01       	movw	r30, r28
    3f3e:	ee 58       	subi	r30, 0x8E	; 142
    3f40:	ff 4f       	sbci	r31, 0xFF	; 255
    3f42:	80 81       	ld	r24, Z
    3f44:	88 30       	cpi	r24, 0x08	; 8
    3f46:	08 f0       	brcs	.+2      	; 0x3f4a <main+0x55e>
    3f48:	90 c1       	rjmp	.+800    	; 0x426a <main+0x87e>
	        {
	            SSEG_voidSendNumber(sseg1,counter);
    3f4a:	fe 01       	movw	r30, r28
    3f4c:	ea 58       	subi	r30, 0x8A	; 138
    3f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f50:	80 81       	ld	r24, Z
    3f52:	91 81       	ldd	r25, Z+1	; 0x01
    3f54:	fe 01       	movw	r30, r28
    3f56:	ee 58       	subi	r30, 0x8E	; 142
    3f58:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5a:	60 81       	ld	r22, Z
    3f5c:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
	            SSEG_voidSendNumber(sseg2,counter);
    3f60:	fe 01       	movw	r30, r28
    3f62:	e8 58       	subi	r30, 0x88	; 136
    3f64:	ff 4f       	sbci	r31, 0xFF	; 255
    3f66:	80 81       	ld	r24, Z
    3f68:	91 81       	ldd	r25, Z+1	; 0x01
    3f6a:	fe 01       	movw	r30, r28
    3f6c:	ee 58       	subi	r30, 0x8E	; 142
    3f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f70:	60 81       	ld	r22, Z
    3f72:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    3f76:	fe 01       	movw	r30, r28
    3f78:	e3 59       	subi	r30, 0x93	; 147
    3f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7c:	80 e0       	ldi	r24, 0x00	; 0
    3f7e:	90 e0       	ldi	r25, 0x00	; 0
    3f80:	a0 e2       	ldi	r26, 0x20	; 32
    3f82:	b1 e4       	ldi	r27, 0x41	; 65
    3f84:	80 83       	st	Z, r24
    3f86:	91 83       	std	Z+1, r25	; 0x01
    3f88:	a2 83       	std	Z+2, r26	; 0x02
    3f8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f8c:	8e 01       	movw	r16, r28
    3f8e:	07 59       	subi	r16, 0x97	; 151
    3f90:	1f 4f       	sbci	r17, 0xFF	; 255
    3f92:	fe 01       	movw	r30, r28
    3f94:	e3 59       	subi	r30, 0x93	; 147
    3f96:	ff 4f       	sbci	r31, 0xFF	; 255
    3f98:	60 81       	ld	r22, Z
    3f9a:	71 81       	ldd	r23, Z+1	; 0x01
    3f9c:	82 81       	ldd	r24, Z+2	; 0x02
    3f9e:	93 81       	ldd	r25, Z+3	; 0x03
    3fa0:	20 e0       	ldi	r18, 0x00	; 0
    3fa2:	30 e0       	ldi	r19, 0x00	; 0
    3fa4:	4a ef       	ldi	r20, 0xFA	; 250
    3fa6:	54 e4       	ldi	r21, 0x44	; 68
    3fa8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3fac:	dc 01       	movw	r26, r24
    3fae:	cb 01       	movw	r24, r22
    3fb0:	f8 01       	movw	r30, r16
    3fb2:	80 83       	st	Z, r24
    3fb4:	91 83       	std	Z+1, r25	; 0x01
    3fb6:	a2 83       	std	Z+2, r26	; 0x02
    3fb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3fba:	fe 01       	movw	r30, r28
    3fbc:	e7 59       	subi	r30, 0x97	; 151
    3fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc0:	60 81       	ld	r22, Z
    3fc2:	71 81       	ldd	r23, Z+1	; 0x01
    3fc4:	82 81       	ldd	r24, Z+2	; 0x02
    3fc6:	93 81       	ldd	r25, Z+3	; 0x03
    3fc8:	20 e0       	ldi	r18, 0x00	; 0
    3fca:	30 e0       	ldi	r19, 0x00	; 0
    3fcc:	40 e8       	ldi	r20, 0x80	; 128
    3fce:	5f e3       	ldi	r21, 0x3F	; 63
    3fd0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3fd4:	88 23       	and	r24, r24
    3fd6:	44 f4       	brge	.+16     	; 0x3fe8 <main+0x5fc>
		__ticks = 1;
    3fd8:	fe 01       	movw	r30, r28
    3fda:	e9 59       	subi	r30, 0x99	; 153
    3fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fde:	81 e0       	ldi	r24, 0x01	; 1
    3fe0:	90 e0       	ldi	r25, 0x00	; 0
    3fe2:	91 83       	std	Z+1, r25	; 0x01
    3fe4:	80 83       	st	Z, r24
    3fe6:	64 c0       	rjmp	.+200    	; 0x40b0 <main+0x6c4>
	else if (__tmp > 65535)
    3fe8:	fe 01       	movw	r30, r28
    3fea:	e7 59       	subi	r30, 0x97	; 151
    3fec:	ff 4f       	sbci	r31, 0xFF	; 255
    3fee:	60 81       	ld	r22, Z
    3ff0:	71 81       	ldd	r23, Z+1	; 0x01
    3ff2:	82 81       	ldd	r24, Z+2	; 0x02
    3ff4:	93 81       	ldd	r25, Z+3	; 0x03
    3ff6:	20 e0       	ldi	r18, 0x00	; 0
    3ff8:	3f ef       	ldi	r19, 0xFF	; 255
    3ffa:	4f e7       	ldi	r20, 0x7F	; 127
    3ffc:	57 e4       	ldi	r21, 0x47	; 71
    3ffe:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4002:	18 16       	cp	r1, r24
    4004:	0c f0       	brlt	.+2      	; 0x4008 <main+0x61c>
    4006:	43 c0       	rjmp	.+134    	; 0x408e <main+0x6a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4008:	fe 01       	movw	r30, r28
    400a:	e3 59       	subi	r30, 0x93	; 147
    400c:	ff 4f       	sbci	r31, 0xFF	; 255
    400e:	60 81       	ld	r22, Z
    4010:	71 81       	ldd	r23, Z+1	; 0x01
    4012:	82 81       	ldd	r24, Z+2	; 0x02
    4014:	93 81       	ldd	r25, Z+3	; 0x03
    4016:	20 e0       	ldi	r18, 0x00	; 0
    4018:	30 e0       	ldi	r19, 0x00	; 0
    401a:	40 e2       	ldi	r20, 0x20	; 32
    401c:	51 e4       	ldi	r21, 0x41	; 65
    401e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4022:	dc 01       	movw	r26, r24
    4024:	cb 01       	movw	r24, r22
    4026:	8e 01       	movw	r16, r28
    4028:	09 59       	subi	r16, 0x99	; 153
    402a:	1f 4f       	sbci	r17, 0xFF	; 255
    402c:	bc 01       	movw	r22, r24
    402e:	cd 01       	movw	r24, r26
    4030:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4034:	dc 01       	movw	r26, r24
    4036:	cb 01       	movw	r24, r22
    4038:	f8 01       	movw	r30, r16
    403a:	91 83       	std	Z+1, r25	; 0x01
    403c:	80 83       	st	Z, r24
    403e:	1f c0       	rjmp	.+62     	; 0x407e <main+0x692>
    4040:	fe 01       	movw	r30, r28
    4042:	eb 59       	subi	r30, 0x9B	; 155
    4044:	ff 4f       	sbci	r31, 0xFF	; 255
    4046:	88 ec       	ldi	r24, 0xC8	; 200
    4048:	90 e0       	ldi	r25, 0x00	; 0
    404a:	91 83       	std	Z+1, r25	; 0x01
    404c:	80 83       	st	Z, r24
    404e:	fe 01       	movw	r30, r28
    4050:	eb 59       	subi	r30, 0x9B	; 155
    4052:	ff 4f       	sbci	r31, 0xFF	; 255
    4054:	80 81       	ld	r24, Z
    4056:	91 81       	ldd	r25, Z+1	; 0x01
    4058:	01 97       	sbiw	r24, 0x01	; 1
    405a:	f1 f7       	brne	.-4      	; 0x4058 <main+0x66c>
    405c:	fe 01       	movw	r30, r28
    405e:	eb 59       	subi	r30, 0x9B	; 155
    4060:	ff 4f       	sbci	r31, 0xFF	; 255
    4062:	91 83       	std	Z+1, r25	; 0x01
    4064:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4066:	de 01       	movw	r26, r28
    4068:	a9 59       	subi	r26, 0x99	; 153
    406a:	bf 4f       	sbci	r27, 0xFF	; 255
    406c:	fe 01       	movw	r30, r28
    406e:	e9 59       	subi	r30, 0x99	; 153
    4070:	ff 4f       	sbci	r31, 0xFF	; 255
    4072:	80 81       	ld	r24, Z
    4074:	91 81       	ldd	r25, Z+1	; 0x01
    4076:	01 97       	sbiw	r24, 0x01	; 1
    4078:	11 96       	adiw	r26, 0x01	; 1
    407a:	9c 93       	st	X, r25
    407c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    407e:	fe 01       	movw	r30, r28
    4080:	e9 59       	subi	r30, 0x99	; 153
    4082:	ff 4f       	sbci	r31, 0xFF	; 255
    4084:	80 81       	ld	r24, Z
    4086:	91 81       	ldd	r25, Z+1	; 0x01
    4088:	00 97       	sbiw	r24, 0x00	; 0
    408a:	d1 f6       	brne	.-76     	; 0x4040 <main+0x654>
    408c:	27 c0       	rjmp	.+78     	; 0x40dc <main+0x6f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    408e:	8e 01       	movw	r16, r28
    4090:	09 59       	subi	r16, 0x99	; 153
    4092:	1f 4f       	sbci	r17, 0xFF	; 255
    4094:	fe 01       	movw	r30, r28
    4096:	e7 59       	subi	r30, 0x97	; 151
    4098:	ff 4f       	sbci	r31, 0xFF	; 255
    409a:	60 81       	ld	r22, Z
    409c:	71 81       	ldd	r23, Z+1	; 0x01
    409e:	82 81       	ldd	r24, Z+2	; 0x02
    40a0:	93 81       	ldd	r25, Z+3	; 0x03
    40a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40a6:	dc 01       	movw	r26, r24
    40a8:	cb 01       	movw	r24, r22
    40aa:	f8 01       	movw	r30, r16
    40ac:	91 83       	std	Z+1, r25	; 0x01
    40ae:	80 83       	st	Z, r24
    40b0:	de 01       	movw	r26, r28
    40b2:	ad 59       	subi	r26, 0x9D	; 157
    40b4:	bf 4f       	sbci	r27, 0xFF	; 255
    40b6:	fe 01       	movw	r30, r28
    40b8:	e9 59       	subi	r30, 0x99	; 153
    40ba:	ff 4f       	sbci	r31, 0xFF	; 255
    40bc:	80 81       	ld	r24, Z
    40be:	91 81       	ldd	r25, Z+1	; 0x01
    40c0:	8d 93       	st	X+, r24
    40c2:	9c 93       	st	X, r25
    40c4:	fe 01       	movw	r30, r28
    40c6:	ed 59       	subi	r30, 0x9D	; 157
    40c8:	ff 4f       	sbci	r31, 0xFF	; 255
    40ca:	80 81       	ld	r24, Z
    40cc:	91 81       	ldd	r25, Z+1	; 0x01
    40ce:	01 97       	sbiw	r24, 0x01	; 1
    40d0:	f1 f7       	brne	.-4      	; 0x40ce <main+0x6e2>
    40d2:	fe 01       	movw	r30, r28
    40d4:	ed 59       	subi	r30, 0x9D	; 157
    40d6:	ff 4f       	sbci	r31, 0xFF	; 255
    40d8:	91 83       	std	Z+1, r25	; 0x01
    40da:	80 83       	st	Z, r24
	            _delay_ms(10);
	            LED_voidOn(red_LED1);
    40dc:	fe 01       	movw	r30, r28
    40de:	e6 58       	subi	r30, 0x86	; 134
    40e0:	ff 4f       	sbci	r31, 0xFF	; 255
    40e2:	60 81       	ld	r22, Z
    40e4:	71 81       	ldd	r23, Z+1	; 0x01
    40e6:	82 81       	ldd	r24, Z+2	; 0x02
    40e8:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
	            LED_voidOn(green_LED2);
    40ec:	fe 01       	movw	r30, r28
    40ee:	e7 57       	subi	r30, 0x77	; 119
    40f0:	ff 4f       	sbci	r31, 0xFF	; 255
    40f2:	60 81       	ld	r22, Z
    40f4:	71 81       	ldd	r23, Z+1	; 0x01
    40f6:	82 81       	ldd	r24, Z+2	; 0x02
    40f8:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
	            flage=1;
    40fc:	81 e0       	ldi	r24, 0x01	; 1
    40fe:	80 93 d2 00 	sts	0x00D2, r24
    4102:	fe 01       	movw	r30, r28
    4104:	e1 5a       	subi	r30, 0xA1	; 161
    4106:	ff 4f       	sbci	r31, 0xFF	; 255
    4108:	80 e0       	ldi	r24, 0x00	; 0
    410a:	90 e0       	ldi	r25, 0x00	; 0
    410c:	aa ef       	ldi	r26, 0xFA	; 250
    410e:	b4 e4       	ldi	r27, 0x44	; 68
    4110:	80 83       	st	Z, r24
    4112:	91 83       	std	Z+1, r25	; 0x01
    4114:	a2 83       	std	Z+2, r26	; 0x02
    4116:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4118:	8e 01       	movw	r16, r28
    411a:	05 5a       	subi	r16, 0xA5	; 165
    411c:	1f 4f       	sbci	r17, 0xFF	; 255
    411e:	fe 01       	movw	r30, r28
    4120:	e1 5a       	subi	r30, 0xA1	; 161
    4122:	ff 4f       	sbci	r31, 0xFF	; 255
    4124:	60 81       	ld	r22, Z
    4126:	71 81       	ldd	r23, Z+1	; 0x01
    4128:	82 81       	ldd	r24, Z+2	; 0x02
    412a:	93 81       	ldd	r25, Z+3	; 0x03
    412c:	20 e0       	ldi	r18, 0x00	; 0
    412e:	30 e0       	ldi	r19, 0x00	; 0
    4130:	4a ef       	ldi	r20, 0xFA	; 250
    4132:	54 e4       	ldi	r21, 0x44	; 68
    4134:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4138:	dc 01       	movw	r26, r24
    413a:	cb 01       	movw	r24, r22
    413c:	f8 01       	movw	r30, r16
    413e:	80 83       	st	Z, r24
    4140:	91 83       	std	Z+1, r25	; 0x01
    4142:	a2 83       	std	Z+2, r26	; 0x02
    4144:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4146:	fe 01       	movw	r30, r28
    4148:	e5 5a       	subi	r30, 0xA5	; 165
    414a:	ff 4f       	sbci	r31, 0xFF	; 255
    414c:	60 81       	ld	r22, Z
    414e:	71 81       	ldd	r23, Z+1	; 0x01
    4150:	82 81       	ldd	r24, Z+2	; 0x02
    4152:	93 81       	ldd	r25, Z+3	; 0x03
    4154:	20 e0       	ldi	r18, 0x00	; 0
    4156:	30 e0       	ldi	r19, 0x00	; 0
    4158:	40 e8       	ldi	r20, 0x80	; 128
    415a:	5f e3       	ldi	r21, 0x3F	; 63
    415c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4160:	88 23       	and	r24, r24
    4162:	44 f4       	brge	.+16     	; 0x4174 <main+0x788>
		__ticks = 1;
    4164:	fe 01       	movw	r30, r28
    4166:	e7 5a       	subi	r30, 0xA7	; 167
    4168:	ff 4f       	sbci	r31, 0xFF	; 255
    416a:	81 e0       	ldi	r24, 0x01	; 1
    416c:	90 e0       	ldi	r25, 0x00	; 0
    416e:	91 83       	std	Z+1, r25	; 0x01
    4170:	80 83       	st	Z, r24
    4172:	64 c0       	rjmp	.+200    	; 0x423c <main+0x850>
	else if (__tmp > 65535)
    4174:	fe 01       	movw	r30, r28
    4176:	e5 5a       	subi	r30, 0xA5	; 165
    4178:	ff 4f       	sbci	r31, 0xFF	; 255
    417a:	60 81       	ld	r22, Z
    417c:	71 81       	ldd	r23, Z+1	; 0x01
    417e:	82 81       	ldd	r24, Z+2	; 0x02
    4180:	93 81       	ldd	r25, Z+3	; 0x03
    4182:	20 e0       	ldi	r18, 0x00	; 0
    4184:	3f ef       	ldi	r19, 0xFF	; 255
    4186:	4f e7       	ldi	r20, 0x7F	; 127
    4188:	57 e4       	ldi	r21, 0x47	; 71
    418a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    418e:	18 16       	cp	r1, r24
    4190:	0c f0       	brlt	.+2      	; 0x4194 <main+0x7a8>
    4192:	43 c0       	rjmp	.+134    	; 0x421a <main+0x82e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4194:	fe 01       	movw	r30, r28
    4196:	e1 5a       	subi	r30, 0xA1	; 161
    4198:	ff 4f       	sbci	r31, 0xFF	; 255
    419a:	60 81       	ld	r22, Z
    419c:	71 81       	ldd	r23, Z+1	; 0x01
    419e:	82 81       	ldd	r24, Z+2	; 0x02
    41a0:	93 81       	ldd	r25, Z+3	; 0x03
    41a2:	20 e0       	ldi	r18, 0x00	; 0
    41a4:	30 e0       	ldi	r19, 0x00	; 0
    41a6:	40 e2       	ldi	r20, 0x20	; 32
    41a8:	51 e4       	ldi	r21, 0x41	; 65
    41aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    41ae:	dc 01       	movw	r26, r24
    41b0:	cb 01       	movw	r24, r22
    41b2:	8e 01       	movw	r16, r28
    41b4:	07 5a       	subi	r16, 0xA7	; 167
    41b6:	1f 4f       	sbci	r17, 0xFF	; 255
    41b8:	bc 01       	movw	r22, r24
    41ba:	cd 01       	movw	r24, r26
    41bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41c0:	dc 01       	movw	r26, r24
    41c2:	cb 01       	movw	r24, r22
    41c4:	f8 01       	movw	r30, r16
    41c6:	91 83       	std	Z+1, r25	; 0x01
    41c8:	80 83       	st	Z, r24
    41ca:	1f c0       	rjmp	.+62     	; 0x420a <main+0x81e>
    41cc:	fe 01       	movw	r30, r28
    41ce:	e9 5a       	subi	r30, 0xA9	; 169
    41d0:	ff 4f       	sbci	r31, 0xFF	; 255
    41d2:	88 ec       	ldi	r24, 0xC8	; 200
    41d4:	90 e0       	ldi	r25, 0x00	; 0
    41d6:	91 83       	std	Z+1, r25	; 0x01
    41d8:	80 83       	st	Z, r24
    41da:	fe 01       	movw	r30, r28
    41dc:	e9 5a       	subi	r30, 0xA9	; 169
    41de:	ff 4f       	sbci	r31, 0xFF	; 255
    41e0:	80 81       	ld	r24, Z
    41e2:	91 81       	ldd	r25, Z+1	; 0x01
    41e4:	01 97       	sbiw	r24, 0x01	; 1
    41e6:	f1 f7       	brne	.-4      	; 0x41e4 <main+0x7f8>
    41e8:	fe 01       	movw	r30, r28
    41ea:	e9 5a       	subi	r30, 0xA9	; 169
    41ec:	ff 4f       	sbci	r31, 0xFF	; 255
    41ee:	91 83       	std	Z+1, r25	; 0x01
    41f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41f2:	de 01       	movw	r26, r28
    41f4:	a7 5a       	subi	r26, 0xA7	; 167
    41f6:	bf 4f       	sbci	r27, 0xFF	; 255
    41f8:	fe 01       	movw	r30, r28
    41fa:	e7 5a       	subi	r30, 0xA7	; 167
    41fc:	ff 4f       	sbci	r31, 0xFF	; 255
    41fe:	80 81       	ld	r24, Z
    4200:	91 81       	ldd	r25, Z+1	; 0x01
    4202:	01 97       	sbiw	r24, 0x01	; 1
    4204:	11 96       	adiw	r26, 0x01	; 1
    4206:	9c 93       	st	X, r25
    4208:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    420a:	fe 01       	movw	r30, r28
    420c:	e7 5a       	subi	r30, 0xA7	; 167
    420e:	ff 4f       	sbci	r31, 0xFF	; 255
    4210:	80 81       	ld	r24, Z
    4212:	91 81       	ldd	r25, Z+1	; 0x01
    4214:	00 97       	sbiw	r24, 0x00	; 0
    4216:	d1 f6       	brne	.-76     	; 0x41cc <main+0x7e0>
    4218:	28 c0       	rjmp	.+80     	; 0x426a <main+0x87e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    421a:	8e 01       	movw	r16, r28
    421c:	07 5a       	subi	r16, 0xA7	; 167
    421e:	1f 4f       	sbci	r17, 0xFF	; 255
    4220:	fe 01       	movw	r30, r28
    4222:	e5 5a       	subi	r30, 0xA5	; 165
    4224:	ff 4f       	sbci	r31, 0xFF	; 255
    4226:	60 81       	ld	r22, Z
    4228:	71 81       	ldd	r23, Z+1	; 0x01
    422a:	82 81       	ldd	r24, Z+2	; 0x02
    422c:	93 81       	ldd	r25, Z+3	; 0x03
    422e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4232:	dc 01       	movw	r26, r24
    4234:	cb 01       	movw	r24, r22
    4236:	f8 01       	movw	r30, r16
    4238:	91 83       	std	Z+1, r25	; 0x01
    423a:	80 83       	st	Z, r24
    423c:	de 01       	movw	r26, r28
    423e:	ab 5a       	subi	r26, 0xAB	; 171
    4240:	bf 4f       	sbci	r27, 0xFF	; 255
    4242:	fe 01       	movw	r30, r28
    4244:	e7 5a       	subi	r30, 0xA7	; 167
    4246:	ff 4f       	sbci	r31, 0xFF	; 255
    4248:	80 81       	ld	r24, Z
    424a:	91 81       	ldd	r25, Z+1	; 0x01
    424c:	11 96       	adiw	r26, 0x01	; 1
    424e:	9c 93       	st	X, r25
    4250:	8e 93       	st	-X, r24
    4252:	fe 01       	movw	r30, r28
    4254:	eb 5a       	subi	r30, 0xAB	; 171
    4256:	ff 4f       	sbci	r31, 0xFF	; 255
    4258:	80 81       	ld	r24, Z
    425a:	91 81       	ldd	r25, Z+1	; 0x01
    425c:	01 97       	sbiw	r24, 0x01	; 1
    425e:	f1 f7       	brne	.-4      	; 0x425c <main+0x870>
    4260:	fe 01       	movw	r30, r28
    4262:	eb 5a       	subi	r30, 0xAB	; 171
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	91 83       	std	Z+1, r25	; 0x01
    4268:	80 83       	st	Z, r24
	            _delay_ms(2000);
	        }
	        if(counter>7 && counter<10)
    426a:	fe 01       	movw	r30, r28
    426c:	ee 58       	subi	r30, 0x8E	; 142
    426e:	ff 4f       	sbci	r31, 0xFF	; 255
    4270:	80 81       	ld	r24, Z
    4272:	88 30       	cpi	r24, 0x08	; 8
    4274:	08 f4       	brcc	.+2      	; 0x4278 <main+0x88c>
    4276:	70 c1       	rjmp	.+736    	; 0x4558 <main+0xb6c>
    4278:	fe 01       	movw	r30, r28
    427a:	ee 58       	subi	r30, 0x8E	; 142
    427c:	ff 4f       	sbci	r31, 0xFF	; 255
    427e:	80 81       	ld	r24, Z
    4280:	8a 30       	cpi	r24, 0x0A	; 10
    4282:	08 f0       	brcs	.+2      	; 0x4286 <main+0x89a>
    4284:	69 c1       	rjmp	.+722    	; 0x4558 <main+0xb6c>
	        {
	        	LED_voidOff(green_LED2);
    4286:	fe 01       	movw	r30, r28
    4288:	e7 57       	subi	r30, 0x77	; 119
    428a:	ff 4f       	sbci	r31, 0xFF	; 255
    428c:	60 81       	ld	r22, Z
    428e:	71 81       	ldd	r23, Z+1	; 0x01
    4290:	82 81       	ldd	r24, Z+2	; 0x02
    4292:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
	        	SSEG_voidSendNumber(sseg1,counter);
    4296:	fe 01       	movw	r30, r28
    4298:	ea 58       	subi	r30, 0x8A	; 138
    429a:	ff 4f       	sbci	r31, 0xFF	; 255
    429c:	80 81       	ld	r24, Z
    429e:	91 81       	ldd	r25, Z+1	; 0x01
    42a0:	fe 01       	movw	r30, r28
    42a2:	ee 58       	subi	r30, 0x8E	; 142
    42a4:	ff 4f       	sbci	r31, 0xFF	; 255
    42a6:	60 81       	ld	r22, Z
    42a8:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
	            SSEG_voidSendNumber(sseg2,counter);
    42ac:	fe 01       	movw	r30, r28
    42ae:	e8 58       	subi	r30, 0x88	; 136
    42b0:	ff 4f       	sbci	r31, 0xFF	; 255
    42b2:	80 81       	ld	r24, Z
    42b4:	91 81       	ldd	r25, Z+1	; 0x01
    42b6:	fe 01       	movw	r30, r28
    42b8:	ee 58       	subi	r30, 0x8E	; 142
    42ba:	ff 4f       	sbci	r31, 0xFF	; 255
    42bc:	60 81       	ld	r22, Z
    42be:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    42c2:	fe 01       	movw	r30, r28
    42c4:	ef 5a       	subi	r30, 0xAF	; 175
    42c6:	ff 4f       	sbci	r31, 0xFF	; 255
    42c8:	80 e0       	ldi	r24, 0x00	; 0
    42ca:	90 e0       	ldi	r25, 0x00	; 0
    42cc:	a0 e2       	ldi	r26, 0x20	; 32
    42ce:	b1 e4       	ldi	r27, 0x41	; 65
    42d0:	80 83       	st	Z, r24
    42d2:	91 83       	std	Z+1, r25	; 0x01
    42d4:	a2 83       	std	Z+2, r26	; 0x02
    42d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42d8:	8e 01       	movw	r16, r28
    42da:	03 5b       	subi	r16, 0xB3	; 179
    42dc:	1f 4f       	sbci	r17, 0xFF	; 255
    42de:	fe 01       	movw	r30, r28
    42e0:	ef 5a       	subi	r30, 0xAF	; 175
    42e2:	ff 4f       	sbci	r31, 0xFF	; 255
    42e4:	60 81       	ld	r22, Z
    42e6:	71 81       	ldd	r23, Z+1	; 0x01
    42e8:	82 81       	ldd	r24, Z+2	; 0x02
    42ea:	93 81       	ldd	r25, Z+3	; 0x03
    42ec:	20 e0       	ldi	r18, 0x00	; 0
    42ee:	30 e0       	ldi	r19, 0x00	; 0
    42f0:	4a ef       	ldi	r20, 0xFA	; 250
    42f2:	54 e4       	ldi	r21, 0x44	; 68
    42f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    42f8:	dc 01       	movw	r26, r24
    42fa:	cb 01       	movw	r24, r22
    42fc:	f8 01       	movw	r30, r16
    42fe:	80 83       	st	Z, r24
    4300:	91 83       	std	Z+1, r25	; 0x01
    4302:	a2 83       	std	Z+2, r26	; 0x02
    4304:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4306:	fe 01       	movw	r30, r28
    4308:	e3 5b       	subi	r30, 0xB3	; 179
    430a:	ff 4f       	sbci	r31, 0xFF	; 255
    430c:	60 81       	ld	r22, Z
    430e:	71 81       	ldd	r23, Z+1	; 0x01
    4310:	82 81       	ldd	r24, Z+2	; 0x02
    4312:	93 81       	ldd	r25, Z+3	; 0x03
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	40 e8       	ldi	r20, 0x80	; 128
    431a:	5f e3       	ldi	r21, 0x3F	; 63
    431c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4320:	88 23       	and	r24, r24
    4322:	44 f4       	brge	.+16     	; 0x4334 <main+0x948>
		__ticks = 1;
    4324:	fe 01       	movw	r30, r28
    4326:	e5 5b       	subi	r30, 0xB5	; 181
    4328:	ff 4f       	sbci	r31, 0xFF	; 255
    432a:	81 e0       	ldi	r24, 0x01	; 1
    432c:	90 e0       	ldi	r25, 0x00	; 0
    432e:	91 83       	std	Z+1, r25	; 0x01
    4330:	80 83       	st	Z, r24
    4332:	64 c0       	rjmp	.+200    	; 0x43fc <main+0xa10>
	else if (__tmp > 65535)
    4334:	fe 01       	movw	r30, r28
    4336:	e3 5b       	subi	r30, 0xB3	; 179
    4338:	ff 4f       	sbci	r31, 0xFF	; 255
    433a:	60 81       	ld	r22, Z
    433c:	71 81       	ldd	r23, Z+1	; 0x01
    433e:	82 81       	ldd	r24, Z+2	; 0x02
    4340:	93 81       	ldd	r25, Z+3	; 0x03
    4342:	20 e0       	ldi	r18, 0x00	; 0
    4344:	3f ef       	ldi	r19, 0xFF	; 255
    4346:	4f e7       	ldi	r20, 0x7F	; 127
    4348:	57 e4       	ldi	r21, 0x47	; 71
    434a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    434e:	18 16       	cp	r1, r24
    4350:	0c f0       	brlt	.+2      	; 0x4354 <main+0x968>
    4352:	43 c0       	rjmp	.+134    	; 0x43da <main+0x9ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4354:	fe 01       	movw	r30, r28
    4356:	ef 5a       	subi	r30, 0xAF	; 175
    4358:	ff 4f       	sbci	r31, 0xFF	; 255
    435a:	60 81       	ld	r22, Z
    435c:	71 81       	ldd	r23, Z+1	; 0x01
    435e:	82 81       	ldd	r24, Z+2	; 0x02
    4360:	93 81       	ldd	r25, Z+3	; 0x03
    4362:	20 e0       	ldi	r18, 0x00	; 0
    4364:	30 e0       	ldi	r19, 0x00	; 0
    4366:	40 e2       	ldi	r20, 0x20	; 32
    4368:	51 e4       	ldi	r21, 0x41	; 65
    436a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    436e:	dc 01       	movw	r26, r24
    4370:	cb 01       	movw	r24, r22
    4372:	8e 01       	movw	r16, r28
    4374:	05 5b       	subi	r16, 0xB5	; 181
    4376:	1f 4f       	sbci	r17, 0xFF	; 255
    4378:	bc 01       	movw	r22, r24
    437a:	cd 01       	movw	r24, r26
    437c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4380:	dc 01       	movw	r26, r24
    4382:	cb 01       	movw	r24, r22
    4384:	f8 01       	movw	r30, r16
    4386:	91 83       	std	Z+1, r25	; 0x01
    4388:	80 83       	st	Z, r24
    438a:	1f c0       	rjmp	.+62     	; 0x43ca <main+0x9de>
    438c:	fe 01       	movw	r30, r28
    438e:	e7 5b       	subi	r30, 0xB7	; 183
    4390:	ff 4f       	sbci	r31, 0xFF	; 255
    4392:	88 ec       	ldi	r24, 0xC8	; 200
    4394:	90 e0       	ldi	r25, 0x00	; 0
    4396:	91 83       	std	Z+1, r25	; 0x01
    4398:	80 83       	st	Z, r24
    439a:	fe 01       	movw	r30, r28
    439c:	e7 5b       	subi	r30, 0xB7	; 183
    439e:	ff 4f       	sbci	r31, 0xFF	; 255
    43a0:	80 81       	ld	r24, Z
    43a2:	91 81       	ldd	r25, Z+1	; 0x01
    43a4:	01 97       	sbiw	r24, 0x01	; 1
    43a6:	f1 f7       	brne	.-4      	; 0x43a4 <main+0x9b8>
    43a8:	fe 01       	movw	r30, r28
    43aa:	e7 5b       	subi	r30, 0xB7	; 183
    43ac:	ff 4f       	sbci	r31, 0xFF	; 255
    43ae:	91 83       	std	Z+1, r25	; 0x01
    43b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43b2:	de 01       	movw	r26, r28
    43b4:	a5 5b       	subi	r26, 0xB5	; 181
    43b6:	bf 4f       	sbci	r27, 0xFF	; 255
    43b8:	fe 01       	movw	r30, r28
    43ba:	e5 5b       	subi	r30, 0xB5	; 181
    43bc:	ff 4f       	sbci	r31, 0xFF	; 255
    43be:	80 81       	ld	r24, Z
    43c0:	91 81       	ldd	r25, Z+1	; 0x01
    43c2:	01 97       	sbiw	r24, 0x01	; 1
    43c4:	11 96       	adiw	r26, 0x01	; 1
    43c6:	9c 93       	st	X, r25
    43c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43ca:	fe 01       	movw	r30, r28
    43cc:	e5 5b       	subi	r30, 0xB5	; 181
    43ce:	ff 4f       	sbci	r31, 0xFF	; 255
    43d0:	80 81       	ld	r24, Z
    43d2:	91 81       	ldd	r25, Z+1	; 0x01
    43d4:	00 97       	sbiw	r24, 0x00	; 0
    43d6:	d1 f6       	brne	.-76     	; 0x438c <main+0x9a0>
    43d8:	27 c0       	rjmp	.+78     	; 0x4428 <main+0xa3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43da:	8e 01       	movw	r16, r28
    43dc:	05 5b       	subi	r16, 0xB5	; 181
    43de:	1f 4f       	sbci	r17, 0xFF	; 255
    43e0:	fe 01       	movw	r30, r28
    43e2:	e3 5b       	subi	r30, 0xB3	; 179
    43e4:	ff 4f       	sbci	r31, 0xFF	; 255
    43e6:	60 81       	ld	r22, Z
    43e8:	71 81       	ldd	r23, Z+1	; 0x01
    43ea:	82 81       	ldd	r24, Z+2	; 0x02
    43ec:	93 81       	ldd	r25, Z+3	; 0x03
    43ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43f2:	dc 01       	movw	r26, r24
    43f4:	cb 01       	movw	r24, r22
    43f6:	f8 01       	movw	r30, r16
    43f8:	91 83       	std	Z+1, r25	; 0x01
    43fa:	80 83       	st	Z, r24
    43fc:	de 01       	movw	r26, r28
    43fe:	a9 5b       	subi	r26, 0xB9	; 185
    4400:	bf 4f       	sbci	r27, 0xFF	; 255
    4402:	fe 01       	movw	r30, r28
    4404:	e5 5b       	subi	r30, 0xB5	; 181
    4406:	ff 4f       	sbci	r31, 0xFF	; 255
    4408:	80 81       	ld	r24, Z
    440a:	91 81       	ldd	r25, Z+1	; 0x01
    440c:	8d 93       	st	X+, r24
    440e:	9c 93       	st	X, r25
    4410:	fe 01       	movw	r30, r28
    4412:	e9 5b       	subi	r30, 0xB9	; 185
    4414:	ff 4f       	sbci	r31, 0xFF	; 255
    4416:	80 81       	ld	r24, Z
    4418:	91 81       	ldd	r25, Z+1	; 0x01
    441a:	01 97       	sbiw	r24, 0x01	; 1
    441c:	f1 f7       	brne	.-4      	; 0x441a <main+0xa2e>
    441e:	fe 01       	movw	r30, r28
    4420:	e9 5b       	subi	r30, 0xB9	; 185
    4422:	ff 4f       	sbci	r31, 0xFF	; 255
    4424:	91 83       	std	Z+1, r25	; 0x01
    4426:	80 83       	st	Z, r24
	            _delay_ms(10);
	            LED_voidOn(red_LED1);
    4428:	fe 01       	movw	r30, r28
    442a:	e6 58       	subi	r30, 0x86	; 134
    442c:	ff 4f       	sbci	r31, 0xFF	; 255
    442e:	60 81       	ld	r22, Z
    4430:	71 81       	ldd	r23, Z+1	; 0x01
    4432:	82 81       	ldd	r24, Z+2	; 0x02
    4434:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
	        	LED_voidOn(yellow_LED2);
    4438:	fe 01       	movw	r30, r28
    443a:	ea 57       	subi	r30, 0x7A	; 122
    443c:	ff 4f       	sbci	r31, 0xFF	; 255
    443e:	60 81       	ld	r22, Z
    4440:	71 81       	ldd	r23, Z+1	; 0x01
    4442:	82 81       	ldd	r24, Z+2	; 0x02
    4444:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
	        	flage=2;
    4448:	82 e0       	ldi	r24, 0x02	; 2
    444a:	80 93 d2 00 	sts	0x00D2, r24
    444e:	fe 01       	movw	r30, r28
    4450:	ed 5b       	subi	r30, 0xBD	; 189
    4452:	ff 4f       	sbci	r31, 0xFF	; 255
    4454:	80 e0       	ldi	r24, 0x00	; 0
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	aa ef       	ldi	r26, 0xFA	; 250
    445a:	b4 e4       	ldi	r27, 0x44	; 68
    445c:	80 83       	st	Z, r24
    445e:	91 83       	std	Z+1, r25	; 0x01
    4460:	a2 83       	std	Z+2, r26	; 0x02
    4462:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4464:	8e 01       	movw	r16, r28
    4466:	01 5c       	subi	r16, 0xC1	; 193
    4468:	1f 4f       	sbci	r17, 0xFF	; 255
    446a:	fe 01       	movw	r30, r28
    446c:	ed 5b       	subi	r30, 0xBD	; 189
    446e:	ff 4f       	sbci	r31, 0xFF	; 255
    4470:	60 81       	ld	r22, Z
    4472:	71 81       	ldd	r23, Z+1	; 0x01
    4474:	82 81       	ldd	r24, Z+2	; 0x02
    4476:	93 81       	ldd	r25, Z+3	; 0x03
    4478:	20 e0       	ldi	r18, 0x00	; 0
    447a:	30 e0       	ldi	r19, 0x00	; 0
    447c:	4a ef       	ldi	r20, 0xFA	; 250
    447e:	54 e4       	ldi	r21, 0x44	; 68
    4480:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4484:	dc 01       	movw	r26, r24
    4486:	cb 01       	movw	r24, r22
    4488:	f8 01       	movw	r30, r16
    448a:	80 83       	st	Z, r24
    448c:	91 83       	std	Z+1, r25	; 0x01
    448e:	a2 83       	std	Z+2, r26	; 0x02
    4490:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4492:	fe 01       	movw	r30, r28
    4494:	ff 96       	adiw	r30, 0x3f	; 63
    4496:	60 81       	ld	r22, Z
    4498:	71 81       	ldd	r23, Z+1	; 0x01
    449a:	82 81       	ldd	r24, Z+2	; 0x02
    449c:	93 81       	ldd	r25, Z+3	; 0x03
    449e:	20 e0       	ldi	r18, 0x00	; 0
    44a0:	30 e0       	ldi	r19, 0x00	; 0
    44a2:	40 e8       	ldi	r20, 0x80	; 128
    44a4:	5f e3       	ldi	r21, 0x3F	; 63
    44a6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    44aa:	88 23       	and	r24, r24
    44ac:	2c f4       	brge	.+10     	; 0x44b8 <main+0xacc>
		__ticks = 1;
    44ae:	81 e0       	ldi	r24, 0x01	; 1
    44b0:	90 e0       	ldi	r25, 0x00	; 0
    44b2:	9e af       	std	Y+62, r25	; 0x3e
    44b4:	8d af       	std	Y+61, r24	; 0x3d
    44b6:	46 c0       	rjmp	.+140    	; 0x4544 <main+0xb58>
	else if (__tmp > 65535)
    44b8:	fe 01       	movw	r30, r28
    44ba:	ff 96       	adiw	r30, 0x3f	; 63
    44bc:	60 81       	ld	r22, Z
    44be:	71 81       	ldd	r23, Z+1	; 0x01
    44c0:	82 81       	ldd	r24, Z+2	; 0x02
    44c2:	93 81       	ldd	r25, Z+3	; 0x03
    44c4:	20 e0       	ldi	r18, 0x00	; 0
    44c6:	3f ef       	ldi	r19, 0xFF	; 255
    44c8:	4f e7       	ldi	r20, 0x7F	; 127
    44ca:	57 e4       	ldi	r21, 0x47	; 71
    44cc:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    44d0:	18 16       	cp	r1, r24
    44d2:	64 f5       	brge	.+88     	; 0x452c <main+0xb40>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44d4:	fe 01       	movw	r30, r28
    44d6:	ed 5b       	subi	r30, 0xBD	; 189
    44d8:	ff 4f       	sbci	r31, 0xFF	; 255
    44da:	60 81       	ld	r22, Z
    44dc:	71 81       	ldd	r23, Z+1	; 0x01
    44de:	82 81       	ldd	r24, Z+2	; 0x02
    44e0:	93 81       	ldd	r25, Z+3	; 0x03
    44e2:	20 e0       	ldi	r18, 0x00	; 0
    44e4:	30 e0       	ldi	r19, 0x00	; 0
    44e6:	40 e2       	ldi	r20, 0x20	; 32
    44e8:	51 e4       	ldi	r21, 0x41	; 65
    44ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44ee:	dc 01       	movw	r26, r24
    44f0:	cb 01       	movw	r24, r22
    44f2:	bc 01       	movw	r22, r24
    44f4:	cd 01       	movw	r24, r26
    44f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44fa:	dc 01       	movw	r26, r24
    44fc:	cb 01       	movw	r24, r22
    44fe:	9e af       	std	Y+62, r25	; 0x3e
    4500:	8d af       	std	Y+61, r24	; 0x3d
    4502:	0f c0       	rjmp	.+30     	; 0x4522 <main+0xb36>
    4504:	88 ec       	ldi	r24, 0xC8	; 200
    4506:	90 e0       	ldi	r25, 0x00	; 0
    4508:	9c af       	std	Y+60, r25	; 0x3c
    450a:	8b af       	std	Y+59, r24	; 0x3b
    450c:	8b ad       	ldd	r24, Y+59	; 0x3b
    450e:	9c ad       	ldd	r25, Y+60	; 0x3c
    4510:	01 97       	sbiw	r24, 0x01	; 1
    4512:	f1 f7       	brne	.-4      	; 0x4510 <main+0xb24>
    4514:	9c af       	std	Y+60, r25	; 0x3c
    4516:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4518:	8d ad       	ldd	r24, Y+61	; 0x3d
    451a:	9e ad       	ldd	r25, Y+62	; 0x3e
    451c:	01 97       	sbiw	r24, 0x01	; 1
    451e:	9e af       	std	Y+62, r25	; 0x3e
    4520:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4522:	8d ad       	ldd	r24, Y+61	; 0x3d
    4524:	9e ad       	ldd	r25, Y+62	; 0x3e
    4526:	00 97       	sbiw	r24, 0x00	; 0
    4528:	69 f7       	brne	.-38     	; 0x4504 <main+0xb18>
    452a:	16 c0       	rjmp	.+44     	; 0x4558 <main+0xb6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    452c:	fe 01       	movw	r30, r28
    452e:	ff 96       	adiw	r30, 0x3f	; 63
    4530:	60 81       	ld	r22, Z
    4532:	71 81       	ldd	r23, Z+1	; 0x01
    4534:	82 81       	ldd	r24, Z+2	; 0x02
    4536:	93 81       	ldd	r25, Z+3	; 0x03
    4538:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    453c:	dc 01       	movw	r26, r24
    453e:	cb 01       	movw	r24, r22
    4540:	9e af       	std	Y+62, r25	; 0x3e
    4542:	8d af       	std	Y+61, r24	; 0x3d
    4544:	8d ad       	ldd	r24, Y+61	; 0x3d
    4546:	9e ad       	ldd	r25, Y+62	; 0x3e
    4548:	9a af       	std	Y+58, r25	; 0x3a
    454a:	89 af       	std	Y+57, r24	; 0x39
    454c:	89 ad       	ldd	r24, Y+57	; 0x39
    454e:	9a ad       	ldd	r25, Y+58	; 0x3a
    4550:	01 97       	sbiw	r24, 0x01	; 1
    4552:	f1 f7       	brne	.-4      	; 0x4550 <main+0xb64>
    4554:	9a af       	std	Y+58, r25	; 0x3a
    4556:	89 af       	std	Y+57, r24	; 0x39
	SSEG_voidSetConfig(sseg1);
	SSEG_voidSetConfig(sseg2);

	while(1)
	{
		for(u8 counter=1;counter<10;counter++)
    4558:	de 01       	movw	r26, r28
    455a:	ae 58       	subi	r26, 0x8E	; 142
    455c:	bf 4f       	sbci	r27, 0xFF	; 255
    455e:	fe 01       	movw	r30, r28
    4560:	ee 58       	subi	r30, 0x8E	; 142
    4562:	ff 4f       	sbci	r31, 0xFF	; 255
    4564:	80 81       	ld	r24, Z
    4566:	8f 5f       	subi	r24, 0xFF	; 255
    4568:	8c 93       	st	X, r24
    456a:	fe 01       	movw	r30, r28
    456c:	ee 58       	subi	r30, 0x8E	; 142
    456e:	ff 4f       	sbci	r31, 0xFF	; 255
    4570:	80 81       	ld	r24, Z
    4572:	8a 30       	cpi	r24, 0x0A	; 10
    4574:	08 f4       	brcc	.+2      	; 0x4578 <main+0xb8c>
    4576:	e2 cc       	rjmp	.-1596   	; 0x3f3c <main+0x550>
	        	LED_voidOn(yellow_LED2);
	        	flage=2;
	        	_delay_ms(2000);
	        }
	        }
		 LED_voidOff(yellow_LED2);
    4578:	fe 01       	movw	r30, r28
    457a:	ea 57       	subi	r30, 0x7A	; 122
    457c:	ff 4f       	sbci	r31, 0xFF	; 255
    457e:	60 81       	ld	r22, Z
    4580:	71 81       	ldd	r23, Z+1	; 0x01
    4582:	82 81       	ldd	r24, Z+2	; 0x02
    4584:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
		 LED_voidOff(red_LED1);
    4588:	fe 01       	movw	r30, r28
    458a:	e6 58       	subi	r30, 0x86	; 134
    458c:	ff 4f       	sbci	r31, 0xFF	; 255
    458e:	60 81       	ld	r22, Z
    4590:	71 81       	ldd	r23, Z+1	; 0x01
    4592:	82 81       	ldd	r24, Z+2	; 0x02
    4594:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
		for(u8 counter=1;counter<10;counter++)
    4598:	fe 01       	movw	r30, r28
    459a:	ef 58       	subi	r30, 0x8F	; 143
    459c:	ff 4f       	sbci	r31, 0xFF	; 255
    459e:	81 e0       	ldi	r24, 0x01	; 1
    45a0:	80 83       	st	Z, r24
    45a2:	40 c2       	rjmp	.+1152   	; 0x4a24 <main+0x1038>
				{
				if(counter<=7)
    45a4:	fe 01       	movw	r30, r28
    45a6:	ef 58       	subi	r30, 0x8F	; 143
    45a8:	ff 4f       	sbci	r31, 0xFF	; 255
    45aa:	80 81       	ld	r24, Z
    45ac:	88 30       	cpi	r24, 0x08	; 8
    45ae:	08 f0       	brcs	.+2      	; 0x45b2 <main+0xbc6>
    45b0:	0d c1       	rjmp	.+538    	; 0x47cc <main+0xde0>
			    {
				    SSEG_voidSendNumber(sseg1,counter);
    45b2:	fe 01       	movw	r30, r28
    45b4:	ea 58       	subi	r30, 0x8A	; 138
    45b6:	ff 4f       	sbci	r31, 0xFF	; 255
    45b8:	80 81       	ld	r24, Z
    45ba:	91 81       	ldd	r25, Z+1	; 0x01
    45bc:	fe 01       	movw	r30, r28
    45be:	ef 58       	subi	r30, 0x8F	; 143
    45c0:	ff 4f       	sbci	r31, 0xFF	; 255
    45c2:	60 81       	ld	r22, Z
    45c4:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
				    SSEG_voidSendNumber(sseg2,counter);
    45c8:	fe 01       	movw	r30, r28
    45ca:	e8 58       	subi	r30, 0x88	; 136
    45cc:	ff 4f       	sbci	r31, 0xFF	; 255
    45ce:	80 81       	ld	r24, Z
    45d0:	91 81       	ldd	r25, Z+1	; 0x01
    45d2:	fe 01       	movw	r30, r28
    45d4:	ef 58       	subi	r30, 0x8F	; 143
    45d6:	ff 4f       	sbci	r31, 0xFF	; 255
    45d8:	60 81       	ld	r22, Z
    45da:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    45de:	80 e0       	ldi	r24, 0x00	; 0
    45e0:	90 e0       	ldi	r25, 0x00	; 0
    45e2:	a0 e2       	ldi	r26, 0x20	; 32
    45e4:	b1 e4       	ldi	r27, 0x41	; 65
    45e6:	8d ab       	std	Y+53, r24	; 0x35
    45e8:	9e ab       	std	Y+54, r25	; 0x36
    45ea:	af ab       	std	Y+55, r26	; 0x37
    45ec:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45ee:	6d a9       	ldd	r22, Y+53	; 0x35
    45f0:	7e a9       	ldd	r23, Y+54	; 0x36
    45f2:	8f a9       	ldd	r24, Y+55	; 0x37
    45f4:	98 ad       	ldd	r25, Y+56	; 0x38
    45f6:	20 e0       	ldi	r18, 0x00	; 0
    45f8:	30 e0       	ldi	r19, 0x00	; 0
    45fa:	4a ef       	ldi	r20, 0xFA	; 250
    45fc:	54 e4       	ldi	r21, 0x44	; 68
    45fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4602:	dc 01       	movw	r26, r24
    4604:	cb 01       	movw	r24, r22
    4606:	89 ab       	std	Y+49, r24	; 0x31
    4608:	9a ab       	std	Y+50, r25	; 0x32
    460a:	ab ab       	std	Y+51, r26	; 0x33
    460c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    460e:	69 a9       	ldd	r22, Y+49	; 0x31
    4610:	7a a9       	ldd	r23, Y+50	; 0x32
    4612:	8b a9       	ldd	r24, Y+51	; 0x33
    4614:	9c a9       	ldd	r25, Y+52	; 0x34
    4616:	20 e0       	ldi	r18, 0x00	; 0
    4618:	30 e0       	ldi	r19, 0x00	; 0
    461a:	40 e8       	ldi	r20, 0x80	; 128
    461c:	5f e3       	ldi	r21, 0x3F	; 63
    461e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4622:	88 23       	and	r24, r24
    4624:	2c f4       	brge	.+10     	; 0x4630 <main+0xc44>
		__ticks = 1;
    4626:	81 e0       	ldi	r24, 0x01	; 1
    4628:	90 e0       	ldi	r25, 0x00	; 0
    462a:	98 ab       	std	Y+48, r25	; 0x30
    462c:	8f a7       	std	Y+47, r24	; 0x2f
    462e:	3f c0       	rjmp	.+126    	; 0x46ae <main+0xcc2>
	else if (__tmp > 65535)
    4630:	69 a9       	ldd	r22, Y+49	; 0x31
    4632:	7a a9       	ldd	r23, Y+50	; 0x32
    4634:	8b a9       	ldd	r24, Y+51	; 0x33
    4636:	9c a9       	ldd	r25, Y+52	; 0x34
    4638:	20 e0       	ldi	r18, 0x00	; 0
    463a:	3f ef       	ldi	r19, 0xFF	; 255
    463c:	4f e7       	ldi	r20, 0x7F	; 127
    463e:	57 e4       	ldi	r21, 0x47	; 71
    4640:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4644:	18 16       	cp	r1, r24
    4646:	4c f5       	brge	.+82     	; 0x469a <main+0xcae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4648:	6d a9       	ldd	r22, Y+53	; 0x35
    464a:	7e a9       	ldd	r23, Y+54	; 0x36
    464c:	8f a9       	ldd	r24, Y+55	; 0x37
    464e:	98 ad       	ldd	r25, Y+56	; 0x38
    4650:	20 e0       	ldi	r18, 0x00	; 0
    4652:	30 e0       	ldi	r19, 0x00	; 0
    4654:	40 e2       	ldi	r20, 0x20	; 32
    4656:	51 e4       	ldi	r21, 0x41	; 65
    4658:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    465c:	dc 01       	movw	r26, r24
    465e:	cb 01       	movw	r24, r22
    4660:	bc 01       	movw	r22, r24
    4662:	cd 01       	movw	r24, r26
    4664:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4668:	dc 01       	movw	r26, r24
    466a:	cb 01       	movw	r24, r22
    466c:	98 ab       	std	Y+48, r25	; 0x30
    466e:	8f a7       	std	Y+47, r24	; 0x2f
    4670:	0f c0       	rjmp	.+30     	; 0x4690 <main+0xca4>
    4672:	88 ec       	ldi	r24, 0xC8	; 200
    4674:	90 e0       	ldi	r25, 0x00	; 0
    4676:	9e a7       	std	Y+46, r25	; 0x2e
    4678:	8d a7       	std	Y+45, r24	; 0x2d
    467a:	8d a5       	ldd	r24, Y+45	; 0x2d
    467c:	9e a5       	ldd	r25, Y+46	; 0x2e
    467e:	01 97       	sbiw	r24, 0x01	; 1
    4680:	f1 f7       	brne	.-4      	; 0x467e <main+0xc92>
    4682:	9e a7       	std	Y+46, r25	; 0x2e
    4684:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4686:	8f a5       	ldd	r24, Y+47	; 0x2f
    4688:	98 a9       	ldd	r25, Y+48	; 0x30
    468a:	01 97       	sbiw	r24, 0x01	; 1
    468c:	98 ab       	std	Y+48, r25	; 0x30
    468e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4690:	8f a5       	ldd	r24, Y+47	; 0x2f
    4692:	98 a9       	ldd	r25, Y+48	; 0x30
    4694:	00 97       	sbiw	r24, 0x00	; 0
    4696:	69 f7       	brne	.-38     	; 0x4672 <main+0xc86>
    4698:	14 c0       	rjmp	.+40     	; 0x46c2 <main+0xcd6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    469a:	69 a9       	ldd	r22, Y+49	; 0x31
    469c:	7a a9       	ldd	r23, Y+50	; 0x32
    469e:	8b a9       	ldd	r24, Y+51	; 0x33
    46a0:	9c a9       	ldd	r25, Y+52	; 0x34
    46a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46a6:	dc 01       	movw	r26, r24
    46a8:	cb 01       	movw	r24, r22
    46aa:	98 ab       	std	Y+48, r25	; 0x30
    46ac:	8f a7       	std	Y+47, r24	; 0x2f
    46ae:	8f a5       	ldd	r24, Y+47	; 0x2f
    46b0:	98 a9       	ldd	r25, Y+48	; 0x30
    46b2:	9c a7       	std	Y+44, r25	; 0x2c
    46b4:	8b a7       	std	Y+43, r24	; 0x2b
    46b6:	8b a5       	ldd	r24, Y+43	; 0x2b
    46b8:	9c a5       	ldd	r25, Y+44	; 0x2c
    46ba:	01 97       	sbiw	r24, 0x01	; 1
    46bc:	f1 f7       	brne	.-4      	; 0x46ba <main+0xcce>
    46be:	9c a7       	std	Y+44, r25	; 0x2c
    46c0:	8b a7       	std	Y+43, r24	; 0x2b
				    _delay_ms(10);
				    LED_voidOn(red_LED2);
    46c2:	fe 01       	movw	r30, r28
    46c4:	ed 57       	subi	r30, 0x7D	; 125
    46c6:	ff 4f       	sbci	r31, 0xFF	; 255
    46c8:	60 81       	ld	r22, Z
    46ca:	71 81       	ldd	r23, Z+1	; 0x01
    46cc:	82 81       	ldd	r24, Z+2	; 0x02
    46ce:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
				    LED_voidOn(green_LED1);
    46d2:	fe 01       	movw	r30, r28
    46d4:	e0 58       	subi	r30, 0x80	; 128
    46d6:	ff 4f       	sbci	r31, 0xFF	; 255
    46d8:	60 81       	ld	r22, Z
    46da:	71 81       	ldd	r23, Z+1	; 0x01
    46dc:	82 81       	ldd	r24, Z+2	; 0x02
    46de:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
				    flage=3;
    46e2:	83 e0       	ldi	r24, 0x03	; 3
    46e4:	80 93 d2 00 	sts	0x00D2, r24
    46e8:	80 e0       	ldi	r24, 0x00	; 0
    46ea:	90 e0       	ldi	r25, 0x00	; 0
    46ec:	aa ef       	ldi	r26, 0xFA	; 250
    46ee:	b4 e4       	ldi	r27, 0x44	; 68
    46f0:	8f a3       	std	Y+39, r24	; 0x27
    46f2:	98 a7       	std	Y+40, r25	; 0x28
    46f4:	a9 a7       	std	Y+41, r26	; 0x29
    46f6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46f8:	6f a1       	ldd	r22, Y+39	; 0x27
    46fa:	78 a5       	ldd	r23, Y+40	; 0x28
    46fc:	89 a5       	ldd	r24, Y+41	; 0x29
    46fe:	9a a5       	ldd	r25, Y+42	; 0x2a
    4700:	20 e0       	ldi	r18, 0x00	; 0
    4702:	30 e0       	ldi	r19, 0x00	; 0
    4704:	4a ef       	ldi	r20, 0xFA	; 250
    4706:	54 e4       	ldi	r21, 0x44	; 68
    4708:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    470c:	dc 01       	movw	r26, r24
    470e:	cb 01       	movw	r24, r22
    4710:	8b a3       	std	Y+35, r24	; 0x23
    4712:	9c a3       	std	Y+36, r25	; 0x24
    4714:	ad a3       	std	Y+37, r26	; 0x25
    4716:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4718:	6b a1       	ldd	r22, Y+35	; 0x23
    471a:	7c a1       	ldd	r23, Y+36	; 0x24
    471c:	8d a1       	ldd	r24, Y+37	; 0x25
    471e:	9e a1       	ldd	r25, Y+38	; 0x26
    4720:	20 e0       	ldi	r18, 0x00	; 0
    4722:	30 e0       	ldi	r19, 0x00	; 0
    4724:	40 e8       	ldi	r20, 0x80	; 128
    4726:	5f e3       	ldi	r21, 0x3F	; 63
    4728:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    472c:	88 23       	and	r24, r24
    472e:	2c f4       	brge	.+10     	; 0x473a <main+0xd4e>
		__ticks = 1;
    4730:	81 e0       	ldi	r24, 0x01	; 1
    4732:	90 e0       	ldi	r25, 0x00	; 0
    4734:	9a a3       	std	Y+34, r25	; 0x22
    4736:	89 a3       	std	Y+33, r24	; 0x21
    4738:	3f c0       	rjmp	.+126    	; 0x47b8 <main+0xdcc>
	else if (__tmp > 65535)
    473a:	6b a1       	ldd	r22, Y+35	; 0x23
    473c:	7c a1       	ldd	r23, Y+36	; 0x24
    473e:	8d a1       	ldd	r24, Y+37	; 0x25
    4740:	9e a1       	ldd	r25, Y+38	; 0x26
    4742:	20 e0       	ldi	r18, 0x00	; 0
    4744:	3f ef       	ldi	r19, 0xFF	; 255
    4746:	4f e7       	ldi	r20, 0x7F	; 127
    4748:	57 e4       	ldi	r21, 0x47	; 71
    474a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    474e:	18 16       	cp	r1, r24
    4750:	4c f5       	brge	.+82     	; 0x47a4 <main+0xdb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4752:	6f a1       	ldd	r22, Y+39	; 0x27
    4754:	78 a5       	ldd	r23, Y+40	; 0x28
    4756:	89 a5       	ldd	r24, Y+41	; 0x29
    4758:	9a a5       	ldd	r25, Y+42	; 0x2a
    475a:	20 e0       	ldi	r18, 0x00	; 0
    475c:	30 e0       	ldi	r19, 0x00	; 0
    475e:	40 e2       	ldi	r20, 0x20	; 32
    4760:	51 e4       	ldi	r21, 0x41	; 65
    4762:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4766:	dc 01       	movw	r26, r24
    4768:	cb 01       	movw	r24, r22
    476a:	bc 01       	movw	r22, r24
    476c:	cd 01       	movw	r24, r26
    476e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4772:	dc 01       	movw	r26, r24
    4774:	cb 01       	movw	r24, r22
    4776:	9a a3       	std	Y+34, r25	; 0x22
    4778:	89 a3       	std	Y+33, r24	; 0x21
    477a:	0f c0       	rjmp	.+30     	; 0x479a <main+0xdae>
    477c:	88 ec       	ldi	r24, 0xC8	; 200
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	98 a3       	std	Y+32, r25	; 0x20
    4782:	8f 8f       	std	Y+31, r24	; 0x1f
    4784:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4786:	98 a1       	ldd	r25, Y+32	; 0x20
    4788:	01 97       	sbiw	r24, 0x01	; 1
    478a:	f1 f7       	brne	.-4      	; 0x4788 <main+0xd9c>
    478c:	98 a3       	std	Y+32, r25	; 0x20
    478e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4790:	89 a1       	ldd	r24, Y+33	; 0x21
    4792:	9a a1       	ldd	r25, Y+34	; 0x22
    4794:	01 97       	sbiw	r24, 0x01	; 1
    4796:	9a a3       	std	Y+34, r25	; 0x22
    4798:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    479a:	89 a1       	ldd	r24, Y+33	; 0x21
    479c:	9a a1       	ldd	r25, Y+34	; 0x22
    479e:	00 97       	sbiw	r24, 0x00	; 0
    47a0:	69 f7       	brne	.-38     	; 0x477c <main+0xd90>
    47a2:	14 c0       	rjmp	.+40     	; 0x47cc <main+0xde0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47a4:	6b a1       	ldd	r22, Y+35	; 0x23
    47a6:	7c a1       	ldd	r23, Y+36	; 0x24
    47a8:	8d a1       	ldd	r24, Y+37	; 0x25
    47aa:	9e a1       	ldd	r25, Y+38	; 0x26
    47ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47b0:	dc 01       	movw	r26, r24
    47b2:	cb 01       	movw	r24, r22
    47b4:	9a a3       	std	Y+34, r25	; 0x22
    47b6:	89 a3       	std	Y+33, r24	; 0x21
    47b8:	89 a1       	ldd	r24, Y+33	; 0x21
    47ba:	9a a1       	ldd	r25, Y+34	; 0x22
    47bc:	9e 8f       	std	Y+30, r25	; 0x1e
    47be:	8d 8f       	std	Y+29, r24	; 0x1d
    47c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    47c2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    47c4:	01 97       	sbiw	r24, 0x01	; 1
    47c6:	f1 f7       	brne	.-4      	; 0x47c4 <main+0xdd8>
    47c8:	9e 8f       	std	Y+30, r25	; 0x1e
    47ca:	8d 8f       	std	Y+29, r24	; 0x1d
				    _delay_ms(2000);
				}
				if(counter>7 && counter<10)
    47cc:	fe 01       	movw	r30, r28
    47ce:	ef 58       	subi	r30, 0x8F	; 143
    47d0:	ff 4f       	sbci	r31, 0xFF	; 255
    47d2:	80 81       	ld	r24, Z
    47d4:	88 30       	cpi	r24, 0x08	; 8
    47d6:	08 f4       	brcc	.+2      	; 0x47da <main+0xdee>
    47d8:	1c c1       	rjmp	.+568    	; 0x4a12 <main+0x1026>
    47da:	fe 01       	movw	r30, r28
    47dc:	ef 58       	subi	r30, 0x8F	; 143
    47de:	ff 4f       	sbci	r31, 0xFF	; 255
    47e0:	80 81       	ld	r24, Z
    47e2:	8a 30       	cpi	r24, 0x0A	; 10
    47e4:	08 f0       	brcs	.+2      	; 0x47e8 <main+0xdfc>
    47e6:	15 c1       	rjmp	.+554    	; 0x4a12 <main+0x1026>
				{
					LED_voidOff(green_LED1);
    47e8:	fe 01       	movw	r30, r28
    47ea:	e0 58       	subi	r30, 0x80	; 128
    47ec:	ff 4f       	sbci	r31, 0xFF	; 255
    47ee:	60 81       	ld	r22, Z
    47f0:	71 81       	ldd	r23, Z+1	; 0x01
    47f2:	82 81       	ldd	r24, Z+2	; 0x02
    47f4:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
					SSEG_voidSendNumber(sseg1,counter);
    47f8:	fe 01       	movw	r30, r28
    47fa:	ea 58       	subi	r30, 0x8A	; 138
    47fc:	ff 4f       	sbci	r31, 0xFF	; 255
    47fe:	80 81       	ld	r24, Z
    4800:	91 81       	ldd	r25, Z+1	; 0x01
    4802:	fe 01       	movw	r30, r28
    4804:	ef 58       	subi	r30, 0x8F	; 143
    4806:	ff 4f       	sbci	r31, 0xFF	; 255
    4808:	60 81       	ld	r22, Z
    480a:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
				    SSEG_voidSendNumber(sseg2,counter);
    480e:	fe 01       	movw	r30, r28
    4810:	e8 58       	subi	r30, 0x88	; 136
    4812:	ff 4f       	sbci	r31, 0xFF	; 255
    4814:	80 81       	ld	r24, Z
    4816:	91 81       	ldd	r25, Z+1	; 0x01
    4818:	fe 01       	movw	r30, r28
    481a:	ef 58       	subi	r30, 0x8F	; 143
    481c:	ff 4f       	sbci	r31, 0xFF	; 255
    481e:	60 81       	ld	r22, Z
    4820:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    4824:	80 e0       	ldi	r24, 0x00	; 0
    4826:	90 e0       	ldi	r25, 0x00	; 0
    4828:	a0 e2       	ldi	r26, 0x20	; 32
    482a:	b1 e4       	ldi	r27, 0x41	; 65
    482c:	89 8f       	std	Y+25, r24	; 0x19
    482e:	9a 8f       	std	Y+26, r25	; 0x1a
    4830:	ab 8f       	std	Y+27, r26	; 0x1b
    4832:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4834:	69 8d       	ldd	r22, Y+25	; 0x19
    4836:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4838:	8b 8d       	ldd	r24, Y+27	; 0x1b
    483a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    483c:	20 e0       	ldi	r18, 0x00	; 0
    483e:	30 e0       	ldi	r19, 0x00	; 0
    4840:	4a ef       	ldi	r20, 0xFA	; 250
    4842:	54 e4       	ldi	r21, 0x44	; 68
    4844:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4848:	dc 01       	movw	r26, r24
    484a:	cb 01       	movw	r24, r22
    484c:	8d 8b       	std	Y+21, r24	; 0x15
    484e:	9e 8b       	std	Y+22, r25	; 0x16
    4850:	af 8b       	std	Y+23, r26	; 0x17
    4852:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4854:	6d 89       	ldd	r22, Y+21	; 0x15
    4856:	7e 89       	ldd	r23, Y+22	; 0x16
    4858:	8f 89       	ldd	r24, Y+23	; 0x17
    485a:	98 8d       	ldd	r25, Y+24	; 0x18
    485c:	20 e0       	ldi	r18, 0x00	; 0
    485e:	30 e0       	ldi	r19, 0x00	; 0
    4860:	40 e8       	ldi	r20, 0x80	; 128
    4862:	5f e3       	ldi	r21, 0x3F	; 63
    4864:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4868:	88 23       	and	r24, r24
    486a:	2c f4       	brge	.+10     	; 0x4876 <main+0xe8a>
		__ticks = 1;
    486c:	81 e0       	ldi	r24, 0x01	; 1
    486e:	90 e0       	ldi	r25, 0x00	; 0
    4870:	9c 8b       	std	Y+20, r25	; 0x14
    4872:	8b 8b       	std	Y+19, r24	; 0x13
    4874:	3f c0       	rjmp	.+126    	; 0x48f4 <main+0xf08>
	else if (__tmp > 65535)
    4876:	6d 89       	ldd	r22, Y+21	; 0x15
    4878:	7e 89       	ldd	r23, Y+22	; 0x16
    487a:	8f 89       	ldd	r24, Y+23	; 0x17
    487c:	98 8d       	ldd	r25, Y+24	; 0x18
    487e:	20 e0       	ldi	r18, 0x00	; 0
    4880:	3f ef       	ldi	r19, 0xFF	; 255
    4882:	4f e7       	ldi	r20, 0x7F	; 127
    4884:	57 e4       	ldi	r21, 0x47	; 71
    4886:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    488a:	18 16       	cp	r1, r24
    488c:	4c f5       	brge	.+82     	; 0x48e0 <main+0xef4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    488e:	69 8d       	ldd	r22, Y+25	; 0x19
    4890:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4892:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4894:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4896:	20 e0       	ldi	r18, 0x00	; 0
    4898:	30 e0       	ldi	r19, 0x00	; 0
    489a:	40 e2       	ldi	r20, 0x20	; 32
    489c:	51 e4       	ldi	r21, 0x41	; 65
    489e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    48a2:	dc 01       	movw	r26, r24
    48a4:	cb 01       	movw	r24, r22
    48a6:	bc 01       	movw	r22, r24
    48a8:	cd 01       	movw	r24, r26
    48aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48ae:	dc 01       	movw	r26, r24
    48b0:	cb 01       	movw	r24, r22
    48b2:	9c 8b       	std	Y+20, r25	; 0x14
    48b4:	8b 8b       	std	Y+19, r24	; 0x13
    48b6:	0f c0       	rjmp	.+30     	; 0x48d6 <main+0xeea>
    48b8:	88 ec       	ldi	r24, 0xC8	; 200
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	9a 8b       	std	Y+18, r25	; 0x12
    48be:	89 8b       	std	Y+17, r24	; 0x11
    48c0:	89 89       	ldd	r24, Y+17	; 0x11
    48c2:	9a 89       	ldd	r25, Y+18	; 0x12
    48c4:	01 97       	sbiw	r24, 0x01	; 1
    48c6:	f1 f7       	brne	.-4      	; 0x48c4 <main+0xed8>
    48c8:	9a 8b       	std	Y+18, r25	; 0x12
    48ca:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48cc:	8b 89       	ldd	r24, Y+19	; 0x13
    48ce:	9c 89       	ldd	r25, Y+20	; 0x14
    48d0:	01 97       	sbiw	r24, 0x01	; 1
    48d2:	9c 8b       	std	Y+20, r25	; 0x14
    48d4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48d6:	8b 89       	ldd	r24, Y+19	; 0x13
    48d8:	9c 89       	ldd	r25, Y+20	; 0x14
    48da:	00 97       	sbiw	r24, 0x00	; 0
    48dc:	69 f7       	brne	.-38     	; 0x48b8 <main+0xecc>
    48de:	14 c0       	rjmp	.+40     	; 0x4908 <main+0xf1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48e0:	6d 89       	ldd	r22, Y+21	; 0x15
    48e2:	7e 89       	ldd	r23, Y+22	; 0x16
    48e4:	8f 89       	ldd	r24, Y+23	; 0x17
    48e6:	98 8d       	ldd	r25, Y+24	; 0x18
    48e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48ec:	dc 01       	movw	r26, r24
    48ee:	cb 01       	movw	r24, r22
    48f0:	9c 8b       	std	Y+20, r25	; 0x14
    48f2:	8b 8b       	std	Y+19, r24	; 0x13
    48f4:	8b 89       	ldd	r24, Y+19	; 0x13
    48f6:	9c 89       	ldd	r25, Y+20	; 0x14
    48f8:	98 8b       	std	Y+16, r25	; 0x10
    48fa:	8f 87       	std	Y+15, r24	; 0x0f
    48fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    48fe:	98 89       	ldd	r25, Y+16	; 0x10
    4900:	01 97       	sbiw	r24, 0x01	; 1
    4902:	f1 f7       	brne	.-4      	; 0x4900 <main+0xf14>
    4904:	98 8b       	std	Y+16, r25	; 0x10
    4906:	8f 87       	std	Y+15, r24	; 0x0f
				    _delay_ms(10);
				    LED_voidOn(red_LED2);
    4908:	fe 01       	movw	r30, r28
    490a:	ed 57       	subi	r30, 0x7D	; 125
    490c:	ff 4f       	sbci	r31, 0xFF	; 255
    490e:	60 81       	ld	r22, Z
    4910:	71 81       	ldd	r23, Z+1	; 0x01
    4912:	82 81       	ldd	r24, Z+2	; 0x02
    4914:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
					LED_voidOn(yellow_LED1);
    4918:	fe 01       	movw	r30, r28
    491a:	e3 58       	subi	r30, 0x83	; 131
    491c:	ff 4f       	sbci	r31, 0xFF	; 255
    491e:	60 81       	ld	r22, Z
    4920:	71 81       	ldd	r23, Z+1	; 0x01
    4922:	82 81       	ldd	r24, Z+2	; 0x02
    4924:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
					flage=4;
    4928:	84 e0       	ldi	r24, 0x04	; 4
    492a:	80 93 d2 00 	sts	0x00D2, r24
    492e:	80 e0       	ldi	r24, 0x00	; 0
    4930:	90 e0       	ldi	r25, 0x00	; 0
    4932:	aa ef       	ldi	r26, 0xFA	; 250
    4934:	b4 e4       	ldi	r27, 0x44	; 68
    4936:	8b 87       	std	Y+11, r24	; 0x0b
    4938:	9c 87       	std	Y+12, r25	; 0x0c
    493a:	ad 87       	std	Y+13, r26	; 0x0d
    493c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    493e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4940:	7c 85       	ldd	r23, Y+12	; 0x0c
    4942:	8d 85       	ldd	r24, Y+13	; 0x0d
    4944:	9e 85       	ldd	r25, Y+14	; 0x0e
    4946:	20 e0       	ldi	r18, 0x00	; 0
    4948:	30 e0       	ldi	r19, 0x00	; 0
    494a:	4a ef       	ldi	r20, 0xFA	; 250
    494c:	54 e4       	ldi	r21, 0x44	; 68
    494e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4952:	dc 01       	movw	r26, r24
    4954:	cb 01       	movw	r24, r22
    4956:	8f 83       	std	Y+7, r24	; 0x07
    4958:	98 87       	std	Y+8, r25	; 0x08
    495a:	a9 87       	std	Y+9, r26	; 0x09
    495c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    495e:	6f 81       	ldd	r22, Y+7	; 0x07
    4960:	78 85       	ldd	r23, Y+8	; 0x08
    4962:	89 85       	ldd	r24, Y+9	; 0x09
    4964:	9a 85       	ldd	r25, Y+10	; 0x0a
    4966:	20 e0       	ldi	r18, 0x00	; 0
    4968:	30 e0       	ldi	r19, 0x00	; 0
    496a:	40 e8       	ldi	r20, 0x80	; 128
    496c:	5f e3       	ldi	r21, 0x3F	; 63
    496e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4972:	88 23       	and	r24, r24
    4974:	2c f4       	brge	.+10     	; 0x4980 <main+0xf94>
		__ticks = 1;
    4976:	81 e0       	ldi	r24, 0x01	; 1
    4978:	90 e0       	ldi	r25, 0x00	; 0
    497a:	9e 83       	std	Y+6, r25	; 0x06
    497c:	8d 83       	std	Y+5, r24	; 0x05
    497e:	3f c0       	rjmp	.+126    	; 0x49fe <main+0x1012>
	else if (__tmp > 65535)
    4980:	6f 81       	ldd	r22, Y+7	; 0x07
    4982:	78 85       	ldd	r23, Y+8	; 0x08
    4984:	89 85       	ldd	r24, Y+9	; 0x09
    4986:	9a 85       	ldd	r25, Y+10	; 0x0a
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	3f ef       	ldi	r19, 0xFF	; 255
    498c:	4f e7       	ldi	r20, 0x7F	; 127
    498e:	57 e4       	ldi	r21, 0x47	; 71
    4990:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4994:	18 16       	cp	r1, r24
    4996:	4c f5       	brge	.+82     	; 0x49ea <main+0xffe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4998:	6b 85       	ldd	r22, Y+11	; 0x0b
    499a:	7c 85       	ldd	r23, Y+12	; 0x0c
    499c:	8d 85       	ldd	r24, Y+13	; 0x0d
    499e:	9e 85       	ldd	r25, Y+14	; 0x0e
    49a0:	20 e0       	ldi	r18, 0x00	; 0
    49a2:	30 e0       	ldi	r19, 0x00	; 0
    49a4:	40 e2       	ldi	r20, 0x20	; 32
    49a6:	51 e4       	ldi	r21, 0x41	; 65
    49a8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    49ac:	dc 01       	movw	r26, r24
    49ae:	cb 01       	movw	r24, r22
    49b0:	bc 01       	movw	r22, r24
    49b2:	cd 01       	movw	r24, r26
    49b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49b8:	dc 01       	movw	r26, r24
    49ba:	cb 01       	movw	r24, r22
    49bc:	9e 83       	std	Y+6, r25	; 0x06
    49be:	8d 83       	std	Y+5, r24	; 0x05
    49c0:	0f c0       	rjmp	.+30     	; 0x49e0 <main+0xff4>
    49c2:	88 ec       	ldi	r24, 0xC8	; 200
    49c4:	90 e0       	ldi	r25, 0x00	; 0
    49c6:	9c 83       	std	Y+4, r25	; 0x04
    49c8:	8b 83       	std	Y+3, r24	; 0x03
    49ca:	8b 81       	ldd	r24, Y+3	; 0x03
    49cc:	9c 81       	ldd	r25, Y+4	; 0x04
    49ce:	01 97       	sbiw	r24, 0x01	; 1
    49d0:	f1 f7       	brne	.-4      	; 0x49ce <main+0xfe2>
    49d2:	9c 83       	std	Y+4, r25	; 0x04
    49d4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49d6:	8d 81       	ldd	r24, Y+5	; 0x05
    49d8:	9e 81       	ldd	r25, Y+6	; 0x06
    49da:	01 97       	sbiw	r24, 0x01	; 1
    49dc:	9e 83       	std	Y+6, r25	; 0x06
    49de:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49e0:	8d 81       	ldd	r24, Y+5	; 0x05
    49e2:	9e 81       	ldd	r25, Y+6	; 0x06
    49e4:	00 97       	sbiw	r24, 0x00	; 0
    49e6:	69 f7       	brne	.-38     	; 0x49c2 <main+0xfd6>
    49e8:	14 c0       	rjmp	.+40     	; 0x4a12 <main+0x1026>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49ea:	6f 81       	ldd	r22, Y+7	; 0x07
    49ec:	78 85       	ldd	r23, Y+8	; 0x08
    49ee:	89 85       	ldd	r24, Y+9	; 0x09
    49f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    49f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49f6:	dc 01       	movw	r26, r24
    49f8:	cb 01       	movw	r24, r22
    49fa:	9e 83       	std	Y+6, r25	; 0x06
    49fc:	8d 83       	std	Y+5, r24	; 0x05
    49fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4a00:	9e 81       	ldd	r25, Y+6	; 0x06
    4a02:	9a 83       	std	Y+2, r25	; 0x02
    4a04:	89 83       	std	Y+1, r24	; 0x01
    4a06:	89 81       	ldd	r24, Y+1	; 0x01
    4a08:	9a 81       	ldd	r25, Y+2	; 0x02
    4a0a:	01 97       	sbiw	r24, 0x01	; 1
    4a0c:	f1 f7       	brne	.-4      	; 0x4a0a <main+0x101e>
    4a0e:	9a 83       	std	Y+2, r25	; 0x02
    4a10:	89 83       	std	Y+1, r24	; 0x01
	        	_delay_ms(2000);
	        }
	        }
		 LED_voidOff(yellow_LED2);
		 LED_voidOff(red_LED1);
		for(u8 counter=1;counter<10;counter++)
    4a12:	de 01       	movw	r26, r28
    4a14:	af 58       	subi	r26, 0x8F	; 143
    4a16:	bf 4f       	sbci	r27, 0xFF	; 255
    4a18:	fe 01       	movw	r30, r28
    4a1a:	ef 58       	subi	r30, 0x8F	; 143
    4a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a1e:	80 81       	ld	r24, Z
    4a20:	8f 5f       	subi	r24, 0xFF	; 255
    4a22:	8c 93       	st	X, r24
    4a24:	fe 01       	movw	r30, r28
    4a26:	ef 58       	subi	r30, 0x8F	; 143
    4a28:	ff 4f       	sbci	r31, 0xFF	; 255
    4a2a:	80 81       	ld	r24, Z
    4a2c:	8a 30       	cpi	r24, 0x0A	; 10
    4a2e:	08 f4       	brcc	.+2      	; 0x4a32 <main+0x1046>
    4a30:	b9 cd       	rjmp	.-1166   	; 0x45a4 <main+0xbb8>
					LED_voidOn(yellow_LED1);
					flage=4;
					_delay_ms(2000);
				}
				}
		LED_voidOff(yellow_LED1);
    4a32:	fe 01       	movw	r30, r28
    4a34:	e3 58       	subi	r30, 0x83	; 131
    4a36:	ff 4f       	sbci	r31, 0xFF	; 255
    4a38:	60 81       	ld	r22, Z
    4a3a:	71 81       	ldd	r23, Z+1	; 0x01
    4a3c:	82 81       	ldd	r24, Z+2	; 0x02
    4a3e:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
		LED_voidOff(red_LED2);
    4a42:	fe 01       	movw	r30, r28
    4a44:	ed 57       	subi	r30, 0x7D	; 125
    4a46:	ff 4f       	sbci	r31, 0xFF	; 255
    4a48:	60 81       	ld	r22, Z
    4a4a:	71 81       	ldd	r23, Z+1	; 0x01
    4a4c:	82 81       	ldd	r24, Z+2	; 0x02
    4a4e:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
    4a52:	6e ca       	rjmp	.-2852   	; 0x3f30 <main+0x544>

00004a54 <__vector_1>:
	}
}

void __vector_1(void)__attribute__((signal));//exit0
void __vector_1(void)
	{
    4a54:	1f 92       	push	r1
    4a56:	0f 92       	push	r0
    4a58:	0f b6       	in	r0, 0x3f	; 63
    4a5a:	0f 92       	push	r0
    4a5c:	11 24       	eor	r1, r1
    4a5e:	0f 93       	push	r16
    4a60:	1f 93       	push	r17
    4a62:	2f 93       	push	r18
    4a64:	3f 93       	push	r19
    4a66:	4f 93       	push	r20
    4a68:	5f 93       	push	r21
    4a6a:	6f 93       	push	r22
    4a6c:	7f 93       	push	r23
    4a6e:	8f 93       	push	r24
    4a70:	9f 93       	push	r25
    4a72:	af 93       	push	r26
    4a74:	bf 93       	push	r27
    4a76:	ef 93       	push	r30
    4a78:	ff 93       	push	r31
    4a7a:	df 93       	push	r29
    4a7c:	cf 93       	push	r28
    4a7e:	cd b7       	in	r28, 0x3d	; 61
    4a80:	de b7       	in	r29, 0x3e	; 62
    4a82:	c2 54       	subi	r28, 0x42	; 66
    4a84:	d1 40       	sbci	r29, 0x01	; 1
    4a86:	de bf       	out	0x3e, r29	; 62
    4a88:	cd bf       	out	0x3d, r28	; 61
	LCD_Vinit();
    4a8a:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <LCD_Vinit>
	LCD_GOTOXY(1,0);
    4a8e:	81 e0       	ldi	r24, 0x01	; 1
    4a90:	60 e0       	ldi	r22, 0x00	; 0
    4a92:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
	LCD_Send_string("Train is coming");
    4a96:	80 e6       	ldi	r24, 0x60	; 96
    4a98:	90 e0       	ldi	r25, 0x00	; 0
    4a9a:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
	LCD_GOTOXY(2,0);
    4a9e:	82 e0       	ldi	r24, 0x02	; 2
    4aa0:	60 e0       	ldi	r22, 0x00	; 0
    4aa2:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
	LCD_Send_string("soon");
    4aa6:	80 e7       	ldi	r24, 0x70	; 112
    4aa8:	90 e0       	ldi	r25, 0x00	; 0
    4aaa:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>


	DIO_voidSetPinDirection(DIO_PORTC,DIO_PIN7,DIO_OUTPUT);
    4aae:	82 e0       	ldi	r24, 0x02	; 2
    4ab0:	67 e0       	ldi	r22, 0x07	; 7
    4ab2:	41 e0       	ldi	r20, 0x01	; 1
    4ab4:	0e 94 4b 0a 	call	0x1496	; 0x1496 <DIO_voidSetPinDirection>
	SSEG_Types sseg1={SSEG_PORTC,SSEG_ComanCathode};
    4ab8:	fe 01       	movw	r30, r28
    4aba:	e1 5f       	subi	r30, 0xF1	; 241
    4abc:	fe 4f       	sbci	r31, 0xFE	; 254
    4abe:	82 e0       	ldi	r24, 0x02	; 2
    4ac0:	80 83       	st	Z, r24
    4ac2:	fe 01       	movw	r30, r28
    4ac4:	e1 5f       	subi	r30, 0xF1	; 241
    4ac6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ac8:	11 82       	std	Z+1, r1	; 0x01
		SSEG_Types sseg2={SSEG_PORTA,SSEG_ComanCathode};
    4aca:	fe 01       	movw	r30, r28
    4acc:	ef 5e       	subi	r30, 0xEF	; 239
    4ace:	fe 4f       	sbci	r31, 0xFE	; 254
    4ad0:	10 82       	st	Z, r1
    4ad2:	fe 01       	movw	r30, r28
    4ad4:	ef 5e       	subi	r30, 0xEF	; 239
    4ad6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ad8:	11 82       	std	Z+1, r1	; 0x01

		LED_Type red_LED1={DIO_PORTD,DIO_PIN3,LED_FORWARD};//red
    4ada:	ce 01       	movw	r24, r28
    4adc:	8d 5e       	subi	r24, 0xED	; 237
    4ade:	9e 4f       	sbci	r25, 0xFE	; 254
    4ae0:	cb 5d       	subi	r28, 0xDB	; 219
    4ae2:	de 4f       	sbci	r29, 0xFE	; 254
    4ae4:	99 83       	std	Y+1, r25	; 0x01
    4ae6:	88 83       	st	Y, r24
    4ae8:	c5 52       	subi	r28, 0x25	; 37
    4aea:	d1 40       	sbci	r29, 0x01	; 1
    4aec:	8e ec       	ldi	r24, 0xCE	; 206
    4aee:	90 e0       	ldi	r25, 0x00	; 0
    4af0:	c9 5d       	subi	r28, 0xD9	; 217
    4af2:	de 4f       	sbci	r29, 0xFE	; 254
    4af4:	99 83       	std	Y+1, r25	; 0x01
    4af6:	88 83       	st	Y, r24
    4af8:	c7 52       	subi	r28, 0x27	; 39
    4afa:	d1 40       	sbci	r29, 0x01	; 1
    4afc:	93 e0       	ldi	r25, 0x03	; 3
    4afe:	c7 5d       	subi	r28, 0xD7	; 215
    4b00:	de 4f       	sbci	r29, 0xFE	; 254
    4b02:	98 83       	st	Y, r25
    4b04:	c9 52       	subi	r28, 0x29	; 41
    4b06:	d1 40       	sbci	r29, 0x01	; 1
    4b08:	c9 5d       	subi	r28, 0xD9	; 217
    4b0a:	de 4f       	sbci	r29, 0xFE	; 254
    4b0c:	e8 81       	ld	r30, Y
    4b0e:	f9 81       	ldd	r31, Y+1	; 0x01
    4b10:	c7 52       	subi	r28, 0x27	; 39
    4b12:	d1 40       	sbci	r29, 0x01	; 1
    4b14:	00 80       	ld	r0, Z
    4b16:	c9 5d       	subi	r28, 0xD9	; 217
    4b18:	de 4f       	sbci	r29, 0xFE	; 254
    4b1a:	88 81       	ld	r24, Y
    4b1c:	99 81       	ldd	r25, Y+1	; 0x01
    4b1e:	c7 52       	subi	r28, 0x27	; 39
    4b20:	d1 40       	sbci	r29, 0x01	; 1
    4b22:	01 96       	adiw	r24, 0x01	; 1
    4b24:	c9 5d       	subi	r28, 0xD9	; 217
    4b26:	de 4f       	sbci	r29, 0xFE	; 254
    4b28:	99 83       	std	Y+1, r25	; 0x01
    4b2a:	88 83       	st	Y, r24
    4b2c:	c7 52       	subi	r28, 0x27	; 39
    4b2e:	d1 40       	sbci	r29, 0x01	; 1
    4b30:	cb 5d       	subi	r28, 0xDB	; 219
    4b32:	de 4f       	sbci	r29, 0xFE	; 254
    4b34:	e8 81       	ld	r30, Y
    4b36:	f9 81       	ldd	r31, Y+1	; 0x01
    4b38:	c5 52       	subi	r28, 0x25	; 37
    4b3a:	d1 40       	sbci	r29, 0x01	; 1
    4b3c:	00 82       	st	Z, r0
    4b3e:	cb 5d       	subi	r28, 0xDB	; 219
    4b40:	de 4f       	sbci	r29, 0xFE	; 254
    4b42:	88 81       	ld	r24, Y
    4b44:	99 81       	ldd	r25, Y+1	; 0x01
    4b46:	c5 52       	subi	r28, 0x25	; 37
    4b48:	d1 40       	sbci	r29, 0x01	; 1
    4b4a:	01 96       	adiw	r24, 0x01	; 1
    4b4c:	cb 5d       	subi	r28, 0xDB	; 219
    4b4e:	de 4f       	sbci	r29, 0xFE	; 254
    4b50:	99 83       	std	Y+1, r25	; 0x01
    4b52:	88 83       	st	Y, r24
    4b54:	c5 52       	subi	r28, 0x25	; 37
    4b56:	d1 40       	sbci	r29, 0x01	; 1
    4b58:	c7 5d       	subi	r28, 0xD7	; 215
    4b5a:	de 4f       	sbci	r29, 0xFE	; 254
    4b5c:	98 81       	ld	r25, Y
    4b5e:	c9 52       	subi	r28, 0x29	; 41
    4b60:	d1 40       	sbci	r29, 0x01	; 1
    4b62:	91 50       	subi	r25, 0x01	; 1
    4b64:	c7 5d       	subi	r28, 0xD7	; 215
    4b66:	de 4f       	sbci	r29, 0xFE	; 254
    4b68:	98 83       	st	Y, r25
    4b6a:	c9 52       	subi	r28, 0x29	; 41
    4b6c:	d1 40       	sbci	r29, 0x01	; 1
    4b6e:	c7 5d       	subi	r28, 0xD7	; 215
    4b70:	de 4f       	sbci	r29, 0xFE	; 254
    4b72:	e8 81       	ld	r30, Y
    4b74:	c9 52       	subi	r28, 0x29	; 41
    4b76:	d1 40       	sbci	r29, 0x01	; 1
    4b78:	ee 23       	and	r30, r30
    4b7a:	31 f6       	brne	.-116    	; 0x4b08 <__vector_1+0xb4>
		LED_Type yellow_LED1={DIO_PORTD,DIO_PIN1,LED_FORWARD};//yellow
    4b7c:	ce 01       	movw	r24, r28
    4b7e:	8a 5e       	subi	r24, 0xEA	; 234
    4b80:	9e 4f       	sbci	r25, 0xFE	; 254
    4b82:	c6 5d       	subi	r28, 0xD6	; 214
    4b84:	de 4f       	sbci	r29, 0xFE	; 254
    4b86:	99 83       	std	Y+1, r25	; 0x01
    4b88:	88 83       	st	Y, r24
    4b8a:	ca 52       	subi	r28, 0x2A	; 42
    4b8c:	d1 40       	sbci	r29, 0x01	; 1
    4b8e:	8b ec       	ldi	r24, 0xCB	; 203
    4b90:	90 e0       	ldi	r25, 0x00	; 0
    4b92:	c4 5d       	subi	r28, 0xD4	; 212
    4b94:	de 4f       	sbci	r29, 0xFE	; 254
    4b96:	99 83       	std	Y+1, r25	; 0x01
    4b98:	88 83       	st	Y, r24
    4b9a:	cc 52       	subi	r28, 0x2C	; 44
    4b9c:	d1 40       	sbci	r29, 0x01	; 1
    4b9e:	93 e0       	ldi	r25, 0x03	; 3
    4ba0:	c2 5d       	subi	r28, 0xD2	; 210
    4ba2:	de 4f       	sbci	r29, 0xFE	; 254
    4ba4:	98 83       	st	Y, r25
    4ba6:	ce 52       	subi	r28, 0x2E	; 46
    4ba8:	d1 40       	sbci	r29, 0x01	; 1
    4baa:	c4 5d       	subi	r28, 0xD4	; 212
    4bac:	de 4f       	sbci	r29, 0xFE	; 254
    4bae:	e8 81       	ld	r30, Y
    4bb0:	f9 81       	ldd	r31, Y+1	; 0x01
    4bb2:	cc 52       	subi	r28, 0x2C	; 44
    4bb4:	d1 40       	sbci	r29, 0x01	; 1
    4bb6:	00 80       	ld	r0, Z
    4bb8:	c4 5d       	subi	r28, 0xD4	; 212
    4bba:	de 4f       	sbci	r29, 0xFE	; 254
    4bbc:	88 81       	ld	r24, Y
    4bbe:	99 81       	ldd	r25, Y+1	; 0x01
    4bc0:	cc 52       	subi	r28, 0x2C	; 44
    4bc2:	d1 40       	sbci	r29, 0x01	; 1
    4bc4:	01 96       	adiw	r24, 0x01	; 1
    4bc6:	c4 5d       	subi	r28, 0xD4	; 212
    4bc8:	de 4f       	sbci	r29, 0xFE	; 254
    4bca:	99 83       	std	Y+1, r25	; 0x01
    4bcc:	88 83       	st	Y, r24
    4bce:	cc 52       	subi	r28, 0x2C	; 44
    4bd0:	d1 40       	sbci	r29, 0x01	; 1
    4bd2:	c6 5d       	subi	r28, 0xD6	; 214
    4bd4:	de 4f       	sbci	r29, 0xFE	; 254
    4bd6:	e8 81       	ld	r30, Y
    4bd8:	f9 81       	ldd	r31, Y+1	; 0x01
    4bda:	ca 52       	subi	r28, 0x2A	; 42
    4bdc:	d1 40       	sbci	r29, 0x01	; 1
    4bde:	00 82       	st	Z, r0
    4be0:	c6 5d       	subi	r28, 0xD6	; 214
    4be2:	de 4f       	sbci	r29, 0xFE	; 254
    4be4:	88 81       	ld	r24, Y
    4be6:	99 81       	ldd	r25, Y+1	; 0x01
    4be8:	ca 52       	subi	r28, 0x2A	; 42
    4bea:	d1 40       	sbci	r29, 0x01	; 1
    4bec:	01 96       	adiw	r24, 0x01	; 1
    4bee:	c6 5d       	subi	r28, 0xD6	; 214
    4bf0:	de 4f       	sbci	r29, 0xFE	; 254
    4bf2:	99 83       	std	Y+1, r25	; 0x01
    4bf4:	88 83       	st	Y, r24
    4bf6:	ca 52       	subi	r28, 0x2A	; 42
    4bf8:	d1 40       	sbci	r29, 0x01	; 1
    4bfa:	c2 5d       	subi	r28, 0xD2	; 210
    4bfc:	de 4f       	sbci	r29, 0xFE	; 254
    4bfe:	98 81       	ld	r25, Y
    4c00:	ce 52       	subi	r28, 0x2E	; 46
    4c02:	d1 40       	sbci	r29, 0x01	; 1
    4c04:	91 50       	subi	r25, 0x01	; 1
    4c06:	c2 5d       	subi	r28, 0xD2	; 210
    4c08:	de 4f       	sbci	r29, 0xFE	; 254
    4c0a:	98 83       	st	Y, r25
    4c0c:	ce 52       	subi	r28, 0x2E	; 46
    4c0e:	d1 40       	sbci	r29, 0x01	; 1
    4c10:	c2 5d       	subi	r28, 0xD2	; 210
    4c12:	de 4f       	sbci	r29, 0xFE	; 254
    4c14:	e8 81       	ld	r30, Y
    4c16:	ce 52       	subi	r28, 0x2E	; 46
    4c18:	d1 40       	sbci	r29, 0x01	; 1
    4c1a:	ee 23       	and	r30, r30
    4c1c:	31 f6       	brne	.-116    	; 0x4baa <__vector_1+0x156>
		LED_Type green_LED1={DIO_PORTD,DIO_PIN0,LED_FORWARD};//green
    4c1e:	ce 01       	movw	r24, r28
    4c20:	87 5e       	subi	r24, 0xE7	; 231
    4c22:	9e 4f       	sbci	r25, 0xFE	; 254
    4c24:	c1 5d       	subi	r28, 0xD1	; 209
    4c26:	de 4f       	sbci	r29, 0xFE	; 254
    4c28:	99 83       	std	Y+1, r25	; 0x01
    4c2a:	88 83       	st	Y, r24
    4c2c:	cf 52       	subi	r28, 0x2F	; 47
    4c2e:	d1 40       	sbci	r29, 0x01	; 1
    4c30:	88 ec       	ldi	r24, 0xC8	; 200
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	cf 5c       	subi	r28, 0xCF	; 207
    4c36:	de 4f       	sbci	r29, 0xFE	; 254
    4c38:	99 83       	std	Y+1, r25	; 0x01
    4c3a:	88 83       	st	Y, r24
    4c3c:	c1 53       	subi	r28, 0x31	; 49
    4c3e:	d1 40       	sbci	r29, 0x01	; 1
    4c40:	93 e0       	ldi	r25, 0x03	; 3
    4c42:	cd 5c       	subi	r28, 0xCD	; 205
    4c44:	de 4f       	sbci	r29, 0xFE	; 254
    4c46:	98 83       	st	Y, r25
    4c48:	c3 53       	subi	r28, 0x33	; 51
    4c4a:	d1 40       	sbci	r29, 0x01	; 1
    4c4c:	cf 5c       	subi	r28, 0xCF	; 207
    4c4e:	de 4f       	sbci	r29, 0xFE	; 254
    4c50:	e8 81       	ld	r30, Y
    4c52:	f9 81       	ldd	r31, Y+1	; 0x01
    4c54:	c1 53       	subi	r28, 0x31	; 49
    4c56:	d1 40       	sbci	r29, 0x01	; 1
    4c58:	00 80       	ld	r0, Z
    4c5a:	cf 5c       	subi	r28, 0xCF	; 207
    4c5c:	de 4f       	sbci	r29, 0xFE	; 254
    4c5e:	88 81       	ld	r24, Y
    4c60:	99 81       	ldd	r25, Y+1	; 0x01
    4c62:	c1 53       	subi	r28, 0x31	; 49
    4c64:	d1 40       	sbci	r29, 0x01	; 1
    4c66:	01 96       	adiw	r24, 0x01	; 1
    4c68:	cf 5c       	subi	r28, 0xCF	; 207
    4c6a:	de 4f       	sbci	r29, 0xFE	; 254
    4c6c:	99 83       	std	Y+1, r25	; 0x01
    4c6e:	88 83       	st	Y, r24
    4c70:	c1 53       	subi	r28, 0x31	; 49
    4c72:	d1 40       	sbci	r29, 0x01	; 1
    4c74:	c1 5d       	subi	r28, 0xD1	; 209
    4c76:	de 4f       	sbci	r29, 0xFE	; 254
    4c78:	e8 81       	ld	r30, Y
    4c7a:	f9 81       	ldd	r31, Y+1	; 0x01
    4c7c:	cf 52       	subi	r28, 0x2F	; 47
    4c7e:	d1 40       	sbci	r29, 0x01	; 1
    4c80:	00 82       	st	Z, r0
    4c82:	c1 5d       	subi	r28, 0xD1	; 209
    4c84:	de 4f       	sbci	r29, 0xFE	; 254
    4c86:	88 81       	ld	r24, Y
    4c88:	99 81       	ldd	r25, Y+1	; 0x01
    4c8a:	cf 52       	subi	r28, 0x2F	; 47
    4c8c:	d1 40       	sbci	r29, 0x01	; 1
    4c8e:	01 96       	adiw	r24, 0x01	; 1
    4c90:	c1 5d       	subi	r28, 0xD1	; 209
    4c92:	de 4f       	sbci	r29, 0xFE	; 254
    4c94:	99 83       	std	Y+1, r25	; 0x01
    4c96:	88 83       	st	Y, r24
    4c98:	cf 52       	subi	r28, 0x2F	; 47
    4c9a:	d1 40       	sbci	r29, 0x01	; 1
    4c9c:	cd 5c       	subi	r28, 0xCD	; 205
    4c9e:	de 4f       	sbci	r29, 0xFE	; 254
    4ca0:	98 81       	ld	r25, Y
    4ca2:	c3 53       	subi	r28, 0x33	; 51
    4ca4:	d1 40       	sbci	r29, 0x01	; 1
    4ca6:	91 50       	subi	r25, 0x01	; 1
    4ca8:	cd 5c       	subi	r28, 0xCD	; 205
    4caa:	de 4f       	sbci	r29, 0xFE	; 254
    4cac:	98 83       	st	Y, r25
    4cae:	c3 53       	subi	r28, 0x33	; 51
    4cb0:	d1 40       	sbci	r29, 0x01	; 1
    4cb2:	cd 5c       	subi	r28, 0xCD	; 205
    4cb4:	de 4f       	sbci	r29, 0xFE	; 254
    4cb6:	e8 81       	ld	r30, Y
    4cb8:	c3 53       	subi	r28, 0x33	; 51
    4cba:	d1 40       	sbci	r29, 0x01	; 1
    4cbc:	ee 23       	and	r30, r30
    4cbe:	31 f6       	brne	.-116    	; 0x4c4c <__vector_1+0x1f8>
		LED_Type red_LED2={DIO_PORTD,DIO_PIN7,LED_FORWARD};//red2
    4cc0:	ce 01       	movw	r24, r28
    4cc2:	84 5e       	subi	r24, 0xE4	; 228
    4cc4:	9e 4f       	sbci	r25, 0xFE	; 254
    4cc6:	cc 5c       	subi	r28, 0xCC	; 204
    4cc8:	de 4f       	sbci	r29, 0xFE	; 254
    4cca:	99 83       	std	Y+1, r25	; 0x01
    4ccc:	88 83       	st	Y, r24
    4cce:	c4 53       	subi	r28, 0x34	; 52
    4cd0:	d1 40       	sbci	r29, 0x01	; 1
    4cd2:	85 ec       	ldi	r24, 0xC5	; 197
    4cd4:	90 e0       	ldi	r25, 0x00	; 0
    4cd6:	ca 5c       	subi	r28, 0xCA	; 202
    4cd8:	de 4f       	sbci	r29, 0xFE	; 254
    4cda:	99 83       	std	Y+1, r25	; 0x01
    4cdc:	88 83       	st	Y, r24
    4cde:	c6 53       	subi	r28, 0x36	; 54
    4ce0:	d1 40       	sbci	r29, 0x01	; 1
    4ce2:	93 e0       	ldi	r25, 0x03	; 3
    4ce4:	c8 5c       	subi	r28, 0xC8	; 200
    4ce6:	de 4f       	sbci	r29, 0xFE	; 254
    4ce8:	98 83       	st	Y, r25
    4cea:	c8 53       	subi	r28, 0x38	; 56
    4cec:	d1 40       	sbci	r29, 0x01	; 1
    4cee:	ca 5c       	subi	r28, 0xCA	; 202
    4cf0:	de 4f       	sbci	r29, 0xFE	; 254
    4cf2:	e8 81       	ld	r30, Y
    4cf4:	f9 81       	ldd	r31, Y+1	; 0x01
    4cf6:	c6 53       	subi	r28, 0x36	; 54
    4cf8:	d1 40       	sbci	r29, 0x01	; 1
    4cfa:	00 80       	ld	r0, Z
    4cfc:	ca 5c       	subi	r28, 0xCA	; 202
    4cfe:	de 4f       	sbci	r29, 0xFE	; 254
    4d00:	88 81       	ld	r24, Y
    4d02:	99 81       	ldd	r25, Y+1	; 0x01
    4d04:	c6 53       	subi	r28, 0x36	; 54
    4d06:	d1 40       	sbci	r29, 0x01	; 1
    4d08:	01 96       	adiw	r24, 0x01	; 1
    4d0a:	ca 5c       	subi	r28, 0xCA	; 202
    4d0c:	de 4f       	sbci	r29, 0xFE	; 254
    4d0e:	99 83       	std	Y+1, r25	; 0x01
    4d10:	88 83       	st	Y, r24
    4d12:	c6 53       	subi	r28, 0x36	; 54
    4d14:	d1 40       	sbci	r29, 0x01	; 1
    4d16:	cc 5c       	subi	r28, 0xCC	; 204
    4d18:	de 4f       	sbci	r29, 0xFE	; 254
    4d1a:	e8 81       	ld	r30, Y
    4d1c:	f9 81       	ldd	r31, Y+1	; 0x01
    4d1e:	c4 53       	subi	r28, 0x34	; 52
    4d20:	d1 40       	sbci	r29, 0x01	; 1
    4d22:	00 82       	st	Z, r0
    4d24:	cc 5c       	subi	r28, 0xCC	; 204
    4d26:	de 4f       	sbci	r29, 0xFE	; 254
    4d28:	88 81       	ld	r24, Y
    4d2a:	99 81       	ldd	r25, Y+1	; 0x01
    4d2c:	c4 53       	subi	r28, 0x34	; 52
    4d2e:	d1 40       	sbci	r29, 0x01	; 1
    4d30:	01 96       	adiw	r24, 0x01	; 1
    4d32:	cc 5c       	subi	r28, 0xCC	; 204
    4d34:	de 4f       	sbci	r29, 0xFE	; 254
    4d36:	99 83       	std	Y+1, r25	; 0x01
    4d38:	88 83       	st	Y, r24
    4d3a:	c4 53       	subi	r28, 0x34	; 52
    4d3c:	d1 40       	sbci	r29, 0x01	; 1
    4d3e:	c8 5c       	subi	r28, 0xC8	; 200
    4d40:	de 4f       	sbci	r29, 0xFE	; 254
    4d42:	98 81       	ld	r25, Y
    4d44:	c8 53       	subi	r28, 0x38	; 56
    4d46:	d1 40       	sbci	r29, 0x01	; 1
    4d48:	91 50       	subi	r25, 0x01	; 1
    4d4a:	c8 5c       	subi	r28, 0xC8	; 200
    4d4c:	de 4f       	sbci	r29, 0xFE	; 254
    4d4e:	98 83       	st	Y, r25
    4d50:	c8 53       	subi	r28, 0x38	; 56
    4d52:	d1 40       	sbci	r29, 0x01	; 1
    4d54:	c8 5c       	subi	r28, 0xC8	; 200
    4d56:	de 4f       	sbci	r29, 0xFE	; 254
    4d58:	e8 81       	ld	r30, Y
    4d5a:	c8 53       	subi	r28, 0x38	; 56
    4d5c:	d1 40       	sbci	r29, 0x01	; 1
    4d5e:	ee 23       	and	r30, r30
    4d60:	31 f6       	brne	.-116    	; 0x4cee <__vector_1+0x29a>
		LED_Type yellow_LED2={DIO_PORTD,DIO_PIN6,LED_FORWARD};//yellow2
    4d62:	ce 01       	movw	r24, r28
    4d64:	81 5e       	subi	r24, 0xE1	; 225
    4d66:	9e 4f       	sbci	r25, 0xFE	; 254
    4d68:	c7 5c       	subi	r28, 0xC7	; 199
    4d6a:	de 4f       	sbci	r29, 0xFE	; 254
    4d6c:	99 83       	std	Y+1, r25	; 0x01
    4d6e:	88 83       	st	Y, r24
    4d70:	c9 53       	subi	r28, 0x39	; 57
    4d72:	d1 40       	sbci	r29, 0x01	; 1
    4d74:	82 ec       	ldi	r24, 0xC2	; 194
    4d76:	90 e0       	ldi	r25, 0x00	; 0
    4d78:	c5 5c       	subi	r28, 0xC5	; 197
    4d7a:	de 4f       	sbci	r29, 0xFE	; 254
    4d7c:	99 83       	std	Y+1, r25	; 0x01
    4d7e:	88 83       	st	Y, r24
    4d80:	cb 53       	subi	r28, 0x3B	; 59
    4d82:	d1 40       	sbci	r29, 0x01	; 1
    4d84:	93 e0       	ldi	r25, 0x03	; 3
    4d86:	c3 5c       	subi	r28, 0xC3	; 195
    4d88:	de 4f       	sbci	r29, 0xFE	; 254
    4d8a:	98 83       	st	Y, r25
    4d8c:	cd 53       	subi	r28, 0x3D	; 61
    4d8e:	d1 40       	sbci	r29, 0x01	; 1
    4d90:	c5 5c       	subi	r28, 0xC5	; 197
    4d92:	de 4f       	sbci	r29, 0xFE	; 254
    4d94:	e8 81       	ld	r30, Y
    4d96:	f9 81       	ldd	r31, Y+1	; 0x01
    4d98:	cb 53       	subi	r28, 0x3B	; 59
    4d9a:	d1 40       	sbci	r29, 0x01	; 1
    4d9c:	00 80       	ld	r0, Z
    4d9e:	c5 5c       	subi	r28, 0xC5	; 197
    4da0:	de 4f       	sbci	r29, 0xFE	; 254
    4da2:	88 81       	ld	r24, Y
    4da4:	99 81       	ldd	r25, Y+1	; 0x01
    4da6:	cb 53       	subi	r28, 0x3B	; 59
    4da8:	d1 40       	sbci	r29, 0x01	; 1
    4daa:	01 96       	adiw	r24, 0x01	; 1
    4dac:	c5 5c       	subi	r28, 0xC5	; 197
    4dae:	de 4f       	sbci	r29, 0xFE	; 254
    4db0:	99 83       	std	Y+1, r25	; 0x01
    4db2:	88 83       	st	Y, r24
    4db4:	cb 53       	subi	r28, 0x3B	; 59
    4db6:	d1 40       	sbci	r29, 0x01	; 1
    4db8:	c7 5c       	subi	r28, 0xC7	; 199
    4dba:	de 4f       	sbci	r29, 0xFE	; 254
    4dbc:	e8 81       	ld	r30, Y
    4dbe:	f9 81       	ldd	r31, Y+1	; 0x01
    4dc0:	c9 53       	subi	r28, 0x39	; 57
    4dc2:	d1 40       	sbci	r29, 0x01	; 1
    4dc4:	00 82       	st	Z, r0
    4dc6:	c7 5c       	subi	r28, 0xC7	; 199
    4dc8:	de 4f       	sbci	r29, 0xFE	; 254
    4dca:	88 81       	ld	r24, Y
    4dcc:	99 81       	ldd	r25, Y+1	; 0x01
    4dce:	c9 53       	subi	r28, 0x39	; 57
    4dd0:	d1 40       	sbci	r29, 0x01	; 1
    4dd2:	01 96       	adiw	r24, 0x01	; 1
    4dd4:	c7 5c       	subi	r28, 0xC7	; 199
    4dd6:	de 4f       	sbci	r29, 0xFE	; 254
    4dd8:	99 83       	std	Y+1, r25	; 0x01
    4dda:	88 83       	st	Y, r24
    4ddc:	c9 53       	subi	r28, 0x39	; 57
    4dde:	d1 40       	sbci	r29, 0x01	; 1
    4de0:	c3 5c       	subi	r28, 0xC3	; 195
    4de2:	de 4f       	sbci	r29, 0xFE	; 254
    4de4:	98 81       	ld	r25, Y
    4de6:	cd 53       	subi	r28, 0x3D	; 61
    4de8:	d1 40       	sbci	r29, 0x01	; 1
    4dea:	91 50       	subi	r25, 0x01	; 1
    4dec:	c3 5c       	subi	r28, 0xC3	; 195
    4dee:	de 4f       	sbci	r29, 0xFE	; 254
    4df0:	98 83       	st	Y, r25
    4df2:	cd 53       	subi	r28, 0x3D	; 61
    4df4:	d1 40       	sbci	r29, 0x01	; 1
    4df6:	c3 5c       	subi	r28, 0xC3	; 195
    4df8:	de 4f       	sbci	r29, 0xFE	; 254
    4dfa:	e8 81       	ld	r30, Y
    4dfc:	cd 53       	subi	r28, 0x3D	; 61
    4dfe:	d1 40       	sbci	r29, 0x01	; 1
    4e00:	ee 23       	and	r30, r30
    4e02:	31 f6       	brne	.-116    	; 0x4d90 <__vector_1+0x33c>
		LED_Type green_LED2={DIO_PORTA,DIO_PIN7,LED_FORWARD};//green2
    4e04:	ce 01       	movw	r24, r28
    4e06:	8e 5d       	subi	r24, 0xDE	; 222
    4e08:	9e 4f       	sbci	r25, 0xFE	; 254
    4e0a:	c2 5c       	subi	r28, 0xC2	; 194
    4e0c:	de 4f       	sbci	r29, 0xFE	; 254
    4e0e:	99 83       	std	Y+1, r25	; 0x01
    4e10:	88 83       	st	Y, r24
    4e12:	ce 53       	subi	r28, 0x3E	; 62
    4e14:	d1 40       	sbci	r29, 0x01	; 1
    4e16:	8f eb       	ldi	r24, 0xBF	; 191
    4e18:	90 e0       	ldi	r25, 0x00	; 0
    4e1a:	c0 5c       	subi	r28, 0xC0	; 192
    4e1c:	de 4f       	sbci	r29, 0xFE	; 254
    4e1e:	99 83       	std	Y+1, r25	; 0x01
    4e20:	88 83       	st	Y, r24
    4e22:	c0 54       	subi	r28, 0x40	; 64
    4e24:	d1 40       	sbci	r29, 0x01	; 1
    4e26:	93 e0       	ldi	r25, 0x03	; 3
    4e28:	ce 5b       	subi	r28, 0xBE	; 190
    4e2a:	de 4f       	sbci	r29, 0xFE	; 254
    4e2c:	98 83       	st	Y, r25
    4e2e:	c2 54       	subi	r28, 0x42	; 66
    4e30:	d1 40       	sbci	r29, 0x01	; 1
    4e32:	c0 5c       	subi	r28, 0xC0	; 192
    4e34:	de 4f       	sbci	r29, 0xFE	; 254
    4e36:	e8 81       	ld	r30, Y
    4e38:	f9 81       	ldd	r31, Y+1	; 0x01
    4e3a:	c0 54       	subi	r28, 0x40	; 64
    4e3c:	d1 40       	sbci	r29, 0x01	; 1
    4e3e:	00 80       	ld	r0, Z
    4e40:	c0 5c       	subi	r28, 0xC0	; 192
    4e42:	de 4f       	sbci	r29, 0xFE	; 254
    4e44:	88 81       	ld	r24, Y
    4e46:	99 81       	ldd	r25, Y+1	; 0x01
    4e48:	c0 54       	subi	r28, 0x40	; 64
    4e4a:	d1 40       	sbci	r29, 0x01	; 1
    4e4c:	01 96       	adiw	r24, 0x01	; 1
    4e4e:	c0 5c       	subi	r28, 0xC0	; 192
    4e50:	de 4f       	sbci	r29, 0xFE	; 254
    4e52:	99 83       	std	Y+1, r25	; 0x01
    4e54:	88 83       	st	Y, r24
    4e56:	c0 54       	subi	r28, 0x40	; 64
    4e58:	d1 40       	sbci	r29, 0x01	; 1
    4e5a:	c2 5c       	subi	r28, 0xC2	; 194
    4e5c:	de 4f       	sbci	r29, 0xFE	; 254
    4e5e:	e8 81       	ld	r30, Y
    4e60:	f9 81       	ldd	r31, Y+1	; 0x01
    4e62:	ce 53       	subi	r28, 0x3E	; 62
    4e64:	d1 40       	sbci	r29, 0x01	; 1
    4e66:	00 82       	st	Z, r0
    4e68:	c2 5c       	subi	r28, 0xC2	; 194
    4e6a:	de 4f       	sbci	r29, 0xFE	; 254
    4e6c:	88 81       	ld	r24, Y
    4e6e:	99 81       	ldd	r25, Y+1	; 0x01
    4e70:	ce 53       	subi	r28, 0x3E	; 62
    4e72:	d1 40       	sbci	r29, 0x01	; 1
    4e74:	01 96       	adiw	r24, 0x01	; 1
    4e76:	c2 5c       	subi	r28, 0xC2	; 194
    4e78:	de 4f       	sbci	r29, 0xFE	; 254
    4e7a:	99 83       	std	Y+1, r25	; 0x01
    4e7c:	88 83       	st	Y, r24
    4e7e:	ce 53       	subi	r28, 0x3E	; 62
    4e80:	d1 40       	sbci	r29, 0x01	; 1
    4e82:	ce 5b       	subi	r28, 0xBE	; 190
    4e84:	de 4f       	sbci	r29, 0xFE	; 254
    4e86:	98 81       	ld	r25, Y
    4e88:	c2 54       	subi	r28, 0x42	; 66
    4e8a:	d1 40       	sbci	r29, 0x01	; 1
    4e8c:	91 50       	subi	r25, 0x01	; 1
    4e8e:	ce 5b       	subi	r28, 0xBE	; 190
    4e90:	de 4f       	sbci	r29, 0xFE	; 254
    4e92:	98 83       	st	Y, r25
    4e94:	c2 54       	subi	r28, 0x42	; 66
    4e96:	d1 40       	sbci	r29, 0x01	; 1
    4e98:	ce 5b       	subi	r28, 0xBE	; 190
    4e9a:	de 4f       	sbci	r29, 0xFE	; 254
    4e9c:	e8 81       	ld	r30, Y
    4e9e:	c2 54       	subi	r28, 0x42	; 66
    4ea0:	d1 40       	sbci	r29, 0x01	; 1
    4ea2:	ee 23       	and	r30, r30
    4ea4:	31 f6       	brne	.-116    	; 0x4e32 <__vector_1+0x3de>

		LED_voidSetConfig(red_LED1);
    4ea6:	fe 01       	movw	r30, r28
    4ea8:	ed 5e       	subi	r30, 0xED	; 237
    4eaa:	fe 4f       	sbci	r31, 0xFE	; 254
    4eac:	60 81       	ld	r22, Z
    4eae:	71 81       	ldd	r23, Z+1	; 0x01
    4eb0:	82 81       	ldd	r24, Z+2	; 0x02
    4eb2:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
		LED_voidSetConfig(yellow_LED1);
    4eb6:	fe 01       	movw	r30, r28
    4eb8:	ea 5e       	subi	r30, 0xEA	; 234
    4eba:	fe 4f       	sbci	r31, 0xFE	; 254
    4ebc:	60 81       	ld	r22, Z
    4ebe:	71 81       	ldd	r23, Z+1	; 0x01
    4ec0:	82 81       	ldd	r24, Z+2	; 0x02
    4ec2:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
		LED_voidSetConfig(green_LED1);
    4ec6:	fe 01       	movw	r30, r28
    4ec8:	e7 5e       	subi	r30, 0xE7	; 231
    4eca:	fe 4f       	sbci	r31, 0xFE	; 254
    4ecc:	60 81       	ld	r22, Z
    4ece:	71 81       	ldd	r23, Z+1	; 0x01
    4ed0:	82 81       	ldd	r24, Z+2	; 0x02
    4ed2:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
		LED_voidSetConfig(red_LED2);
    4ed6:	fe 01       	movw	r30, r28
    4ed8:	e4 5e       	subi	r30, 0xE4	; 228
    4eda:	fe 4f       	sbci	r31, 0xFE	; 254
    4edc:	60 81       	ld	r22, Z
    4ede:	71 81       	ldd	r23, Z+1	; 0x01
    4ee0:	82 81       	ldd	r24, Z+2	; 0x02
    4ee2:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
		LED_voidSetConfig(yellow_LED2);
    4ee6:	fe 01       	movw	r30, r28
    4ee8:	e1 5e       	subi	r30, 0xE1	; 225
    4eea:	fe 4f       	sbci	r31, 0xFE	; 254
    4eec:	60 81       	ld	r22, Z
    4eee:	71 81       	ldd	r23, Z+1	; 0x01
    4ef0:	82 81       	ldd	r24, Z+2	; 0x02
    4ef2:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>
		LED_voidSetConfig(green_LED2);
    4ef6:	fe 01       	movw	r30, r28
    4ef8:	ee 5d       	subi	r30, 0xDE	; 222
    4efa:	fe 4f       	sbci	r31, 0xFE	; 254
    4efc:	60 81       	ld	r22, Z
    4efe:	71 81       	ldd	r23, Z+1	; 0x01
    4f00:	82 81       	ldd	r24, Z+2	; 0x02
    4f02:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <LED_voidSetConfig>

		SSEG_voidSetConfig(sseg1);
    4f06:	fe 01       	movw	r30, r28
    4f08:	e1 5f       	subi	r30, 0xF1	; 241
    4f0a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f0c:	80 81       	ld	r24, Z
    4f0e:	91 81       	ldd	r25, Z+1	; 0x01
    4f10:	0e 94 55 1c 	call	0x38aa	; 0x38aa <SSEG_voidSetConfig>
		SSEG_voidSetConfig(sseg2);
    4f14:	fe 01       	movw	r30, r28
    4f16:	ef 5e       	subi	r30, 0xEF	; 239
    4f18:	fe 4f       	sbci	r31, 0xFE	; 254
    4f1a:	80 81       	ld	r24, Z
    4f1c:	91 81       	ldd	r25, Z+1	; 0x01
    4f1e:	0e 94 55 1c 	call	0x38aa	; 0x38aa <SSEG_voidSetConfig>
    4f22:	fe 01       	movw	r30, r28
    4f24:	e9 5f       	subi	r30, 0xF9	; 249
    4f26:	fe 4f       	sbci	r31, 0xFE	; 254
    4f28:	80 e0       	ldi	r24, 0x00	; 0
    4f2a:	90 e0       	ldi	r25, 0x00	; 0
    4f2c:	aa e7       	ldi	r26, 0x7A	; 122
    4f2e:	b4 e4       	ldi	r27, 0x44	; 68
    4f30:	80 83       	st	Z, r24
    4f32:	91 83       	std	Z+1, r25	; 0x01
    4f34:	a2 83       	std	Z+2, r26	; 0x02
    4f36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f38:	8e 01       	movw	r16, r28
    4f3a:	0d 5f       	subi	r16, 0xFD	; 253
    4f3c:	1e 4f       	sbci	r17, 0xFE	; 254
    4f3e:	fe 01       	movw	r30, r28
    4f40:	e9 5f       	subi	r30, 0xF9	; 249
    4f42:	fe 4f       	sbci	r31, 0xFE	; 254
    4f44:	60 81       	ld	r22, Z
    4f46:	71 81       	ldd	r23, Z+1	; 0x01
    4f48:	82 81       	ldd	r24, Z+2	; 0x02
    4f4a:	93 81       	ldd	r25, Z+3	; 0x03
    4f4c:	20 e0       	ldi	r18, 0x00	; 0
    4f4e:	30 e0       	ldi	r19, 0x00	; 0
    4f50:	4a ef       	ldi	r20, 0xFA	; 250
    4f52:	54 e4       	ldi	r21, 0x44	; 68
    4f54:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4f58:	dc 01       	movw	r26, r24
    4f5a:	cb 01       	movw	r24, r22
    4f5c:	f8 01       	movw	r30, r16
    4f5e:	80 83       	st	Z, r24
    4f60:	91 83       	std	Z+1, r25	; 0x01
    4f62:	a2 83       	std	Z+2, r26	; 0x02
    4f64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f66:	fe 01       	movw	r30, r28
    4f68:	ed 5f       	subi	r30, 0xFD	; 253
    4f6a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f6c:	60 81       	ld	r22, Z
    4f6e:	71 81       	ldd	r23, Z+1	; 0x01
    4f70:	82 81       	ldd	r24, Z+2	; 0x02
    4f72:	93 81       	ldd	r25, Z+3	; 0x03
    4f74:	20 e0       	ldi	r18, 0x00	; 0
    4f76:	30 e0       	ldi	r19, 0x00	; 0
    4f78:	40 e8       	ldi	r20, 0x80	; 128
    4f7a:	5f e3       	ldi	r21, 0x3F	; 63
    4f7c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4f80:	88 23       	and	r24, r24
    4f82:	44 f4       	brge	.+16     	; 0x4f94 <__vector_1+0x540>
		__ticks = 1;
    4f84:	fe 01       	movw	r30, r28
    4f86:	ef 5f       	subi	r30, 0xFF	; 255
    4f88:	fe 4f       	sbci	r31, 0xFE	; 254
    4f8a:	81 e0       	ldi	r24, 0x01	; 1
    4f8c:	90 e0       	ldi	r25, 0x00	; 0
    4f8e:	91 83       	std	Z+1, r25	; 0x01
    4f90:	80 83       	st	Z, r24
    4f92:	64 c0       	rjmp	.+200    	; 0x505c <__vector_1+0x608>
	else if (__tmp > 65535)
    4f94:	fe 01       	movw	r30, r28
    4f96:	ed 5f       	subi	r30, 0xFD	; 253
    4f98:	fe 4f       	sbci	r31, 0xFE	; 254
    4f9a:	60 81       	ld	r22, Z
    4f9c:	71 81       	ldd	r23, Z+1	; 0x01
    4f9e:	82 81       	ldd	r24, Z+2	; 0x02
    4fa0:	93 81       	ldd	r25, Z+3	; 0x03
    4fa2:	20 e0       	ldi	r18, 0x00	; 0
    4fa4:	3f ef       	ldi	r19, 0xFF	; 255
    4fa6:	4f e7       	ldi	r20, 0x7F	; 127
    4fa8:	57 e4       	ldi	r21, 0x47	; 71
    4faa:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4fae:	18 16       	cp	r1, r24
    4fb0:	0c f0       	brlt	.+2      	; 0x4fb4 <__vector_1+0x560>
    4fb2:	43 c0       	rjmp	.+134    	; 0x503a <__vector_1+0x5e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fb4:	fe 01       	movw	r30, r28
    4fb6:	e9 5f       	subi	r30, 0xF9	; 249
    4fb8:	fe 4f       	sbci	r31, 0xFE	; 254
    4fba:	60 81       	ld	r22, Z
    4fbc:	71 81       	ldd	r23, Z+1	; 0x01
    4fbe:	82 81       	ldd	r24, Z+2	; 0x02
    4fc0:	93 81       	ldd	r25, Z+3	; 0x03
    4fc2:	20 e0       	ldi	r18, 0x00	; 0
    4fc4:	30 e0       	ldi	r19, 0x00	; 0
    4fc6:	40 e2       	ldi	r20, 0x20	; 32
    4fc8:	51 e4       	ldi	r21, 0x41	; 65
    4fca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4fce:	dc 01       	movw	r26, r24
    4fd0:	cb 01       	movw	r24, r22
    4fd2:	8e 01       	movw	r16, r28
    4fd4:	0f 5f       	subi	r16, 0xFF	; 255
    4fd6:	1e 4f       	sbci	r17, 0xFE	; 254
    4fd8:	bc 01       	movw	r22, r24
    4fda:	cd 01       	movw	r24, r26
    4fdc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4fe0:	dc 01       	movw	r26, r24
    4fe2:	cb 01       	movw	r24, r22
    4fe4:	f8 01       	movw	r30, r16
    4fe6:	91 83       	std	Z+1, r25	; 0x01
    4fe8:	80 83       	st	Z, r24
    4fea:	1f c0       	rjmp	.+62     	; 0x502a <__vector_1+0x5d6>
    4fec:	fe 01       	movw	r30, r28
    4fee:	e1 50       	subi	r30, 0x01	; 1
    4ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff2:	88 ec       	ldi	r24, 0xC8	; 200
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	91 83       	std	Z+1, r25	; 0x01
    4ff8:	80 83       	st	Z, r24
    4ffa:	fe 01       	movw	r30, r28
    4ffc:	e1 50       	subi	r30, 0x01	; 1
    4ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    5000:	80 81       	ld	r24, Z
    5002:	91 81       	ldd	r25, Z+1	; 0x01
    5004:	01 97       	sbiw	r24, 0x01	; 1
    5006:	f1 f7       	brne	.-4      	; 0x5004 <__vector_1+0x5b0>
    5008:	fe 01       	movw	r30, r28
    500a:	e1 50       	subi	r30, 0x01	; 1
    500c:	ff 4f       	sbci	r31, 0xFF	; 255
    500e:	91 83       	std	Z+1, r25	; 0x01
    5010:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5012:	de 01       	movw	r26, r28
    5014:	af 5f       	subi	r26, 0xFF	; 255
    5016:	be 4f       	sbci	r27, 0xFE	; 254
    5018:	fe 01       	movw	r30, r28
    501a:	ef 5f       	subi	r30, 0xFF	; 255
    501c:	fe 4f       	sbci	r31, 0xFE	; 254
    501e:	80 81       	ld	r24, Z
    5020:	91 81       	ldd	r25, Z+1	; 0x01
    5022:	01 97       	sbiw	r24, 0x01	; 1
    5024:	11 96       	adiw	r26, 0x01	; 1
    5026:	9c 93       	st	X, r25
    5028:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    502a:	fe 01       	movw	r30, r28
    502c:	ef 5f       	subi	r30, 0xFF	; 255
    502e:	fe 4f       	sbci	r31, 0xFE	; 254
    5030:	80 81       	ld	r24, Z
    5032:	91 81       	ldd	r25, Z+1	; 0x01
    5034:	00 97       	sbiw	r24, 0x00	; 0
    5036:	d1 f6       	brne	.-76     	; 0x4fec <__vector_1+0x598>
    5038:	28 c0       	rjmp	.+80     	; 0x508a <__vector_1+0x636>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    503a:	8e 01       	movw	r16, r28
    503c:	0f 5f       	subi	r16, 0xFF	; 255
    503e:	1e 4f       	sbci	r17, 0xFE	; 254
    5040:	fe 01       	movw	r30, r28
    5042:	ed 5f       	subi	r30, 0xFD	; 253
    5044:	fe 4f       	sbci	r31, 0xFE	; 254
    5046:	60 81       	ld	r22, Z
    5048:	71 81       	ldd	r23, Z+1	; 0x01
    504a:	82 81       	ldd	r24, Z+2	; 0x02
    504c:	93 81       	ldd	r25, Z+3	; 0x03
    504e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5052:	dc 01       	movw	r26, r24
    5054:	cb 01       	movw	r24, r22
    5056:	f8 01       	movw	r30, r16
    5058:	91 83       	std	Z+1, r25	; 0x01
    505a:	80 83       	st	Z, r24
    505c:	de 01       	movw	r26, r28
    505e:	a3 50       	subi	r26, 0x03	; 3
    5060:	bf 4f       	sbci	r27, 0xFF	; 255
    5062:	fe 01       	movw	r30, r28
    5064:	ef 5f       	subi	r30, 0xFF	; 255
    5066:	fe 4f       	sbci	r31, 0xFE	; 254
    5068:	80 81       	ld	r24, Z
    506a:	91 81       	ldd	r25, Z+1	; 0x01
    506c:	11 96       	adiw	r26, 0x01	; 1
    506e:	9c 93       	st	X, r25
    5070:	8e 93       	st	-X, r24
    5072:	fe 01       	movw	r30, r28
    5074:	e3 50       	subi	r30, 0x03	; 3
    5076:	ff 4f       	sbci	r31, 0xFF	; 255
    5078:	80 81       	ld	r24, Z
    507a:	91 81       	ldd	r25, Z+1	; 0x01
    507c:	01 97       	sbiw	r24, 0x01	; 1
    507e:	f1 f7       	brne	.-4      	; 0x507c <__vector_1+0x628>
    5080:	fe 01       	movw	r30, r28
    5082:	e3 50       	subi	r30, 0x03	; 3
    5084:	ff 4f       	sbci	r31, 0xFF	; 255
    5086:	91 83       	std	Z+1, r25	; 0x01
    5088:	80 83       	st	Z, r24
		_delay_ms(1000);
				/*red_1 on&green2 on in  main*/
						if(flage==1||flage==2)
    508a:	80 91 d2 00 	lds	r24, 0x00D2
    508e:	81 30       	cpi	r24, 0x01	; 1
    5090:	29 f0       	breq	.+10     	; 0x509c <__vector_1+0x648>
    5092:	80 91 d2 00 	lds	r24, 0x00D2
    5096:	82 30       	cpi	r24, 0x02	; 2
    5098:	09 f0       	breq	.+2      	; 0x509c <__vector_1+0x648>
    509a:	73 c7       	rjmp	.+3814   	; 0x5f82 <__vector_1+0x152e>
						{
							SSEG_voidSendNumber(sseg1,0);
    509c:	fe 01       	movw	r30, r28
    509e:	e1 5f       	subi	r30, 0xF1	; 241
    50a0:	fe 4f       	sbci	r31, 0xFE	; 254
    50a2:	80 81       	ld	r24, Z
    50a4:	91 81       	ldd	r25, Z+1	; 0x01
    50a6:	60 e0       	ldi	r22, 0x00	; 0
    50a8:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
							SSEG_voidSendNumber(sseg2,0);
    50ac:	fe 01       	movw	r30, r28
    50ae:	ef 5e       	subi	r30, 0xEF	; 239
    50b0:	fe 4f       	sbci	r31, 0xFE	; 254
    50b2:	80 81       	ld	r24, Z
    50b4:	91 81       	ldd	r25, Z+1	; 0x01
    50b6:	60 e0       	ldi	r22, 0x00	; 0
    50b8:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
							LED_voidOn(red_LED1);
    50bc:	fe 01       	movw	r30, r28
    50be:	ed 5e       	subi	r30, 0xED	; 237
    50c0:	fe 4f       	sbci	r31, 0xFE	; 254
    50c2:	60 81       	ld	r22, Z
    50c4:	71 81       	ldd	r23, Z+1	; 0x01
    50c6:	82 81       	ldd	r24, Z+2	; 0x02
    50c8:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
							LED_voidOff(green_LED2);
    50cc:	fe 01       	movw	r30, r28
    50ce:	ee 5d       	subi	r30, 0xDE	; 222
    50d0:	fe 4f       	sbci	r31, 0xFE	; 254
    50d2:	60 81       	ld	r22, Z
    50d4:	71 81       	ldd	r23, Z+1	; 0x01
    50d6:	82 81       	ldd	r24, Z+2	; 0x02
    50d8:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
							LED_voidOff(yellow_LED2);
    50dc:	fe 01       	movw	r30, r28
    50de:	e1 5e       	subi	r30, 0xE1	; 225
    50e0:	fe 4f       	sbci	r31, 0xFE	; 254
    50e2:	60 81       	ld	r22, Z
    50e4:	71 81       	ldd	r23, Z+1	; 0x01
    50e6:	82 81       	ldd	r24, Z+2	; 0x02
    50e8:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
							for(u8 counter=1;counter<4;counter++)
    50ec:	fe 01       	movw	r30, r28
    50ee:	e2 5f       	subi	r30, 0xF2	; 242
    50f0:	fe 4f       	sbci	r31, 0xFE	; 254
    50f2:	81 e0       	ldi	r24, 0x01	; 1
    50f4:	80 83       	st	Z, r24
    50f6:	d7 c0       	rjmp	.+430    	; 0x52a6 <__vector_1+0x852>
						    {
						    		SSEG_voidSendNumber(sseg2,counter);
    50f8:	fe 01       	movw	r30, r28
    50fa:	ef 5e       	subi	r30, 0xEF	; 239
    50fc:	fe 4f       	sbci	r31, 0xFE	; 254
    50fe:	80 81       	ld	r24, Z
    5100:	91 81       	ldd	r25, Z+1	; 0x01
    5102:	fe 01       	movw	r30, r28
    5104:	e2 5f       	subi	r30, 0xF2	; 242
    5106:	fe 4f       	sbci	r31, 0xFE	; 254
    5108:	60 81       	ld	r22, Z
    510a:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
						    		LED_voidOn( yellow_LED2);
    510e:	fe 01       	movw	r30, r28
    5110:	e1 5e       	subi	r30, 0xE1	; 225
    5112:	fe 4f       	sbci	r31, 0xFE	; 254
    5114:	60 81       	ld	r22, Z
    5116:	71 81       	ldd	r23, Z+1	; 0x01
    5118:	82 81       	ldd	r24, Z+2	; 0x02
    511a:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
    511e:	fe 01       	movw	r30, r28
    5120:	e7 50       	subi	r30, 0x07	; 7
    5122:	ff 4f       	sbci	r31, 0xFF	; 255
    5124:	80 e0       	ldi	r24, 0x00	; 0
    5126:	90 e0       	ldi	r25, 0x00	; 0
    5128:	aa e7       	ldi	r26, 0x7A	; 122
    512a:	b4 e4       	ldi	r27, 0x44	; 68
    512c:	80 83       	st	Z, r24
    512e:	91 83       	std	Z+1, r25	; 0x01
    5130:	a2 83       	std	Z+2, r26	; 0x02
    5132:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5134:	8e 01       	movw	r16, r28
    5136:	0b 50       	subi	r16, 0x0B	; 11
    5138:	1f 4f       	sbci	r17, 0xFF	; 255
    513a:	fe 01       	movw	r30, r28
    513c:	e7 50       	subi	r30, 0x07	; 7
    513e:	ff 4f       	sbci	r31, 0xFF	; 255
    5140:	60 81       	ld	r22, Z
    5142:	71 81       	ldd	r23, Z+1	; 0x01
    5144:	82 81       	ldd	r24, Z+2	; 0x02
    5146:	93 81       	ldd	r25, Z+3	; 0x03
    5148:	20 e0       	ldi	r18, 0x00	; 0
    514a:	30 e0       	ldi	r19, 0x00	; 0
    514c:	4a ef       	ldi	r20, 0xFA	; 250
    514e:	54 e4       	ldi	r21, 0x44	; 68
    5150:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5154:	dc 01       	movw	r26, r24
    5156:	cb 01       	movw	r24, r22
    5158:	f8 01       	movw	r30, r16
    515a:	80 83       	st	Z, r24
    515c:	91 83       	std	Z+1, r25	; 0x01
    515e:	a2 83       	std	Z+2, r26	; 0x02
    5160:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5162:	fe 01       	movw	r30, r28
    5164:	eb 50       	subi	r30, 0x0B	; 11
    5166:	ff 4f       	sbci	r31, 0xFF	; 255
    5168:	60 81       	ld	r22, Z
    516a:	71 81       	ldd	r23, Z+1	; 0x01
    516c:	82 81       	ldd	r24, Z+2	; 0x02
    516e:	93 81       	ldd	r25, Z+3	; 0x03
    5170:	20 e0       	ldi	r18, 0x00	; 0
    5172:	30 e0       	ldi	r19, 0x00	; 0
    5174:	40 e8       	ldi	r20, 0x80	; 128
    5176:	5f e3       	ldi	r21, 0x3F	; 63
    5178:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    517c:	88 23       	and	r24, r24
    517e:	44 f4       	brge	.+16     	; 0x5190 <__vector_1+0x73c>
		__ticks = 1;
    5180:	fe 01       	movw	r30, r28
    5182:	ed 50       	subi	r30, 0x0D	; 13
    5184:	ff 4f       	sbci	r31, 0xFF	; 255
    5186:	81 e0       	ldi	r24, 0x01	; 1
    5188:	90 e0       	ldi	r25, 0x00	; 0
    518a:	91 83       	std	Z+1, r25	; 0x01
    518c:	80 83       	st	Z, r24
    518e:	64 c0       	rjmp	.+200    	; 0x5258 <__vector_1+0x804>
	else if (__tmp > 65535)
    5190:	fe 01       	movw	r30, r28
    5192:	eb 50       	subi	r30, 0x0B	; 11
    5194:	ff 4f       	sbci	r31, 0xFF	; 255
    5196:	60 81       	ld	r22, Z
    5198:	71 81       	ldd	r23, Z+1	; 0x01
    519a:	82 81       	ldd	r24, Z+2	; 0x02
    519c:	93 81       	ldd	r25, Z+3	; 0x03
    519e:	20 e0       	ldi	r18, 0x00	; 0
    51a0:	3f ef       	ldi	r19, 0xFF	; 255
    51a2:	4f e7       	ldi	r20, 0x7F	; 127
    51a4:	57 e4       	ldi	r21, 0x47	; 71
    51a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    51aa:	18 16       	cp	r1, r24
    51ac:	0c f0       	brlt	.+2      	; 0x51b0 <__vector_1+0x75c>
    51ae:	43 c0       	rjmp	.+134    	; 0x5236 <__vector_1+0x7e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51b0:	fe 01       	movw	r30, r28
    51b2:	e7 50       	subi	r30, 0x07	; 7
    51b4:	ff 4f       	sbci	r31, 0xFF	; 255
    51b6:	60 81       	ld	r22, Z
    51b8:	71 81       	ldd	r23, Z+1	; 0x01
    51ba:	82 81       	ldd	r24, Z+2	; 0x02
    51bc:	93 81       	ldd	r25, Z+3	; 0x03
    51be:	20 e0       	ldi	r18, 0x00	; 0
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	40 e2       	ldi	r20, 0x20	; 32
    51c4:	51 e4       	ldi	r21, 0x41	; 65
    51c6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    51ca:	dc 01       	movw	r26, r24
    51cc:	cb 01       	movw	r24, r22
    51ce:	8e 01       	movw	r16, r28
    51d0:	0d 50       	subi	r16, 0x0D	; 13
    51d2:	1f 4f       	sbci	r17, 0xFF	; 255
    51d4:	bc 01       	movw	r22, r24
    51d6:	cd 01       	movw	r24, r26
    51d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    51dc:	dc 01       	movw	r26, r24
    51de:	cb 01       	movw	r24, r22
    51e0:	f8 01       	movw	r30, r16
    51e2:	91 83       	std	Z+1, r25	; 0x01
    51e4:	80 83       	st	Z, r24
    51e6:	1f c0       	rjmp	.+62     	; 0x5226 <__vector_1+0x7d2>
    51e8:	fe 01       	movw	r30, r28
    51ea:	ef 50       	subi	r30, 0x0F	; 15
    51ec:	ff 4f       	sbci	r31, 0xFF	; 255
    51ee:	88 ec       	ldi	r24, 0xC8	; 200
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	91 83       	std	Z+1, r25	; 0x01
    51f4:	80 83       	st	Z, r24
    51f6:	fe 01       	movw	r30, r28
    51f8:	ef 50       	subi	r30, 0x0F	; 15
    51fa:	ff 4f       	sbci	r31, 0xFF	; 255
    51fc:	80 81       	ld	r24, Z
    51fe:	91 81       	ldd	r25, Z+1	; 0x01
    5200:	01 97       	sbiw	r24, 0x01	; 1
    5202:	f1 f7       	brne	.-4      	; 0x5200 <__vector_1+0x7ac>
    5204:	fe 01       	movw	r30, r28
    5206:	ef 50       	subi	r30, 0x0F	; 15
    5208:	ff 4f       	sbci	r31, 0xFF	; 255
    520a:	91 83       	std	Z+1, r25	; 0x01
    520c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    520e:	de 01       	movw	r26, r28
    5210:	ad 50       	subi	r26, 0x0D	; 13
    5212:	bf 4f       	sbci	r27, 0xFF	; 255
    5214:	fe 01       	movw	r30, r28
    5216:	ed 50       	subi	r30, 0x0D	; 13
    5218:	ff 4f       	sbci	r31, 0xFF	; 255
    521a:	80 81       	ld	r24, Z
    521c:	91 81       	ldd	r25, Z+1	; 0x01
    521e:	01 97       	sbiw	r24, 0x01	; 1
    5220:	11 96       	adiw	r26, 0x01	; 1
    5222:	9c 93       	st	X, r25
    5224:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5226:	fe 01       	movw	r30, r28
    5228:	ed 50       	subi	r30, 0x0D	; 13
    522a:	ff 4f       	sbci	r31, 0xFF	; 255
    522c:	80 81       	ld	r24, Z
    522e:	91 81       	ldd	r25, Z+1	; 0x01
    5230:	00 97       	sbiw	r24, 0x00	; 0
    5232:	d1 f6       	brne	.-76     	; 0x51e8 <__vector_1+0x794>
    5234:	27 c0       	rjmp	.+78     	; 0x5284 <__vector_1+0x830>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5236:	8e 01       	movw	r16, r28
    5238:	0d 50       	subi	r16, 0x0D	; 13
    523a:	1f 4f       	sbci	r17, 0xFF	; 255
    523c:	fe 01       	movw	r30, r28
    523e:	eb 50       	subi	r30, 0x0B	; 11
    5240:	ff 4f       	sbci	r31, 0xFF	; 255
    5242:	60 81       	ld	r22, Z
    5244:	71 81       	ldd	r23, Z+1	; 0x01
    5246:	82 81       	ldd	r24, Z+2	; 0x02
    5248:	93 81       	ldd	r25, Z+3	; 0x03
    524a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    524e:	dc 01       	movw	r26, r24
    5250:	cb 01       	movw	r24, r22
    5252:	f8 01       	movw	r30, r16
    5254:	91 83       	std	Z+1, r25	; 0x01
    5256:	80 83       	st	Z, r24
    5258:	de 01       	movw	r26, r28
    525a:	a1 51       	subi	r26, 0x11	; 17
    525c:	bf 4f       	sbci	r27, 0xFF	; 255
    525e:	fe 01       	movw	r30, r28
    5260:	ed 50       	subi	r30, 0x0D	; 13
    5262:	ff 4f       	sbci	r31, 0xFF	; 255
    5264:	80 81       	ld	r24, Z
    5266:	91 81       	ldd	r25, Z+1	; 0x01
    5268:	8d 93       	st	X+, r24
    526a:	9c 93       	st	X, r25
    526c:	fe 01       	movw	r30, r28
    526e:	e1 51       	subi	r30, 0x11	; 17
    5270:	ff 4f       	sbci	r31, 0xFF	; 255
    5272:	80 81       	ld	r24, Z
    5274:	91 81       	ldd	r25, Z+1	; 0x01
    5276:	01 97       	sbiw	r24, 0x01	; 1
    5278:	f1 f7       	brne	.-4      	; 0x5276 <__vector_1+0x822>
    527a:	fe 01       	movw	r30, r28
    527c:	e1 51       	subi	r30, 0x11	; 17
    527e:	ff 4f       	sbci	r31, 0xFF	; 255
    5280:	91 83       	std	Z+1, r25	; 0x01
    5282:	80 83       	st	Z, r24
						    		_delay_ms(1000);
						    		LED_voidOff(yellow_LED2);
    5284:	fe 01       	movw	r30, r28
    5286:	e1 5e       	subi	r30, 0xE1	; 225
    5288:	fe 4f       	sbci	r31, 0xFE	; 254
    528a:	60 81       	ld	r22, Z
    528c:	71 81       	ldd	r23, Z+1	; 0x01
    528e:	82 81       	ldd	r24, Z+2	; 0x02
    5290:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
							SSEG_voidSendNumber(sseg1,0);
							SSEG_voidSendNumber(sseg2,0);
							LED_voidOn(red_LED1);
							LED_voidOff(green_LED2);
							LED_voidOff(yellow_LED2);
							for(u8 counter=1;counter<4;counter++)
    5294:	de 01       	movw	r26, r28
    5296:	a2 5f       	subi	r26, 0xF2	; 242
    5298:	be 4f       	sbci	r27, 0xFE	; 254
    529a:	fe 01       	movw	r30, r28
    529c:	e2 5f       	subi	r30, 0xF2	; 242
    529e:	fe 4f       	sbci	r31, 0xFE	; 254
    52a0:	80 81       	ld	r24, Z
    52a2:	8f 5f       	subi	r24, 0xFF	; 255
    52a4:	8c 93       	st	X, r24
    52a6:	fe 01       	movw	r30, r28
    52a8:	e2 5f       	subi	r30, 0xF2	; 242
    52aa:	fe 4f       	sbci	r31, 0xFE	; 254
    52ac:	80 81       	ld	r24, Z
    52ae:	84 30       	cpi	r24, 0x04	; 4
    52b0:	08 f4       	brcc	.+2      	; 0x52b4 <__vector_1+0x860>
    52b2:	22 cf       	rjmp	.-444    	; 0x50f8 <__vector_1+0x6a4>
						    		SSEG_voidSendNumber(sseg2,counter);
						    		LED_voidOn( yellow_LED2);
						    		_delay_ms(1000);
						    		LED_voidOff(yellow_LED2);
						    }
							LED_voidOn(red_LED2);
    52b4:	fe 01       	movw	r30, r28
    52b6:	e4 5e       	subi	r30, 0xE4	; 228
    52b8:	fe 4f       	sbci	r31, 0xFE	; 254
    52ba:	60 81       	ld	r22, Z
    52bc:	71 81       	ldd	r23, Z+1	; 0x01
    52be:	82 81       	ldd	r24, Z+2	; 0x02
    52c0:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
							////////////////////////////////
							SSEG_voidSendNumber(sseg1,0);
    52c4:	fe 01       	movw	r30, r28
    52c6:	e1 5f       	subi	r30, 0xF1	; 241
    52c8:	fe 4f       	sbci	r31, 0xFE	; 254
    52ca:	80 81       	ld	r24, Z
    52cc:	91 81       	ldd	r25, Z+1	; 0x01
    52ce:	60 e0       	ldi	r22, 0x00	; 0
    52d0:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
							SSEG_voidSendNumber(sseg2,0);
    52d4:	fe 01       	movw	r30, r28
    52d6:	ef 5e       	subi	r30, 0xEF	; 239
    52d8:	fe 4f       	sbci	r31, 0xFE	; 254
    52da:	80 81       	ld	r24, Z
    52dc:	91 81       	ldd	r25, Z+1	; 0x01
    52de:	60 e0       	ldi	r22, 0x00	; 0
    52e0:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    52e4:	fe 01       	movw	r30, r28
    52e6:	e5 51       	subi	r30, 0x15	; 21
    52e8:	ff 4f       	sbci	r31, 0xFF	; 255
    52ea:	80 e0       	ldi	r24, 0x00	; 0
    52ec:	90 e0       	ldi	r25, 0x00	; 0
    52ee:	aa e7       	ldi	r26, 0x7A	; 122
    52f0:	b4 e4       	ldi	r27, 0x44	; 68
    52f2:	80 83       	st	Z, r24
    52f4:	91 83       	std	Z+1, r25	; 0x01
    52f6:	a2 83       	std	Z+2, r26	; 0x02
    52f8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52fa:	8e 01       	movw	r16, r28
    52fc:	09 51       	subi	r16, 0x19	; 25
    52fe:	1f 4f       	sbci	r17, 0xFF	; 255
    5300:	fe 01       	movw	r30, r28
    5302:	e5 51       	subi	r30, 0x15	; 21
    5304:	ff 4f       	sbci	r31, 0xFF	; 255
    5306:	60 81       	ld	r22, Z
    5308:	71 81       	ldd	r23, Z+1	; 0x01
    530a:	82 81       	ldd	r24, Z+2	; 0x02
    530c:	93 81       	ldd	r25, Z+3	; 0x03
    530e:	20 e0       	ldi	r18, 0x00	; 0
    5310:	30 e0       	ldi	r19, 0x00	; 0
    5312:	4a ef       	ldi	r20, 0xFA	; 250
    5314:	54 e4       	ldi	r21, 0x44	; 68
    5316:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    531a:	dc 01       	movw	r26, r24
    531c:	cb 01       	movw	r24, r22
    531e:	f8 01       	movw	r30, r16
    5320:	80 83       	st	Z, r24
    5322:	91 83       	std	Z+1, r25	; 0x01
    5324:	a2 83       	std	Z+2, r26	; 0x02
    5326:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5328:	fe 01       	movw	r30, r28
    532a:	e9 51       	subi	r30, 0x19	; 25
    532c:	ff 4f       	sbci	r31, 0xFF	; 255
    532e:	60 81       	ld	r22, Z
    5330:	71 81       	ldd	r23, Z+1	; 0x01
    5332:	82 81       	ldd	r24, Z+2	; 0x02
    5334:	93 81       	ldd	r25, Z+3	; 0x03
    5336:	20 e0       	ldi	r18, 0x00	; 0
    5338:	30 e0       	ldi	r19, 0x00	; 0
    533a:	40 e8       	ldi	r20, 0x80	; 128
    533c:	5f e3       	ldi	r21, 0x3F	; 63
    533e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5342:	88 23       	and	r24, r24
    5344:	44 f4       	brge	.+16     	; 0x5356 <__vector_1+0x902>
		__ticks = 1;
    5346:	fe 01       	movw	r30, r28
    5348:	eb 51       	subi	r30, 0x1B	; 27
    534a:	ff 4f       	sbci	r31, 0xFF	; 255
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	90 e0       	ldi	r25, 0x00	; 0
    5350:	91 83       	std	Z+1, r25	; 0x01
    5352:	80 83       	st	Z, r24
    5354:	64 c0       	rjmp	.+200    	; 0x541e <__vector_1+0x9ca>
	else if (__tmp > 65535)
    5356:	fe 01       	movw	r30, r28
    5358:	e9 51       	subi	r30, 0x19	; 25
    535a:	ff 4f       	sbci	r31, 0xFF	; 255
    535c:	60 81       	ld	r22, Z
    535e:	71 81       	ldd	r23, Z+1	; 0x01
    5360:	82 81       	ldd	r24, Z+2	; 0x02
    5362:	93 81       	ldd	r25, Z+3	; 0x03
    5364:	20 e0       	ldi	r18, 0x00	; 0
    5366:	3f ef       	ldi	r19, 0xFF	; 255
    5368:	4f e7       	ldi	r20, 0x7F	; 127
    536a:	57 e4       	ldi	r21, 0x47	; 71
    536c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5370:	18 16       	cp	r1, r24
    5372:	0c f0       	brlt	.+2      	; 0x5376 <__vector_1+0x922>
    5374:	43 c0       	rjmp	.+134    	; 0x53fc <__vector_1+0x9a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5376:	fe 01       	movw	r30, r28
    5378:	e5 51       	subi	r30, 0x15	; 21
    537a:	ff 4f       	sbci	r31, 0xFF	; 255
    537c:	60 81       	ld	r22, Z
    537e:	71 81       	ldd	r23, Z+1	; 0x01
    5380:	82 81       	ldd	r24, Z+2	; 0x02
    5382:	93 81       	ldd	r25, Z+3	; 0x03
    5384:	20 e0       	ldi	r18, 0x00	; 0
    5386:	30 e0       	ldi	r19, 0x00	; 0
    5388:	40 e2       	ldi	r20, 0x20	; 32
    538a:	51 e4       	ldi	r21, 0x41	; 65
    538c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5390:	dc 01       	movw	r26, r24
    5392:	cb 01       	movw	r24, r22
    5394:	8e 01       	movw	r16, r28
    5396:	0b 51       	subi	r16, 0x1B	; 27
    5398:	1f 4f       	sbci	r17, 0xFF	; 255
    539a:	bc 01       	movw	r22, r24
    539c:	cd 01       	movw	r24, r26
    539e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    53a2:	dc 01       	movw	r26, r24
    53a4:	cb 01       	movw	r24, r22
    53a6:	f8 01       	movw	r30, r16
    53a8:	91 83       	std	Z+1, r25	; 0x01
    53aa:	80 83       	st	Z, r24
    53ac:	1f c0       	rjmp	.+62     	; 0x53ec <__vector_1+0x998>
    53ae:	fe 01       	movw	r30, r28
    53b0:	ed 51       	subi	r30, 0x1D	; 29
    53b2:	ff 4f       	sbci	r31, 0xFF	; 255
    53b4:	88 ec       	ldi	r24, 0xC8	; 200
    53b6:	90 e0       	ldi	r25, 0x00	; 0
    53b8:	91 83       	std	Z+1, r25	; 0x01
    53ba:	80 83       	st	Z, r24
    53bc:	fe 01       	movw	r30, r28
    53be:	ed 51       	subi	r30, 0x1D	; 29
    53c0:	ff 4f       	sbci	r31, 0xFF	; 255
    53c2:	80 81       	ld	r24, Z
    53c4:	91 81       	ldd	r25, Z+1	; 0x01
    53c6:	01 97       	sbiw	r24, 0x01	; 1
    53c8:	f1 f7       	brne	.-4      	; 0x53c6 <__vector_1+0x972>
    53ca:	fe 01       	movw	r30, r28
    53cc:	ed 51       	subi	r30, 0x1D	; 29
    53ce:	ff 4f       	sbci	r31, 0xFF	; 255
    53d0:	91 83       	std	Z+1, r25	; 0x01
    53d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53d4:	de 01       	movw	r26, r28
    53d6:	ab 51       	subi	r26, 0x1B	; 27
    53d8:	bf 4f       	sbci	r27, 0xFF	; 255
    53da:	fe 01       	movw	r30, r28
    53dc:	eb 51       	subi	r30, 0x1B	; 27
    53de:	ff 4f       	sbci	r31, 0xFF	; 255
    53e0:	80 81       	ld	r24, Z
    53e2:	91 81       	ldd	r25, Z+1	; 0x01
    53e4:	01 97       	sbiw	r24, 0x01	; 1
    53e6:	11 96       	adiw	r26, 0x01	; 1
    53e8:	9c 93       	st	X, r25
    53ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53ec:	fe 01       	movw	r30, r28
    53ee:	eb 51       	subi	r30, 0x1B	; 27
    53f0:	ff 4f       	sbci	r31, 0xFF	; 255
    53f2:	80 81       	ld	r24, Z
    53f4:	91 81       	ldd	r25, Z+1	; 0x01
    53f6:	00 97       	sbiw	r24, 0x00	; 0
    53f8:	d1 f6       	brne	.-76     	; 0x53ae <__vector_1+0x95a>
    53fa:	28 c0       	rjmp	.+80     	; 0x544c <__vector_1+0x9f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53fc:	8e 01       	movw	r16, r28
    53fe:	0b 51       	subi	r16, 0x1B	; 27
    5400:	1f 4f       	sbci	r17, 0xFF	; 255
    5402:	fe 01       	movw	r30, r28
    5404:	e9 51       	subi	r30, 0x19	; 25
    5406:	ff 4f       	sbci	r31, 0xFF	; 255
    5408:	60 81       	ld	r22, Z
    540a:	71 81       	ldd	r23, Z+1	; 0x01
    540c:	82 81       	ldd	r24, Z+2	; 0x02
    540e:	93 81       	ldd	r25, Z+3	; 0x03
    5410:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5414:	dc 01       	movw	r26, r24
    5416:	cb 01       	movw	r24, r22
    5418:	f8 01       	movw	r30, r16
    541a:	91 83       	std	Z+1, r25	; 0x01
    541c:	80 83       	st	Z, r24
    541e:	de 01       	movw	r26, r28
    5420:	af 51       	subi	r26, 0x1F	; 31
    5422:	bf 4f       	sbci	r27, 0xFF	; 255
    5424:	fe 01       	movw	r30, r28
    5426:	eb 51       	subi	r30, 0x1B	; 27
    5428:	ff 4f       	sbci	r31, 0xFF	; 255
    542a:	80 81       	ld	r24, Z
    542c:	91 81       	ldd	r25, Z+1	; 0x01
    542e:	11 96       	adiw	r26, 0x01	; 1
    5430:	9c 93       	st	X, r25
    5432:	8e 93       	st	-X, r24
    5434:	fe 01       	movw	r30, r28
    5436:	ef 51       	subi	r30, 0x1F	; 31
    5438:	ff 4f       	sbci	r31, 0xFF	; 255
    543a:	80 81       	ld	r24, Z
    543c:	91 81       	ldd	r25, Z+1	; 0x01
    543e:	01 97       	sbiw	r24, 0x01	; 1
    5440:	f1 f7       	brne	.-4      	; 0x543e <__vector_1+0x9ea>
    5442:	fe 01       	movw	r30, r28
    5444:	ef 51       	subi	r30, 0x1F	; 31
    5446:	ff 4f       	sbci	r31, 0xFF	; 255
    5448:	91 83       	std	Z+1, r25	; 0x01
    544a:	80 83       	st	Z, r24
							_delay_ms(1000);
							for(u8 i=4;i>=1;i--)
    544c:	fe 01       	movw	r30, r28
    544e:	e3 5f       	subi	r30, 0xF3	; 243
    5450:	fe 4f       	sbci	r31, 0xFE	; 254
    5452:	84 e0       	ldi	r24, 0x04	; 4
    5454:	80 83       	st	Z, r24
    5456:	c9 c4       	rjmp	.+2450   	; 0x5dea <__vector_1+0x1396>
							{
								if(i=4)
    5458:	fe 01       	movw	r30, r28
    545a:	e3 5f       	subi	r30, 0xF3	; 243
    545c:	fe 4f       	sbci	r31, 0xFE	; 254
    545e:	84 e0       	ldi	r24, 0x04	; 4
    5460:	80 83       	st	Z, r24
								{
									LCD_GOTOXY(2,0);
    5462:	82 e0       	ldi	r24, 0x02	; 2
    5464:	60 e0       	ldi	r22, 0x00	; 0
    5466:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
									LCD_Send_string("in 4 Sec");
    546a:	85 e7       	ldi	r24, 0x75	; 117
    546c:	90 e0       	ldi	r25, 0x00	; 0
    546e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
									SSEG_voidSendNumber(sseg1,4);
    5472:	fe 01       	movw	r30, r28
    5474:	e1 5f       	subi	r30, 0xF1	; 241
    5476:	fe 4f       	sbci	r31, 0xFE	; 254
    5478:	80 81       	ld	r24, Z
    547a:	91 81       	ldd	r25, Z+1	; 0x01
    547c:	64 e0       	ldi	r22, 0x04	; 4
    547e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
									SSEG_voidSendNumber(sseg2,4);
    5482:	fe 01       	movw	r30, r28
    5484:	ef 5e       	subi	r30, 0xEF	; 239
    5486:	fe 4f       	sbci	r31, 0xFE	; 254
    5488:	80 81       	ld	r24, Z
    548a:	91 81       	ldd	r25, Z+1	; 0x01
    548c:	64 e0       	ldi	r22, 0x04	; 4
    548e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    5492:	fe 01       	movw	r30, r28
    5494:	e3 52       	subi	r30, 0x23	; 35
    5496:	ff 4f       	sbci	r31, 0xFF	; 255
    5498:	80 e0       	ldi	r24, 0x00	; 0
    549a:	90 e0       	ldi	r25, 0x00	; 0
    549c:	aa ef       	ldi	r26, 0xFA	; 250
    549e:	b4 e4       	ldi	r27, 0x44	; 68
    54a0:	80 83       	st	Z, r24
    54a2:	91 83       	std	Z+1, r25	; 0x01
    54a4:	a2 83       	std	Z+2, r26	; 0x02
    54a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    54a8:	8e 01       	movw	r16, r28
    54aa:	07 52       	subi	r16, 0x27	; 39
    54ac:	1f 4f       	sbci	r17, 0xFF	; 255
    54ae:	fe 01       	movw	r30, r28
    54b0:	e3 52       	subi	r30, 0x23	; 35
    54b2:	ff 4f       	sbci	r31, 0xFF	; 255
    54b4:	60 81       	ld	r22, Z
    54b6:	71 81       	ldd	r23, Z+1	; 0x01
    54b8:	82 81       	ldd	r24, Z+2	; 0x02
    54ba:	93 81       	ldd	r25, Z+3	; 0x03
    54bc:	20 e0       	ldi	r18, 0x00	; 0
    54be:	30 e0       	ldi	r19, 0x00	; 0
    54c0:	4a ef       	ldi	r20, 0xFA	; 250
    54c2:	54 e4       	ldi	r21, 0x44	; 68
    54c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    54c8:	dc 01       	movw	r26, r24
    54ca:	cb 01       	movw	r24, r22
    54cc:	f8 01       	movw	r30, r16
    54ce:	80 83       	st	Z, r24
    54d0:	91 83       	std	Z+1, r25	; 0x01
    54d2:	a2 83       	std	Z+2, r26	; 0x02
    54d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    54d6:	fe 01       	movw	r30, r28
    54d8:	e7 52       	subi	r30, 0x27	; 39
    54da:	ff 4f       	sbci	r31, 0xFF	; 255
    54dc:	60 81       	ld	r22, Z
    54de:	71 81       	ldd	r23, Z+1	; 0x01
    54e0:	82 81       	ldd	r24, Z+2	; 0x02
    54e2:	93 81       	ldd	r25, Z+3	; 0x03
    54e4:	20 e0       	ldi	r18, 0x00	; 0
    54e6:	30 e0       	ldi	r19, 0x00	; 0
    54e8:	40 e8       	ldi	r20, 0x80	; 128
    54ea:	5f e3       	ldi	r21, 0x3F	; 63
    54ec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    54f0:	88 23       	and	r24, r24
    54f2:	44 f4       	brge	.+16     	; 0x5504 <__vector_1+0xab0>
		__ticks = 1;
    54f4:	fe 01       	movw	r30, r28
    54f6:	e9 52       	subi	r30, 0x29	; 41
    54f8:	ff 4f       	sbci	r31, 0xFF	; 255
    54fa:	81 e0       	ldi	r24, 0x01	; 1
    54fc:	90 e0       	ldi	r25, 0x00	; 0
    54fe:	91 83       	std	Z+1, r25	; 0x01
    5500:	80 83       	st	Z, r24
    5502:	64 c0       	rjmp	.+200    	; 0x55cc <__vector_1+0xb78>
	else if (__tmp > 65535)
    5504:	fe 01       	movw	r30, r28
    5506:	e7 52       	subi	r30, 0x27	; 39
    5508:	ff 4f       	sbci	r31, 0xFF	; 255
    550a:	60 81       	ld	r22, Z
    550c:	71 81       	ldd	r23, Z+1	; 0x01
    550e:	82 81       	ldd	r24, Z+2	; 0x02
    5510:	93 81       	ldd	r25, Z+3	; 0x03
    5512:	20 e0       	ldi	r18, 0x00	; 0
    5514:	3f ef       	ldi	r19, 0xFF	; 255
    5516:	4f e7       	ldi	r20, 0x7F	; 127
    5518:	57 e4       	ldi	r21, 0x47	; 71
    551a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    551e:	18 16       	cp	r1, r24
    5520:	0c f0       	brlt	.+2      	; 0x5524 <__vector_1+0xad0>
    5522:	43 c0       	rjmp	.+134    	; 0x55aa <__vector_1+0xb56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5524:	fe 01       	movw	r30, r28
    5526:	e3 52       	subi	r30, 0x23	; 35
    5528:	ff 4f       	sbci	r31, 0xFF	; 255
    552a:	60 81       	ld	r22, Z
    552c:	71 81       	ldd	r23, Z+1	; 0x01
    552e:	82 81       	ldd	r24, Z+2	; 0x02
    5530:	93 81       	ldd	r25, Z+3	; 0x03
    5532:	20 e0       	ldi	r18, 0x00	; 0
    5534:	30 e0       	ldi	r19, 0x00	; 0
    5536:	40 e2       	ldi	r20, 0x20	; 32
    5538:	51 e4       	ldi	r21, 0x41	; 65
    553a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    553e:	dc 01       	movw	r26, r24
    5540:	cb 01       	movw	r24, r22
    5542:	8e 01       	movw	r16, r28
    5544:	09 52       	subi	r16, 0x29	; 41
    5546:	1f 4f       	sbci	r17, 0xFF	; 255
    5548:	bc 01       	movw	r22, r24
    554a:	cd 01       	movw	r24, r26
    554c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5550:	dc 01       	movw	r26, r24
    5552:	cb 01       	movw	r24, r22
    5554:	f8 01       	movw	r30, r16
    5556:	91 83       	std	Z+1, r25	; 0x01
    5558:	80 83       	st	Z, r24
    555a:	1f c0       	rjmp	.+62     	; 0x559a <__vector_1+0xb46>
    555c:	fe 01       	movw	r30, r28
    555e:	eb 52       	subi	r30, 0x2B	; 43
    5560:	ff 4f       	sbci	r31, 0xFF	; 255
    5562:	88 ec       	ldi	r24, 0xC8	; 200
    5564:	90 e0       	ldi	r25, 0x00	; 0
    5566:	91 83       	std	Z+1, r25	; 0x01
    5568:	80 83       	st	Z, r24
    556a:	fe 01       	movw	r30, r28
    556c:	eb 52       	subi	r30, 0x2B	; 43
    556e:	ff 4f       	sbci	r31, 0xFF	; 255
    5570:	80 81       	ld	r24, Z
    5572:	91 81       	ldd	r25, Z+1	; 0x01
    5574:	01 97       	sbiw	r24, 0x01	; 1
    5576:	f1 f7       	brne	.-4      	; 0x5574 <__vector_1+0xb20>
    5578:	fe 01       	movw	r30, r28
    557a:	eb 52       	subi	r30, 0x2B	; 43
    557c:	ff 4f       	sbci	r31, 0xFF	; 255
    557e:	91 83       	std	Z+1, r25	; 0x01
    5580:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5582:	de 01       	movw	r26, r28
    5584:	a9 52       	subi	r26, 0x29	; 41
    5586:	bf 4f       	sbci	r27, 0xFF	; 255
    5588:	fe 01       	movw	r30, r28
    558a:	e9 52       	subi	r30, 0x29	; 41
    558c:	ff 4f       	sbci	r31, 0xFF	; 255
    558e:	80 81       	ld	r24, Z
    5590:	91 81       	ldd	r25, Z+1	; 0x01
    5592:	01 97       	sbiw	r24, 0x01	; 1
    5594:	11 96       	adiw	r26, 0x01	; 1
    5596:	9c 93       	st	X, r25
    5598:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    559a:	fe 01       	movw	r30, r28
    559c:	e9 52       	subi	r30, 0x29	; 41
    559e:	ff 4f       	sbci	r31, 0xFF	; 255
    55a0:	80 81       	ld	r24, Z
    55a2:	91 81       	ldd	r25, Z+1	; 0x01
    55a4:	00 97       	sbiw	r24, 0x00	; 0
    55a6:	d1 f6       	brne	.-76     	; 0x555c <__vector_1+0xb08>
    55a8:	27 c0       	rjmp	.+78     	; 0x55f8 <__vector_1+0xba4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55aa:	8e 01       	movw	r16, r28
    55ac:	09 52       	subi	r16, 0x29	; 41
    55ae:	1f 4f       	sbci	r17, 0xFF	; 255
    55b0:	fe 01       	movw	r30, r28
    55b2:	e7 52       	subi	r30, 0x27	; 39
    55b4:	ff 4f       	sbci	r31, 0xFF	; 255
    55b6:	60 81       	ld	r22, Z
    55b8:	71 81       	ldd	r23, Z+1	; 0x01
    55ba:	82 81       	ldd	r24, Z+2	; 0x02
    55bc:	93 81       	ldd	r25, Z+3	; 0x03
    55be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    55c2:	dc 01       	movw	r26, r24
    55c4:	cb 01       	movw	r24, r22
    55c6:	f8 01       	movw	r30, r16
    55c8:	91 83       	std	Z+1, r25	; 0x01
    55ca:	80 83       	st	Z, r24
    55cc:	de 01       	movw	r26, r28
    55ce:	ad 52       	subi	r26, 0x2D	; 45
    55d0:	bf 4f       	sbci	r27, 0xFF	; 255
    55d2:	fe 01       	movw	r30, r28
    55d4:	e9 52       	subi	r30, 0x29	; 41
    55d6:	ff 4f       	sbci	r31, 0xFF	; 255
    55d8:	80 81       	ld	r24, Z
    55da:	91 81       	ldd	r25, Z+1	; 0x01
    55dc:	8d 93       	st	X+, r24
    55de:	9c 93       	st	X, r25
    55e0:	fe 01       	movw	r30, r28
    55e2:	ed 52       	subi	r30, 0x2D	; 45
    55e4:	ff 4f       	sbci	r31, 0xFF	; 255
    55e6:	80 81       	ld	r24, Z
    55e8:	91 81       	ldd	r25, Z+1	; 0x01
    55ea:	01 97       	sbiw	r24, 0x01	; 1
    55ec:	f1 f7       	brne	.-4      	; 0x55ea <__vector_1+0xb96>
    55ee:	fe 01       	movw	r30, r28
    55f0:	ed 52       	subi	r30, 0x2D	; 45
    55f2:	ff 4f       	sbci	r31, 0xFF	; 255
    55f4:	91 83       	std	Z+1, r25	; 0x01
    55f6:	80 83       	st	Z, r24
									_delay_ms(2000);
								}
								if(i=3)
    55f8:	fe 01       	movw	r30, r28
    55fa:	e3 5f       	subi	r30, 0xF3	; 243
    55fc:	fe 4f       	sbci	r31, 0xFE	; 254
    55fe:	83 e0       	ldi	r24, 0x03	; 3
    5600:	80 83       	st	Z, r24
								{
									LCD_GOTOXY(2,3);
    5602:	82 e0       	ldi	r24, 0x02	; 2
    5604:	63 e0       	ldi	r22, 0x03	; 3
    5606:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
									LCD_Send_string("3");
    560a:	8e e7       	ldi	r24, 0x7E	; 126
    560c:	90 e0       	ldi	r25, 0x00	; 0
    560e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
									SSEG_voidSendNumber(sseg1,3);
    5612:	fe 01       	movw	r30, r28
    5614:	e1 5f       	subi	r30, 0xF1	; 241
    5616:	fe 4f       	sbci	r31, 0xFE	; 254
    5618:	80 81       	ld	r24, Z
    561a:	91 81       	ldd	r25, Z+1	; 0x01
    561c:	63 e0       	ldi	r22, 0x03	; 3
    561e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
									SSEG_voidSendNumber(sseg2,3);
    5622:	fe 01       	movw	r30, r28
    5624:	ef 5e       	subi	r30, 0xEF	; 239
    5626:	fe 4f       	sbci	r31, 0xFE	; 254
    5628:	80 81       	ld	r24, Z
    562a:	91 81       	ldd	r25, Z+1	; 0x01
    562c:	63 e0       	ldi	r22, 0x03	; 3
    562e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    5632:	fe 01       	movw	r30, r28
    5634:	e1 53       	subi	r30, 0x31	; 49
    5636:	ff 4f       	sbci	r31, 0xFF	; 255
    5638:	80 e0       	ldi	r24, 0x00	; 0
    563a:	90 e0       	ldi	r25, 0x00	; 0
    563c:	aa ef       	ldi	r26, 0xFA	; 250
    563e:	b4 e4       	ldi	r27, 0x44	; 68
    5640:	80 83       	st	Z, r24
    5642:	91 83       	std	Z+1, r25	; 0x01
    5644:	a2 83       	std	Z+2, r26	; 0x02
    5646:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5648:	8e 01       	movw	r16, r28
    564a:	05 53       	subi	r16, 0x35	; 53
    564c:	1f 4f       	sbci	r17, 0xFF	; 255
    564e:	fe 01       	movw	r30, r28
    5650:	e1 53       	subi	r30, 0x31	; 49
    5652:	ff 4f       	sbci	r31, 0xFF	; 255
    5654:	60 81       	ld	r22, Z
    5656:	71 81       	ldd	r23, Z+1	; 0x01
    5658:	82 81       	ldd	r24, Z+2	; 0x02
    565a:	93 81       	ldd	r25, Z+3	; 0x03
    565c:	20 e0       	ldi	r18, 0x00	; 0
    565e:	30 e0       	ldi	r19, 0x00	; 0
    5660:	4a ef       	ldi	r20, 0xFA	; 250
    5662:	54 e4       	ldi	r21, 0x44	; 68
    5664:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5668:	dc 01       	movw	r26, r24
    566a:	cb 01       	movw	r24, r22
    566c:	f8 01       	movw	r30, r16
    566e:	80 83       	st	Z, r24
    5670:	91 83       	std	Z+1, r25	; 0x01
    5672:	a2 83       	std	Z+2, r26	; 0x02
    5674:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5676:	fe 01       	movw	r30, r28
    5678:	e5 53       	subi	r30, 0x35	; 53
    567a:	ff 4f       	sbci	r31, 0xFF	; 255
    567c:	60 81       	ld	r22, Z
    567e:	71 81       	ldd	r23, Z+1	; 0x01
    5680:	82 81       	ldd	r24, Z+2	; 0x02
    5682:	93 81       	ldd	r25, Z+3	; 0x03
    5684:	20 e0       	ldi	r18, 0x00	; 0
    5686:	30 e0       	ldi	r19, 0x00	; 0
    5688:	40 e8       	ldi	r20, 0x80	; 128
    568a:	5f e3       	ldi	r21, 0x3F	; 63
    568c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5690:	88 23       	and	r24, r24
    5692:	44 f4       	brge	.+16     	; 0x56a4 <__vector_1+0xc50>
		__ticks = 1;
    5694:	fe 01       	movw	r30, r28
    5696:	e7 53       	subi	r30, 0x37	; 55
    5698:	ff 4f       	sbci	r31, 0xFF	; 255
    569a:	81 e0       	ldi	r24, 0x01	; 1
    569c:	90 e0       	ldi	r25, 0x00	; 0
    569e:	91 83       	std	Z+1, r25	; 0x01
    56a0:	80 83       	st	Z, r24
    56a2:	64 c0       	rjmp	.+200    	; 0x576c <__vector_1+0xd18>
	else if (__tmp > 65535)
    56a4:	fe 01       	movw	r30, r28
    56a6:	e5 53       	subi	r30, 0x35	; 53
    56a8:	ff 4f       	sbci	r31, 0xFF	; 255
    56aa:	60 81       	ld	r22, Z
    56ac:	71 81       	ldd	r23, Z+1	; 0x01
    56ae:	82 81       	ldd	r24, Z+2	; 0x02
    56b0:	93 81       	ldd	r25, Z+3	; 0x03
    56b2:	20 e0       	ldi	r18, 0x00	; 0
    56b4:	3f ef       	ldi	r19, 0xFF	; 255
    56b6:	4f e7       	ldi	r20, 0x7F	; 127
    56b8:	57 e4       	ldi	r21, 0x47	; 71
    56ba:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    56be:	18 16       	cp	r1, r24
    56c0:	0c f0       	brlt	.+2      	; 0x56c4 <__vector_1+0xc70>
    56c2:	43 c0       	rjmp	.+134    	; 0x574a <__vector_1+0xcf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    56c4:	fe 01       	movw	r30, r28
    56c6:	e1 53       	subi	r30, 0x31	; 49
    56c8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ca:	60 81       	ld	r22, Z
    56cc:	71 81       	ldd	r23, Z+1	; 0x01
    56ce:	82 81       	ldd	r24, Z+2	; 0x02
    56d0:	93 81       	ldd	r25, Z+3	; 0x03
    56d2:	20 e0       	ldi	r18, 0x00	; 0
    56d4:	30 e0       	ldi	r19, 0x00	; 0
    56d6:	40 e2       	ldi	r20, 0x20	; 32
    56d8:	51 e4       	ldi	r21, 0x41	; 65
    56da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    56de:	dc 01       	movw	r26, r24
    56e0:	cb 01       	movw	r24, r22
    56e2:	8e 01       	movw	r16, r28
    56e4:	07 53       	subi	r16, 0x37	; 55
    56e6:	1f 4f       	sbci	r17, 0xFF	; 255
    56e8:	bc 01       	movw	r22, r24
    56ea:	cd 01       	movw	r24, r26
    56ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    56f0:	dc 01       	movw	r26, r24
    56f2:	cb 01       	movw	r24, r22
    56f4:	f8 01       	movw	r30, r16
    56f6:	91 83       	std	Z+1, r25	; 0x01
    56f8:	80 83       	st	Z, r24
    56fa:	1f c0       	rjmp	.+62     	; 0x573a <__vector_1+0xce6>
    56fc:	fe 01       	movw	r30, r28
    56fe:	e9 53       	subi	r30, 0x39	; 57
    5700:	ff 4f       	sbci	r31, 0xFF	; 255
    5702:	88 ec       	ldi	r24, 0xC8	; 200
    5704:	90 e0       	ldi	r25, 0x00	; 0
    5706:	91 83       	std	Z+1, r25	; 0x01
    5708:	80 83       	st	Z, r24
    570a:	fe 01       	movw	r30, r28
    570c:	e9 53       	subi	r30, 0x39	; 57
    570e:	ff 4f       	sbci	r31, 0xFF	; 255
    5710:	80 81       	ld	r24, Z
    5712:	91 81       	ldd	r25, Z+1	; 0x01
    5714:	01 97       	sbiw	r24, 0x01	; 1
    5716:	f1 f7       	brne	.-4      	; 0x5714 <__vector_1+0xcc0>
    5718:	fe 01       	movw	r30, r28
    571a:	e9 53       	subi	r30, 0x39	; 57
    571c:	ff 4f       	sbci	r31, 0xFF	; 255
    571e:	91 83       	std	Z+1, r25	; 0x01
    5720:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5722:	de 01       	movw	r26, r28
    5724:	a7 53       	subi	r26, 0x37	; 55
    5726:	bf 4f       	sbci	r27, 0xFF	; 255
    5728:	fe 01       	movw	r30, r28
    572a:	e7 53       	subi	r30, 0x37	; 55
    572c:	ff 4f       	sbci	r31, 0xFF	; 255
    572e:	80 81       	ld	r24, Z
    5730:	91 81       	ldd	r25, Z+1	; 0x01
    5732:	01 97       	sbiw	r24, 0x01	; 1
    5734:	11 96       	adiw	r26, 0x01	; 1
    5736:	9c 93       	st	X, r25
    5738:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    573a:	fe 01       	movw	r30, r28
    573c:	e7 53       	subi	r30, 0x37	; 55
    573e:	ff 4f       	sbci	r31, 0xFF	; 255
    5740:	80 81       	ld	r24, Z
    5742:	91 81       	ldd	r25, Z+1	; 0x01
    5744:	00 97       	sbiw	r24, 0x00	; 0
    5746:	d1 f6       	brne	.-76     	; 0x56fc <__vector_1+0xca8>
    5748:	27 c0       	rjmp	.+78     	; 0x5798 <__vector_1+0xd44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    574a:	8e 01       	movw	r16, r28
    574c:	07 53       	subi	r16, 0x37	; 55
    574e:	1f 4f       	sbci	r17, 0xFF	; 255
    5750:	fe 01       	movw	r30, r28
    5752:	e5 53       	subi	r30, 0x35	; 53
    5754:	ff 4f       	sbci	r31, 0xFF	; 255
    5756:	60 81       	ld	r22, Z
    5758:	71 81       	ldd	r23, Z+1	; 0x01
    575a:	82 81       	ldd	r24, Z+2	; 0x02
    575c:	93 81       	ldd	r25, Z+3	; 0x03
    575e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5762:	dc 01       	movw	r26, r24
    5764:	cb 01       	movw	r24, r22
    5766:	f8 01       	movw	r30, r16
    5768:	91 83       	std	Z+1, r25	; 0x01
    576a:	80 83       	st	Z, r24
    576c:	de 01       	movw	r26, r28
    576e:	ab 53       	subi	r26, 0x3B	; 59
    5770:	bf 4f       	sbci	r27, 0xFF	; 255
    5772:	fe 01       	movw	r30, r28
    5774:	e7 53       	subi	r30, 0x37	; 55
    5776:	ff 4f       	sbci	r31, 0xFF	; 255
    5778:	80 81       	ld	r24, Z
    577a:	91 81       	ldd	r25, Z+1	; 0x01
    577c:	8d 93       	st	X+, r24
    577e:	9c 93       	st	X, r25
    5780:	fe 01       	movw	r30, r28
    5782:	eb 53       	subi	r30, 0x3B	; 59
    5784:	ff 4f       	sbci	r31, 0xFF	; 255
    5786:	80 81       	ld	r24, Z
    5788:	91 81       	ldd	r25, Z+1	; 0x01
    578a:	01 97       	sbiw	r24, 0x01	; 1
    578c:	f1 f7       	brne	.-4      	; 0x578a <__vector_1+0xd36>
    578e:	fe 01       	movw	r30, r28
    5790:	eb 53       	subi	r30, 0x3B	; 59
    5792:	ff 4f       	sbci	r31, 0xFF	; 255
    5794:	91 83       	std	Z+1, r25	; 0x01
    5796:	80 83       	st	Z, r24
									_delay_ms(2000);
								}
								if(i=2)
    5798:	fe 01       	movw	r30, r28
    579a:	e3 5f       	subi	r30, 0xF3	; 243
    579c:	fe 4f       	sbci	r31, 0xFE	; 254
    579e:	82 e0       	ldi	r24, 0x02	; 2
    57a0:	80 83       	st	Z, r24
								{
									LCD_GOTOXY(2,3);
    57a2:	82 e0       	ldi	r24, 0x02	; 2
    57a4:	63 e0       	ldi	r22, 0x03	; 3
    57a6:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
									LCD_Send_string("2");
    57aa:	80 e8       	ldi	r24, 0x80	; 128
    57ac:	90 e0       	ldi	r25, 0x00	; 0
    57ae:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
									SSEG_voidSendNumber(sseg1,2);
    57b2:	fe 01       	movw	r30, r28
    57b4:	e1 5f       	subi	r30, 0xF1	; 241
    57b6:	fe 4f       	sbci	r31, 0xFE	; 254
    57b8:	80 81       	ld	r24, Z
    57ba:	91 81       	ldd	r25, Z+1	; 0x01
    57bc:	62 e0       	ldi	r22, 0x02	; 2
    57be:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
									SSEG_voidSendNumber(sseg2,2);
    57c2:	fe 01       	movw	r30, r28
    57c4:	ef 5e       	subi	r30, 0xEF	; 239
    57c6:	fe 4f       	sbci	r31, 0xFE	; 254
    57c8:	80 81       	ld	r24, Z
    57ca:	91 81       	ldd	r25, Z+1	; 0x01
    57cc:	62 e0       	ldi	r22, 0x02	; 2
    57ce:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    57d2:	fe 01       	movw	r30, r28
    57d4:	ef 53       	subi	r30, 0x3F	; 63
    57d6:	ff 4f       	sbci	r31, 0xFF	; 255
    57d8:	80 e0       	ldi	r24, 0x00	; 0
    57da:	90 e0       	ldi	r25, 0x00	; 0
    57dc:	aa ef       	ldi	r26, 0xFA	; 250
    57de:	b4 e4       	ldi	r27, 0x44	; 68
    57e0:	80 83       	st	Z, r24
    57e2:	91 83       	std	Z+1, r25	; 0x01
    57e4:	a2 83       	std	Z+2, r26	; 0x02
    57e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57e8:	8e 01       	movw	r16, r28
    57ea:	03 54       	subi	r16, 0x43	; 67
    57ec:	1f 4f       	sbci	r17, 0xFF	; 255
    57ee:	fe 01       	movw	r30, r28
    57f0:	ef 53       	subi	r30, 0x3F	; 63
    57f2:	ff 4f       	sbci	r31, 0xFF	; 255
    57f4:	60 81       	ld	r22, Z
    57f6:	71 81       	ldd	r23, Z+1	; 0x01
    57f8:	82 81       	ldd	r24, Z+2	; 0x02
    57fa:	93 81       	ldd	r25, Z+3	; 0x03
    57fc:	20 e0       	ldi	r18, 0x00	; 0
    57fe:	30 e0       	ldi	r19, 0x00	; 0
    5800:	4a ef       	ldi	r20, 0xFA	; 250
    5802:	54 e4       	ldi	r21, 0x44	; 68
    5804:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5808:	dc 01       	movw	r26, r24
    580a:	cb 01       	movw	r24, r22
    580c:	f8 01       	movw	r30, r16
    580e:	80 83       	st	Z, r24
    5810:	91 83       	std	Z+1, r25	; 0x01
    5812:	a2 83       	std	Z+2, r26	; 0x02
    5814:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5816:	fe 01       	movw	r30, r28
    5818:	e3 54       	subi	r30, 0x43	; 67
    581a:	ff 4f       	sbci	r31, 0xFF	; 255
    581c:	60 81       	ld	r22, Z
    581e:	71 81       	ldd	r23, Z+1	; 0x01
    5820:	82 81       	ldd	r24, Z+2	; 0x02
    5822:	93 81       	ldd	r25, Z+3	; 0x03
    5824:	20 e0       	ldi	r18, 0x00	; 0
    5826:	30 e0       	ldi	r19, 0x00	; 0
    5828:	40 e8       	ldi	r20, 0x80	; 128
    582a:	5f e3       	ldi	r21, 0x3F	; 63
    582c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5830:	88 23       	and	r24, r24
    5832:	44 f4       	brge	.+16     	; 0x5844 <__vector_1+0xdf0>
		__ticks = 1;
    5834:	fe 01       	movw	r30, r28
    5836:	e5 54       	subi	r30, 0x45	; 69
    5838:	ff 4f       	sbci	r31, 0xFF	; 255
    583a:	81 e0       	ldi	r24, 0x01	; 1
    583c:	90 e0       	ldi	r25, 0x00	; 0
    583e:	91 83       	std	Z+1, r25	; 0x01
    5840:	80 83       	st	Z, r24
    5842:	64 c0       	rjmp	.+200    	; 0x590c <__vector_1+0xeb8>
	else if (__tmp > 65535)
    5844:	fe 01       	movw	r30, r28
    5846:	e3 54       	subi	r30, 0x43	; 67
    5848:	ff 4f       	sbci	r31, 0xFF	; 255
    584a:	60 81       	ld	r22, Z
    584c:	71 81       	ldd	r23, Z+1	; 0x01
    584e:	82 81       	ldd	r24, Z+2	; 0x02
    5850:	93 81       	ldd	r25, Z+3	; 0x03
    5852:	20 e0       	ldi	r18, 0x00	; 0
    5854:	3f ef       	ldi	r19, 0xFF	; 255
    5856:	4f e7       	ldi	r20, 0x7F	; 127
    5858:	57 e4       	ldi	r21, 0x47	; 71
    585a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    585e:	18 16       	cp	r1, r24
    5860:	0c f0       	brlt	.+2      	; 0x5864 <__vector_1+0xe10>
    5862:	43 c0       	rjmp	.+134    	; 0x58ea <__vector_1+0xe96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5864:	fe 01       	movw	r30, r28
    5866:	ef 53       	subi	r30, 0x3F	; 63
    5868:	ff 4f       	sbci	r31, 0xFF	; 255
    586a:	60 81       	ld	r22, Z
    586c:	71 81       	ldd	r23, Z+1	; 0x01
    586e:	82 81       	ldd	r24, Z+2	; 0x02
    5870:	93 81       	ldd	r25, Z+3	; 0x03
    5872:	20 e0       	ldi	r18, 0x00	; 0
    5874:	30 e0       	ldi	r19, 0x00	; 0
    5876:	40 e2       	ldi	r20, 0x20	; 32
    5878:	51 e4       	ldi	r21, 0x41	; 65
    587a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    587e:	dc 01       	movw	r26, r24
    5880:	cb 01       	movw	r24, r22
    5882:	8e 01       	movw	r16, r28
    5884:	05 54       	subi	r16, 0x45	; 69
    5886:	1f 4f       	sbci	r17, 0xFF	; 255
    5888:	bc 01       	movw	r22, r24
    588a:	cd 01       	movw	r24, r26
    588c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5890:	dc 01       	movw	r26, r24
    5892:	cb 01       	movw	r24, r22
    5894:	f8 01       	movw	r30, r16
    5896:	91 83       	std	Z+1, r25	; 0x01
    5898:	80 83       	st	Z, r24
    589a:	1f c0       	rjmp	.+62     	; 0x58da <__vector_1+0xe86>
    589c:	fe 01       	movw	r30, r28
    589e:	e7 54       	subi	r30, 0x47	; 71
    58a0:	ff 4f       	sbci	r31, 0xFF	; 255
    58a2:	88 ec       	ldi	r24, 0xC8	; 200
    58a4:	90 e0       	ldi	r25, 0x00	; 0
    58a6:	91 83       	std	Z+1, r25	; 0x01
    58a8:	80 83       	st	Z, r24
    58aa:	fe 01       	movw	r30, r28
    58ac:	e7 54       	subi	r30, 0x47	; 71
    58ae:	ff 4f       	sbci	r31, 0xFF	; 255
    58b0:	80 81       	ld	r24, Z
    58b2:	91 81       	ldd	r25, Z+1	; 0x01
    58b4:	01 97       	sbiw	r24, 0x01	; 1
    58b6:	f1 f7       	brne	.-4      	; 0x58b4 <__vector_1+0xe60>
    58b8:	fe 01       	movw	r30, r28
    58ba:	e7 54       	subi	r30, 0x47	; 71
    58bc:	ff 4f       	sbci	r31, 0xFF	; 255
    58be:	91 83       	std	Z+1, r25	; 0x01
    58c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    58c2:	de 01       	movw	r26, r28
    58c4:	a5 54       	subi	r26, 0x45	; 69
    58c6:	bf 4f       	sbci	r27, 0xFF	; 255
    58c8:	fe 01       	movw	r30, r28
    58ca:	e5 54       	subi	r30, 0x45	; 69
    58cc:	ff 4f       	sbci	r31, 0xFF	; 255
    58ce:	80 81       	ld	r24, Z
    58d0:	91 81       	ldd	r25, Z+1	; 0x01
    58d2:	01 97       	sbiw	r24, 0x01	; 1
    58d4:	11 96       	adiw	r26, 0x01	; 1
    58d6:	9c 93       	st	X, r25
    58d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58da:	fe 01       	movw	r30, r28
    58dc:	e5 54       	subi	r30, 0x45	; 69
    58de:	ff 4f       	sbci	r31, 0xFF	; 255
    58e0:	80 81       	ld	r24, Z
    58e2:	91 81       	ldd	r25, Z+1	; 0x01
    58e4:	00 97       	sbiw	r24, 0x00	; 0
    58e6:	d1 f6       	brne	.-76     	; 0x589c <__vector_1+0xe48>
    58e8:	27 c0       	rjmp	.+78     	; 0x5938 <__vector_1+0xee4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58ea:	8e 01       	movw	r16, r28
    58ec:	05 54       	subi	r16, 0x45	; 69
    58ee:	1f 4f       	sbci	r17, 0xFF	; 255
    58f0:	fe 01       	movw	r30, r28
    58f2:	e3 54       	subi	r30, 0x43	; 67
    58f4:	ff 4f       	sbci	r31, 0xFF	; 255
    58f6:	60 81       	ld	r22, Z
    58f8:	71 81       	ldd	r23, Z+1	; 0x01
    58fa:	82 81       	ldd	r24, Z+2	; 0x02
    58fc:	93 81       	ldd	r25, Z+3	; 0x03
    58fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5902:	dc 01       	movw	r26, r24
    5904:	cb 01       	movw	r24, r22
    5906:	f8 01       	movw	r30, r16
    5908:	91 83       	std	Z+1, r25	; 0x01
    590a:	80 83       	st	Z, r24
    590c:	de 01       	movw	r26, r28
    590e:	a9 54       	subi	r26, 0x49	; 73
    5910:	bf 4f       	sbci	r27, 0xFF	; 255
    5912:	fe 01       	movw	r30, r28
    5914:	e5 54       	subi	r30, 0x45	; 69
    5916:	ff 4f       	sbci	r31, 0xFF	; 255
    5918:	80 81       	ld	r24, Z
    591a:	91 81       	ldd	r25, Z+1	; 0x01
    591c:	8d 93       	st	X+, r24
    591e:	9c 93       	st	X, r25
    5920:	fe 01       	movw	r30, r28
    5922:	e9 54       	subi	r30, 0x49	; 73
    5924:	ff 4f       	sbci	r31, 0xFF	; 255
    5926:	80 81       	ld	r24, Z
    5928:	91 81       	ldd	r25, Z+1	; 0x01
    592a:	01 97       	sbiw	r24, 0x01	; 1
    592c:	f1 f7       	brne	.-4      	; 0x592a <__vector_1+0xed6>
    592e:	fe 01       	movw	r30, r28
    5930:	e9 54       	subi	r30, 0x49	; 73
    5932:	ff 4f       	sbci	r31, 0xFF	; 255
    5934:	91 83       	std	Z+1, r25	; 0x01
    5936:	80 83       	st	Z, r24
									_delay_ms(2000);
									LCD_GOTOXY(2,3);
    5938:	82 e0       	ldi	r24, 0x02	; 2
    593a:	63 e0       	ldi	r22, 0x03	; 3
    593c:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
								    LCD_Send_string("1");
    5940:	82 e8       	ldi	r24, 0x82	; 130
    5942:	90 e0       	ldi	r25, 0x00	; 0
    5944:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
								    SSEG_voidSendNumber(sseg1,1);
    5948:	fe 01       	movw	r30, r28
    594a:	e1 5f       	subi	r30, 0xF1	; 241
    594c:	fe 4f       	sbci	r31, 0xFE	; 254
    594e:	80 81       	ld	r24, Z
    5950:	91 81       	ldd	r25, Z+1	; 0x01
    5952:	61 e0       	ldi	r22, 0x01	; 1
    5954:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
								    SSEG_voidSendNumber(sseg2,1);
    5958:	fe 01       	movw	r30, r28
    595a:	ef 5e       	subi	r30, 0xEF	; 239
    595c:	fe 4f       	sbci	r31, 0xFE	; 254
    595e:	80 81       	ld	r24, Z
    5960:	91 81       	ldd	r25, Z+1	; 0x01
    5962:	61 e0       	ldi	r22, 0x01	; 1
    5964:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    5968:	fe 01       	movw	r30, r28
    596a:	ed 54       	subi	r30, 0x4D	; 77
    596c:	ff 4f       	sbci	r31, 0xFF	; 255
    596e:	80 e0       	ldi	r24, 0x00	; 0
    5970:	90 e0       	ldi	r25, 0x00	; 0
    5972:	aa ef       	ldi	r26, 0xFA	; 250
    5974:	b4 e4       	ldi	r27, 0x44	; 68
    5976:	80 83       	st	Z, r24
    5978:	91 83       	std	Z+1, r25	; 0x01
    597a:	a2 83       	std	Z+2, r26	; 0x02
    597c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    597e:	8e 01       	movw	r16, r28
    5980:	01 55       	subi	r16, 0x51	; 81
    5982:	1f 4f       	sbci	r17, 0xFF	; 255
    5984:	fe 01       	movw	r30, r28
    5986:	ed 54       	subi	r30, 0x4D	; 77
    5988:	ff 4f       	sbci	r31, 0xFF	; 255
    598a:	60 81       	ld	r22, Z
    598c:	71 81       	ldd	r23, Z+1	; 0x01
    598e:	82 81       	ldd	r24, Z+2	; 0x02
    5990:	93 81       	ldd	r25, Z+3	; 0x03
    5992:	20 e0       	ldi	r18, 0x00	; 0
    5994:	30 e0       	ldi	r19, 0x00	; 0
    5996:	4a ef       	ldi	r20, 0xFA	; 250
    5998:	54 e4       	ldi	r21, 0x44	; 68
    599a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    599e:	dc 01       	movw	r26, r24
    59a0:	cb 01       	movw	r24, r22
    59a2:	f8 01       	movw	r30, r16
    59a4:	80 83       	st	Z, r24
    59a6:	91 83       	std	Z+1, r25	; 0x01
    59a8:	a2 83       	std	Z+2, r26	; 0x02
    59aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    59ac:	fe 01       	movw	r30, r28
    59ae:	e1 55       	subi	r30, 0x51	; 81
    59b0:	ff 4f       	sbci	r31, 0xFF	; 255
    59b2:	60 81       	ld	r22, Z
    59b4:	71 81       	ldd	r23, Z+1	; 0x01
    59b6:	82 81       	ldd	r24, Z+2	; 0x02
    59b8:	93 81       	ldd	r25, Z+3	; 0x03
    59ba:	20 e0       	ldi	r18, 0x00	; 0
    59bc:	30 e0       	ldi	r19, 0x00	; 0
    59be:	40 e8       	ldi	r20, 0x80	; 128
    59c0:	5f e3       	ldi	r21, 0x3F	; 63
    59c2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    59c6:	88 23       	and	r24, r24
    59c8:	44 f4       	brge	.+16     	; 0x59da <__vector_1+0xf86>
		__ticks = 1;
    59ca:	fe 01       	movw	r30, r28
    59cc:	e3 55       	subi	r30, 0x53	; 83
    59ce:	ff 4f       	sbci	r31, 0xFF	; 255
    59d0:	81 e0       	ldi	r24, 0x01	; 1
    59d2:	90 e0       	ldi	r25, 0x00	; 0
    59d4:	91 83       	std	Z+1, r25	; 0x01
    59d6:	80 83       	st	Z, r24
    59d8:	64 c0       	rjmp	.+200    	; 0x5aa2 <__vector_1+0x104e>
	else if (__tmp > 65535)
    59da:	fe 01       	movw	r30, r28
    59dc:	e1 55       	subi	r30, 0x51	; 81
    59de:	ff 4f       	sbci	r31, 0xFF	; 255
    59e0:	60 81       	ld	r22, Z
    59e2:	71 81       	ldd	r23, Z+1	; 0x01
    59e4:	82 81       	ldd	r24, Z+2	; 0x02
    59e6:	93 81       	ldd	r25, Z+3	; 0x03
    59e8:	20 e0       	ldi	r18, 0x00	; 0
    59ea:	3f ef       	ldi	r19, 0xFF	; 255
    59ec:	4f e7       	ldi	r20, 0x7F	; 127
    59ee:	57 e4       	ldi	r21, 0x47	; 71
    59f0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    59f4:	18 16       	cp	r1, r24
    59f6:	0c f0       	brlt	.+2      	; 0x59fa <__vector_1+0xfa6>
    59f8:	43 c0       	rjmp	.+134    	; 0x5a80 <__vector_1+0x102c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    59fa:	fe 01       	movw	r30, r28
    59fc:	ed 54       	subi	r30, 0x4D	; 77
    59fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5a00:	60 81       	ld	r22, Z
    5a02:	71 81       	ldd	r23, Z+1	; 0x01
    5a04:	82 81       	ldd	r24, Z+2	; 0x02
    5a06:	93 81       	ldd	r25, Z+3	; 0x03
    5a08:	20 e0       	ldi	r18, 0x00	; 0
    5a0a:	30 e0       	ldi	r19, 0x00	; 0
    5a0c:	40 e2       	ldi	r20, 0x20	; 32
    5a0e:	51 e4       	ldi	r21, 0x41	; 65
    5a10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5a14:	dc 01       	movw	r26, r24
    5a16:	cb 01       	movw	r24, r22
    5a18:	8e 01       	movw	r16, r28
    5a1a:	03 55       	subi	r16, 0x53	; 83
    5a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    5a1e:	bc 01       	movw	r22, r24
    5a20:	cd 01       	movw	r24, r26
    5a22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a26:	dc 01       	movw	r26, r24
    5a28:	cb 01       	movw	r24, r22
    5a2a:	f8 01       	movw	r30, r16
    5a2c:	91 83       	std	Z+1, r25	; 0x01
    5a2e:	80 83       	st	Z, r24
    5a30:	1f c0       	rjmp	.+62     	; 0x5a70 <__vector_1+0x101c>
    5a32:	fe 01       	movw	r30, r28
    5a34:	e5 55       	subi	r30, 0x55	; 85
    5a36:	ff 4f       	sbci	r31, 0xFF	; 255
    5a38:	88 ec       	ldi	r24, 0xC8	; 200
    5a3a:	90 e0       	ldi	r25, 0x00	; 0
    5a3c:	91 83       	std	Z+1, r25	; 0x01
    5a3e:	80 83       	st	Z, r24
    5a40:	fe 01       	movw	r30, r28
    5a42:	e5 55       	subi	r30, 0x55	; 85
    5a44:	ff 4f       	sbci	r31, 0xFF	; 255
    5a46:	80 81       	ld	r24, Z
    5a48:	91 81       	ldd	r25, Z+1	; 0x01
    5a4a:	01 97       	sbiw	r24, 0x01	; 1
    5a4c:	f1 f7       	brne	.-4      	; 0x5a4a <__vector_1+0xff6>
    5a4e:	fe 01       	movw	r30, r28
    5a50:	e5 55       	subi	r30, 0x55	; 85
    5a52:	ff 4f       	sbci	r31, 0xFF	; 255
    5a54:	91 83       	std	Z+1, r25	; 0x01
    5a56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a58:	de 01       	movw	r26, r28
    5a5a:	a3 55       	subi	r26, 0x53	; 83
    5a5c:	bf 4f       	sbci	r27, 0xFF	; 255
    5a5e:	fe 01       	movw	r30, r28
    5a60:	e3 55       	subi	r30, 0x53	; 83
    5a62:	ff 4f       	sbci	r31, 0xFF	; 255
    5a64:	80 81       	ld	r24, Z
    5a66:	91 81       	ldd	r25, Z+1	; 0x01
    5a68:	01 97       	sbiw	r24, 0x01	; 1
    5a6a:	11 96       	adiw	r26, 0x01	; 1
    5a6c:	9c 93       	st	X, r25
    5a6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5a70:	fe 01       	movw	r30, r28
    5a72:	e3 55       	subi	r30, 0x53	; 83
    5a74:	ff 4f       	sbci	r31, 0xFF	; 255
    5a76:	80 81       	ld	r24, Z
    5a78:	91 81       	ldd	r25, Z+1	; 0x01
    5a7a:	00 97       	sbiw	r24, 0x00	; 0
    5a7c:	d1 f6       	brne	.-76     	; 0x5a32 <__vector_1+0xfde>
    5a7e:	27 c0       	rjmp	.+78     	; 0x5ace <__vector_1+0x107a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a80:	8e 01       	movw	r16, r28
    5a82:	03 55       	subi	r16, 0x53	; 83
    5a84:	1f 4f       	sbci	r17, 0xFF	; 255
    5a86:	fe 01       	movw	r30, r28
    5a88:	e1 55       	subi	r30, 0x51	; 81
    5a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    5a8c:	60 81       	ld	r22, Z
    5a8e:	71 81       	ldd	r23, Z+1	; 0x01
    5a90:	82 81       	ldd	r24, Z+2	; 0x02
    5a92:	93 81       	ldd	r25, Z+3	; 0x03
    5a94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a98:	dc 01       	movw	r26, r24
    5a9a:	cb 01       	movw	r24, r22
    5a9c:	f8 01       	movw	r30, r16
    5a9e:	91 83       	std	Z+1, r25	; 0x01
    5aa0:	80 83       	st	Z, r24
    5aa2:	de 01       	movw	r26, r28
    5aa4:	a7 55       	subi	r26, 0x57	; 87
    5aa6:	bf 4f       	sbci	r27, 0xFF	; 255
    5aa8:	fe 01       	movw	r30, r28
    5aaa:	e3 55       	subi	r30, 0x53	; 83
    5aac:	ff 4f       	sbci	r31, 0xFF	; 255
    5aae:	80 81       	ld	r24, Z
    5ab0:	91 81       	ldd	r25, Z+1	; 0x01
    5ab2:	8d 93       	st	X+, r24
    5ab4:	9c 93       	st	X, r25
    5ab6:	fe 01       	movw	r30, r28
    5ab8:	e7 55       	subi	r30, 0x57	; 87
    5aba:	ff 4f       	sbci	r31, 0xFF	; 255
    5abc:	80 81       	ld	r24, Z
    5abe:	91 81       	ldd	r25, Z+1	; 0x01
    5ac0:	01 97       	sbiw	r24, 0x01	; 1
    5ac2:	f1 f7       	brne	.-4      	; 0x5ac0 <__vector_1+0x106c>
    5ac4:	fe 01       	movw	r30, r28
    5ac6:	e7 55       	subi	r30, 0x57	; 87
    5ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    5aca:	91 83       	std	Z+1, r25	; 0x01
    5acc:	80 83       	st	Z, r24
								    _delay_ms(2000);
								}
								if(i=1)
    5ace:	fe 01       	movw	r30, r28
    5ad0:	e3 5f       	subi	r30, 0xF3	; 243
    5ad2:	fe 4f       	sbci	r31, 0xFE	; 254
    5ad4:	81 e0       	ldi	r24, 0x01	; 1
    5ad6:	80 83       	st	Z, r24
								{
									LCD_Clear();
    5ad8:	0e 94 c5 1a 	call	0x358a	; 0x358a <LCD_Clear>
    5adc:	fe 01       	movw	r30, r28
    5ade:	eb 55       	subi	r30, 0x5B	; 91
    5ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ae2:	80 e0       	ldi	r24, 0x00	; 0
    5ae4:	90 e0       	ldi	r25, 0x00	; 0
    5ae6:	a0 e2       	ldi	r26, 0x20	; 32
    5ae8:	b1 e4       	ldi	r27, 0x41	; 65
    5aea:	80 83       	st	Z, r24
    5aec:	91 83       	std	Z+1, r25	; 0x01
    5aee:	a2 83       	std	Z+2, r26	; 0x02
    5af0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5af2:	8e 01       	movw	r16, r28
    5af4:	0f 55       	subi	r16, 0x5F	; 95
    5af6:	1f 4f       	sbci	r17, 0xFF	; 255
    5af8:	fe 01       	movw	r30, r28
    5afa:	eb 55       	subi	r30, 0x5B	; 91
    5afc:	ff 4f       	sbci	r31, 0xFF	; 255
    5afe:	60 81       	ld	r22, Z
    5b00:	71 81       	ldd	r23, Z+1	; 0x01
    5b02:	82 81       	ldd	r24, Z+2	; 0x02
    5b04:	93 81       	ldd	r25, Z+3	; 0x03
    5b06:	20 e0       	ldi	r18, 0x00	; 0
    5b08:	30 e0       	ldi	r19, 0x00	; 0
    5b0a:	4a ef       	ldi	r20, 0xFA	; 250
    5b0c:	54 e4       	ldi	r21, 0x44	; 68
    5b0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5b12:	dc 01       	movw	r26, r24
    5b14:	cb 01       	movw	r24, r22
    5b16:	f8 01       	movw	r30, r16
    5b18:	80 83       	st	Z, r24
    5b1a:	91 83       	std	Z+1, r25	; 0x01
    5b1c:	a2 83       	std	Z+2, r26	; 0x02
    5b1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5b20:	fe 01       	movw	r30, r28
    5b22:	ef 55       	subi	r30, 0x5F	; 95
    5b24:	ff 4f       	sbci	r31, 0xFF	; 255
    5b26:	60 81       	ld	r22, Z
    5b28:	71 81       	ldd	r23, Z+1	; 0x01
    5b2a:	82 81       	ldd	r24, Z+2	; 0x02
    5b2c:	93 81       	ldd	r25, Z+3	; 0x03
    5b2e:	20 e0       	ldi	r18, 0x00	; 0
    5b30:	30 e0       	ldi	r19, 0x00	; 0
    5b32:	40 e8       	ldi	r20, 0x80	; 128
    5b34:	5f e3       	ldi	r21, 0x3F	; 63
    5b36:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5b3a:	88 23       	and	r24, r24
    5b3c:	44 f4       	brge	.+16     	; 0x5b4e <__vector_1+0x10fa>
		__ticks = 1;
    5b3e:	fe 01       	movw	r30, r28
    5b40:	e1 56       	subi	r30, 0x61	; 97
    5b42:	ff 4f       	sbci	r31, 0xFF	; 255
    5b44:	81 e0       	ldi	r24, 0x01	; 1
    5b46:	90 e0       	ldi	r25, 0x00	; 0
    5b48:	91 83       	std	Z+1, r25	; 0x01
    5b4a:	80 83       	st	Z, r24
    5b4c:	64 c0       	rjmp	.+200    	; 0x5c16 <__vector_1+0x11c2>
	else if (__tmp > 65535)
    5b4e:	fe 01       	movw	r30, r28
    5b50:	ef 55       	subi	r30, 0x5F	; 95
    5b52:	ff 4f       	sbci	r31, 0xFF	; 255
    5b54:	60 81       	ld	r22, Z
    5b56:	71 81       	ldd	r23, Z+1	; 0x01
    5b58:	82 81       	ldd	r24, Z+2	; 0x02
    5b5a:	93 81       	ldd	r25, Z+3	; 0x03
    5b5c:	20 e0       	ldi	r18, 0x00	; 0
    5b5e:	3f ef       	ldi	r19, 0xFF	; 255
    5b60:	4f e7       	ldi	r20, 0x7F	; 127
    5b62:	57 e4       	ldi	r21, 0x47	; 71
    5b64:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5b68:	18 16       	cp	r1, r24
    5b6a:	0c f0       	brlt	.+2      	; 0x5b6e <__vector_1+0x111a>
    5b6c:	43 c0       	rjmp	.+134    	; 0x5bf4 <__vector_1+0x11a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b6e:	fe 01       	movw	r30, r28
    5b70:	eb 55       	subi	r30, 0x5B	; 91
    5b72:	ff 4f       	sbci	r31, 0xFF	; 255
    5b74:	60 81       	ld	r22, Z
    5b76:	71 81       	ldd	r23, Z+1	; 0x01
    5b78:	82 81       	ldd	r24, Z+2	; 0x02
    5b7a:	93 81       	ldd	r25, Z+3	; 0x03
    5b7c:	20 e0       	ldi	r18, 0x00	; 0
    5b7e:	30 e0       	ldi	r19, 0x00	; 0
    5b80:	40 e2       	ldi	r20, 0x20	; 32
    5b82:	51 e4       	ldi	r21, 0x41	; 65
    5b84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5b88:	dc 01       	movw	r26, r24
    5b8a:	cb 01       	movw	r24, r22
    5b8c:	8e 01       	movw	r16, r28
    5b8e:	01 56       	subi	r16, 0x61	; 97
    5b90:	1f 4f       	sbci	r17, 0xFF	; 255
    5b92:	bc 01       	movw	r22, r24
    5b94:	cd 01       	movw	r24, r26
    5b96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5b9a:	dc 01       	movw	r26, r24
    5b9c:	cb 01       	movw	r24, r22
    5b9e:	f8 01       	movw	r30, r16
    5ba0:	91 83       	std	Z+1, r25	; 0x01
    5ba2:	80 83       	st	Z, r24
    5ba4:	1f c0       	rjmp	.+62     	; 0x5be4 <__vector_1+0x1190>
    5ba6:	fe 01       	movw	r30, r28
    5ba8:	e3 56       	subi	r30, 0x63	; 99
    5baa:	ff 4f       	sbci	r31, 0xFF	; 255
    5bac:	88 ec       	ldi	r24, 0xC8	; 200
    5bae:	90 e0       	ldi	r25, 0x00	; 0
    5bb0:	91 83       	std	Z+1, r25	; 0x01
    5bb2:	80 83       	st	Z, r24
    5bb4:	fe 01       	movw	r30, r28
    5bb6:	e3 56       	subi	r30, 0x63	; 99
    5bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    5bba:	80 81       	ld	r24, Z
    5bbc:	91 81       	ldd	r25, Z+1	; 0x01
    5bbe:	01 97       	sbiw	r24, 0x01	; 1
    5bc0:	f1 f7       	brne	.-4      	; 0x5bbe <__vector_1+0x116a>
    5bc2:	fe 01       	movw	r30, r28
    5bc4:	e3 56       	subi	r30, 0x63	; 99
    5bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    5bc8:	91 83       	std	Z+1, r25	; 0x01
    5bca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5bcc:	de 01       	movw	r26, r28
    5bce:	a1 56       	subi	r26, 0x61	; 97
    5bd0:	bf 4f       	sbci	r27, 0xFF	; 255
    5bd2:	fe 01       	movw	r30, r28
    5bd4:	e1 56       	subi	r30, 0x61	; 97
    5bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    5bd8:	80 81       	ld	r24, Z
    5bda:	91 81       	ldd	r25, Z+1	; 0x01
    5bdc:	01 97       	sbiw	r24, 0x01	; 1
    5bde:	11 96       	adiw	r26, 0x01	; 1
    5be0:	9c 93       	st	X, r25
    5be2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5be4:	fe 01       	movw	r30, r28
    5be6:	e1 56       	subi	r30, 0x61	; 97
    5be8:	ff 4f       	sbci	r31, 0xFF	; 255
    5bea:	80 81       	ld	r24, Z
    5bec:	91 81       	ldd	r25, Z+1	; 0x01
    5bee:	00 97       	sbiw	r24, 0x00	; 0
    5bf0:	d1 f6       	brne	.-76     	; 0x5ba6 <__vector_1+0x1152>
    5bf2:	27 c0       	rjmp	.+78     	; 0x5c42 <__vector_1+0x11ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bf4:	8e 01       	movw	r16, r28
    5bf6:	01 56       	subi	r16, 0x61	; 97
    5bf8:	1f 4f       	sbci	r17, 0xFF	; 255
    5bfa:	fe 01       	movw	r30, r28
    5bfc:	ef 55       	subi	r30, 0x5F	; 95
    5bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    5c00:	60 81       	ld	r22, Z
    5c02:	71 81       	ldd	r23, Z+1	; 0x01
    5c04:	82 81       	ldd	r24, Z+2	; 0x02
    5c06:	93 81       	ldd	r25, Z+3	; 0x03
    5c08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c0c:	dc 01       	movw	r26, r24
    5c0e:	cb 01       	movw	r24, r22
    5c10:	f8 01       	movw	r30, r16
    5c12:	91 83       	std	Z+1, r25	; 0x01
    5c14:	80 83       	st	Z, r24
    5c16:	de 01       	movw	r26, r28
    5c18:	a5 56       	subi	r26, 0x65	; 101
    5c1a:	bf 4f       	sbci	r27, 0xFF	; 255
    5c1c:	fe 01       	movw	r30, r28
    5c1e:	e1 56       	subi	r30, 0x61	; 97
    5c20:	ff 4f       	sbci	r31, 0xFF	; 255
    5c22:	80 81       	ld	r24, Z
    5c24:	91 81       	ldd	r25, Z+1	; 0x01
    5c26:	8d 93       	st	X+, r24
    5c28:	9c 93       	st	X, r25
    5c2a:	fe 01       	movw	r30, r28
    5c2c:	e5 56       	subi	r30, 0x65	; 101
    5c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    5c30:	80 81       	ld	r24, Z
    5c32:	91 81       	ldd	r25, Z+1	; 0x01
    5c34:	01 97       	sbiw	r24, 0x01	; 1
    5c36:	f1 f7       	brne	.-4      	; 0x5c34 <__vector_1+0x11e0>
    5c38:	fe 01       	movw	r30, r28
    5c3a:	e5 56       	subi	r30, 0x65	; 101
    5c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c3e:	91 83       	std	Z+1, r25	; 0x01
    5c40:	80 83       	st	Z, r24
									_delay_ms(10);
									LCD_GOTOXY(1,0);
    5c42:	81 e0       	ldi	r24, 0x01	; 1
    5c44:	60 e0       	ldi	r22, 0x00	; 0
    5c46:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
									LCD_Send_string("Train arrived");
    5c4a:	84 e8       	ldi	r24, 0x84	; 132
    5c4c:	90 e0       	ldi	r25, 0x00	; 0
    5c4e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
									SSEG_voidSendNumber(sseg1,0);
    5c52:	fe 01       	movw	r30, r28
    5c54:	e1 5f       	subi	r30, 0xF1	; 241
    5c56:	fe 4f       	sbci	r31, 0xFE	; 254
    5c58:	80 81       	ld	r24, Z
    5c5a:	91 81       	ldd	r25, Z+1	; 0x01
    5c5c:	60 e0       	ldi	r22, 0x00	; 0
    5c5e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
									SSEG_voidSendNumber(sseg2,0);
    5c62:	fe 01       	movw	r30, r28
    5c64:	ef 5e       	subi	r30, 0xEF	; 239
    5c66:	fe 4f       	sbci	r31, 0xFE	; 254
    5c68:	80 81       	ld	r24, Z
    5c6a:	91 81       	ldd	r25, Z+1	; 0x01
    5c6c:	60 e0       	ldi	r22, 0x00	; 0
    5c6e:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    5c72:	fe 01       	movw	r30, r28
    5c74:	e9 56       	subi	r30, 0x69	; 105
    5c76:	ff 4f       	sbci	r31, 0xFF	; 255
    5c78:	80 e0       	ldi	r24, 0x00	; 0
    5c7a:	90 e0       	ldi	r25, 0x00	; 0
    5c7c:	aa ef       	ldi	r26, 0xFA	; 250
    5c7e:	b4 e4       	ldi	r27, 0x44	; 68
    5c80:	80 83       	st	Z, r24
    5c82:	91 83       	std	Z+1, r25	; 0x01
    5c84:	a2 83       	std	Z+2, r26	; 0x02
    5c86:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c88:	8e 01       	movw	r16, r28
    5c8a:	0d 56       	subi	r16, 0x6D	; 109
    5c8c:	1f 4f       	sbci	r17, 0xFF	; 255
    5c8e:	fe 01       	movw	r30, r28
    5c90:	e9 56       	subi	r30, 0x69	; 105
    5c92:	ff 4f       	sbci	r31, 0xFF	; 255
    5c94:	60 81       	ld	r22, Z
    5c96:	71 81       	ldd	r23, Z+1	; 0x01
    5c98:	82 81       	ldd	r24, Z+2	; 0x02
    5c9a:	93 81       	ldd	r25, Z+3	; 0x03
    5c9c:	20 e0       	ldi	r18, 0x00	; 0
    5c9e:	30 e0       	ldi	r19, 0x00	; 0
    5ca0:	4a ef       	ldi	r20, 0xFA	; 250
    5ca2:	54 e4       	ldi	r21, 0x44	; 68
    5ca4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5ca8:	dc 01       	movw	r26, r24
    5caa:	cb 01       	movw	r24, r22
    5cac:	f8 01       	movw	r30, r16
    5cae:	80 83       	st	Z, r24
    5cb0:	91 83       	std	Z+1, r25	; 0x01
    5cb2:	a2 83       	std	Z+2, r26	; 0x02
    5cb4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5cb6:	fe 01       	movw	r30, r28
    5cb8:	ed 56       	subi	r30, 0x6D	; 109
    5cba:	ff 4f       	sbci	r31, 0xFF	; 255
    5cbc:	60 81       	ld	r22, Z
    5cbe:	71 81       	ldd	r23, Z+1	; 0x01
    5cc0:	82 81       	ldd	r24, Z+2	; 0x02
    5cc2:	93 81       	ldd	r25, Z+3	; 0x03
    5cc4:	20 e0       	ldi	r18, 0x00	; 0
    5cc6:	30 e0       	ldi	r19, 0x00	; 0
    5cc8:	40 e8       	ldi	r20, 0x80	; 128
    5cca:	5f e3       	ldi	r21, 0x3F	; 63
    5ccc:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5cd0:	88 23       	and	r24, r24
    5cd2:	44 f4       	brge	.+16     	; 0x5ce4 <__vector_1+0x1290>
		__ticks = 1;
    5cd4:	fe 01       	movw	r30, r28
    5cd6:	ef 56       	subi	r30, 0x6F	; 111
    5cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    5cda:	81 e0       	ldi	r24, 0x01	; 1
    5cdc:	90 e0       	ldi	r25, 0x00	; 0
    5cde:	91 83       	std	Z+1, r25	; 0x01
    5ce0:	80 83       	st	Z, r24
    5ce2:	64 c0       	rjmp	.+200    	; 0x5dac <__vector_1+0x1358>
	else if (__tmp > 65535)
    5ce4:	fe 01       	movw	r30, r28
    5ce6:	ed 56       	subi	r30, 0x6D	; 109
    5ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    5cea:	60 81       	ld	r22, Z
    5cec:	71 81       	ldd	r23, Z+1	; 0x01
    5cee:	82 81       	ldd	r24, Z+2	; 0x02
    5cf0:	93 81       	ldd	r25, Z+3	; 0x03
    5cf2:	20 e0       	ldi	r18, 0x00	; 0
    5cf4:	3f ef       	ldi	r19, 0xFF	; 255
    5cf6:	4f e7       	ldi	r20, 0x7F	; 127
    5cf8:	57 e4       	ldi	r21, 0x47	; 71
    5cfa:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5cfe:	18 16       	cp	r1, r24
    5d00:	0c f0       	brlt	.+2      	; 0x5d04 <__vector_1+0x12b0>
    5d02:	43 c0       	rjmp	.+134    	; 0x5d8a <__vector_1+0x1336>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5d04:	fe 01       	movw	r30, r28
    5d06:	e9 56       	subi	r30, 0x69	; 105
    5d08:	ff 4f       	sbci	r31, 0xFF	; 255
    5d0a:	60 81       	ld	r22, Z
    5d0c:	71 81       	ldd	r23, Z+1	; 0x01
    5d0e:	82 81       	ldd	r24, Z+2	; 0x02
    5d10:	93 81       	ldd	r25, Z+3	; 0x03
    5d12:	20 e0       	ldi	r18, 0x00	; 0
    5d14:	30 e0       	ldi	r19, 0x00	; 0
    5d16:	40 e2       	ldi	r20, 0x20	; 32
    5d18:	51 e4       	ldi	r21, 0x41	; 65
    5d1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5d1e:	dc 01       	movw	r26, r24
    5d20:	cb 01       	movw	r24, r22
    5d22:	8e 01       	movw	r16, r28
    5d24:	0f 56       	subi	r16, 0x6F	; 111
    5d26:	1f 4f       	sbci	r17, 0xFF	; 255
    5d28:	bc 01       	movw	r22, r24
    5d2a:	cd 01       	movw	r24, r26
    5d2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5d30:	dc 01       	movw	r26, r24
    5d32:	cb 01       	movw	r24, r22
    5d34:	f8 01       	movw	r30, r16
    5d36:	91 83       	std	Z+1, r25	; 0x01
    5d38:	80 83       	st	Z, r24
    5d3a:	1f c0       	rjmp	.+62     	; 0x5d7a <__vector_1+0x1326>
    5d3c:	fe 01       	movw	r30, r28
    5d3e:	e1 57       	subi	r30, 0x71	; 113
    5d40:	ff 4f       	sbci	r31, 0xFF	; 255
    5d42:	88 ec       	ldi	r24, 0xC8	; 200
    5d44:	90 e0       	ldi	r25, 0x00	; 0
    5d46:	91 83       	std	Z+1, r25	; 0x01
    5d48:	80 83       	st	Z, r24
    5d4a:	fe 01       	movw	r30, r28
    5d4c:	e1 57       	subi	r30, 0x71	; 113
    5d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    5d50:	80 81       	ld	r24, Z
    5d52:	91 81       	ldd	r25, Z+1	; 0x01
    5d54:	01 97       	sbiw	r24, 0x01	; 1
    5d56:	f1 f7       	brne	.-4      	; 0x5d54 <__vector_1+0x1300>
    5d58:	fe 01       	movw	r30, r28
    5d5a:	e1 57       	subi	r30, 0x71	; 113
    5d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d5e:	91 83       	std	Z+1, r25	; 0x01
    5d60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d62:	de 01       	movw	r26, r28
    5d64:	af 56       	subi	r26, 0x6F	; 111
    5d66:	bf 4f       	sbci	r27, 0xFF	; 255
    5d68:	fe 01       	movw	r30, r28
    5d6a:	ef 56       	subi	r30, 0x6F	; 111
    5d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d6e:	80 81       	ld	r24, Z
    5d70:	91 81       	ldd	r25, Z+1	; 0x01
    5d72:	01 97       	sbiw	r24, 0x01	; 1
    5d74:	11 96       	adiw	r26, 0x01	; 1
    5d76:	9c 93       	st	X, r25
    5d78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d7a:	fe 01       	movw	r30, r28
    5d7c:	ef 56       	subi	r30, 0x6F	; 111
    5d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    5d80:	80 81       	ld	r24, Z
    5d82:	91 81       	ldd	r25, Z+1	; 0x01
    5d84:	00 97       	sbiw	r24, 0x00	; 0
    5d86:	d1 f6       	brne	.-76     	; 0x5d3c <__vector_1+0x12e8>
    5d88:	27 c0       	rjmp	.+78     	; 0x5dd8 <__vector_1+0x1384>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d8a:	8e 01       	movw	r16, r28
    5d8c:	0f 56       	subi	r16, 0x6F	; 111
    5d8e:	1f 4f       	sbci	r17, 0xFF	; 255
    5d90:	fe 01       	movw	r30, r28
    5d92:	ed 56       	subi	r30, 0x6D	; 109
    5d94:	ff 4f       	sbci	r31, 0xFF	; 255
    5d96:	60 81       	ld	r22, Z
    5d98:	71 81       	ldd	r23, Z+1	; 0x01
    5d9a:	82 81       	ldd	r24, Z+2	; 0x02
    5d9c:	93 81       	ldd	r25, Z+3	; 0x03
    5d9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5da2:	dc 01       	movw	r26, r24
    5da4:	cb 01       	movw	r24, r22
    5da6:	f8 01       	movw	r30, r16
    5da8:	91 83       	std	Z+1, r25	; 0x01
    5daa:	80 83       	st	Z, r24
    5dac:	de 01       	movw	r26, r28
    5dae:	a3 57       	subi	r26, 0x73	; 115
    5db0:	bf 4f       	sbci	r27, 0xFF	; 255
    5db2:	fe 01       	movw	r30, r28
    5db4:	ef 56       	subi	r30, 0x6F	; 111
    5db6:	ff 4f       	sbci	r31, 0xFF	; 255
    5db8:	80 81       	ld	r24, Z
    5dba:	91 81       	ldd	r25, Z+1	; 0x01
    5dbc:	8d 93       	st	X+, r24
    5dbe:	9c 93       	st	X, r25
    5dc0:	fe 01       	movw	r30, r28
    5dc2:	e3 57       	subi	r30, 0x73	; 115
    5dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    5dc6:	80 81       	ld	r24, Z
    5dc8:	91 81       	ldd	r25, Z+1	; 0x01
    5dca:	01 97       	sbiw	r24, 0x01	; 1
    5dcc:	f1 f7       	brne	.-4      	; 0x5dca <__vector_1+0x1376>
    5dce:	fe 01       	movw	r30, r28
    5dd0:	e3 57       	subi	r30, 0x73	; 115
    5dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    5dd4:	91 83       	std	Z+1, r25	; 0x01
    5dd6:	80 83       	st	Z, r24
							LED_voidOn(red_LED2);
							////////////////////////////////
							SSEG_voidSendNumber(sseg1,0);
							SSEG_voidSendNumber(sseg2,0);
							_delay_ms(1000);
							for(u8 i=4;i>=1;i--)
    5dd8:	de 01       	movw	r26, r28
    5dda:	a3 5f       	subi	r26, 0xF3	; 243
    5ddc:	be 4f       	sbci	r27, 0xFE	; 254
    5dde:	fe 01       	movw	r30, r28
    5de0:	e3 5f       	subi	r30, 0xF3	; 243
    5de2:	fe 4f       	sbci	r31, 0xFE	; 254
    5de4:	80 81       	ld	r24, Z
    5de6:	81 50       	subi	r24, 0x01	; 1
    5de8:	8c 93       	st	X, r24
    5dea:	fe 01       	movw	r30, r28
    5dec:	e3 5f       	subi	r30, 0xF3	; 243
    5dee:	fe 4f       	sbci	r31, 0xFE	; 254
    5df0:	80 81       	ld	r24, Z
    5df2:	88 23       	and	r24, r24
    5df4:	09 f0       	breq	.+2      	; 0x5df8 <__vector_1+0x13a4>
    5df6:	30 cb       	rjmp	.-2464   	; 0x5458 <__vector_1+0xa04>
									_delay_ms(2000);
								}

							}

                                 	DIO_voidSetPinValue(DIO_PORTC,DIO_PIN7,DIO_HIGH);//bazzer on
    5df8:	82 e0       	ldi	r24, 0x02	; 2
    5dfa:	67 e0       	ldi	r22, 0x07	; 7
    5dfc:	41 e0       	ldi	r20, 0x01	; 1
    5dfe:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
    5e02:	fe 01       	movw	r30, r28
    5e04:	e7 57       	subi	r30, 0x77	; 119
    5e06:	ff 4f       	sbci	r31, 0xFF	; 255
    5e08:	80 e0       	ldi	r24, 0x00	; 0
    5e0a:	90 e4       	ldi	r25, 0x40	; 64
    5e0c:	ac e9       	ldi	r26, 0x9C	; 156
    5e0e:	b5 e4       	ldi	r27, 0x45	; 69
    5e10:	80 83       	st	Z, r24
    5e12:	91 83       	std	Z+1, r25	; 0x01
    5e14:	a2 83       	std	Z+2, r26	; 0x02
    5e16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e18:	8e 01       	movw	r16, r28
    5e1a:	0b 57       	subi	r16, 0x7B	; 123
    5e1c:	1f 4f       	sbci	r17, 0xFF	; 255
    5e1e:	fe 01       	movw	r30, r28
    5e20:	e7 57       	subi	r30, 0x77	; 119
    5e22:	ff 4f       	sbci	r31, 0xFF	; 255
    5e24:	60 81       	ld	r22, Z
    5e26:	71 81       	ldd	r23, Z+1	; 0x01
    5e28:	82 81       	ldd	r24, Z+2	; 0x02
    5e2a:	93 81       	ldd	r25, Z+3	; 0x03
    5e2c:	20 e0       	ldi	r18, 0x00	; 0
    5e2e:	30 e0       	ldi	r19, 0x00	; 0
    5e30:	4a ef       	ldi	r20, 0xFA	; 250
    5e32:	54 e4       	ldi	r21, 0x44	; 68
    5e34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5e38:	dc 01       	movw	r26, r24
    5e3a:	cb 01       	movw	r24, r22
    5e3c:	f8 01       	movw	r30, r16
    5e3e:	80 83       	st	Z, r24
    5e40:	91 83       	std	Z+1, r25	; 0x01
    5e42:	a2 83       	std	Z+2, r26	; 0x02
    5e44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5e46:	fe 01       	movw	r30, r28
    5e48:	eb 57       	subi	r30, 0x7B	; 123
    5e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    5e4c:	60 81       	ld	r22, Z
    5e4e:	71 81       	ldd	r23, Z+1	; 0x01
    5e50:	82 81       	ldd	r24, Z+2	; 0x02
    5e52:	93 81       	ldd	r25, Z+3	; 0x03
    5e54:	20 e0       	ldi	r18, 0x00	; 0
    5e56:	30 e0       	ldi	r19, 0x00	; 0
    5e58:	40 e8       	ldi	r20, 0x80	; 128
    5e5a:	5f e3       	ldi	r21, 0x3F	; 63
    5e5c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5e60:	88 23       	and	r24, r24
    5e62:	44 f4       	brge	.+16     	; 0x5e74 <__vector_1+0x1420>
		__ticks = 1;
    5e64:	fe 01       	movw	r30, r28
    5e66:	ed 57       	subi	r30, 0x7D	; 125
    5e68:	ff 4f       	sbci	r31, 0xFF	; 255
    5e6a:	81 e0       	ldi	r24, 0x01	; 1
    5e6c:	90 e0       	ldi	r25, 0x00	; 0
    5e6e:	91 83       	std	Z+1, r25	; 0x01
    5e70:	80 83       	st	Z, r24
    5e72:	64 c0       	rjmp	.+200    	; 0x5f3c <__vector_1+0x14e8>
	else if (__tmp > 65535)
    5e74:	fe 01       	movw	r30, r28
    5e76:	eb 57       	subi	r30, 0x7B	; 123
    5e78:	ff 4f       	sbci	r31, 0xFF	; 255
    5e7a:	60 81       	ld	r22, Z
    5e7c:	71 81       	ldd	r23, Z+1	; 0x01
    5e7e:	82 81       	ldd	r24, Z+2	; 0x02
    5e80:	93 81       	ldd	r25, Z+3	; 0x03
    5e82:	20 e0       	ldi	r18, 0x00	; 0
    5e84:	3f ef       	ldi	r19, 0xFF	; 255
    5e86:	4f e7       	ldi	r20, 0x7F	; 127
    5e88:	57 e4       	ldi	r21, 0x47	; 71
    5e8a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5e8e:	18 16       	cp	r1, r24
    5e90:	0c f0       	brlt	.+2      	; 0x5e94 <__vector_1+0x1440>
    5e92:	43 c0       	rjmp	.+134    	; 0x5f1a <__vector_1+0x14c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e94:	fe 01       	movw	r30, r28
    5e96:	e7 57       	subi	r30, 0x77	; 119
    5e98:	ff 4f       	sbci	r31, 0xFF	; 255
    5e9a:	60 81       	ld	r22, Z
    5e9c:	71 81       	ldd	r23, Z+1	; 0x01
    5e9e:	82 81       	ldd	r24, Z+2	; 0x02
    5ea0:	93 81       	ldd	r25, Z+3	; 0x03
    5ea2:	20 e0       	ldi	r18, 0x00	; 0
    5ea4:	30 e0       	ldi	r19, 0x00	; 0
    5ea6:	40 e2       	ldi	r20, 0x20	; 32
    5ea8:	51 e4       	ldi	r21, 0x41	; 65
    5eaa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5eae:	dc 01       	movw	r26, r24
    5eb0:	cb 01       	movw	r24, r22
    5eb2:	8e 01       	movw	r16, r28
    5eb4:	0d 57       	subi	r16, 0x7D	; 125
    5eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    5eb8:	bc 01       	movw	r22, r24
    5eba:	cd 01       	movw	r24, r26
    5ebc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5ec0:	dc 01       	movw	r26, r24
    5ec2:	cb 01       	movw	r24, r22
    5ec4:	f8 01       	movw	r30, r16
    5ec6:	91 83       	std	Z+1, r25	; 0x01
    5ec8:	80 83       	st	Z, r24
    5eca:	1f c0       	rjmp	.+62     	; 0x5f0a <__vector_1+0x14b6>
    5ecc:	fe 01       	movw	r30, r28
    5ece:	ef 57       	subi	r30, 0x7F	; 127
    5ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ed2:	88 ec       	ldi	r24, 0xC8	; 200
    5ed4:	90 e0       	ldi	r25, 0x00	; 0
    5ed6:	91 83       	std	Z+1, r25	; 0x01
    5ed8:	80 83       	st	Z, r24
    5eda:	fe 01       	movw	r30, r28
    5edc:	ef 57       	subi	r30, 0x7F	; 127
    5ede:	ff 4f       	sbci	r31, 0xFF	; 255
    5ee0:	80 81       	ld	r24, Z
    5ee2:	91 81       	ldd	r25, Z+1	; 0x01
    5ee4:	01 97       	sbiw	r24, 0x01	; 1
    5ee6:	f1 f7       	brne	.-4      	; 0x5ee4 <__vector_1+0x1490>
    5ee8:	fe 01       	movw	r30, r28
    5eea:	ef 57       	subi	r30, 0x7F	; 127
    5eec:	ff 4f       	sbci	r31, 0xFF	; 255
    5eee:	91 83       	std	Z+1, r25	; 0x01
    5ef0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ef2:	de 01       	movw	r26, r28
    5ef4:	ad 57       	subi	r26, 0x7D	; 125
    5ef6:	bf 4f       	sbci	r27, 0xFF	; 255
    5ef8:	fe 01       	movw	r30, r28
    5efa:	ed 57       	subi	r30, 0x7D	; 125
    5efc:	ff 4f       	sbci	r31, 0xFF	; 255
    5efe:	80 81       	ld	r24, Z
    5f00:	91 81       	ldd	r25, Z+1	; 0x01
    5f02:	01 97       	sbiw	r24, 0x01	; 1
    5f04:	11 96       	adiw	r26, 0x01	; 1
    5f06:	9c 93       	st	X, r25
    5f08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f0a:	fe 01       	movw	r30, r28
    5f0c:	ed 57       	subi	r30, 0x7D	; 125
    5f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    5f10:	80 81       	ld	r24, Z
    5f12:	91 81       	ldd	r25, Z+1	; 0x01
    5f14:	00 97       	sbiw	r24, 0x00	; 0
    5f16:	d1 f6       	brne	.-76     	; 0x5ecc <__vector_1+0x1478>
    5f18:	27 c0       	rjmp	.+78     	; 0x5f68 <__vector_1+0x1514>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f1a:	8e 01       	movw	r16, r28
    5f1c:	0d 57       	subi	r16, 0x7D	; 125
    5f1e:	1f 4f       	sbci	r17, 0xFF	; 255
    5f20:	fe 01       	movw	r30, r28
    5f22:	eb 57       	subi	r30, 0x7B	; 123
    5f24:	ff 4f       	sbci	r31, 0xFF	; 255
    5f26:	60 81       	ld	r22, Z
    5f28:	71 81       	ldd	r23, Z+1	; 0x01
    5f2a:	82 81       	ldd	r24, Z+2	; 0x02
    5f2c:	93 81       	ldd	r25, Z+3	; 0x03
    5f2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5f32:	dc 01       	movw	r26, r24
    5f34:	cb 01       	movw	r24, r22
    5f36:	f8 01       	movw	r30, r16
    5f38:	91 83       	std	Z+1, r25	; 0x01
    5f3a:	80 83       	st	Z, r24
    5f3c:	de 01       	movw	r26, r28
    5f3e:	a1 58       	subi	r26, 0x81	; 129
    5f40:	bf 4f       	sbci	r27, 0xFF	; 255
    5f42:	fe 01       	movw	r30, r28
    5f44:	ed 57       	subi	r30, 0x7D	; 125
    5f46:	ff 4f       	sbci	r31, 0xFF	; 255
    5f48:	80 81       	ld	r24, Z
    5f4a:	91 81       	ldd	r25, Z+1	; 0x01
    5f4c:	8d 93       	st	X+, r24
    5f4e:	9c 93       	st	X, r25
    5f50:	fe 01       	movw	r30, r28
    5f52:	e1 58       	subi	r30, 0x81	; 129
    5f54:	ff 4f       	sbci	r31, 0xFF	; 255
    5f56:	80 81       	ld	r24, Z
    5f58:	91 81       	ldd	r25, Z+1	; 0x01
    5f5a:	01 97       	sbiw	r24, 0x01	; 1
    5f5c:	f1 f7       	brne	.-4      	; 0x5f5a <__vector_1+0x1506>
    5f5e:	fe 01       	movw	r30, r28
    5f60:	e1 58       	subi	r30, 0x81	; 129
    5f62:	ff 4f       	sbci	r31, 0xFF	; 255
    5f64:	91 83       	std	Z+1, r25	; 0x01
    5f66:	80 83       	st	Z, r24
									_delay_ms(5000);
									DIO_voidSetPinValue(DIO_PORTC,DIO_PIN7,DIO_LOW);//bazzer off
    5f68:	82 e0       	ldi	r24, 0x02	; 2
    5f6a:	67 e0       	ldi	r22, 0x07	; 7
    5f6c:	40 e0       	ldi	r20, 0x00	; 0
    5f6e:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
									LED_voidOff(red_LED2);
    5f72:	fe 01       	movw	r30, r28
    5f74:	e4 5e       	subi	r30, 0xE4	; 228
    5f76:	fe 4f       	sbci	r31, 0xFE	; 254
    5f78:	60 81       	ld	r22, Z
    5f7a:	71 81       	ldd	r23, Z+1	; 0x01
    5f7c:	82 81       	ldd	r24, Z+2	; 0x02
    5f7e:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
						}
						if(flage==3||flage==4)
    5f82:	80 91 d2 00 	lds	r24, 0x00D2
    5f86:	83 30       	cpi	r24, 0x03	; 3
    5f88:	29 f0       	breq	.+10     	; 0x5f94 <__vector_1+0x1540>
    5f8a:	80 91 d2 00 	lds	r24, 0x00D2
    5f8e:	84 30       	cpi	r24, 0x04	; 4
    5f90:	09 f0       	breq	.+2      	; 0x5f94 <__vector_1+0x1540>
    5f92:	41 c6       	rjmp	.+3202   	; 0x6c16 <__vector_1+0x21c2>
						{
							SSEG_voidSendNumber(sseg1,0);
    5f94:	fe 01       	movw	r30, r28
    5f96:	e1 5f       	subi	r30, 0xF1	; 241
    5f98:	fe 4f       	sbci	r31, 0xFE	; 254
    5f9a:	80 81       	ld	r24, Z
    5f9c:	91 81       	ldd	r25, Z+1	; 0x01
    5f9e:	60 e0       	ldi	r22, 0x00	; 0
    5fa0:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
														SSEG_voidSendNumber(sseg2,0);
    5fa4:	fe 01       	movw	r30, r28
    5fa6:	ef 5e       	subi	r30, 0xEF	; 239
    5fa8:	fe 4f       	sbci	r31, 0xFE	; 254
    5faa:	80 81       	ld	r24, Z
    5fac:	91 81       	ldd	r25, Z+1	; 0x01
    5fae:	60 e0       	ldi	r22, 0x00	; 0
    5fb0:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
														LED_voidOn(red_LED2);
    5fb4:	fe 01       	movw	r30, r28
    5fb6:	e4 5e       	subi	r30, 0xE4	; 228
    5fb8:	fe 4f       	sbci	r31, 0xFE	; 254
    5fba:	60 81       	ld	r22, Z
    5fbc:	71 81       	ldd	r23, Z+1	; 0x01
    5fbe:	82 81       	ldd	r24, Z+2	; 0x02
    5fc0:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
														LED_voidOff(green_LED1);
    5fc4:	fe 01       	movw	r30, r28
    5fc6:	e7 5e       	subi	r30, 0xE7	; 231
    5fc8:	fe 4f       	sbci	r31, 0xFE	; 254
    5fca:	60 81       	ld	r22, Z
    5fcc:	71 81       	ldd	r23, Z+1	; 0x01
    5fce:	82 81       	ldd	r24, Z+2	; 0x02
    5fd0:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
														LED_voidOff(yellow_LED1);
    5fd4:	fe 01       	movw	r30, r28
    5fd6:	ea 5e       	subi	r30, 0xEA	; 234
    5fd8:	fe 4f       	sbci	r31, 0xFE	; 254
    5fda:	60 81       	ld	r22, Z
    5fdc:	71 81       	ldd	r23, Z+1	; 0x01
    5fde:	82 81       	ldd	r24, Z+2	; 0x02
    5fe0:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
														for(u8 counter=1;counter<4;counter++)
    5fe4:	fe 01       	movw	r30, r28
    5fe6:	e4 5f       	subi	r30, 0xF4	; 244
    5fe8:	fe 4f       	sbci	r31, 0xFE	; 254
    5fea:	81 e0       	ldi	r24, 0x01	; 1
    5fec:	80 83       	st	Z, r24
    5fee:	d7 c0       	rjmp	.+430    	; 0x619e <__vector_1+0x174a>
													    {
													    		SSEG_voidSendNumber(sseg1,counter);
    5ff0:	fe 01       	movw	r30, r28
    5ff2:	e1 5f       	subi	r30, 0xF1	; 241
    5ff4:	fe 4f       	sbci	r31, 0xFE	; 254
    5ff6:	80 81       	ld	r24, Z
    5ff8:	91 81       	ldd	r25, Z+1	; 0x01
    5ffa:	fe 01       	movw	r30, r28
    5ffc:	e4 5f       	subi	r30, 0xF4	; 244
    5ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    6000:	60 81       	ld	r22, Z
    6002:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
													    		LED_voidOn( yellow_LED1);
    6006:	fe 01       	movw	r30, r28
    6008:	ea 5e       	subi	r30, 0xEA	; 234
    600a:	fe 4f       	sbci	r31, 0xFE	; 254
    600c:	60 81       	ld	r22, Z
    600e:	71 81       	ldd	r23, Z+1	; 0x01
    6010:	82 81       	ldd	r24, Z+2	; 0x02
    6012:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
    6016:	fe 01       	movw	r30, r28
    6018:	e5 58       	subi	r30, 0x85	; 133
    601a:	ff 4f       	sbci	r31, 0xFF	; 255
    601c:	80 e0       	ldi	r24, 0x00	; 0
    601e:	90 e0       	ldi	r25, 0x00	; 0
    6020:	aa e7       	ldi	r26, 0x7A	; 122
    6022:	b4 e4       	ldi	r27, 0x44	; 68
    6024:	80 83       	st	Z, r24
    6026:	91 83       	std	Z+1, r25	; 0x01
    6028:	a2 83       	std	Z+2, r26	; 0x02
    602a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    602c:	8e 01       	movw	r16, r28
    602e:	09 58       	subi	r16, 0x89	; 137
    6030:	1f 4f       	sbci	r17, 0xFF	; 255
    6032:	fe 01       	movw	r30, r28
    6034:	e5 58       	subi	r30, 0x85	; 133
    6036:	ff 4f       	sbci	r31, 0xFF	; 255
    6038:	60 81       	ld	r22, Z
    603a:	71 81       	ldd	r23, Z+1	; 0x01
    603c:	82 81       	ldd	r24, Z+2	; 0x02
    603e:	93 81       	ldd	r25, Z+3	; 0x03
    6040:	20 e0       	ldi	r18, 0x00	; 0
    6042:	30 e0       	ldi	r19, 0x00	; 0
    6044:	4a ef       	ldi	r20, 0xFA	; 250
    6046:	54 e4       	ldi	r21, 0x44	; 68
    6048:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    604c:	dc 01       	movw	r26, r24
    604e:	cb 01       	movw	r24, r22
    6050:	f8 01       	movw	r30, r16
    6052:	80 83       	st	Z, r24
    6054:	91 83       	std	Z+1, r25	; 0x01
    6056:	a2 83       	std	Z+2, r26	; 0x02
    6058:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    605a:	fe 01       	movw	r30, r28
    605c:	e9 58       	subi	r30, 0x89	; 137
    605e:	ff 4f       	sbci	r31, 0xFF	; 255
    6060:	60 81       	ld	r22, Z
    6062:	71 81       	ldd	r23, Z+1	; 0x01
    6064:	82 81       	ldd	r24, Z+2	; 0x02
    6066:	93 81       	ldd	r25, Z+3	; 0x03
    6068:	20 e0       	ldi	r18, 0x00	; 0
    606a:	30 e0       	ldi	r19, 0x00	; 0
    606c:	40 e8       	ldi	r20, 0x80	; 128
    606e:	5f e3       	ldi	r21, 0x3F	; 63
    6070:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6074:	88 23       	and	r24, r24
    6076:	44 f4       	brge	.+16     	; 0x6088 <__vector_1+0x1634>
		__ticks = 1;
    6078:	fe 01       	movw	r30, r28
    607a:	eb 58       	subi	r30, 0x8B	; 139
    607c:	ff 4f       	sbci	r31, 0xFF	; 255
    607e:	81 e0       	ldi	r24, 0x01	; 1
    6080:	90 e0       	ldi	r25, 0x00	; 0
    6082:	91 83       	std	Z+1, r25	; 0x01
    6084:	80 83       	st	Z, r24
    6086:	64 c0       	rjmp	.+200    	; 0x6150 <__vector_1+0x16fc>
	else if (__tmp > 65535)
    6088:	fe 01       	movw	r30, r28
    608a:	e9 58       	subi	r30, 0x89	; 137
    608c:	ff 4f       	sbci	r31, 0xFF	; 255
    608e:	60 81       	ld	r22, Z
    6090:	71 81       	ldd	r23, Z+1	; 0x01
    6092:	82 81       	ldd	r24, Z+2	; 0x02
    6094:	93 81       	ldd	r25, Z+3	; 0x03
    6096:	20 e0       	ldi	r18, 0x00	; 0
    6098:	3f ef       	ldi	r19, 0xFF	; 255
    609a:	4f e7       	ldi	r20, 0x7F	; 127
    609c:	57 e4       	ldi	r21, 0x47	; 71
    609e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    60a2:	18 16       	cp	r1, r24
    60a4:	0c f0       	brlt	.+2      	; 0x60a8 <__vector_1+0x1654>
    60a6:	43 c0       	rjmp	.+134    	; 0x612e <__vector_1+0x16da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    60a8:	fe 01       	movw	r30, r28
    60aa:	e5 58       	subi	r30, 0x85	; 133
    60ac:	ff 4f       	sbci	r31, 0xFF	; 255
    60ae:	60 81       	ld	r22, Z
    60b0:	71 81       	ldd	r23, Z+1	; 0x01
    60b2:	82 81       	ldd	r24, Z+2	; 0x02
    60b4:	93 81       	ldd	r25, Z+3	; 0x03
    60b6:	20 e0       	ldi	r18, 0x00	; 0
    60b8:	30 e0       	ldi	r19, 0x00	; 0
    60ba:	40 e2       	ldi	r20, 0x20	; 32
    60bc:	51 e4       	ldi	r21, 0x41	; 65
    60be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    60c2:	dc 01       	movw	r26, r24
    60c4:	cb 01       	movw	r24, r22
    60c6:	8e 01       	movw	r16, r28
    60c8:	0b 58       	subi	r16, 0x8B	; 139
    60ca:	1f 4f       	sbci	r17, 0xFF	; 255
    60cc:	bc 01       	movw	r22, r24
    60ce:	cd 01       	movw	r24, r26
    60d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    60d4:	dc 01       	movw	r26, r24
    60d6:	cb 01       	movw	r24, r22
    60d8:	f8 01       	movw	r30, r16
    60da:	91 83       	std	Z+1, r25	; 0x01
    60dc:	80 83       	st	Z, r24
    60de:	1f c0       	rjmp	.+62     	; 0x611e <__vector_1+0x16ca>
    60e0:	fe 01       	movw	r30, r28
    60e2:	ed 58       	subi	r30, 0x8D	; 141
    60e4:	ff 4f       	sbci	r31, 0xFF	; 255
    60e6:	88 ec       	ldi	r24, 0xC8	; 200
    60e8:	90 e0       	ldi	r25, 0x00	; 0
    60ea:	91 83       	std	Z+1, r25	; 0x01
    60ec:	80 83       	st	Z, r24
    60ee:	fe 01       	movw	r30, r28
    60f0:	ed 58       	subi	r30, 0x8D	; 141
    60f2:	ff 4f       	sbci	r31, 0xFF	; 255
    60f4:	80 81       	ld	r24, Z
    60f6:	91 81       	ldd	r25, Z+1	; 0x01
    60f8:	01 97       	sbiw	r24, 0x01	; 1
    60fa:	f1 f7       	brne	.-4      	; 0x60f8 <__vector_1+0x16a4>
    60fc:	fe 01       	movw	r30, r28
    60fe:	ed 58       	subi	r30, 0x8D	; 141
    6100:	ff 4f       	sbci	r31, 0xFF	; 255
    6102:	91 83       	std	Z+1, r25	; 0x01
    6104:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6106:	de 01       	movw	r26, r28
    6108:	ab 58       	subi	r26, 0x8B	; 139
    610a:	bf 4f       	sbci	r27, 0xFF	; 255
    610c:	fe 01       	movw	r30, r28
    610e:	eb 58       	subi	r30, 0x8B	; 139
    6110:	ff 4f       	sbci	r31, 0xFF	; 255
    6112:	80 81       	ld	r24, Z
    6114:	91 81       	ldd	r25, Z+1	; 0x01
    6116:	01 97       	sbiw	r24, 0x01	; 1
    6118:	11 96       	adiw	r26, 0x01	; 1
    611a:	9c 93       	st	X, r25
    611c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    611e:	fe 01       	movw	r30, r28
    6120:	eb 58       	subi	r30, 0x8B	; 139
    6122:	ff 4f       	sbci	r31, 0xFF	; 255
    6124:	80 81       	ld	r24, Z
    6126:	91 81       	ldd	r25, Z+1	; 0x01
    6128:	00 97       	sbiw	r24, 0x00	; 0
    612a:	d1 f6       	brne	.-76     	; 0x60e0 <__vector_1+0x168c>
    612c:	27 c0       	rjmp	.+78     	; 0x617c <__vector_1+0x1728>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    612e:	8e 01       	movw	r16, r28
    6130:	0b 58       	subi	r16, 0x8B	; 139
    6132:	1f 4f       	sbci	r17, 0xFF	; 255
    6134:	fe 01       	movw	r30, r28
    6136:	e9 58       	subi	r30, 0x89	; 137
    6138:	ff 4f       	sbci	r31, 0xFF	; 255
    613a:	60 81       	ld	r22, Z
    613c:	71 81       	ldd	r23, Z+1	; 0x01
    613e:	82 81       	ldd	r24, Z+2	; 0x02
    6140:	93 81       	ldd	r25, Z+3	; 0x03
    6142:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6146:	dc 01       	movw	r26, r24
    6148:	cb 01       	movw	r24, r22
    614a:	f8 01       	movw	r30, r16
    614c:	91 83       	std	Z+1, r25	; 0x01
    614e:	80 83       	st	Z, r24
    6150:	de 01       	movw	r26, r28
    6152:	af 58       	subi	r26, 0x8F	; 143
    6154:	bf 4f       	sbci	r27, 0xFF	; 255
    6156:	fe 01       	movw	r30, r28
    6158:	eb 58       	subi	r30, 0x8B	; 139
    615a:	ff 4f       	sbci	r31, 0xFF	; 255
    615c:	80 81       	ld	r24, Z
    615e:	91 81       	ldd	r25, Z+1	; 0x01
    6160:	8d 93       	st	X+, r24
    6162:	9c 93       	st	X, r25
    6164:	fe 01       	movw	r30, r28
    6166:	ef 58       	subi	r30, 0x8F	; 143
    6168:	ff 4f       	sbci	r31, 0xFF	; 255
    616a:	80 81       	ld	r24, Z
    616c:	91 81       	ldd	r25, Z+1	; 0x01
    616e:	01 97       	sbiw	r24, 0x01	; 1
    6170:	f1 f7       	brne	.-4      	; 0x616e <__vector_1+0x171a>
    6172:	fe 01       	movw	r30, r28
    6174:	ef 58       	subi	r30, 0x8F	; 143
    6176:	ff 4f       	sbci	r31, 0xFF	; 255
    6178:	91 83       	std	Z+1, r25	; 0x01
    617a:	80 83       	st	Z, r24
													    		_delay_ms(1000);
													    		LED_voidOff(yellow_LED1);
    617c:	fe 01       	movw	r30, r28
    617e:	ea 5e       	subi	r30, 0xEA	; 234
    6180:	fe 4f       	sbci	r31, 0xFE	; 254
    6182:	60 81       	ld	r22, Z
    6184:	71 81       	ldd	r23, Z+1	; 0x01
    6186:	82 81       	ldd	r24, Z+2	; 0x02
    6188:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
							SSEG_voidSendNumber(sseg1,0);
														SSEG_voidSendNumber(sseg2,0);
														LED_voidOn(red_LED2);
														LED_voidOff(green_LED1);
														LED_voidOff(yellow_LED1);
														for(u8 counter=1;counter<4;counter++)
    618c:	de 01       	movw	r26, r28
    618e:	a4 5f       	subi	r26, 0xF4	; 244
    6190:	be 4f       	sbci	r27, 0xFE	; 254
    6192:	fe 01       	movw	r30, r28
    6194:	e4 5f       	subi	r30, 0xF4	; 244
    6196:	fe 4f       	sbci	r31, 0xFE	; 254
    6198:	80 81       	ld	r24, Z
    619a:	8f 5f       	subi	r24, 0xFF	; 255
    619c:	8c 93       	st	X, r24
    619e:	fe 01       	movw	r30, r28
    61a0:	e4 5f       	subi	r30, 0xF4	; 244
    61a2:	fe 4f       	sbci	r31, 0xFE	; 254
    61a4:	80 81       	ld	r24, Z
    61a6:	84 30       	cpi	r24, 0x04	; 4
    61a8:	08 f4       	brcc	.+2      	; 0x61ac <__vector_1+0x1758>
    61aa:	22 cf       	rjmp	.-444    	; 0x5ff0 <__vector_1+0x159c>
													    		SSEG_voidSendNumber(sseg1,counter);
													    		LED_voidOn( yellow_LED1);
													    		_delay_ms(1000);
													    		LED_voidOff(yellow_LED1);
													    }
														LED_voidOn(red_LED1);
    61ac:	fe 01       	movw	r30, r28
    61ae:	ed 5e       	subi	r30, 0xED	; 237
    61b0:	fe 4f       	sbci	r31, 0xFE	; 254
    61b2:	60 81       	ld	r22, Z
    61b4:	71 81       	ldd	r23, Z+1	; 0x01
    61b6:	82 81       	ldd	r24, Z+2	; 0x02
    61b8:	0e 94 0d 1b 	call	0x361a	; 0x361a <LED_voidOn>
														////////////////////////////////
														SSEG_voidSendNumber(sseg1,0);
    61bc:	fe 01       	movw	r30, r28
    61be:	e1 5f       	subi	r30, 0xF1	; 241
    61c0:	fe 4f       	sbci	r31, 0xFE	; 254
    61c2:	80 81       	ld	r24, Z
    61c4:	91 81       	ldd	r25, Z+1	; 0x01
    61c6:	60 e0       	ldi	r22, 0x00	; 0
    61c8:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
														SSEG_voidSendNumber(sseg2,0);
    61cc:	fe 01       	movw	r30, r28
    61ce:	ef 5e       	subi	r30, 0xEF	; 239
    61d0:	fe 4f       	sbci	r31, 0xFE	; 254
    61d2:	80 81       	ld	r24, Z
    61d4:	91 81       	ldd	r25, Z+1	; 0x01
    61d6:	60 e0       	ldi	r22, 0x00	; 0
    61d8:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    61dc:	fe 01       	movw	r30, r28
    61de:	e3 59       	subi	r30, 0x93	; 147
    61e0:	ff 4f       	sbci	r31, 0xFF	; 255
    61e2:	80 e0       	ldi	r24, 0x00	; 0
    61e4:	90 e8       	ldi	r25, 0x80	; 128
    61e6:	ab e3       	ldi	r26, 0x3B	; 59
    61e8:	b5 e4       	ldi	r27, 0x45	; 69
    61ea:	80 83       	st	Z, r24
    61ec:	91 83       	std	Z+1, r25	; 0x01
    61ee:	a2 83       	std	Z+2, r26	; 0x02
    61f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    61f2:	8e 01       	movw	r16, r28
    61f4:	07 59       	subi	r16, 0x97	; 151
    61f6:	1f 4f       	sbci	r17, 0xFF	; 255
    61f8:	fe 01       	movw	r30, r28
    61fa:	e3 59       	subi	r30, 0x93	; 147
    61fc:	ff 4f       	sbci	r31, 0xFF	; 255
    61fe:	60 81       	ld	r22, Z
    6200:	71 81       	ldd	r23, Z+1	; 0x01
    6202:	82 81       	ldd	r24, Z+2	; 0x02
    6204:	93 81       	ldd	r25, Z+3	; 0x03
    6206:	20 e0       	ldi	r18, 0x00	; 0
    6208:	30 e0       	ldi	r19, 0x00	; 0
    620a:	4a ef       	ldi	r20, 0xFA	; 250
    620c:	54 e4       	ldi	r21, 0x44	; 68
    620e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6212:	dc 01       	movw	r26, r24
    6214:	cb 01       	movw	r24, r22
    6216:	f8 01       	movw	r30, r16
    6218:	80 83       	st	Z, r24
    621a:	91 83       	std	Z+1, r25	; 0x01
    621c:	a2 83       	std	Z+2, r26	; 0x02
    621e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6220:	fe 01       	movw	r30, r28
    6222:	e7 59       	subi	r30, 0x97	; 151
    6224:	ff 4f       	sbci	r31, 0xFF	; 255
    6226:	60 81       	ld	r22, Z
    6228:	71 81       	ldd	r23, Z+1	; 0x01
    622a:	82 81       	ldd	r24, Z+2	; 0x02
    622c:	93 81       	ldd	r25, Z+3	; 0x03
    622e:	20 e0       	ldi	r18, 0x00	; 0
    6230:	30 e0       	ldi	r19, 0x00	; 0
    6232:	40 e8       	ldi	r20, 0x80	; 128
    6234:	5f e3       	ldi	r21, 0x3F	; 63
    6236:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    623a:	88 23       	and	r24, r24
    623c:	44 f4       	brge	.+16     	; 0x624e <__vector_1+0x17fa>
		__ticks = 1;
    623e:	fe 01       	movw	r30, r28
    6240:	e9 59       	subi	r30, 0x99	; 153
    6242:	ff 4f       	sbci	r31, 0xFF	; 255
    6244:	81 e0       	ldi	r24, 0x01	; 1
    6246:	90 e0       	ldi	r25, 0x00	; 0
    6248:	91 83       	std	Z+1, r25	; 0x01
    624a:	80 83       	st	Z, r24
    624c:	64 c0       	rjmp	.+200    	; 0x6316 <__vector_1+0x18c2>
	else if (__tmp > 65535)
    624e:	fe 01       	movw	r30, r28
    6250:	e7 59       	subi	r30, 0x97	; 151
    6252:	ff 4f       	sbci	r31, 0xFF	; 255
    6254:	60 81       	ld	r22, Z
    6256:	71 81       	ldd	r23, Z+1	; 0x01
    6258:	82 81       	ldd	r24, Z+2	; 0x02
    625a:	93 81       	ldd	r25, Z+3	; 0x03
    625c:	20 e0       	ldi	r18, 0x00	; 0
    625e:	3f ef       	ldi	r19, 0xFF	; 255
    6260:	4f e7       	ldi	r20, 0x7F	; 127
    6262:	57 e4       	ldi	r21, 0x47	; 71
    6264:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6268:	18 16       	cp	r1, r24
    626a:	0c f0       	brlt	.+2      	; 0x626e <__vector_1+0x181a>
    626c:	43 c0       	rjmp	.+134    	; 0x62f4 <__vector_1+0x18a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    626e:	fe 01       	movw	r30, r28
    6270:	e3 59       	subi	r30, 0x93	; 147
    6272:	ff 4f       	sbci	r31, 0xFF	; 255
    6274:	60 81       	ld	r22, Z
    6276:	71 81       	ldd	r23, Z+1	; 0x01
    6278:	82 81       	ldd	r24, Z+2	; 0x02
    627a:	93 81       	ldd	r25, Z+3	; 0x03
    627c:	20 e0       	ldi	r18, 0x00	; 0
    627e:	30 e0       	ldi	r19, 0x00	; 0
    6280:	40 e2       	ldi	r20, 0x20	; 32
    6282:	51 e4       	ldi	r21, 0x41	; 65
    6284:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6288:	dc 01       	movw	r26, r24
    628a:	cb 01       	movw	r24, r22
    628c:	8e 01       	movw	r16, r28
    628e:	09 59       	subi	r16, 0x99	; 153
    6290:	1f 4f       	sbci	r17, 0xFF	; 255
    6292:	bc 01       	movw	r22, r24
    6294:	cd 01       	movw	r24, r26
    6296:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    629a:	dc 01       	movw	r26, r24
    629c:	cb 01       	movw	r24, r22
    629e:	f8 01       	movw	r30, r16
    62a0:	91 83       	std	Z+1, r25	; 0x01
    62a2:	80 83       	st	Z, r24
    62a4:	1f c0       	rjmp	.+62     	; 0x62e4 <__vector_1+0x1890>
    62a6:	fe 01       	movw	r30, r28
    62a8:	eb 59       	subi	r30, 0x9B	; 155
    62aa:	ff 4f       	sbci	r31, 0xFF	; 255
    62ac:	88 ec       	ldi	r24, 0xC8	; 200
    62ae:	90 e0       	ldi	r25, 0x00	; 0
    62b0:	91 83       	std	Z+1, r25	; 0x01
    62b2:	80 83       	st	Z, r24
    62b4:	fe 01       	movw	r30, r28
    62b6:	eb 59       	subi	r30, 0x9B	; 155
    62b8:	ff 4f       	sbci	r31, 0xFF	; 255
    62ba:	80 81       	ld	r24, Z
    62bc:	91 81       	ldd	r25, Z+1	; 0x01
    62be:	01 97       	sbiw	r24, 0x01	; 1
    62c0:	f1 f7       	brne	.-4      	; 0x62be <__vector_1+0x186a>
    62c2:	fe 01       	movw	r30, r28
    62c4:	eb 59       	subi	r30, 0x9B	; 155
    62c6:	ff 4f       	sbci	r31, 0xFF	; 255
    62c8:	91 83       	std	Z+1, r25	; 0x01
    62ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    62cc:	de 01       	movw	r26, r28
    62ce:	a9 59       	subi	r26, 0x99	; 153
    62d0:	bf 4f       	sbci	r27, 0xFF	; 255
    62d2:	fe 01       	movw	r30, r28
    62d4:	e9 59       	subi	r30, 0x99	; 153
    62d6:	ff 4f       	sbci	r31, 0xFF	; 255
    62d8:	80 81       	ld	r24, Z
    62da:	91 81       	ldd	r25, Z+1	; 0x01
    62dc:	01 97       	sbiw	r24, 0x01	; 1
    62de:	11 96       	adiw	r26, 0x01	; 1
    62e0:	9c 93       	st	X, r25
    62e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    62e4:	fe 01       	movw	r30, r28
    62e6:	e9 59       	subi	r30, 0x99	; 153
    62e8:	ff 4f       	sbci	r31, 0xFF	; 255
    62ea:	80 81       	ld	r24, Z
    62ec:	91 81       	ldd	r25, Z+1	; 0x01
    62ee:	00 97       	sbiw	r24, 0x00	; 0
    62f0:	d1 f6       	brne	.-76     	; 0x62a6 <__vector_1+0x1852>
    62f2:	28 c0       	rjmp	.+80     	; 0x6344 <__vector_1+0x18f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    62f4:	8e 01       	movw	r16, r28
    62f6:	09 59       	subi	r16, 0x99	; 153
    62f8:	1f 4f       	sbci	r17, 0xFF	; 255
    62fa:	fe 01       	movw	r30, r28
    62fc:	e7 59       	subi	r30, 0x97	; 151
    62fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6300:	60 81       	ld	r22, Z
    6302:	71 81       	ldd	r23, Z+1	; 0x01
    6304:	82 81       	ldd	r24, Z+2	; 0x02
    6306:	93 81       	ldd	r25, Z+3	; 0x03
    6308:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    630c:	dc 01       	movw	r26, r24
    630e:	cb 01       	movw	r24, r22
    6310:	f8 01       	movw	r30, r16
    6312:	91 83       	std	Z+1, r25	; 0x01
    6314:	80 83       	st	Z, r24
    6316:	de 01       	movw	r26, r28
    6318:	ad 59       	subi	r26, 0x9D	; 157
    631a:	bf 4f       	sbci	r27, 0xFF	; 255
    631c:	fe 01       	movw	r30, r28
    631e:	e9 59       	subi	r30, 0x99	; 153
    6320:	ff 4f       	sbci	r31, 0xFF	; 255
    6322:	80 81       	ld	r24, Z
    6324:	91 81       	ldd	r25, Z+1	; 0x01
    6326:	11 96       	adiw	r26, 0x01	; 1
    6328:	9c 93       	st	X, r25
    632a:	8e 93       	st	-X, r24
    632c:	fe 01       	movw	r30, r28
    632e:	ed 59       	subi	r30, 0x9D	; 157
    6330:	ff 4f       	sbci	r31, 0xFF	; 255
    6332:	80 81       	ld	r24, Z
    6334:	91 81       	ldd	r25, Z+1	; 0x01
    6336:	01 97       	sbiw	r24, 0x01	; 1
    6338:	f1 f7       	brne	.-4      	; 0x6336 <__vector_1+0x18e2>
    633a:	fe 01       	movw	r30, r28
    633c:	ed 59       	subi	r30, 0x9D	; 157
    633e:	ff 4f       	sbci	r31, 0xFF	; 255
    6340:	91 83       	std	Z+1, r25	; 0x01
    6342:	80 83       	st	Z, r24
														_delay_ms(3000);
														for(u8 i=4;i>=1;i--)
    6344:	fe 01       	movw	r30, r28
    6346:	e5 5f       	subi	r30, 0xF5	; 245
    6348:	fe 4f       	sbci	r31, 0xFE	; 254
    634a:	84 e0       	ldi	r24, 0x04	; 4
    634c:	80 83       	st	Z, r24
    634e:	d8 c3       	rjmp	.+1968   	; 0x6b00 <__vector_1+0x20ac>
														{
															if(i=4)
    6350:	fe 01       	movw	r30, r28
    6352:	e5 5f       	subi	r30, 0xF5	; 245
    6354:	fe 4f       	sbci	r31, 0xFE	; 254
    6356:	84 e0       	ldi	r24, 0x04	; 4
    6358:	80 83       	st	Z, r24
															{
																LCD_GOTOXY(2,0);
    635a:	82 e0       	ldi	r24, 0x02	; 2
    635c:	60 e0       	ldi	r22, 0x00	; 0
    635e:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
																LCD_Send_string("in 4 Sec");
    6362:	85 e7       	ldi	r24, 0x75	; 117
    6364:	90 e0       	ldi	r25, 0x00	; 0
    6366:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
																SSEG_voidSendNumber(sseg1,4);
    636a:	fe 01       	movw	r30, r28
    636c:	e1 5f       	subi	r30, 0xF1	; 241
    636e:	fe 4f       	sbci	r31, 0xFE	; 254
    6370:	80 81       	ld	r24, Z
    6372:	91 81       	ldd	r25, Z+1	; 0x01
    6374:	64 e0       	ldi	r22, 0x04	; 4
    6376:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
																SSEG_voidSendNumber(sseg2,4);
    637a:	fe 01       	movw	r30, r28
    637c:	ef 5e       	subi	r30, 0xEF	; 239
    637e:	fe 4f       	sbci	r31, 0xFE	; 254
    6380:	80 81       	ld	r24, Z
    6382:	91 81       	ldd	r25, Z+1	; 0x01
    6384:	64 e0       	ldi	r22, 0x04	; 4
    6386:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    638a:	fe 01       	movw	r30, r28
    638c:	e1 5a       	subi	r30, 0xA1	; 161
    638e:	ff 4f       	sbci	r31, 0xFF	; 255
    6390:	80 e0       	ldi	r24, 0x00	; 0
    6392:	90 e0       	ldi	r25, 0x00	; 0
    6394:	aa ef       	ldi	r26, 0xFA	; 250
    6396:	b4 e4       	ldi	r27, 0x44	; 68
    6398:	80 83       	st	Z, r24
    639a:	91 83       	std	Z+1, r25	; 0x01
    639c:	a2 83       	std	Z+2, r26	; 0x02
    639e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    63a0:	8e 01       	movw	r16, r28
    63a2:	05 5a       	subi	r16, 0xA5	; 165
    63a4:	1f 4f       	sbci	r17, 0xFF	; 255
    63a6:	fe 01       	movw	r30, r28
    63a8:	e1 5a       	subi	r30, 0xA1	; 161
    63aa:	ff 4f       	sbci	r31, 0xFF	; 255
    63ac:	60 81       	ld	r22, Z
    63ae:	71 81       	ldd	r23, Z+1	; 0x01
    63b0:	82 81       	ldd	r24, Z+2	; 0x02
    63b2:	93 81       	ldd	r25, Z+3	; 0x03
    63b4:	20 e0       	ldi	r18, 0x00	; 0
    63b6:	30 e0       	ldi	r19, 0x00	; 0
    63b8:	4a ef       	ldi	r20, 0xFA	; 250
    63ba:	54 e4       	ldi	r21, 0x44	; 68
    63bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    63c0:	dc 01       	movw	r26, r24
    63c2:	cb 01       	movw	r24, r22
    63c4:	f8 01       	movw	r30, r16
    63c6:	80 83       	st	Z, r24
    63c8:	91 83       	std	Z+1, r25	; 0x01
    63ca:	a2 83       	std	Z+2, r26	; 0x02
    63cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    63ce:	fe 01       	movw	r30, r28
    63d0:	e5 5a       	subi	r30, 0xA5	; 165
    63d2:	ff 4f       	sbci	r31, 0xFF	; 255
    63d4:	60 81       	ld	r22, Z
    63d6:	71 81       	ldd	r23, Z+1	; 0x01
    63d8:	82 81       	ldd	r24, Z+2	; 0x02
    63da:	93 81       	ldd	r25, Z+3	; 0x03
    63dc:	20 e0       	ldi	r18, 0x00	; 0
    63de:	30 e0       	ldi	r19, 0x00	; 0
    63e0:	40 e8       	ldi	r20, 0x80	; 128
    63e2:	5f e3       	ldi	r21, 0x3F	; 63
    63e4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    63e8:	88 23       	and	r24, r24
    63ea:	44 f4       	brge	.+16     	; 0x63fc <__vector_1+0x19a8>
		__ticks = 1;
    63ec:	fe 01       	movw	r30, r28
    63ee:	e7 5a       	subi	r30, 0xA7	; 167
    63f0:	ff 4f       	sbci	r31, 0xFF	; 255
    63f2:	81 e0       	ldi	r24, 0x01	; 1
    63f4:	90 e0       	ldi	r25, 0x00	; 0
    63f6:	91 83       	std	Z+1, r25	; 0x01
    63f8:	80 83       	st	Z, r24
    63fa:	64 c0       	rjmp	.+200    	; 0x64c4 <__vector_1+0x1a70>
	else if (__tmp > 65535)
    63fc:	fe 01       	movw	r30, r28
    63fe:	e5 5a       	subi	r30, 0xA5	; 165
    6400:	ff 4f       	sbci	r31, 0xFF	; 255
    6402:	60 81       	ld	r22, Z
    6404:	71 81       	ldd	r23, Z+1	; 0x01
    6406:	82 81       	ldd	r24, Z+2	; 0x02
    6408:	93 81       	ldd	r25, Z+3	; 0x03
    640a:	20 e0       	ldi	r18, 0x00	; 0
    640c:	3f ef       	ldi	r19, 0xFF	; 255
    640e:	4f e7       	ldi	r20, 0x7F	; 127
    6410:	57 e4       	ldi	r21, 0x47	; 71
    6412:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6416:	18 16       	cp	r1, r24
    6418:	0c f0       	brlt	.+2      	; 0x641c <__vector_1+0x19c8>
    641a:	43 c0       	rjmp	.+134    	; 0x64a2 <__vector_1+0x1a4e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    641c:	fe 01       	movw	r30, r28
    641e:	e1 5a       	subi	r30, 0xA1	; 161
    6420:	ff 4f       	sbci	r31, 0xFF	; 255
    6422:	60 81       	ld	r22, Z
    6424:	71 81       	ldd	r23, Z+1	; 0x01
    6426:	82 81       	ldd	r24, Z+2	; 0x02
    6428:	93 81       	ldd	r25, Z+3	; 0x03
    642a:	20 e0       	ldi	r18, 0x00	; 0
    642c:	30 e0       	ldi	r19, 0x00	; 0
    642e:	40 e2       	ldi	r20, 0x20	; 32
    6430:	51 e4       	ldi	r21, 0x41	; 65
    6432:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6436:	dc 01       	movw	r26, r24
    6438:	cb 01       	movw	r24, r22
    643a:	8e 01       	movw	r16, r28
    643c:	07 5a       	subi	r16, 0xA7	; 167
    643e:	1f 4f       	sbci	r17, 0xFF	; 255
    6440:	bc 01       	movw	r22, r24
    6442:	cd 01       	movw	r24, r26
    6444:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6448:	dc 01       	movw	r26, r24
    644a:	cb 01       	movw	r24, r22
    644c:	f8 01       	movw	r30, r16
    644e:	91 83       	std	Z+1, r25	; 0x01
    6450:	80 83       	st	Z, r24
    6452:	1f c0       	rjmp	.+62     	; 0x6492 <__vector_1+0x1a3e>
    6454:	fe 01       	movw	r30, r28
    6456:	e9 5a       	subi	r30, 0xA9	; 169
    6458:	ff 4f       	sbci	r31, 0xFF	; 255
    645a:	88 ec       	ldi	r24, 0xC8	; 200
    645c:	90 e0       	ldi	r25, 0x00	; 0
    645e:	91 83       	std	Z+1, r25	; 0x01
    6460:	80 83       	st	Z, r24
    6462:	fe 01       	movw	r30, r28
    6464:	e9 5a       	subi	r30, 0xA9	; 169
    6466:	ff 4f       	sbci	r31, 0xFF	; 255
    6468:	80 81       	ld	r24, Z
    646a:	91 81       	ldd	r25, Z+1	; 0x01
    646c:	01 97       	sbiw	r24, 0x01	; 1
    646e:	f1 f7       	brne	.-4      	; 0x646c <__vector_1+0x1a18>
    6470:	fe 01       	movw	r30, r28
    6472:	e9 5a       	subi	r30, 0xA9	; 169
    6474:	ff 4f       	sbci	r31, 0xFF	; 255
    6476:	91 83       	std	Z+1, r25	; 0x01
    6478:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    647a:	de 01       	movw	r26, r28
    647c:	a7 5a       	subi	r26, 0xA7	; 167
    647e:	bf 4f       	sbci	r27, 0xFF	; 255
    6480:	fe 01       	movw	r30, r28
    6482:	e7 5a       	subi	r30, 0xA7	; 167
    6484:	ff 4f       	sbci	r31, 0xFF	; 255
    6486:	80 81       	ld	r24, Z
    6488:	91 81       	ldd	r25, Z+1	; 0x01
    648a:	01 97       	sbiw	r24, 0x01	; 1
    648c:	11 96       	adiw	r26, 0x01	; 1
    648e:	9c 93       	st	X, r25
    6490:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6492:	fe 01       	movw	r30, r28
    6494:	e7 5a       	subi	r30, 0xA7	; 167
    6496:	ff 4f       	sbci	r31, 0xFF	; 255
    6498:	80 81       	ld	r24, Z
    649a:	91 81       	ldd	r25, Z+1	; 0x01
    649c:	00 97       	sbiw	r24, 0x00	; 0
    649e:	d1 f6       	brne	.-76     	; 0x6454 <__vector_1+0x1a00>
    64a0:	27 c0       	rjmp	.+78     	; 0x64f0 <__vector_1+0x1a9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    64a2:	8e 01       	movw	r16, r28
    64a4:	07 5a       	subi	r16, 0xA7	; 167
    64a6:	1f 4f       	sbci	r17, 0xFF	; 255
    64a8:	fe 01       	movw	r30, r28
    64aa:	e5 5a       	subi	r30, 0xA5	; 165
    64ac:	ff 4f       	sbci	r31, 0xFF	; 255
    64ae:	60 81       	ld	r22, Z
    64b0:	71 81       	ldd	r23, Z+1	; 0x01
    64b2:	82 81       	ldd	r24, Z+2	; 0x02
    64b4:	93 81       	ldd	r25, Z+3	; 0x03
    64b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    64ba:	dc 01       	movw	r26, r24
    64bc:	cb 01       	movw	r24, r22
    64be:	f8 01       	movw	r30, r16
    64c0:	91 83       	std	Z+1, r25	; 0x01
    64c2:	80 83       	st	Z, r24
    64c4:	de 01       	movw	r26, r28
    64c6:	ab 5a       	subi	r26, 0xAB	; 171
    64c8:	bf 4f       	sbci	r27, 0xFF	; 255
    64ca:	fe 01       	movw	r30, r28
    64cc:	e7 5a       	subi	r30, 0xA7	; 167
    64ce:	ff 4f       	sbci	r31, 0xFF	; 255
    64d0:	80 81       	ld	r24, Z
    64d2:	91 81       	ldd	r25, Z+1	; 0x01
    64d4:	8d 93       	st	X+, r24
    64d6:	9c 93       	st	X, r25
    64d8:	fe 01       	movw	r30, r28
    64da:	eb 5a       	subi	r30, 0xAB	; 171
    64dc:	ff 4f       	sbci	r31, 0xFF	; 255
    64de:	80 81       	ld	r24, Z
    64e0:	91 81       	ldd	r25, Z+1	; 0x01
    64e2:	01 97       	sbiw	r24, 0x01	; 1
    64e4:	f1 f7       	brne	.-4      	; 0x64e2 <__vector_1+0x1a8e>
    64e6:	fe 01       	movw	r30, r28
    64e8:	eb 5a       	subi	r30, 0xAB	; 171
    64ea:	ff 4f       	sbci	r31, 0xFF	; 255
    64ec:	91 83       	std	Z+1, r25	; 0x01
    64ee:	80 83       	st	Z, r24
																_delay_ms(2000);
															}
															if(i=3)
    64f0:	fe 01       	movw	r30, r28
    64f2:	e5 5f       	subi	r30, 0xF5	; 245
    64f4:	fe 4f       	sbci	r31, 0xFE	; 254
    64f6:	83 e0       	ldi	r24, 0x03	; 3
    64f8:	80 83       	st	Z, r24
															{
																LCD_GOTOXY(2,3);
    64fa:	82 e0       	ldi	r24, 0x02	; 2
    64fc:	63 e0       	ldi	r22, 0x03	; 3
    64fe:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
																LCD_Send_string("3");
    6502:	8e e7       	ldi	r24, 0x7E	; 126
    6504:	90 e0       	ldi	r25, 0x00	; 0
    6506:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
																SSEG_voidSendNumber(sseg1,3);
    650a:	fe 01       	movw	r30, r28
    650c:	e1 5f       	subi	r30, 0xF1	; 241
    650e:	fe 4f       	sbci	r31, 0xFE	; 254
    6510:	80 81       	ld	r24, Z
    6512:	91 81       	ldd	r25, Z+1	; 0x01
    6514:	63 e0       	ldi	r22, 0x03	; 3
    6516:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
																SSEG_voidSendNumber(sseg2,3);
    651a:	fe 01       	movw	r30, r28
    651c:	ef 5e       	subi	r30, 0xEF	; 239
    651e:	fe 4f       	sbci	r31, 0xFE	; 254
    6520:	80 81       	ld	r24, Z
    6522:	91 81       	ldd	r25, Z+1	; 0x01
    6524:	63 e0       	ldi	r22, 0x03	; 3
    6526:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    652a:	fe 01       	movw	r30, r28
    652c:	ef 5a       	subi	r30, 0xAF	; 175
    652e:	ff 4f       	sbci	r31, 0xFF	; 255
    6530:	80 e0       	ldi	r24, 0x00	; 0
    6532:	90 e0       	ldi	r25, 0x00	; 0
    6534:	aa ef       	ldi	r26, 0xFA	; 250
    6536:	b4 e4       	ldi	r27, 0x44	; 68
    6538:	80 83       	st	Z, r24
    653a:	91 83       	std	Z+1, r25	; 0x01
    653c:	a2 83       	std	Z+2, r26	; 0x02
    653e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6540:	8e 01       	movw	r16, r28
    6542:	03 5b       	subi	r16, 0xB3	; 179
    6544:	1f 4f       	sbci	r17, 0xFF	; 255
    6546:	fe 01       	movw	r30, r28
    6548:	ef 5a       	subi	r30, 0xAF	; 175
    654a:	ff 4f       	sbci	r31, 0xFF	; 255
    654c:	60 81       	ld	r22, Z
    654e:	71 81       	ldd	r23, Z+1	; 0x01
    6550:	82 81       	ldd	r24, Z+2	; 0x02
    6552:	93 81       	ldd	r25, Z+3	; 0x03
    6554:	20 e0       	ldi	r18, 0x00	; 0
    6556:	30 e0       	ldi	r19, 0x00	; 0
    6558:	4a ef       	ldi	r20, 0xFA	; 250
    655a:	54 e4       	ldi	r21, 0x44	; 68
    655c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6560:	dc 01       	movw	r26, r24
    6562:	cb 01       	movw	r24, r22
    6564:	f8 01       	movw	r30, r16
    6566:	80 83       	st	Z, r24
    6568:	91 83       	std	Z+1, r25	; 0x01
    656a:	a2 83       	std	Z+2, r26	; 0x02
    656c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    656e:	fe 01       	movw	r30, r28
    6570:	e3 5b       	subi	r30, 0xB3	; 179
    6572:	ff 4f       	sbci	r31, 0xFF	; 255
    6574:	60 81       	ld	r22, Z
    6576:	71 81       	ldd	r23, Z+1	; 0x01
    6578:	82 81       	ldd	r24, Z+2	; 0x02
    657a:	93 81       	ldd	r25, Z+3	; 0x03
    657c:	20 e0       	ldi	r18, 0x00	; 0
    657e:	30 e0       	ldi	r19, 0x00	; 0
    6580:	40 e8       	ldi	r20, 0x80	; 128
    6582:	5f e3       	ldi	r21, 0x3F	; 63
    6584:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6588:	88 23       	and	r24, r24
    658a:	44 f4       	brge	.+16     	; 0x659c <__vector_1+0x1b48>
		__ticks = 1;
    658c:	fe 01       	movw	r30, r28
    658e:	e5 5b       	subi	r30, 0xB5	; 181
    6590:	ff 4f       	sbci	r31, 0xFF	; 255
    6592:	81 e0       	ldi	r24, 0x01	; 1
    6594:	90 e0       	ldi	r25, 0x00	; 0
    6596:	91 83       	std	Z+1, r25	; 0x01
    6598:	80 83       	st	Z, r24
    659a:	64 c0       	rjmp	.+200    	; 0x6664 <__vector_1+0x1c10>
	else if (__tmp > 65535)
    659c:	fe 01       	movw	r30, r28
    659e:	e3 5b       	subi	r30, 0xB3	; 179
    65a0:	ff 4f       	sbci	r31, 0xFF	; 255
    65a2:	60 81       	ld	r22, Z
    65a4:	71 81       	ldd	r23, Z+1	; 0x01
    65a6:	82 81       	ldd	r24, Z+2	; 0x02
    65a8:	93 81       	ldd	r25, Z+3	; 0x03
    65aa:	20 e0       	ldi	r18, 0x00	; 0
    65ac:	3f ef       	ldi	r19, 0xFF	; 255
    65ae:	4f e7       	ldi	r20, 0x7F	; 127
    65b0:	57 e4       	ldi	r21, 0x47	; 71
    65b2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    65b6:	18 16       	cp	r1, r24
    65b8:	0c f0       	brlt	.+2      	; 0x65bc <__vector_1+0x1b68>
    65ba:	43 c0       	rjmp	.+134    	; 0x6642 <__vector_1+0x1bee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    65bc:	fe 01       	movw	r30, r28
    65be:	ef 5a       	subi	r30, 0xAF	; 175
    65c0:	ff 4f       	sbci	r31, 0xFF	; 255
    65c2:	60 81       	ld	r22, Z
    65c4:	71 81       	ldd	r23, Z+1	; 0x01
    65c6:	82 81       	ldd	r24, Z+2	; 0x02
    65c8:	93 81       	ldd	r25, Z+3	; 0x03
    65ca:	20 e0       	ldi	r18, 0x00	; 0
    65cc:	30 e0       	ldi	r19, 0x00	; 0
    65ce:	40 e2       	ldi	r20, 0x20	; 32
    65d0:	51 e4       	ldi	r21, 0x41	; 65
    65d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    65d6:	dc 01       	movw	r26, r24
    65d8:	cb 01       	movw	r24, r22
    65da:	8e 01       	movw	r16, r28
    65dc:	05 5b       	subi	r16, 0xB5	; 181
    65de:	1f 4f       	sbci	r17, 0xFF	; 255
    65e0:	bc 01       	movw	r22, r24
    65e2:	cd 01       	movw	r24, r26
    65e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    65e8:	dc 01       	movw	r26, r24
    65ea:	cb 01       	movw	r24, r22
    65ec:	f8 01       	movw	r30, r16
    65ee:	91 83       	std	Z+1, r25	; 0x01
    65f0:	80 83       	st	Z, r24
    65f2:	1f c0       	rjmp	.+62     	; 0x6632 <__vector_1+0x1bde>
    65f4:	fe 01       	movw	r30, r28
    65f6:	e7 5b       	subi	r30, 0xB7	; 183
    65f8:	ff 4f       	sbci	r31, 0xFF	; 255
    65fa:	88 ec       	ldi	r24, 0xC8	; 200
    65fc:	90 e0       	ldi	r25, 0x00	; 0
    65fe:	91 83       	std	Z+1, r25	; 0x01
    6600:	80 83       	st	Z, r24
    6602:	fe 01       	movw	r30, r28
    6604:	e7 5b       	subi	r30, 0xB7	; 183
    6606:	ff 4f       	sbci	r31, 0xFF	; 255
    6608:	80 81       	ld	r24, Z
    660a:	91 81       	ldd	r25, Z+1	; 0x01
    660c:	01 97       	sbiw	r24, 0x01	; 1
    660e:	f1 f7       	brne	.-4      	; 0x660c <__vector_1+0x1bb8>
    6610:	fe 01       	movw	r30, r28
    6612:	e7 5b       	subi	r30, 0xB7	; 183
    6614:	ff 4f       	sbci	r31, 0xFF	; 255
    6616:	91 83       	std	Z+1, r25	; 0x01
    6618:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    661a:	de 01       	movw	r26, r28
    661c:	a5 5b       	subi	r26, 0xB5	; 181
    661e:	bf 4f       	sbci	r27, 0xFF	; 255
    6620:	fe 01       	movw	r30, r28
    6622:	e5 5b       	subi	r30, 0xB5	; 181
    6624:	ff 4f       	sbci	r31, 0xFF	; 255
    6626:	80 81       	ld	r24, Z
    6628:	91 81       	ldd	r25, Z+1	; 0x01
    662a:	01 97       	sbiw	r24, 0x01	; 1
    662c:	11 96       	adiw	r26, 0x01	; 1
    662e:	9c 93       	st	X, r25
    6630:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6632:	fe 01       	movw	r30, r28
    6634:	e5 5b       	subi	r30, 0xB5	; 181
    6636:	ff 4f       	sbci	r31, 0xFF	; 255
    6638:	80 81       	ld	r24, Z
    663a:	91 81       	ldd	r25, Z+1	; 0x01
    663c:	00 97       	sbiw	r24, 0x00	; 0
    663e:	d1 f6       	brne	.-76     	; 0x65f4 <__vector_1+0x1ba0>
    6640:	27 c0       	rjmp	.+78     	; 0x6690 <__vector_1+0x1c3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6642:	8e 01       	movw	r16, r28
    6644:	05 5b       	subi	r16, 0xB5	; 181
    6646:	1f 4f       	sbci	r17, 0xFF	; 255
    6648:	fe 01       	movw	r30, r28
    664a:	e3 5b       	subi	r30, 0xB3	; 179
    664c:	ff 4f       	sbci	r31, 0xFF	; 255
    664e:	60 81       	ld	r22, Z
    6650:	71 81       	ldd	r23, Z+1	; 0x01
    6652:	82 81       	ldd	r24, Z+2	; 0x02
    6654:	93 81       	ldd	r25, Z+3	; 0x03
    6656:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    665a:	dc 01       	movw	r26, r24
    665c:	cb 01       	movw	r24, r22
    665e:	f8 01       	movw	r30, r16
    6660:	91 83       	std	Z+1, r25	; 0x01
    6662:	80 83       	st	Z, r24
    6664:	de 01       	movw	r26, r28
    6666:	a9 5b       	subi	r26, 0xB9	; 185
    6668:	bf 4f       	sbci	r27, 0xFF	; 255
    666a:	fe 01       	movw	r30, r28
    666c:	e5 5b       	subi	r30, 0xB5	; 181
    666e:	ff 4f       	sbci	r31, 0xFF	; 255
    6670:	80 81       	ld	r24, Z
    6672:	91 81       	ldd	r25, Z+1	; 0x01
    6674:	8d 93       	st	X+, r24
    6676:	9c 93       	st	X, r25
    6678:	fe 01       	movw	r30, r28
    667a:	e9 5b       	subi	r30, 0xB9	; 185
    667c:	ff 4f       	sbci	r31, 0xFF	; 255
    667e:	80 81       	ld	r24, Z
    6680:	91 81       	ldd	r25, Z+1	; 0x01
    6682:	01 97       	sbiw	r24, 0x01	; 1
    6684:	f1 f7       	brne	.-4      	; 0x6682 <__vector_1+0x1c2e>
    6686:	fe 01       	movw	r30, r28
    6688:	e9 5b       	subi	r30, 0xB9	; 185
    668a:	ff 4f       	sbci	r31, 0xFF	; 255
    668c:	91 83       	std	Z+1, r25	; 0x01
    668e:	80 83       	st	Z, r24
																_delay_ms(2000);
															}
															if(i=2)
    6690:	fe 01       	movw	r30, r28
    6692:	e5 5f       	subi	r30, 0xF5	; 245
    6694:	fe 4f       	sbci	r31, 0xFE	; 254
    6696:	82 e0       	ldi	r24, 0x02	; 2
    6698:	80 83       	st	Z, r24
															{
																LCD_GOTOXY(2,3);
    669a:	82 e0       	ldi	r24, 0x02	; 2
    669c:	63 e0       	ldi	r22, 0x03	; 3
    669e:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
																LCD_Send_string("2");
    66a2:	80 e8       	ldi	r24, 0x80	; 128
    66a4:	90 e0       	ldi	r25, 0x00	; 0
    66a6:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
																SSEG_voidSendNumber(sseg1,2);
    66aa:	fe 01       	movw	r30, r28
    66ac:	e1 5f       	subi	r30, 0xF1	; 241
    66ae:	fe 4f       	sbci	r31, 0xFE	; 254
    66b0:	80 81       	ld	r24, Z
    66b2:	91 81       	ldd	r25, Z+1	; 0x01
    66b4:	62 e0       	ldi	r22, 0x02	; 2
    66b6:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
																SSEG_voidSendNumber(sseg2,2);
    66ba:	fe 01       	movw	r30, r28
    66bc:	ef 5e       	subi	r30, 0xEF	; 239
    66be:	fe 4f       	sbci	r31, 0xFE	; 254
    66c0:	80 81       	ld	r24, Z
    66c2:	91 81       	ldd	r25, Z+1	; 0x01
    66c4:	62 e0       	ldi	r22, 0x02	; 2
    66c6:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    66ca:	fe 01       	movw	r30, r28
    66cc:	ed 5b       	subi	r30, 0xBD	; 189
    66ce:	ff 4f       	sbci	r31, 0xFF	; 255
    66d0:	80 e0       	ldi	r24, 0x00	; 0
    66d2:	90 e0       	ldi	r25, 0x00	; 0
    66d4:	aa ef       	ldi	r26, 0xFA	; 250
    66d6:	b4 e4       	ldi	r27, 0x44	; 68
    66d8:	80 83       	st	Z, r24
    66da:	91 83       	std	Z+1, r25	; 0x01
    66dc:	a2 83       	std	Z+2, r26	; 0x02
    66de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    66e0:	8e 01       	movw	r16, r28
    66e2:	01 5c       	subi	r16, 0xC1	; 193
    66e4:	1f 4f       	sbci	r17, 0xFF	; 255
    66e6:	fe 01       	movw	r30, r28
    66e8:	ed 5b       	subi	r30, 0xBD	; 189
    66ea:	ff 4f       	sbci	r31, 0xFF	; 255
    66ec:	60 81       	ld	r22, Z
    66ee:	71 81       	ldd	r23, Z+1	; 0x01
    66f0:	82 81       	ldd	r24, Z+2	; 0x02
    66f2:	93 81       	ldd	r25, Z+3	; 0x03
    66f4:	20 e0       	ldi	r18, 0x00	; 0
    66f6:	30 e0       	ldi	r19, 0x00	; 0
    66f8:	4a ef       	ldi	r20, 0xFA	; 250
    66fa:	54 e4       	ldi	r21, 0x44	; 68
    66fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6700:	dc 01       	movw	r26, r24
    6702:	cb 01       	movw	r24, r22
    6704:	f8 01       	movw	r30, r16
    6706:	80 83       	st	Z, r24
    6708:	91 83       	std	Z+1, r25	; 0x01
    670a:	a2 83       	std	Z+2, r26	; 0x02
    670c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    670e:	fe 01       	movw	r30, r28
    6710:	ff 96       	adiw	r30, 0x3f	; 63
    6712:	60 81       	ld	r22, Z
    6714:	71 81       	ldd	r23, Z+1	; 0x01
    6716:	82 81       	ldd	r24, Z+2	; 0x02
    6718:	93 81       	ldd	r25, Z+3	; 0x03
    671a:	20 e0       	ldi	r18, 0x00	; 0
    671c:	30 e0       	ldi	r19, 0x00	; 0
    671e:	40 e8       	ldi	r20, 0x80	; 128
    6720:	5f e3       	ldi	r21, 0x3F	; 63
    6722:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6726:	88 23       	and	r24, r24
    6728:	2c f4       	brge	.+10     	; 0x6734 <__vector_1+0x1ce0>
		__ticks = 1;
    672a:	81 e0       	ldi	r24, 0x01	; 1
    672c:	90 e0       	ldi	r25, 0x00	; 0
    672e:	9e af       	std	Y+62, r25	; 0x3e
    6730:	8d af       	std	Y+61, r24	; 0x3d
    6732:	46 c0       	rjmp	.+140    	; 0x67c0 <__vector_1+0x1d6c>
	else if (__tmp > 65535)
    6734:	fe 01       	movw	r30, r28
    6736:	ff 96       	adiw	r30, 0x3f	; 63
    6738:	60 81       	ld	r22, Z
    673a:	71 81       	ldd	r23, Z+1	; 0x01
    673c:	82 81       	ldd	r24, Z+2	; 0x02
    673e:	93 81       	ldd	r25, Z+3	; 0x03
    6740:	20 e0       	ldi	r18, 0x00	; 0
    6742:	3f ef       	ldi	r19, 0xFF	; 255
    6744:	4f e7       	ldi	r20, 0x7F	; 127
    6746:	57 e4       	ldi	r21, 0x47	; 71
    6748:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    674c:	18 16       	cp	r1, r24
    674e:	64 f5       	brge	.+88     	; 0x67a8 <__vector_1+0x1d54>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6750:	fe 01       	movw	r30, r28
    6752:	ed 5b       	subi	r30, 0xBD	; 189
    6754:	ff 4f       	sbci	r31, 0xFF	; 255
    6756:	60 81       	ld	r22, Z
    6758:	71 81       	ldd	r23, Z+1	; 0x01
    675a:	82 81       	ldd	r24, Z+2	; 0x02
    675c:	93 81       	ldd	r25, Z+3	; 0x03
    675e:	20 e0       	ldi	r18, 0x00	; 0
    6760:	30 e0       	ldi	r19, 0x00	; 0
    6762:	40 e2       	ldi	r20, 0x20	; 32
    6764:	51 e4       	ldi	r21, 0x41	; 65
    6766:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    676a:	dc 01       	movw	r26, r24
    676c:	cb 01       	movw	r24, r22
    676e:	bc 01       	movw	r22, r24
    6770:	cd 01       	movw	r24, r26
    6772:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6776:	dc 01       	movw	r26, r24
    6778:	cb 01       	movw	r24, r22
    677a:	9e af       	std	Y+62, r25	; 0x3e
    677c:	8d af       	std	Y+61, r24	; 0x3d
    677e:	0f c0       	rjmp	.+30     	; 0x679e <__vector_1+0x1d4a>
    6780:	88 ec       	ldi	r24, 0xC8	; 200
    6782:	90 e0       	ldi	r25, 0x00	; 0
    6784:	9c af       	std	Y+60, r25	; 0x3c
    6786:	8b af       	std	Y+59, r24	; 0x3b
    6788:	8b ad       	ldd	r24, Y+59	; 0x3b
    678a:	9c ad       	ldd	r25, Y+60	; 0x3c
    678c:	01 97       	sbiw	r24, 0x01	; 1
    678e:	f1 f7       	brne	.-4      	; 0x678c <__vector_1+0x1d38>
    6790:	9c af       	std	Y+60, r25	; 0x3c
    6792:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6794:	8d ad       	ldd	r24, Y+61	; 0x3d
    6796:	9e ad       	ldd	r25, Y+62	; 0x3e
    6798:	01 97       	sbiw	r24, 0x01	; 1
    679a:	9e af       	std	Y+62, r25	; 0x3e
    679c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    679e:	8d ad       	ldd	r24, Y+61	; 0x3d
    67a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    67a2:	00 97       	sbiw	r24, 0x00	; 0
    67a4:	69 f7       	brne	.-38     	; 0x6780 <__vector_1+0x1d2c>
    67a6:	16 c0       	rjmp	.+44     	; 0x67d4 <__vector_1+0x1d80>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    67a8:	fe 01       	movw	r30, r28
    67aa:	ff 96       	adiw	r30, 0x3f	; 63
    67ac:	60 81       	ld	r22, Z
    67ae:	71 81       	ldd	r23, Z+1	; 0x01
    67b0:	82 81       	ldd	r24, Z+2	; 0x02
    67b2:	93 81       	ldd	r25, Z+3	; 0x03
    67b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    67b8:	dc 01       	movw	r26, r24
    67ba:	cb 01       	movw	r24, r22
    67bc:	9e af       	std	Y+62, r25	; 0x3e
    67be:	8d af       	std	Y+61, r24	; 0x3d
    67c0:	8d ad       	ldd	r24, Y+61	; 0x3d
    67c2:	9e ad       	ldd	r25, Y+62	; 0x3e
    67c4:	9a af       	std	Y+58, r25	; 0x3a
    67c6:	89 af       	std	Y+57, r24	; 0x39
    67c8:	89 ad       	ldd	r24, Y+57	; 0x39
    67ca:	9a ad       	ldd	r25, Y+58	; 0x3a
    67cc:	01 97       	sbiw	r24, 0x01	; 1
    67ce:	f1 f7       	brne	.-4      	; 0x67cc <__vector_1+0x1d78>
    67d0:	9a af       	std	Y+58, r25	; 0x3a
    67d2:	89 af       	std	Y+57, r24	; 0x39
																_delay_ms(2000);
																LCD_GOTOXY(2,3);
    67d4:	82 e0       	ldi	r24, 0x02	; 2
    67d6:	63 e0       	ldi	r22, 0x03	; 3
    67d8:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
															    LCD_Send_string("1");
    67dc:	82 e8       	ldi	r24, 0x82	; 130
    67de:	90 e0       	ldi	r25, 0x00	; 0
    67e0:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
															    SSEG_voidSendNumber(sseg1,1);
    67e4:	fe 01       	movw	r30, r28
    67e6:	e1 5f       	subi	r30, 0xF1	; 241
    67e8:	fe 4f       	sbci	r31, 0xFE	; 254
    67ea:	80 81       	ld	r24, Z
    67ec:	91 81       	ldd	r25, Z+1	; 0x01
    67ee:	61 e0       	ldi	r22, 0x01	; 1
    67f0:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
															    SSEG_voidSendNumber(sseg2,1);
    67f4:	fe 01       	movw	r30, r28
    67f6:	ef 5e       	subi	r30, 0xEF	; 239
    67f8:	fe 4f       	sbci	r31, 0xFE	; 254
    67fa:	80 81       	ld	r24, Z
    67fc:	91 81       	ldd	r25, Z+1	; 0x01
    67fe:	61 e0       	ldi	r22, 0x01	; 1
    6800:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    6804:	80 e0       	ldi	r24, 0x00	; 0
    6806:	90 e0       	ldi	r25, 0x00	; 0
    6808:	aa ef       	ldi	r26, 0xFA	; 250
    680a:	b4 e4       	ldi	r27, 0x44	; 68
    680c:	8d ab       	std	Y+53, r24	; 0x35
    680e:	9e ab       	std	Y+54, r25	; 0x36
    6810:	af ab       	std	Y+55, r26	; 0x37
    6812:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6814:	6d a9       	ldd	r22, Y+53	; 0x35
    6816:	7e a9       	ldd	r23, Y+54	; 0x36
    6818:	8f a9       	ldd	r24, Y+55	; 0x37
    681a:	98 ad       	ldd	r25, Y+56	; 0x38
    681c:	20 e0       	ldi	r18, 0x00	; 0
    681e:	30 e0       	ldi	r19, 0x00	; 0
    6820:	4a ef       	ldi	r20, 0xFA	; 250
    6822:	54 e4       	ldi	r21, 0x44	; 68
    6824:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6828:	dc 01       	movw	r26, r24
    682a:	cb 01       	movw	r24, r22
    682c:	89 ab       	std	Y+49, r24	; 0x31
    682e:	9a ab       	std	Y+50, r25	; 0x32
    6830:	ab ab       	std	Y+51, r26	; 0x33
    6832:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    6834:	69 a9       	ldd	r22, Y+49	; 0x31
    6836:	7a a9       	ldd	r23, Y+50	; 0x32
    6838:	8b a9       	ldd	r24, Y+51	; 0x33
    683a:	9c a9       	ldd	r25, Y+52	; 0x34
    683c:	20 e0       	ldi	r18, 0x00	; 0
    683e:	30 e0       	ldi	r19, 0x00	; 0
    6840:	40 e8       	ldi	r20, 0x80	; 128
    6842:	5f e3       	ldi	r21, 0x3F	; 63
    6844:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6848:	88 23       	and	r24, r24
    684a:	2c f4       	brge	.+10     	; 0x6856 <__vector_1+0x1e02>
		__ticks = 1;
    684c:	81 e0       	ldi	r24, 0x01	; 1
    684e:	90 e0       	ldi	r25, 0x00	; 0
    6850:	98 ab       	std	Y+48, r25	; 0x30
    6852:	8f a7       	std	Y+47, r24	; 0x2f
    6854:	3f c0       	rjmp	.+126    	; 0x68d4 <__vector_1+0x1e80>
	else if (__tmp > 65535)
    6856:	69 a9       	ldd	r22, Y+49	; 0x31
    6858:	7a a9       	ldd	r23, Y+50	; 0x32
    685a:	8b a9       	ldd	r24, Y+51	; 0x33
    685c:	9c a9       	ldd	r25, Y+52	; 0x34
    685e:	20 e0       	ldi	r18, 0x00	; 0
    6860:	3f ef       	ldi	r19, 0xFF	; 255
    6862:	4f e7       	ldi	r20, 0x7F	; 127
    6864:	57 e4       	ldi	r21, 0x47	; 71
    6866:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    686a:	18 16       	cp	r1, r24
    686c:	4c f5       	brge	.+82     	; 0x68c0 <__vector_1+0x1e6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    686e:	6d a9       	ldd	r22, Y+53	; 0x35
    6870:	7e a9       	ldd	r23, Y+54	; 0x36
    6872:	8f a9       	ldd	r24, Y+55	; 0x37
    6874:	98 ad       	ldd	r25, Y+56	; 0x38
    6876:	20 e0       	ldi	r18, 0x00	; 0
    6878:	30 e0       	ldi	r19, 0x00	; 0
    687a:	40 e2       	ldi	r20, 0x20	; 32
    687c:	51 e4       	ldi	r21, 0x41	; 65
    687e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6882:	dc 01       	movw	r26, r24
    6884:	cb 01       	movw	r24, r22
    6886:	bc 01       	movw	r22, r24
    6888:	cd 01       	movw	r24, r26
    688a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    688e:	dc 01       	movw	r26, r24
    6890:	cb 01       	movw	r24, r22
    6892:	98 ab       	std	Y+48, r25	; 0x30
    6894:	8f a7       	std	Y+47, r24	; 0x2f
    6896:	0f c0       	rjmp	.+30     	; 0x68b6 <__vector_1+0x1e62>
    6898:	88 ec       	ldi	r24, 0xC8	; 200
    689a:	90 e0       	ldi	r25, 0x00	; 0
    689c:	9e a7       	std	Y+46, r25	; 0x2e
    689e:	8d a7       	std	Y+45, r24	; 0x2d
    68a0:	8d a5       	ldd	r24, Y+45	; 0x2d
    68a2:	9e a5       	ldd	r25, Y+46	; 0x2e
    68a4:	01 97       	sbiw	r24, 0x01	; 1
    68a6:	f1 f7       	brne	.-4      	; 0x68a4 <__vector_1+0x1e50>
    68a8:	9e a7       	std	Y+46, r25	; 0x2e
    68aa:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    68ac:	8f a5       	ldd	r24, Y+47	; 0x2f
    68ae:	98 a9       	ldd	r25, Y+48	; 0x30
    68b0:	01 97       	sbiw	r24, 0x01	; 1
    68b2:	98 ab       	std	Y+48, r25	; 0x30
    68b4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    68b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    68b8:	98 a9       	ldd	r25, Y+48	; 0x30
    68ba:	00 97       	sbiw	r24, 0x00	; 0
    68bc:	69 f7       	brne	.-38     	; 0x6898 <__vector_1+0x1e44>
    68be:	14 c0       	rjmp	.+40     	; 0x68e8 <__vector_1+0x1e94>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    68c0:	69 a9       	ldd	r22, Y+49	; 0x31
    68c2:	7a a9       	ldd	r23, Y+50	; 0x32
    68c4:	8b a9       	ldd	r24, Y+51	; 0x33
    68c6:	9c a9       	ldd	r25, Y+52	; 0x34
    68c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    68cc:	dc 01       	movw	r26, r24
    68ce:	cb 01       	movw	r24, r22
    68d0:	98 ab       	std	Y+48, r25	; 0x30
    68d2:	8f a7       	std	Y+47, r24	; 0x2f
    68d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    68d6:	98 a9       	ldd	r25, Y+48	; 0x30
    68d8:	9c a7       	std	Y+44, r25	; 0x2c
    68da:	8b a7       	std	Y+43, r24	; 0x2b
    68dc:	8b a5       	ldd	r24, Y+43	; 0x2b
    68de:	9c a5       	ldd	r25, Y+44	; 0x2c
    68e0:	01 97       	sbiw	r24, 0x01	; 1
    68e2:	f1 f7       	brne	.-4      	; 0x68e0 <__vector_1+0x1e8c>
    68e4:	9c a7       	std	Y+44, r25	; 0x2c
    68e6:	8b a7       	std	Y+43, r24	; 0x2b
															    _delay_ms(2000);
															}
															if(i=1)
    68e8:	fe 01       	movw	r30, r28
    68ea:	e5 5f       	subi	r30, 0xF5	; 245
    68ec:	fe 4f       	sbci	r31, 0xFE	; 254
    68ee:	81 e0       	ldi	r24, 0x01	; 1
    68f0:	80 83       	st	Z, r24
															{
																LCD_Clear();
    68f2:	0e 94 c5 1a 	call	0x358a	; 0x358a <LCD_Clear>
    68f6:	80 e0       	ldi	r24, 0x00	; 0
    68f8:	90 e0       	ldi	r25, 0x00	; 0
    68fa:	a0 e2       	ldi	r26, 0x20	; 32
    68fc:	b1 e4       	ldi	r27, 0x41	; 65
    68fe:	8f a3       	std	Y+39, r24	; 0x27
    6900:	98 a7       	std	Y+40, r25	; 0x28
    6902:	a9 a7       	std	Y+41, r26	; 0x29
    6904:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6906:	6f a1       	ldd	r22, Y+39	; 0x27
    6908:	78 a5       	ldd	r23, Y+40	; 0x28
    690a:	89 a5       	ldd	r24, Y+41	; 0x29
    690c:	9a a5       	ldd	r25, Y+42	; 0x2a
    690e:	20 e0       	ldi	r18, 0x00	; 0
    6910:	30 e0       	ldi	r19, 0x00	; 0
    6912:	4a ef       	ldi	r20, 0xFA	; 250
    6914:	54 e4       	ldi	r21, 0x44	; 68
    6916:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    691a:	dc 01       	movw	r26, r24
    691c:	cb 01       	movw	r24, r22
    691e:	8b a3       	std	Y+35, r24	; 0x23
    6920:	9c a3       	std	Y+36, r25	; 0x24
    6922:	ad a3       	std	Y+37, r26	; 0x25
    6924:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    6926:	6b a1       	ldd	r22, Y+35	; 0x23
    6928:	7c a1       	ldd	r23, Y+36	; 0x24
    692a:	8d a1       	ldd	r24, Y+37	; 0x25
    692c:	9e a1       	ldd	r25, Y+38	; 0x26
    692e:	20 e0       	ldi	r18, 0x00	; 0
    6930:	30 e0       	ldi	r19, 0x00	; 0
    6932:	40 e8       	ldi	r20, 0x80	; 128
    6934:	5f e3       	ldi	r21, 0x3F	; 63
    6936:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    693a:	88 23       	and	r24, r24
    693c:	2c f4       	brge	.+10     	; 0x6948 <__vector_1+0x1ef4>
		__ticks = 1;
    693e:	81 e0       	ldi	r24, 0x01	; 1
    6940:	90 e0       	ldi	r25, 0x00	; 0
    6942:	9a a3       	std	Y+34, r25	; 0x22
    6944:	89 a3       	std	Y+33, r24	; 0x21
    6946:	3f c0       	rjmp	.+126    	; 0x69c6 <__vector_1+0x1f72>
	else if (__tmp > 65535)
    6948:	6b a1       	ldd	r22, Y+35	; 0x23
    694a:	7c a1       	ldd	r23, Y+36	; 0x24
    694c:	8d a1       	ldd	r24, Y+37	; 0x25
    694e:	9e a1       	ldd	r25, Y+38	; 0x26
    6950:	20 e0       	ldi	r18, 0x00	; 0
    6952:	3f ef       	ldi	r19, 0xFF	; 255
    6954:	4f e7       	ldi	r20, 0x7F	; 127
    6956:	57 e4       	ldi	r21, 0x47	; 71
    6958:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    695c:	18 16       	cp	r1, r24
    695e:	4c f5       	brge	.+82     	; 0x69b2 <__vector_1+0x1f5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6960:	6f a1       	ldd	r22, Y+39	; 0x27
    6962:	78 a5       	ldd	r23, Y+40	; 0x28
    6964:	89 a5       	ldd	r24, Y+41	; 0x29
    6966:	9a a5       	ldd	r25, Y+42	; 0x2a
    6968:	20 e0       	ldi	r18, 0x00	; 0
    696a:	30 e0       	ldi	r19, 0x00	; 0
    696c:	40 e2       	ldi	r20, 0x20	; 32
    696e:	51 e4       	ldi	r21, 0x41	; 65
    6970:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6974:	dc 01       	movw	r26, r24
    6976:	cb 01       	movw	r24, r22
    6978:	bc 01       	movw	r22, r24
    697a:	cd 01       	movw	r24, r26
    697c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6980:	dc 01       	movw	r26, r24
    6982:	cb 01       	movw	r24, r22
    6984:	9a a3       	std	Y+34, r25	; 0x22
    6986:	89 a3       	std	Y+33, r24	; 0x21
    6988:	0f c0       	rjmp	.+30     	; 0x69a8 <__vector_1+0x1f54>
    698a:	88 ec       	ldi	r24, 0xC8	; 200
    698c:	90 e0       	ldi	r25, 0x00	; 0
    698e:	98 a3       	std	Y+32, r25	; 0x20
    6990:	8f 8f       	std	Y+31, r24	; 0x1f
    6992:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6994:	98 a1       	ldd	r25, Y+32	; 0x20
    6996:	01 97       	sbiw	r24, 0x01	; 1
    6998:	f1 f7       	brne	.-4      	; 0x6996 <__vector_1+0x1f42>
    699a:	98 a3       	std	Y+32, r25	; 0x20
    699c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    699e:	89 a1       	ldd	r24, Y+33	; 0x21
    69a0:	9a a1       	ldd	r25, Y+34	; 0x22
    69a2:	01 97       	sbiw	r24, 0x01	; 1
    69a4:	9a a3       	std	Y+34, r25	; 0x22
    69a6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    69a8:	89 a1       	ldd	r24, Y+33	; 0x21
    69aa:	9a a1       	ldd	r25, Y+34	; 0x22
    69ac:	00 97       	sbiw	r24, 0x00	; 0
    69ae:	69 f7       	brne	.-38     	; 0x698a <__vector_1+0x1f36>
    69b0:	14 c0       	rjmp	.+40     	; 0x69da <__vector_1+0x1f86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    69b2:	6b a1       	ldd	r22, Y+35	; 0x23
    69b4:	7c a1       	ldd	r23, Y+36	; 0x24
    69b6:	8d a1       	ldd	r24, Y+37	; 0x25
    69b8:	9e a1       	ldd	r25, Y+38	; 0x26
    69ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    69be:	dc 01       	movw	r26, r24
    69c0:	cb 01       	movw	r24, r22
    69c2:	9a a3       	std	Y+34, r25	; 0x22
    69c4:	89 a3       	std	Y+33, r24	; 0x21
    69c6:	89 a1       	ldd	r24, Y+33	; 0x21
    69c8:	9a a1       	ldd	r25, Y+34	; 0x22
    69ca:	9e 8f       	std	Y+30, r25	; 0x1e
    69cc:	8d 8f       	std	Y+29, r24	; 0x1d
    69ce:	8d 8d       	ldd	r24, Y+29	; 0x1d
    69d0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    69d2:	01 97       	sbiw	r24, 0x01	; 1
    69d4:	f1 f7       	brne	.-4      	; 0x69d2 <__vector_1+0x1f7e>
    69d6:	9e 8f       	std	Y+30, r25	; 0x1e
    69d8:	8d 8f       	std	Y+29, r24	; 0x1d
																_delay_ms(10);
																LCD_GOTOXY(1,0);
    69da:	81 e0       	ldi	r24, 0x01	; 1
    69dc:	60 e0       	ldi	r22, 0x00	; 0
    69de:	0e 94 cf 1a 	call	0x359e	; 0x359e <LCD_GOTOXY>
																LCD_Send_string("Train arrived");
    69e2:	84 e8       	ldi	r24, 0x84	; 132
    69e4:	90 e0       	ldi	r25, 0x00	; 0
    69e6:	0e 94 9c 1a 	call	0x3538	; 0x3538 <LCD_Send_string>
																SSEG_voidSendNumber(sseg1,0);
    69ea:	fe 01       	movw	r30, r28
    69ec:	e1 5f       	subi	r30, 0xF1	; 241
    69ee:	fe 4f       	sbci	r31, 0xFE	; 254
    69f0:	80 81       	ld	r24, Z
    69f2:	91 81       	ldd	r25, Z+1	; 0x01
    69f4:	60 e0       	ldi	r22, 0x00	; 0
    69f6:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
																SSEG_voidSendNumber(sseg2,0);
    69fa:	fe 01       	movw	r30, r28
    69fc:	ef 5e       	subi	r30, 0xEF	; 239
    69fe:	fe 4f       	sbci	r31, 0xFE	; 254
    6a00:	80 81       	ld	r24, Z
    6a02:	91 81       	ldd	r25, Z+1	; 0x01
    6a04:	60 e0       	ldi	r22, 0x00	; 0
    6a06:	0e 94 65 1c 	call	0x38ca	; 0x38ca <SSEG_voidSendNumber>
    6a0a:	80 e0       	ldi	r24, 0x00	; 0
    6a0c:	90 e0       	ldi	r25, 0x00	; 0
    6a0e:	aa ef       	ldi	r26, 0xFA	; 250
    6a10:	b4 e4       	ldi	r27, 0x44	; 68
    6a12:	89 8f       	std	Y+25, r24	; 0x19
    6a14:	9a 8f       	std	Y+26, r25	; 0x1a
    6a16:	ab 8f       	std	Y+27, r26	; 0x1b
    6a18:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6a1a:	69 8d       	ldd	r22, Y+25	; 0x19
    6a1c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6a1e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6a20:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6a22:	20 e0       	ldi	r18, 0x00	; 0
    6a24:	30 e0       	ldi	r19, 0x00	; 0
    6a26:	4a ef       	ldi	r20, 0xFA	; 250
    6a28:	54 e4       	ldi	r21, 0x44	; 68
    6a2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6a2e:	dc 01       	movw	r26, r24
    6a30:	cb 01       	movw	r24, r22
    6a32:	8d 8b       	std	Y+21, r24	; 0x15
    6a34:	9e 8b       	std	Y+22, r25	; 0x16
    6a36:	af 8b       	std	Y+23, r26	; 0x17
    6a38:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6a3a:	6d 89       	ldd	r22, Y+21	; 0x15
    6a3c:	7e 89       	ldd	r23, Y+22	; 0x16
    6a3e:	8f 89       	ldd	r24, Y+23	; 0x17
    6a40:	98 8d       	ldd	r25, Y+24	; 0x18
    6a42:	20 e0       	ldi	r18, 0x00	; 0
    6a44:	30 e0       	ldi	r19, 0x00	; 0
    6a46:	40 e8       	ldi	r20, 0x80	; 128
    6a48:	5f e3       	ldi	r21, 0x3F	; 63
    6a4a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6a4e:	88 23       	and	r24, r24
    6a50:	2c f4       	brge	.+10     	; 0x6a5c <__vector_1+0x2008>
		__ticks = 1;
    6a52:	81 e0       	ldi	r24, 0x01	; 1
    6a54:	90 e0       	ldi	r25, 0x00	; 0
    6a56:	9c 8b       	std	Y+20, r25	; 0x14
    6a58:	8b 8b       	std	Y+19, r24	; 0x13
    6a5a:	3f c0       	rjmp	.+126    	; 0x6ada <__vector_1+0x2086>
	else if (__tmp > 65535)
    6a5c:	6d 89       	ldd	r22, Y+21	; 0x15
    6a5e:	7e 89       	ldd	r23, Y+22	; 0x16
    6a60:	8f 89       	ldd	r24, Y+23	; 0x17
    6a62:	98 8d       	ldd	r25, Y+24	; 0x18
    6a64:	20 e0       	ldi	r18, 0x00	; 0
    6a66:	3f ef       	ldi	r19, 0xFF	; 255
    6a68:	4f e7       	ldi	r20, 0x7F	; 127
    6a6a:	57 e4       	ldi	r21, 0x47	; 71
    6a6c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6a70:	18 16       	cp	r1, r24
    6a72:	4c f5       	brge	.+82     	; 0x6ac6 <__vector_1+0x2072>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6a74:	69 8d       	ldd	r22, Y+25	; 0x19
    6a76:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6a78:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6a7a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6a7c:	20 e0       	ldi	r18, 0x00	; 0
    6a7e:	30 e0       	ldi	r19, 0x00	; 0
    6a80:	40 e2       	ldi	r20, 0x20	; 32
    6a82:	51 e4       	ldi	r21, 0x41	; 65
    6a84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6a88:	dc 01       	movw	r26, r24
    6a8a:	cb 01       	movw	r24, r22
    6a8c:	bc 01       	movw	r22, r24
    6a8e:	cd 01       	movw	r24, r26
    6a90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6a94:	dc 01       	movw	r26, r24
    6a96:	cb 01       	movw	r24, r22
    6a98:	9c 8b       	std	Y+20, r25	; 0x14
    6a9a:	8b 8b       	std	Y+19, r24	; 0x13
    6a9c:	0f c0       	rjmp	.+30     	; 0x6abc <__vector_1+0x2068>
    6a9e:	88 ec       	ldi	r24, 0xC8	; 200
    6aa0:	90 e0       	ldi	r25, 0x00	; 0
    6aa2:	9a 8b       	std	Y+18, r25	; 0x12
    6aa4:	89 8b       	std	Y+17, r24	; 0x11
    6aa6:	89 89       	ldd	r24, Y+17	; 0x11
    6aa8:	9a 89       	ldd	r25, Y+18	; 0x12
    6aaa:	01 97       	sbiw	r24, 0x01	; 1
    6aac:	f1 f7       	brne	.-4      	; 0x6aaa <__vector_1+0x2056>
    6aae:	9a 8b       	std	Y+18, r25	; 0x12
    6ab0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6ab2:	8b 89       	ldd	r24, Y+19	; 0x13
    6ab4:	9c 89       	ldd	r25, Y+20	; 0x14
    6ab6:	01 97       	sbiw	r24, 0x01	; 1
    6ab8:	9c 8b       	std	Y+20, r25	; 0x14
    6aba:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6abc:	8b 89       	ldd	r24, Y+19	; 0x13
    6abe:	9c 89       	ldd	r25, Y+20	; 0x14
    6ac0:	00 97       	sbiw	r24, 0x00	; 0
    6ac2:	69 f7       	brne	.-38     	; 0x6a9e <__vector_1+0x204a>
    6ac4:	14 c0       	rjmp	.+40     	; 0x6aee <__vector_1+0x209a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ac6:	6d 89       	ldd	r22, Y+21	; 0x15
    6ac8:	7e 89       	ldd	r23, Y+22	; 0x16
    6aca:	8f 89       	ldd	r24, Y+23	; 0x17
    6acc:	98 8d       	ldd	r25, Y+24	; 0x18
    6ace:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6ad2:	dc 01       	movw	r26, r24
    6ad4:	cb 01       	movw	r24, r22
    6ad6:	9c 8b       	std	Y+20, r25	; 0x14
    6ad8:	8b 8b       	std	Y+19, r24	; 0x13
    6ada:	8b 89       	ldd	r24, Y+19	; 0x13
    6adc:	9c 89       	ldd	r25, Y+20	; 0x14
    6ade:	98 8b       	std	Y+16, r25	; 0x10
    6ae0:	8f 87       	std	Y+15, r24	; 0x0f
    6ae2:	8f 85       	ldd	r24, Y+15	; 0x0f
    6ae4:	98 89       	ldd	r25, Y+16	; 0x10
    6ae6:	01 97       	sbiw	r24, 0x01	; 1
    6ae8:	f1 f7       	brne	.-4      	; 0x6ae6 <__vector_1+0x2092>
    6aea:	98 8b       	std	Y+16, r25	; 0x10
    6aec:	8f 87       	std	Y+15, r24	; 0x0f
														LED_voidOn(red_LED1);
														////////////////////////////////
														SSEG_voidSendNumber(sseg1,0);
														SSEG_voidSendNumber(sseg2,0);
														_delay_ms(3000);
														for(u8 i=4;i>=1;i--)
    6aee:	de 01       	movw	r26, r28
    6af0:	a5 5f       	subi	r26, 0xF5	; 245
    6af2:	be 4f       	sbci	r27, 0xFE	; 254
    6af4:	fe 01       	movw	r30, r28
    6af6:	e5 5f       	subi	r30, 0xF5	; 245
    6af8:	fe 4f       	sbci	r31, 0xFE	; 254
    6afa:	80 81       	ld	r24, Z
    6afc:	81 50       	subi	r24, 0x01	; 1
    6afe:	8c 93       	st	X, r24
    6b00:	fe 01       	movw	r30, r28
    6b02:	e5 5f       	subi	r30, 0xF5	; 245
    6b04:	fe 4f       	sbci	r31, 0xFE	; 254
    6b06:	80 81       	ld	r24, Z
    6b08:	88 23       	and	r24, r24
    6b0a:	09 f0       	breq	.+2      	; 0x6b0e <__vector_1+0x20ba>
    6b0c:	21 cc       	rjmp	.-1982   	; 0x6350 <__vector_1+0x18fc>
																_delay_ms(2000);
															}

														}

							                                 	DIO_voidSetPinValue(DIO_PORTC,DIO_PIN7,DIO_HIGH);//bazzer on
    6b0e:	82 e0       	ldi	r24, 0x02	; 2
    6b10:	67 e0       	ldi	r22, 0x07	; 7
    6b12:	41 e0       	ldi	r20, 0x01	; 1
    6b14:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
    6b18:	80 e0       	ldi	r24, 0x00	; 0
    6b1a:	90 e4       	ldi	r25, 0x40	; 64
    6b1c:	ac e9       	ldi	r26, 0x9C	; 156
    6b1e:	b5 e4       	ldi	r27, 0x45	; 69
    6b20:	8b 87       	std	Y+11, r24	; 0x0b
    6b22:	9c 87       	std	Y+12, r25	; 0x0c
    6b24:	ad 87       	std	Y+13, r26	; 0x0d
    6b26:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6b28:	6b 85       	ldd	r22, Y+11	; 0x0b
    6b2a:	7c 85       	ldd	r23, Y+12	; 0x0c
    6b2c:	8d 85       	ldd	r24, Y+13	; 0x0d
    6b2e:	9e 85       	ldd	r25, Y+14	; 0x0e
    6b30:	20 e0       	ldi	r18, 0x00	; 0
    6b32:	30 e0       	ldi	r19, 0x00	; 0
    6b34:	4a ef       	ldi	r20, 0xFA	; 250
    6b36:	54 e4       	ldi	r21, 0x44	; 68
    6b38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6b3c:	dc 01       	movw	r26, r24
    6b3e:	cb 01       	movw	r24, r22
    6b40:	8f 83       	std	Y+7, r24	; 0x07
    6b42:	98 87       	std	Y+8, r25	; 0x08
    6b44:	a9 87       	std	Y+9, r26	; 0x09
    6b46:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6b48:	6f 81       	ldd	r22, Y+7	; 0x07
    6b4a:	78 85       	ldd	r23, Y+8	; 0x08
    6b4c:	89 85       	ldd	r24, Y+9	; 0x09
    6b4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6b50:	20 e0       	ldi	r18, 0x00	; 0
    6b52:	30 e0       	ldi	r19, 0x00	; 0
    6b54:	40 e8       	ldi	r20, 0x80	; 128
    6b56:	5f e3       	ldi	r21, 0x3F	; 63
    6b58:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6b5c:	88 23       	and	r24, r24
    6b5e:	2c f4       	brge	.+10     	; 0x6b6a <__vector_1+0x2116>
		__ticks = 1;
    6b60:	81 e0       	ldi	r24, 0x01	; 1
    6b62:	90 e0       	ldi	r25, 0x00	; 0
    6b64:	9e 83       	std	Y+6, r25	; 0x06
    6b66:	8d 83       	std	Y+5, r24	; 0x05
    6b68:	3f c0       	rjmp	.+126    	; 0x6be8 <__vector_1+0x2194>
	else if (__tmp > 65535)
    6b6a:	6f 81       	ldd	r22, Y+7	; 0x07
    6b6c:	78 85       	ldd	r23, Y+8	; 0x08
    6b6e:	89 85       	ldd	r24, Y+9	; 0x09
    6b70:	9a 85       	ldd	r25, Y+10	; 0x0a
    6b72:	20 e0       	ldi	r18, 0x00	; 0
    6b74:	3f ef       	ldi	r19, 0xFF	; 255
    6b76:	4f e7       	ldi	r20, 0x7F	; 127
    6b78:	57 e4       	ldi	r21, 0x47	; 71
    6b7a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6b7e:	18 16       	cp	r1, r24
    6b80:	4c f5       	brge	.+82     	; 0x6bd4 <__vector_1+0x2180>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6b82:	6b 85       	ldd	r22, Y+11	; 0x0b
    6b84:	7c 85       	ldd	r23, Y+12	; 0x0c
    6b86:	8d 85       	ldd	r24, Y+13	; 0x0d
    6b88:	9e 85       	ldd	r25, Y+14	; 0x0e
    6b8a:	20 e0       	ldi	r18, 0x00	; 0
    6b8c:	30 e0       	ldi	r19, 0x00	; 0
    6b8e:	40 e2       	ldi	r20, 0x20	; 32
    6b90:	51 e4       	ldi	r21, 0x41	; 65
    6b92:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6b96:	dc 01       	movw	r26, r24
    6b98:	cb 01       	movw	r24, r22
    6b9a:	bc 01       	movw	r22, r24
    6b9c:	cd 01       	movw	r24, r26
    6b9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6ba2:	dc 01       	movw	r26, r24
    6ba4:	cb 01       	movw	r24, r22
    6ba6:	9e 83       	std	Y+6, r25	; 0x06
    6ba8:	8d 83       	std	Y+5, r24	; 0x05
    6baa:	0f c0       	rjmp	.+30     	; 0x6bca <__vector_1+0x2176>
    6bac:	88 ec       	ldi	r24, 0xC8	; 200
    6bae:	90 e0       	ldi	r25, 0x00	; 0
    6bb0:	9c 83       	std	Y+4, r25	; 0x04
    6bb2:	8b 83       	std	Y+3, r24	; 0x03
    6bb4:	8b 81       	ldd	r24, Y+3	; 0x03
    6bb6:	9c 81       	ldd	r25, Y+4	; 0x04
    6bb8:	01 97       	sbiw	r24, 0x01	; 1
    6bba:	f1 f7       	brne	.-4      	; 0x6bb8 <__vector_1+0x2164>
    6bbc:	9c 83       	std	Y+4, r25	; 0x04
    6bbe:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6bc0:	8d 81       	ldd	r24, Y+5	; 0x05
    6bc2:	9e 81       	ldd	r25, Y+6	; 0x06
    6bc4:	01 97       	sbiw	r24, 0x01	; 1
    6bc6:	9e 83       	std	Y+6, r25	; 0x06
    6bc8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6bca:	8d 81       	ldd	r24, Y+5	; 0x05
    6bcc:	9e 81       	ldd	r25, Y+6	; 0x06
    6bce:	00 97       	sbiw	r24, 0x00	; 0
    6bd0:	69 f7       	brne	.-38     	; 0x6bac <__vector_1+0x2158>
    6bd2:	14 c0       	rjmp	.+40     	; 0x6bfc <__vector_1+0x21a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6bd4:	6f 81       	ldd	r22, Y+7	; 0x07
    6bd6:	78 85       	ldd	r23, Y+8	; 0x08
    6bd8:	89 85       	ldd	r24, Y+9	; 0x09
    6bda:	9a 85       	ldd	r25, Y+10	; 0x0a
    6bdc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6be0:	dc 01       	movw	r26, r24
    6be2:	cb 01       	movw	r24, r22
    6be4:	9e 83       	std	Y+6, r25	; 0x06
    6be6:	8d 83       	std	Y+5, r24	; 0x05
    6be8:	8d 81       	ldd	r24, Y+5	; 0x05
    6bea:	9e 81       	ldd	r25, Y+6	; 0x06
    6bec:	9a 83       	std	Y+2, r25	; 0x02
    6bee:	89 83       	std	Y+1, r24	; 0x01
    6bf0:	89 81       	ldd	r24, Y+1	; 0x01
    6bf2:	9a 81       	ldd	r25, Y+2	; 0x02
    6bf4:	01 97       	sbiw	r24, 0x01	; 1
    6bf6:	f1 f7       	brne	.-4      	; 0x6bf4 <__vector_1+0x21a0>
    6bf8:	9a 83       	std	Y+2, r25	; 0x02
    6bfa:	89 83       	std	Y+1, r24	; 0x01
																_delay_ms(5000);
																DIO_voidSetPinValue(DIO_PORTC,DIO_PIN7,DIO_LOW);//bazzer off
    6bfc:	82 e0       	ldi	r24, 0x02	; 2
    6bfe:	67 e0       	ldi	r22, 0x07	; 7
    6c00:	40 e0       	ldi	r20, 0x00	; 0
    6c02:	0e 94 4b 0b 	call	0x1696	; 0x1696 <DIO_voidSetPinValue>
																LED_voidOff(red_LED1);
    6c06:	fe 01       	movw	r30, r28
    6c08:	ed 5e       	subi	r30, 0xED	; 237
    6c0a:	fe 4f       	sbci	r31, 0xFE	; 254
    6c0c:	60 81       	ld	r22, Z
    6c0e:	71 81       	ldd	r23, Z+1	; 0x01
    6c10:	82 81       	ldd	r24, Z+2	; 0x02
    6c12:	0e 94 2f 1b 	call	0x365e	; 0x365e <LED_voidOff>
						}


						LCD_Clear();
    6c16:	0e 94 c5 1a 	call	0x358a	; 0x358a <LCD_Clear>
				}
    6c1a:	ce 5b       	subi	r28, 0xBE	; 190
    6c1c:	de 4f       	sbci	r29, 0xFE	; 254
    6c1e:	de bf       	out	0x3e, r29	; 62
    6c20:	cd bf       	out	0x3d, r28	; 61
    6c22:	cf 91       	pop	r28
    6c24:	df 91       	pop	r29
    6c26:	ff 91       	pop	r31
    6c28:	ef 91       	pop	r30
    6c2a:	bf 91       	pop	r27
    6c2c:	af 91       	pop	r26
    6c2e:	9f 91       	pop	r25
    6c30:	8f 91       	pop	r24
    6c32:	7f 91       	pop	r23
    6c34:	6f 91       	pop	r22
    6c36:	5f 91       	pop	r21
    6c38:	4f 91       	pop	r20
    6c3a:	3f 91       	pop	r19
    6c3c:	2f 91       	pop	r18
    6c3e:	1f 91       	pop	r17
    6c40:	0f 91       	pop	r16
    6c42:	0f 90       	pop	r0
    6c44:	0f be       	out	0x3f, r0	; 63
    6c46:	0f 90       	pop	r0
    6c48:	1f 90       	pop	r1
    6c4a:	18 95       	reti

00006c4c <__prologue_saves__>:
    6c4c:	2f 92       	push	r2
    6c4e:	3f 92       	push	r3
    6c50:	4f 92       	push	r4
    6c52:	5f 92       	push	r5
    6c54:	6f 92       	push	r6
    6c56:	7f 92       	push	r7
    6c58:	8f 92       	push	r8
    6c5a:	9f 92       	push	r9
    6c5c:	af 92       	push	r10
    6c5e:	bf 92       	push	r11
    6c60:	cf 92       	push	r12
    6c62:	df 92       	push	r13
    6c64:	ef 92       	push	r14
    6c66:	ff 92       	push	r15
    6c68:	0f 93       	push	r16
    6c6a:	1f 93       	push	r17
    6c6c:	cf 93       	push	r28
    6c6e:	df 93       	push	r29
    6c70:	cd b7       	in	r28, 0x3d	; 61
    6c72:	de b7       	in	r29, 0x3e	; 62
    6c74:	ca 1b       	sub	r28, r26
    6c76:	db 0b       	sbc	r29, r27
    6c78:	0f b6       	in	r0, 0x3f	; 63
    6c7a:	f8 94       	cli
    6c7c:	de bf       	out	0x3e, r29	; 62
    6c7e:	0f be       	out	0x3f, r0	; 63
    6c80:	cd bf       	out	0x3d, r28	; 61
    6c82:	09 94       	ijmp

00006c84 <__epilogue_restores__>:
    6c84:	2a 88       	ldd	r2, Y+18	; 0x12
    6c86:	39 88       	ldd	r3, Y+17	; 0x11
    6c88:	48 88       	ldd	r4, Y+16	; 0x10
    6c8a:	5f 84       	ldd	r5, Y+15	; 0x0f
    6c8c:	6e 84       	ldd	r6, Y+14	; 0x0e
    6c8e:	7d 84       	ldd	r7, Y+13	; 0x0d
    6c90:	8c 84       	ldd	r8, Y+12	; 0x0c
    6c92:	9b 84       	ldd	r9, Y+11	; 0x0b
    6c94:	aa 84       	ldd	r10, Y+10	; 0x0a
    6c96:	b9 84       	ldd	r11, Y+9	; 0x09
    6c98:	c8 84       	ldd	r12, Y+8	; 0x08
    6c9a:	df 80       	ldd	r13, Y+7	; 0x07
    6c9c:	ee 80       	ldd	r14, Y+6	; 0x06
    6c9e:	fd 80       	ldd	r15, Y+5	; 0x05
    6ca0:	0c 81       	ldd	r16, Y+4	; 0x04
    6ca2:	1b 81       	ldd	r17, Y+3	; 0x03
    6ca4:	aa 81       	ldd	r26, Y+2	; 0x02
    6ca6:	b9 81       	ldd	r27, Y+1	; 0x01
    6ca8:	ce 0f       	add	r28, r30
    6caa:	d1 1d       	adc	r29, r1
    6cac:	0f b6       	in	r0, 0x3f	; 63
    6cae:	f8 94       	cli
    6cb0:	de bf       	out	0x3e, r29	; 62
    6cb2:	0f be       	out	0x3f, r0	; 63
    6cb4:	cd bf       	out	0x3d, r28	; 61
    6cb6:	ed 01       	movw	r28, r26
    6cb8:	08 95       	ret

00006cba <_exit>:
    6cba:	f8 94       	cli

00006cbc <__stop_program>:
    6cbc:	ff cf       	rjmp	.-2      	; 0x6cbc <__stop_program>
